//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets38225CB4CF283A326F9CD6AC1222F590DE9BD2B554E741518F23DA030F80CF31))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySets38225CB4CF283A326F9CD6AC1222F590DE9BD2B554E741518F23DA030F80CF31 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySets38225CB4CF283A326F9CD6AC1222F590DE9BD2B554E741518F23DA030F80CF31()
        {
            this.EdmEntityContainerName = "DatabaseEntities";
            this.StoreEntityContainerName = "ProjectFirmaWebModelsStoreContainer";
            this.HashOverMappingClosure = "45abaa00bb3cba313b2b015cdd2919c3144c830dd5fe96d02d8cacf2b6034262";
            this.HashOverAllExtentViews = "f3de8abe02ec8efb83aad140106a9933d7a45120227a3f9528068f191098cdeb";
            this.ViewCount = 320;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            if ((index == 26))
            {
                return GetView26();
            }
            if ((index == 27))
            {
                return GetView27();
            }
            if ((index == 28))
            {
                return GetView28();
            }
            if ((index == 29))
            {
                return GetView29();
            }
            if ((index == 30))
            {
                return GetView30();
            }
            if ((index == 31))
            {
                return GetView31();
            }
            if ((index == 32))
            {
                return GetView32();
            }
            if ((index == 33))
            {
                return GetView33();
            }
            if ((index == 34))
            {
                return GetView34();
            }
            if ((index == 35))
            {
                return GetView35();
            }
            if ((index == 36))
            {
                return GetView36();
            }
            if ((index == 37))
            {
                return GetView37();
            }
            if ((index == 38))
            {
                return GetView38();
            }
            if ((index == 39))
            {
                return GetView39();
            }
            if ((index == 40))
            {
                return GetView40();
            }
            if ((index == 41))
            {
                return GetView41();
            }
            if ((index == 42))
            {
                return GetView42();
            }
            if ((index == 43))
            {
                return GetView43();
            }
            if ((index == 44))
            {
                return GetView44();
            }
            if ((index == 45))
            {
                return GetView45();
            }
            if ((index == 46))
            {
                return GetView46();
            }
            if ((index == 47))
            {
                return GetView47();
            }
            if ((index == 48))
            {
                return GetView48();
            }
            if ((index == 49))
            {
                return GetView49();
            }
            if ((index == 50))
            {
                return GetView50();
            }
            if ((index == 51))
            {
                return GetView51();
            }
            if ((index == 52))
            {
                return GetView52();
            }
            if ((index == 53))
            {
                return GetView53();
            }
            if ((index == 54))
            {
                return GetView54();
            }
            if ((index == 55))
            {
                return GetView55();
            }
            if ((index == 56))
            {
                return GetView56();
            }
            if ((index == 57))
            {
                return GetView57();
            }
            if ((index == 58))
            {
                return GetView58();
            }
            if ((index == 59))
            {
                return GetView59();
            }
            if ((index == 60))
            {
                return GetView60();
            }
            if ((index == 61))
            {
                return GetView61();
            }
            if ((index == 62))
            {
                return GetView62();
            }
            if ((index == 63))
            {
                return GetView63();
            }
            if ((index == 64))
            {
                return GetView64();
            }
            if ((index == 65))
            {
                return GetView65();
            }
            if ((index == 66))
            {
                return GetView66();
            }
            if ((index == 67))
            {
                return GetView67();
            }
            if ((index == 68))
            {
                return GetView68();
            }
            if ((index == 69))
            {
                return GetView69();
            }
            if ((index == 70))
            {
                return GetView70();
            }
            if ((index == 71))
            {
                return GetView71();
            }
            if ((index == 72))
            {
                return GetView72();
            }
            if ((index == 73))
            {
                return GetView73();
            }
            if ((index == 74))
            {
                return GetView74();
            }
            if ((index == 75))
            {
                return GetView75();
            }
            if ((index == 76))
            {
                return GetView76();
            }
            if ((index == 77))
            {
                return GetView77();
            }
            if ((index == 78))
            {
                return GetView78();
            }
            if ((index == 79))
            {
                return GetView79();
            }
            if ((index == 80))
            {
                return GetView80();
            }
            if ((index == 81))
            {
                return GetView81();
            }
            if ((index == 82))
            {
                return GetView82();
            }
            if ((index == 83))
            {
                return GetView83();
            }
            if ((index == 84))
            {
                return GetView84();
            }
            if ((index == 85))
            {
                return GetView85();
            }
            if ((index == 86))
            {
                return GetView86();
            }
            if ((index == 87))
            {
                return GetView87();
            }
            if ((index == 88))
            {
                return GetView88();
            }
            if ((index == 89))
            {
                return GetView89();
            }
            if ((index == 90))
            {
                return GetView90();
            }
            if ((index == 91))
            {
                return GetView91();
            }
            if ((index == 92))
            {
                return GetView92();
            }
            if ((index == 93))
            {
                return GetView93();
            }
            if ((index == 94))
            {
                return GetView94();
            }
            if ((index == 95))
            {
                return GetView95();
            }
            if ((index == 96))
            {
                return GetView96();
            }
            if ((index == 97))
            {
                return GetView97();
            }
            if ((index == 98))
            {
                return GetView98();
            }
            if ((index == 99))
            {
                return GetView99();
            }
            if ((index == 100))
            {
                return GetView100();
            }
            if ((index == 101))
            {
                return GetView101();
            }
            if ((index == 102))
            {
                return GetView102();
            }
            if ((index == 103))
            {
                return GetView103();
            }
            if ((index == 104))
            {
                return GetView104();
            }
            if ((index == 105))
            {
                return GetView105();
            }
            if ((index == 106))
            {
                return GetView106();
            }
            if ((index == 107))
            {
                return GetView107();
            }
            if ((index == 108))
            {
                return GetView108();
            }
            if ((index == 109))
            {
                return GetView109();
            }
            if ((index == 110))
            {
                return GetView110();
            }
            if ((index == 111))
            {
                return GetView111();
            }
            if ((index == 112))
            {
                return GetView112();
            }
            if ((index == 113))
            {
                return GetView113();
            }
            if ((index == 114))
            {
                return GetView114();
            }
            if ((index == 115))
            {
                return GetView115();
            }
            if ((index == 116))
            {
                return GetView116();
            }
            if ((index == 117))
            {
                return GetView117();
            }
            if ((index == 118))
            {
                return GetView118();
            }
            if ((index == 119))
            {
                return GetView119();
            }
            if ((index == 120))
            {
                return GetView120();
            }
            if ((index == 121))
            {
                return GetView121();
            }
            if ((index == 122))
            {
                return GetView122();
            }
            if ((index == 123))
            {
                return GetView123();
            }
            if ((index == 124))
            {
                return GetView124();
            }
            if ((index == 125))
            {
                return GetView125();
            }
            if ((index == 126))
            {
                return GetView126();
            }
            if ((index == 127))
            {
                return GetView127();
            }
            if ((index == 128))
            {
                return GetView128();
            }
            if ((index == 129))
            {
                return GetView129();
            }
            if ((index == 130))
            {
                return GetView130();
            }
            if ((index == 131))
            {
                return GetView131();
            }
            if ((index == 132))
            {
                return GetView132();
            }
            if ((index == 133))
            {
                return GetView133();
            }
            if ((index == 134))
            {
                return GetView134();
            }
            if ((index == 135))
            {
                return GetView135();
            }
            if ((index == 136))
            {
                return GetView136();
            }
            if ((index == 137))
            {
                return GetView137();
            }
            if ((index == 138))
            {
                return GetView138();
            }
            if ((index == 139))
            {
                return GetView139();
            }
            if ((index == 140))
            {
                return GetView140();
            }
            if ((index == 141))
            {
                return GetView141();
            }
            if ((index == 142))
            {
                return GetView142();
            }
            if ((index == 143))
            {
                return GetView143();
            }
            if ((index == 144))
            {
                return GetView144();
            }
            if ((index == 145))
            {
                return GetView145();
            }
            if ((index == 146))
            {
                return GetView146();
            }
            if ((index == 147))
            {
                return GetView147();
            }
            if ((index == 148))
            {
                return GetView148();
            }
            if ((index == 149))
            {
                return GetView149();
            }
            if ((index == 150))
            {
                return GetView150();
            }
            if ((index == 151))
            {
                return GetView151();
            }
            if ((index == 152))
            {
                return GetView152();
            }
            if ((index == 153))
            {
                return GetView153();
            }
            if ((index == 154))
            {
                return GetView154();
            }
            if ((index == 155))
            {
                return GetView155();
            }
            if ((index == 156))
            {
                return GetView156();
            }
            if ((index == 157))
            {
                return GetView157();
            }
            if ((index == 158))
            {
                return GetView158();
            }
            if ((index == 159))
            {
                return GetView159();
            }
            if ((index == 160))
            {
                return GetView160();
            }
            if ((index == 161))
            {
                return GetView161();
            }
            if ((index == 162))
            {
                return GetView162();
            }
            if ((index == 163))
            {
                return GetView163();
            }
            if ((index == 164))
            {
                return GetView164();
            }
            if ((index == 165))
            {
                return GetView165();
            }
            if ((index == 166))
            {
                return GetView166();
            }
            if ((index == 167))
            {
                return GetView167();
            }
            if ((index == 168))
            {
                return GetView168();
            }
            if ((index == 169))
            {
                return GetView169();
            }
            if ((index == 170))
            {
                return GetView170();
            }
            if ((index == 171))
            {
                return GetView171();
            }
            if ((index == 172))
            {
                return GetView172();
            }
            if ((index == 173))
            {
                return GetView173();
            }
            if ((index == 174))
            {
                return GetView174();
            }
            if ((index == 175))
            {
                return GetView175();
            }
            if ((index == 176))
            {
                return GetView176();
            }
            if ((index == 177))
            {
                return GetView177();
            }
            if ((index == 178))
            {
                return GetView178();
            }
            if ((index == 179))
            {
                return GetView179();
            }
            if ((index == 180))
            {
                return GetView180();
            }
            if ((index == 181))
            {
                return GetView181();
            }
            if ((index == 182))
            {
                return GetView182();
            }
            if ((index == 183))
            {
                return GetView183();
            }
            if ((index == 184))
            {
                return GetView184();
            }
            if ((index == 185))
            {
                return GetView185();
            }
            if ((index == 186))
            {
                return GetView186();
            }
            if ((index == 187))
            {
                return GetView187();
            }
            if ((index == 188))
            {
                return GetView188();
            }
            if ((index == 189))
            {
                return GetView189();
            }
            if ((index == 190))
            {
                return GetView190();
            }
            if ((index == 191))
            {
                return GetView191();
            }
            if ((index == 192))
            {
                return GetView192();
            }
            if ((index == 193))
            {
                return GetView193();
            }
            if ((index == 194))
            {
                return GetView194();
            }
            if ((index == 195))
            {
                return GetView195();
            }
            if ((index == 196))
            {
                return GetView196();
            }
            if ((index == 197))
            {
                return GetView197();
            }
            if ((index == 198))
            {
                return GetView198();
            }
            if ((index == 199))
            {
                return GetView199();
            }
            if ((index == 200))
            {
                return GetView200();
            }
            if ((index == 201))
            {
                return GetView201();
            }
            if ((index == 202))
            {
                return GetView202();
            }
            if ((index == 203))
            {
                return GetView203();
            }
            if ((index == 204))
            {
                return GetView204();
            }
            if ((index == 205))
            {
                return GetView205();
            }
            if ((index == 206))
            {
                return GetView206();
            }
            if ((index == 207))
            {
                return GetView207();
            }
            if ((index == 208))
            {
                return GetView208();
            }
            if ((index == 209))
            {
                return GetView209();
            }
            if ((index == 210))
            {
                return GetView210();
            }
            if ((index == 211))
            {
                return GetView211();
            }
            if ((index == 212))
            {
                return GetView212();
            }
            if ((index == 213))
            {
                return GetView213();
            }
            if ((index == 214))
            {
                return GetView214();
            }
            if ((index == 215))
            {
                return GetView215();
            }
            if ((index == 216))
            {
                return GetView216();
            }
            if ((index == 217))
            {
                return GetView217();
            }
            if ((index == 218))
            {
                return GetView218();
            }
            if ((index == 219))
            {
                return GetView219();
            }
            if ((index == 220))
            {
                return GetView220();
            }
            if ((index == 221))
            {
                return GetView221();
            }
            if ((index == 222))
            {
                return GetView222();
            }
            if ((index == 223))
            {
                return GetView223();
            }
            if ((index == 224))
            {
                return GetView224();
            }
            if ((index == 225))
            {
                return GetView225();
            }
            if ((index == 226))
            {
                return GetView226();
            }
            if ((index == 227))
            {
                return GetView227();
            }
            if ((index == 228))
            {
                return GetView228();
            }
            if ((index == 229))
            {
                return GetView229();
            }
            if ((index == 230))
            {
                return GetView230();
            }
            if ((index == 231))
            {
                return GetView231();
            }
            if ((index == 232))
            {
                return GetView232();
            }
            if ((index == 233))
            {
                return GetView233();
            }
            if ((index == 234))
            {
                return GetView234();
            }
            if ((index == 235))
            {
                return GetView235();
            }
            if ((index == 236))
            {
                return GetView236();
            }
            if ((index == 237))
            {
                return GetView237();
            }
            if ((index == 238))
            {
                return GetView238();
            }
            if ((index == 239))
            {
                return GetView239();
            }
            if ((index == 240))
            {
                return GetView240();
            }
            if ((index == 241))
            {
                return GetView241();
            }
            if ((index == 242))
            {
                return GetView242();
            }
            if ((index == 243))
            {
                return GetView243();
            }
            if ((index == 244))
            {
                return GetView244();
            }
            if ((index == 245))
            {
                return GetView245();
            }
            if ((index == 246))
            {
                return GetView246();
            }
            if ((index == 247))
            {
                return GetView247();
            }
            if ((index == 248))
            {
                return GetView248();
            }
            if ((index == 249))
            {
                return GetView249();
            }
            if ((index == 250))
            {
                return GetView250();
            }
            if ((index == 251))
            {
                return GetView251();
            }
            if ((index == 252))
            {
                return GetView252();
            }
            if ((index == 253))
            {
                return GetView253();
            }
            if ((index == 254))
            {
                return GetView254();
            }
            if ((index == 255))
            {
                return GetView255();
            }
            if ((index == 256))
            {
                return GetView256();
            }
            if ((index == 257))
            {
                return GetView257();
            }
            if ((index == 258))
            {
                return GetView258();
            }
            if ((index == 259))
            {
                return GetView259();
            }
            if ((index == 260))
            {
                return GetView260();
            }
            if ((index == 261))
            {
                return GetView261();
            }
            if ((index == 262))
            {
                return GetView262();
            }
            if ((index == 263))
            {
                return GetView263();
            }
            if ((index == 264))
            {
                return GetView264();
            }
            if ((index == 265))
            {
                return GetView265();
            }
            if ((index == 266))
            {
                return GetView266();
            }
            if ((index == 267))
            {
                return GetView267();
            }
            if ((index == 268))
            {
                return GetView268();
            }
            if ((index == 269))
            {
                return GetView269();
            }
            if ((index == 270))
            {
                return GetView270();
            }
            if ((index == 271))
            {
                return GetView271();
            }
            if ((index == 272))
            {
                return GetView272();
            }
            if ((index == 273))
            {
                return GetView273();
            }
            if ((index == 274))
            {
                return GetView274();
            }
            if ((index == 275))
            {
                return GetView275();
            }
            if ((index == 276))
            {
                return GetView276();
            }
            if ((index == 277))
            {
                return GetView277();
            }
            if ((index == 278))
            {
                return GetView278();
            }
            if ((index == 279))
            {
                return GetView279();
            }
            if ((index == 280))
            {
                return GetView280();
            }
            if ((index == 281))
            {
                return GetView281();
            }
            if ((index == 282))
            {
                return GetView282();
            }
            if ((index == 283))
            {
                return GetView283();
            }
            if ((index == 284))
            {
                return GetView284();
            }
            if ((index == 285))
            {
                return GetView285();
            }
            if ((index == 286))
            {
                return GetView286();
            }
            if ((index == 287))
            {
                return GetView287();
            }
            if ((index == 288))
            {
                return GetView288();
            }
            if ((index == 289))
            {
                return GetView289();
            }
            if ((index == 290))
            {
                return GetView290();
            }
            if ((index == 291))
            {
                return GetView291();
            }
            if ((index == 292))
            {
                return GetView292();
            }
            if ((index == 293))
            {
                return GetView293();
            }
            if ((index == 294))
            {
                return GetView294();
            }
            if ((index == 295))
            {
                return GetView295();
            }
            if ((index == 296))
            {
                return GetView296();
            }
            if ((index == 297))
            {
                return GetView297();
            }
            if ((index == 298))
            {
                return GetView298();
            }
            if ((index == 299))
            {
                return GetView299();
            }
            if ((index == 300))
            {
                return GetView300();
            }
            if ((index == 301))
            {
                return GetView301();
            }
            if ((index == 302))
            {
                return GetView302();
            }
            if ((index == 303))
            {
                return GetView303();
            }
            if ((index == 304))
            {
                return GetView304();
            }
            if ((index == 305))
            {
                return GetView305();
            }
            if ((index == 306))
            {
                return GetView306();
            }
            if ((index == 307))
            {
                return GetView307();
            }
            if ((index == 308))
            {
                return GetView308();
            }
            if ((index == 309))
            {
                return GetView309();
            }
            if ((index == 310))
            {
                return GetView310();
            }
            if ((index == 311))
            {
                return GetView311();
            }
            if ((index == 312))
            {
                return GetView312();
            }
            if ((index == 313))
            {
                return GetView313();
            }
            if ((index == 314))
            {
                return GetView314();
            }
            if ((index == 315))
            {
                return GetView315();
            }
            if ((index == 316))
            {
                return GetView316();
            }
            if ((index == 317))
            {
                return GetView317();
            }
            if ((index == 318))
            {
                return GetView318();
            }
            if ((index == 319))
            {
                return GetView319();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.AccomplishmentsDashboardFundingDisplayType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.AccomplishmentsDashboardFundingDisplayType", @"
    SELECT VALUE -- Constructing AccomplishmentsDashboardFundingDisplayType
        [ProjectFirma.Web.Models.Store.AccomplishmentsDashboardFundingDisplayType](T1.AccomplishmentsDashboardFundingDisplayType_AccomplishmentsDashboardFundingDisplayTypeID, T1.AccomplishmentsDashboardFundingDisplayType_AccomplishmentsDashboardFundingDisplayTypeName, T1.AccomplishmentsDashboardFundingDisplayType_AccomplishmentsDashboardFundingDisplayTypeDisplayName, T1.AccomplishmentsDashboardFundingDisplayType_SortOrder)
    FROM (
        SELECT 
            T.AccomplishmentsDashboardFundingDisplayTypeID AS AccomplishmentsDashboardFundingDisplayType_AccomplishmentsDashboardFundingDisplayTypeID, 
            T.AccomplishmentsDashboardFundingDisplayTypeName AS AccomplishmentsDashboardFundingDisplayType_AccomplishmentsDashboardFundingDisplayTypeName, 
            T.AccomplishmentsDashboardFundingDisplayTypeDisplayName AS AccomplishmentsDashboardFundingDisplayType_AccomplishmentsDashboardFundingDisplayTypeDisplayName, 
            T.SortOrder AS AccomplishmentsDashboardFundingDisplayType_SortOrder, 
            True AS _from0
        FROM DatabaseEntities.AccomplishmentsDashboardFundingDisplayType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.AssessmentGoal
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.AssessmentGoal", @"
    SELECT VALUE -- Constructing AssessmentGoal
        [ProjectFirma.Web.Models.Store.AssessmentGoal](T1.AssessmentGoal_AssessmentGoalID, T1.AssessmentGoal_TenantID, T1.AssessmentGoal_AssessmentGoalNumber, T1.AssessmentGoal_AssessmentGoalTitle, T1.AssessmentGoal_AssessmentGoalDescription)
    FROM (
        SELECT 
            T.AssessmentGoalID AS AssessmentGoal_AssessmentGoalID, 
            T.TenantID AS AssessmentGoal_TenantID, 
            T.AssessmentGoalNumber AS AssessmentGoal_AssessmentGoalNumber, 
            T.AssessmentGoalTitle AS AssessmentGoal_AssessmentGoalTitle, 
            T.AssessmentGoalDescription AS AssessmentGoal_AssessmentGoalDescription, 
            True AS _from0
        FROM DatabaseEntities.AssessmentGoal AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.AssessmentQuestion
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.AssessmentQuestion", @"
    SELECT VALUE -- Constructing AssessmentQuestion
        [ProjectFirma.Web.Models.Store.AssessmentQuestion](T1.AssessmentQuestion_AssessmentQuestionID, T1.AssessmentQuestion_TenantID, T1.AssessmentQuestion_AssessmentSubGoalID, T1.AssessmentQuestion_AssessmentQuestionText, T1.AssessmentQuestion_ArchiveDate)
    FROM (
        SELECT 
            T.AssessmentQuestionID AS AssessmentQuestion_AssessmentQuestionID, 
            T.TenantID AS AssessmentQuestion_TenantID, 
            T.AssessmentSubGoalID AS AssessmentQuestion_AssessmentSubGoalID, 
            T.AssessmentQuestionText AS AssessmentQuestion_AssessmentQuestionText, 
            T.ArchiveDate AS AssessmentQuestion_ArchiveDate, 
            True AS _from0
        FROM DatabaseEntities.AssessmentQuestion AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.AssessmentSubGoal
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.AssessmentSubGoal", @"
    SELECT VALUE -- Constructing AssessmentSubGoal
        [ProjectFirma.Web.Models.Store.AssessmentSubGoal](T1.AssessmentSubGoal_AssessmentSubGoalID, T1.AssessmentSubGoal_TenantID, T1.AssessmentSubGoal_AssessmentGoalID, T1.AssessmentSubGoal_AssessmentSubGoalNumber, T1.AssessmentSubGoal_AssessmentSubGoalTitle, T1.AssessmentSubGoal_AssessmentSubGoalDescription)
    FROM (
        SELECT 
            T.AssessmentSubGoalID AS AssessmentSubGoal_AssessmentSubGoalID, 
            T.TenantID AS AssessmentSubGoal_TenantID, 
            T.AssessmentGoalID AS AssessmentSubGoal_AssessmentGoalID, 
            T.AssessmentSubGoalNumber AS AssessmentSubGoal_AssessmentSubGoalNumber, 
            T.AssessmentSubGoalTitle AS AssessmentSubGoal_AssessmentSubGoalTitle, 
            T.AssessmentSubGoalDescription AS AssessmentSubGoal_AssessmentSubGoalDescription, 
            True AS _from0
        FROM DatabaseEntities.AssessmentSubGoal AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.AuditLog
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.AuditLog", @"
    SELECT VALUE -- Constructing AuditLog
        [ProjectFirma.Web.Models.Store.AuditLog](T1.AuditLog_AuditLogID, T1.AuditLog_TenantID, T1.AuditLog_PersonID, T1.AuditLog_AuditLogDate, T1.AuditLog_AuditLogEventTypeID, T1.AuditLog_TableName, T1.AuditLog_RecordID, T1.AuditLog_ColumnName, T1.AuditLog_OriginalValue, T1.AuditLog_NewValue, T1.AuditLog_AuditDescription, T1.AuditLog_ProjectID)
    FROM (
        SELECT 
            T.AuditLogID AS AuditLog_AuditLogID, 
            T.TenantID AS AuditLog_TenantID, 
            T.PersonID AS AuditLog_PersonID, 
            T.AuditLogDate AS AuditLog_AuditLogDate, 
            T.AuditLogEventTypeID AS AuditLog_AuditLogEventTypeID, 
            T.TableName AS AuditLog_TableName, 
            T.RecordID AS AuditLog_RecordID, 
            T.ColumnName AS AuditLog_ColumnName, 
            T.OriginalValue AS AuditLog_OriginalValue, 
            T.NewValue AS AuditLog_NewValue, 
            T.AuditDescription AS AuditLog_AuditDescription, 
            T.ProjectID AS AuditLog_ProjectID, 
            True AS _from0
        FROM DatabaseEntities.AuditLog AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.AuditLogEventType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.AuditLogEventType", @"
    SELECT VALUE -- Constructing AuditLogEventType
        [ProjectFirma.Web.Models.Store.AuditLogEventType](T1.AuditLogEventType_AuditLogEventTypeID, T1.AuditLogEventType_AuditLogEventTypeName, T1.AuditLogEventType_AuditLogEventTypeDisplayName)
    FROM (
        SELECT 
            T.AuditLogEventTypeID AS AuditLogEventType_AuditLogEventTypeID, 
            T.AuditLogEventTypeName AS AuditLogEventType_AuditLogEventTypeName, 
            T.AuditLogEventTypeDisplayName AS AuditLogEventType_AuditLogEventTypeDisplayName, 
            True AS _from0
        FROM DatabaseEntities.AuditLogEventType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.Classification
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.Classification", @"
    SELECT VALUE -- Constructing Classification
        [ProjectFirma.Web.Models.Store.Classification](T1.Classification_ClassificationID, T1.Classification_TenantID, T1.Classification_ClassificationDescription, T1.Classification_ThemeColor, T1.Classification_DisplayName, T1.Classification_GoalStatement, T1.Classification_KeyImageFileResourceID, T1.Classification_ClassificationSystemID, T1.Classification_ClassificationSortOrder)
    FROM (
        SELECT 
            T.ClassificationID AS Classification_ClassificationID, 
            T.TenantID AS Classification_TenantID, 
            T.ClassificationDescription AS Classification_ClassificationDescription, 
            T.ThemeColor AS Classification_ThemeColor, 
            T.DisplayName AS Classification_DisplayName, 
            T.GoalStatement AS Classification_GoalStatement, 
            T.KeyImageFileResourceID AS Classification_KeyImageFileResourceID, 
            T.ClassificationSystemID AS Classification_ClassificationSystemID, 
            T.ClassificationSortOrder AS Classification_ClassificationSortOrder, 
            True AS _from0
        FROM DatabaseEntities.Classification AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ClassificationPerformanceMeasure
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ClassificationPerformanceMeasure", @"
    SELECT VALUE -- Constructing ClassificationPerformanceMeasure
        [ProjectFirma.Web.Models.Store.ClassificationPerformanceMeasure](T1.ClassificationPerformanceMeasure_ClassificationPerformanceMeasureID, T1.ClassificationPerformanceMeasure_TenantID, T1.ClassificationPerformanceMeasure_ClassificationID, T1.ClassificationPerformanceMeasure_PerformanceMeasureID, T1.ClassificationPerformanceMeasure_IsPrimaryChart)
    FROM (
        SELECT 
            T.ClassificationPerformanceMeasureID AS ClassificationPerformanceMeasure_ClassificationPerformanceMeasureID, 
            T.TenantID AS ClassificationPerformanceMeasure_TenantID, 
            T.ClassificationID AS ClassificationPerformanceMeasure_ClassificationID, 
            T.PerformanceMeasureID AS ClassificationPerformanceMeasure_PerformanceMeasureID, 
            T.IsPrimaryChart AS ClassificationPerformanceMeasure_IsPrimaryChart, 
            True AS _from0
        FROM DatabaseEntities.ClassificationPerformanceMeasure AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ClassificationSystem
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ClassificationSystem", @"
    SELECT VALUE -- Constructing ClassificationSystem
        [ProjectFirma.Web.Models.Store.ClassificationSystem](T1.ClassificationSystem_ClassificationSystemID, T1.ClassificationSystem_TenantID, T1.ClassificationSystem_ClassificationSystemName, T1.ClassificationSystem_ClassificationSystemDefinition, T1.ClassificationSystem_ClassificationSystemListPageContent)
    FROM (
        SELECT 
            T.ClassificationSystemID AS ClassificationSystem_ClassificationSystemID, 
            T.TenantID AS ClassificationSystem_TenantID, 
            T.ClassificationSystemName AS ClassificationSystem_ClassificationSystemName, 
            T.ClassificationSystemDefinition AS ClassificationSystem_ClassificationSystemDefinition, 
            T.ClassificationSystemListPageContent AS ClassificationSystem_ClassificationSystemListPageContent, 
            True AS _from0
        FROM DatabaseEntities.ClassificationSystem AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ContractorTimeActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ContractorTimeActivity", "\r\n    SELECT VALUE -- Constructing ContractorTimeActivity\r\n        [ProjectFirma." +
                    "Web.Models.Store.ContractorTimeActivity](T1.ContractorTimeActivity_ContractorTim" +
                    "eActivityID, T1.ContractorTimeActivity_TenantID, T1.ContractorTimeActivity_Proje" +
                    "ctID, T1.ContractorTimeActivity_FundingSourceID, T1.ContractorTimeActivity_Contr" +
                    "actorTimeActivityAcreage, T1.ContractorTimeActivity_ContractorTimeActivityHours," +
                    " T1.ContractorTimeActivity_ContractorTimeActivityRate, T1.ContractorTimeActivity" +
                    "_ContractorTimeActivityStartDate, T1.ContractorTimeActivity_ContractorTimeActivi" +
                    "tyEndDate, T1.ContractorTimeActivity_ContractorTimeActivityNotes)\r\n    FROM (\r\n " +
                    "       SELECT \r\n            T.ContractorTimeActivityID AS ContractorTimeActivity" +
                    "_ContractorTimeActivityID, \r\n            T.TenantID AS ContractorTimeActivity_Te" +
                    "nantID, \r\n            T.ProjectID AS ContractorTimeActivity_ProjectID, \r\n       " +
                    "     T.FundingSourceID AS ContractorTimeActivity_FundingSourceID, \r\n            " +
                    "T.ContractorTimeActivityAcreage AS ContractorTimeActivity_ContractorTimeActivity" +
                    "Acreage, \r\n            T.ContractorTimeActivityHours AS ContractorTimeActivity_C" +
                    "ontractorTimeActivityHours, \r\n            T.ContractorTimeActivityRate AS Contra" +
                    "ctorTimeActivity_ContractorTimeActivityRate, \r\n            T.ContractorTimeActiv" +
                    "ityStartDate AS ContractorTimeActivity_ContractorTimeActivityStartDate, \r\n      " +
                    "      T.ContractorTimeActivityEndDate AS ContractorTimeActivity_ContractorTimeAc" +
                    "tivityEndDate, \r\n            T.ContractorTimeActivityNotes AS ContractorTimeActi" +
                    "vity_ContractorTimeActivityNotes, \r\n            True AS _from0\r\n        FROM Dat" +
                    "abaseEntities.ContractorTimeActivity AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.CostParameterSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.CostParameterSet", @"
    SELECT VALUE -- Constructing CostParameterSet
        [ProjectFirma.Web.Models.Store.CostParameterSet](T1.CostParameterSet_CostParameterSetID, T1.CostParameterSet_TenantID, T1.CostParameterSet_InflationRate, T1.CostParameterSet_CurrentYearForPVCalculations, T1.CostParameterSet_Comment, T1.CostParameterSet_CreateDate)
    FROM (
        SELECT 
            T.CostParameterSetID AS CostParameterSet_CostParameterSetID, 
            T.TenantID AS CostParameterSet_TenantID, 
            T.InflationRate AS CostParameterSet_InflationRate, 
            T.CurrentYearForPVCalculations AS CostParameterSet_CurrentYearForPVCalculations, 
            T.Comment AS CostParameterSet_Comment, 
            T.CreateDate AS CostParameterSet_CreateDate, 
            True AS _from0
        FROM DatabaseEntities.CostParameterSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.County
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.County", @"
    SELECT VALUE -- Constructing County
        [ProjectFirma.Web.Models.Store.County](T1.County_CountyID, T1.County_TenantID, T1.County_CountyName, T1.County_StateProvinceID, T1.County_CountyFeature)
    FROM (
        SELECT 
            T.CountyID AS County_CountyID, 
            T.TenantID AS County_TenantID, 
            T.CountyName AS County_CountyName, 
            T.StateProvinceID AS County_StateProvinceID, 
            T.CountyFeature AS County_CountyFeature, 
            True AS _from0
        FROM DatabaseEntities.County AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.CustomPage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.CustomPage", @"
    SELECT VALUE -- Constructing CustomPage
        [ProjectFirma.Web.Models.Store.CustomPage](T1.CustomPage_CustomPageID, T1.CustomPage_TenantID, T1.CustomPage_CustomPageDisplayName, T1.CustomPage_CustomPageVanityUrl, T1.CustomPage_CustomPageDisplayTypeID, T1.CustomPage_CustomPageContent)
    FROM (
        SELECT 
            T.CustomPageID AS CustomPage_CustomPageID, 
            T.TenantID AS CustomPage_TenantID, 
            T.CustomPageDisplayName AS CustomPage_CustomPageDisplayName, 
            T.CustomPageVanityUrl AS CustomPage_CustomPageVanityUrl, 
            T.CustomPageDisplayTypeID AS CustomPage_CustomPageDisplayTypeID, 
            T.CustomPageContent AS CustomPage_CustomPageContent, 
            True AS _from0
        FROM DatabaseEntities.CustomPage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.CustomPageDisplayType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.CustomPageDisplayType", @"
    SELECT VALUE -- Constructing CustomPageDisplayType
        [ProjectFirma.Web.Models.Store.CustomPageDisplayType](T1.CustomPageDisplayType_CustomPageDisplayTypeID, T1.CustomPageDisplayType_CustomPageDisplayTypeName, T1.CustomPageDisplayType_CustomPageDisplayTypeDisplayName, T1.CustomPageDisplayType_CustomPageDisplayTypeDescription)
    FROM (
        SELECT 
            T.CustomPageDisplayTypeID AS CustomPageDisplayType_CustomPageDisplayTypeID, 
            T.CustomPageDisplayTypeName AS CustomPageDisplayType_CustomPageDisplayTypeName, 
            T.CustomPageDisplayTypeDisplayName AS CustomPageDisplayType_CustomPageDisplayTypeDisplayName, 
            T.CustomPageDisplayTypeDescription AS CustomPageDisplayType_CustomPageDisplayTypeDescription, 
            True AS _from0
        FROM DatabaseEntities.CustomPageDisplayType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.CustomPageImage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.CustomPageImage", @"
    SELECT VALUE -- Constructing CustomPageImage
        [ProjectFirma.Web.Models.Store.CustomPageImage](T1.CustomPageImage_CustomPageImageID, T1.CustomPageImage_TenantID, T1.CustomPageImage_CustomPageID, T1.CustomPageImage_FileResourceID)
    FROM (
        SELECT 
            T.CustomPageImageID AS CustomPageImage_CustomPageImageID, 
            T.TenantID AS CustomPageImage_TenantID, 
            T.CustomPageID AS CustomPageImage_CustomPageID, 
            T.FileResourceID AS CustomPageImage_FileResourceID, 
            True AS _from0
        FROM DatabaseEntities.CustomPageImage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.FieldDefinition
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.FieldDefinition", @"
    SELECT VALUE -- Constructing FieldDefinition
        [ProjectFirma.Web.Models.Store.FieldDefinition](T1.FieldDefinition_FieldDefinitionID, T1.FieldDefinition_FieldDefinitionName, T1.FieldDefinition_FieldDefinitionDisplayName, T1.FieldDefinition_DefaultDefinition)
    FROM (
        SELECT 
            T.FieldDefinitionID AS FieldDefinition_FieldDefinitionID, 
            T.FieldDefinitionName AS FieldDefinition_FieldDefinitionName, 
            T.FieldDefinitionDisplayName AS FieldDefinition_FieldDefinitionDisplayName, 
            T.DefaultDefinition AS FieldDefinition_DefaultDefinition, 
            True AS _from0
        FROM DatabaseEntities.FieldDefinition AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.FieldDefinitionData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.FieldDefinitionData", @"
    SELECT VALUE -- Constructing FieldDefinitionData
        [ProjectFirma.Web.Models.Store.FieldDefinitionData](T1.FieldDefinitionData_FieldDefinitionDataID, T1.FieldDefinitionData_TenantID, T1.FieldDefinitionData_FieldDefinitionID, T1.FieldDefinitionData_FieldDefinitionDataValue, T1.FieldDefinitionData_FieldDefinitionLabel)
    FROM (
        SELECT 
            T.FieldDefinitionDataID AS FieldDefinitionData_FieldDefinitionDataID, 
            T.TenantID AS FieldDefinitionData_TenantID, 
            T.FieldDefinitionID AS FieldDefinitionData_FieldDefinitionID, 
            T.FieldDefinitionDataValue AS FieldDefinitionData_FieldDefinitionDataValue, 
            T.FieldDefinitionLabel AS FieldDefinitionData_FieldDefinitionLabel, 
            True AS _from0
        FROM DatabaseEntities.FieldDefinitionData AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.FieldDefinitionDataImage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.FieldDefinitionDataImage", @"
    SELECT VALUE -- Constructing FieldDefinitionDataImage
        [ProjectFirma.Web.Models.Store.FieldDefinitionDataImage](T1.FieldDefinitionDataImage_FieldDefinitionDataImageID, T1.FieldDefinitionDataImage_TenantID, T1.FieldDefinitionDataImage_FieldDefinitionDataID, T1.FieldDefinitionDataImage_FileResourceID)
    FROM (
        SELECT 
            T.FieldDefinitionDataImageID AS FieldDefinitionDataImage_FieldDefinitionDataImageID, 
            T.TenantID AS FieldDefinitionDataImage_TenantID, 
            T.FieldDefinitionDataID AS FieldDefinitionDataImage_FieldDefinitionDataID, 
            T.FileResourceID AS FieldDefinitionDataImage_FileResourceID, 
            True AS _from0
        FROM DatabaseEntities.FieldDefinitionDataImage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.FileResource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.FileResource", @"
    SELECT VALUE -- Constructing FileResource
        [ProjectFirma.Web.Models.Store.FileResource](T1.FileResource_FileResourceID, T1.FileResource_TenantID, T1.FileResource_FileResourceMimeTypeID, T1.FileResource_OriginalBaseFilename, T1.FileResource_OriginalFileExtension, T1.FileResource_FileResourceGUID, T1.FileResource_FileResourceData, T1.FileResource_CreatePersonID, T1.FileResource_CreateDate)
    FROM (
        SELECT 
            T.FileResourceID AS FileResource_FileResourceID, 
            T.TenantID AS FileResource_TenantID, 
            T.FileResourceMimeTypeID AS FileResource_FileResourceMimeTypeID, 
            T.OriginalBaseFilename AS FileResource_OriginalBaseFilename, 
            T.OriginalFileExtension AS FileResource_OriginalFileExtension, 
            T.FileResourceGUID AS FileResource_FileResourceGUID, 
            T.FileResourceData AS FileResource_FileResourceData, 
            T.CreatePersonID AS FileResource_CreatePersonID, 
            T.CreateDate AS FileResource_CreateDate, 
            True AS _from0
        FROM DatabaseEntities.FileResource AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.FileResourceMimeType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.FileResourceMimeType", @"
    SELECT VALUE -- Constructing FileResourceMimeType
        [ProjectFirma.Web.Models.Store.FileResourceMimeType](T1.FileResourceMimeType_FileResourceMimeTypeID, T1.FileResourceMimeType_FileResourceMimeTypeName, T1.FileResourceMimeType_FileResourceMimeTypeDisplayName, T1.FileResourceMimeType_FileResourceMimeTypeContentTypeName, T1.FileResourceMimeType_FileResourceMimeTypeIconSmallFilename, T1.FileResourceMimeType_FileResourceMimeTypeIconNormalFilename)
    FROM (
        SELECT 
            T.FileResourceMimeTypeID AS FileResourceMimeType_FileResourceMimeTypeID, 
            T.FileResourceMimeTypeName AS FileResourceMimeType_FileResourceMimeTypeName, 
            T.FileResourceMimeTypeDisplayName AS FileResourceMimeType_FileResourceMimeTypeDisplayName, 
            T.FileResourceMimeTypeContentTypeName AS FileResourceMimeType_FileResourceMimeTypeContentTypeName, 
            T.FileResourceMimeTypeIconSmallFilename AS FileResourceMimeType_FileResourceMimeTypeIconSmallFilename, 
            T.FileResourceMimeTypeIconNormalFilename AS FileResourceMimeType_FileResourceMimeTypeIconNormalFilename, 
            True AS _from0
        FROM DatabaseEntities.FileResourceMimeType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.FirmaHomePageImage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.FirmaHomePageImage", @"
    SELECT VALUE -- Constructing FirmaHomePageImage
        [ProjectFirma.Web.Models.Store.FirmaHomePageImage](T1.FirmaHomePageImage_FirmaHomePageImageID, T1.FirmaHomePageImage_TenantID, T1.FirmaHomePageImage_FileResourceID, T1.FirmaHomePageImage_Caption, T1.FirmaHomePageImage_SortOrder)
    FROM (
        SELECT 
            T.FirmaHomePageImageID AS FirmaHomePageImage_FirmaHomePageImageID, 
            T.TenantID AS FirmaHomePageImage_TenantID, 
            T.FileResourceID AS FirmaHomePageImage_FileResourceID, 
            T.Caption AS FirmaHomePageImage_Caption, 
            T.SortOrder AS FirmaHomePageImage_SortOrder, 
            True AS _from0
        FROM DatabaseEntities.FirmaHomePageImage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.FirmaPage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.FirmaPage", @"
    SELECT VALUE -- Constructing FirmaPage
        [ProjectFirma.Web.Models.Store.FirmaPage](T1.FirmaPage_FirmaPageID, T1.FirmaPage_TenantID, T1.FirmaPage_FirmaPageTypeID, T1.FirmaPage_FirmaPageContent)
    FROM (
        SELECT 
            T.FirmaPageID AS FirmaPage_FirmaPageID, 
            T.TenantID AS FirmaPage_TenantID, 
            T.FirmaPageTypeID AS FirmaPage_FirmaPageTypeID, 
            T.FirmaPageContent AS FirmaPage_FirmaPageContent, 
            True AS _from0
        FROM DatabaseEntities.FirmaPage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.FirmaPageImage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.FirmaPageImage", @"
    SELECT VALUE -- Constructing FirmaPageImage
        [ProjectFirma.Web.Models.Store.FirmaPageImage](T1.FirmaPageImage_FirmaPageImageID, T1.FirmaPageImage_TenantID, T1.FirmaPageImage_FirmaPageID, T1.FirmaPageImage_FileResourceID)
    FROM (
        SELECT 
            T.FirmaPageImageID AS FirmaPageImage_FirmaPageImageID, 
            T.TenantID AS FirmaPageImage_TenantID, 
            T.FirmaPageID AS FirmaPageImage_FirmaPageID, 
            T.FileResourceID AS FirmaPageImage_FileResourceID, 
            True AS _from0
        FROM DatabaseEntities.FirmaPageImage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.FirmaPageRenderType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.FirmaPageRenderType", @"
    SELECT VALUE -- Constructing FirmaPageRenderType
        [ProjectFirma.Web.Models.Store.FirmaPageRenderType](T1.FirmaPageRenderType_FirmaPageRenderTypeID, T1.FirmaPageRenderType_FirmaPageRenderTypeName, T1.FirmaPageRenderType_FirmaPageRenderTypeDisplayName)
    FROM (
        SELECT 
            T.FirmaPageRenderTypeID AS FirmaPageRenderType_FirmaPageRenderTypeID, 
            T.FirmaPageRenderTypeName AS FirmaPageRenderType_FirmaPageRenderTypeName, 
            T.FirmaPageRenderTypeDisplayName AS FirmaPageRenderType_FirmaPageRenderTypeDisplayName, 
            True AS _from0
        FROM DatabaseEntities.FirmaPageRenderType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.FirmaPageType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.FirmaPageType", @"
    SELECT VALUE -- Constructing FirmaPageType
        [ProjectFirma.Web.Models.Store.FirmaPageType](T1.FirmaPageType_FirmaPageTypeID, T1.FirmaPageType_FirmaPageTypeName, T1.FirmaPageType_FirmaPageTypeDisplayName, T1.FirmaPageType_FirmaPageRenderTypeID)
    FROM (
        SELECT 
            T.FirmaPageTypeID AS FirmaPageType_FirmaPageTypeID, 
            T.FirmaPageTypeName AS FirmaPageType_FirmaPageTypeName, 
            T.FirmaPageTypeDisplayName AS FirmaPageType_FirmaPageTypeDisplayName, 
            T.FirmaPageRenderTypeID AS FirmaPageType_FirmaPageRenderTypeID, 
            True AS _from0
        FROM DatabaseEntities.FirmaPageType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.FundingSource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.FundingSource", @"
    SELECT VALUE -- Constructing FundingSource
        [ProjectFirma.Web.Models.Store.FundingSource](T1.FundingSource_FundingSourceID, T1.FundingSource_TenantID, T1.FundingSource_OrganizationID, T1.FundingSource_FundingSourceName, T1.FundingSource_IsActive, T1.FundingSource_FundingSourceDescription, T1.FundingSource_FundingSourceAmount)
    FROM (
        SELECT 
            T.FundingSourceID AS FundingSource_FundingSourceID, 
            T.TenantID AS FundingSource_TenantID, 
            T.OrganizationID AS FundingSource_OrganizationID, 
            T.FundingSourceName AS FundingSource_FundingSourceName, 
            T.IsActive AS FundingSource_IsActive, 
            T.FundingSourceDescription AS FundingSource_FundingSourceDescription, 
            T.FundingSourceAmount AS FundingSource_FundingSourceAmount, 
            True AS _from0
        FROM DatabaseEntities.FundingSource AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.GeospatialArea
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView26()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.GeospatialArea", @"
    SELECT VALUE -- Constructing GeospatialArea
        [ProjectFirma.Web.Models.Store.GeospatialArea](T1.GeospatialArea_GeospatialAreaID, T1.GeospatialArea_TenantID, T1.GeospatialArea_GeospatialAreaName, T1.GeospatialArea_GeospatialAreaFeature, T1.GeospatialArea_GeospatialAreaTypeID)
    FROM (
        SELECT 
            T.GeospatialAreaID AS GeospatialArea_GeospatialAreaID, 
            T.TenantID AS GeospatialArea_TenantID, 
            T.GeospatialAreaName AS GeospatialArea_GeospatialAreaName, 
            T.GeospatialAreaFeature AS GeospatialArea_GeospatialAreaFeature, 
            T.GeospatialAreaTypeID AS GeospatialArea_GeospatialAreaTypeID, 
            True AS _from0
        FROM DatabaseEntities.GeospatialArea AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.GeospatialAreaType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView27()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.GeospatialAreaType", @"
    SELECT VALUE -- Constructing GeospatialAreaType
        [ProjectFirma.Web.Models.Store.GeospatialAreaType](T1.GeospatialAreaType_GeospatialAreaTypeID, T1.GeospatialAreaType_TenantID, T1.GeospatialAreaType_GeospatialAreaTypeName, T1.GeospatialAreaType_GeospatialAreaTypeNamePluralized, T1.GeospatialAreaType_GeospatialAreaIntroContent, T1.GeospatialAreaType_GeospatialAreaTypeDefinition, T1.GeospatialAreaType_MapServiceUrl, T1.GeospatialAreaType_GeospatialAreaLayerName)
    FROM (
        SELECT 
            T.GeospatialAreaTypeID AS GeospatialAreaType_GeospatialAreaTypeID, 
            T.TenantID AS GeospatialAreaType_TenantID, 
            T.GeospatialAreaTypeName AS GeospatialAreaType_GeospatialAreaTypeName, 
            T.GeospatialAreaTypeNamePluralized AS GeospatialAreaType_GeospatialAreaTypeNamePluralized, 
            T.GeospatialAreaIntroContent AS GeospatialAreaType_GeospatialAreaIntroContent, 
            T.GeospatialAreaTypeDefinition AS GeospatialAreaType_GeospatialAreaTypeDefinition, 
            T.MapServiceUrl AS GeospatialAreaType_MapServiceUrl, 
            T.GeospatialAreaLayerName AS GeospatialAreaType_GeospatialAreaLayerName, 
            True AS _from0
        FROM DatabaseEntities.GeospatialAreaType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.GoogleChartType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView28()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.GoogleChartType", @"
    SELECT VALUE -- Constructing GoogleChartType
        [ProjectFirma.Web.Models.Store.GoogleChartType](T1.GoogleChartType_GoogleChartTypeID, T1.GoogleChartType_GoogleChartTypeName, T1.GoogleChartType_GoogleChartTypeDisplayName, T1.GoogleChartType_SeriesDataDisplayType)
    FROM (
        SELECT 
            T.GoogleChartTypeID AS GoogleChartType_GoogleChartTypeID, 
            T.GoogleChartTypeName AS GoogleChartType_GoogleChartTypeName, 
            T.GoogleChartTypeDisplayName AS GoogleChartType_GoogleChartTypeDisplayName, 
            T.SeriesDataDisplayType AS GoogleChartType_SeriesDataDisplayType, 
            True AS _from0
        FROM DatabaseEntities.GoogleChartType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.Grant
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView29()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.Grant", @"
    SELECT VALUE -- Constructing Grant
        [ProjectFirma.Web.Models.Store.Grant](T1.Grant_GrantID, T1.Grant_TenantID, T1.Grant_GrantNumber, T1.Grant_StartDate, T1.Grant_EndDate, T1.Grant_AwardedFunds)
    FROM (
        SELECT 
            T.GrantID AS Grant_GrantID, 
            T.TenantID AS Grant_TenantID, 
            T.GrantNumber AS Grant_GrantNumber, 
            T.StartDate AS Grant_StartDate, 
            T.EndDate AS Grant_EndDate, 
            T.AwardedFunds AS Grant_AwardedFunds, 
            True AS _from0
        FROM DatabaseEntities.Grant AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.GrantAllocation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView30()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.GrantAllocation", @"
    SELECT VALUE -- Constructing GrantAllocation
        [ProjectFirma.Web.Models.Store.GrantAllocation](T1.GrantAllocation_GrantAllocationID, T1.GrantAllocation_TenantID, T1.GrantAllocation_GrantID, T1.GrantAllocation_ProjectName, T1.GrantAllocation_StartDate, T1.GrantAllocation_EndDate, T1.GrantAllocation_AllocationAmount)
    FROM (
        SELECT 
            T.GrantAllocationID AS GrantAllocation_GrantAllocationID, 
            T.TenantID AS GrantAllocation_TenantID, 
            T.GrantID AS GrantAllocation_GrantID, 
            T.ProjectName AS GrantAllocation_ProjectName, 
            T.StartDate AS GrantAllocation_StartDate, 
            T.EndDate AS GrantAllocation_EndDate, 
            T.AllocationAmount AS GrantAllocation_AllocationAmount, 
            True AS _from0
        FROM DatabaseEntities.GrantAllocation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ImportExternalProjectStaging
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView31()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ImportExternalProjectStaging", "\r\n    SELECT VALUE -- Constructing ImportExternalProjectStaging\r\n        [Project" +
                    "Firma.Web.Models.Store.ImportExternalProjectStaging](T1.ImportExternalProjectSta" +
                    "ging_ImportExternalProjectStagingID, T1.ImportExternalProjectStaging_TenantID, T" +
                    "1.ImportExternalProjectStaging_CreatePersonID, T1.ImportExternalProjectStaging_C" +
                    "reateDate, T1.ImportExternalProjectStaging_ProjectName, T1.ImportExternalProject" +
                    "Staging_Description, T1.ImportExternalProjectStaging_PlannedDate, T1.ImportExter" +
                    "nalProjectStaging_ApprovalStartDate, T1.ImportExternalProjectStaging_EndDate, T1" +
                    ".ImportExternalProjectStaging_EstimatedCost)\r\n    FROM (\r\n        SELECT \r\n     " +
                    "       T.ImportExternalProjectStagingID AS ImportExternalProjectStaging_ImportEx" +
                    "ternalProjectStagingID, \r\n            T.TenantID AS ImportExternalProjectStaging" +
                    "_TenantID, \r\n            T.CreatePersonID AS ImportExternalProjectStaging_Create" +
                    "PersonID, \r\n            T.CreateDate AS ImportExternalProjectStaging_CreateDate," +
                    " \r\n            T.ProjectName AS ImportExternalProjectStaging_ProjectName, \r\n    " +
                    "        T.Description AS ImportExternalProjectStaging_Description, \r\n           " +
                    " T.PlannedDate AS ImportExternalProjectStaging_PlannedDate, \r\n            T.Appr" +
                    "ovalStartDate AS ImportExternalProjectStaging_ApprovalStartDate, \r\n            T" +
                    ".EndDate AS ImportExternalProjectStaging_EndDate, \r\n            T.EstimatedCost " +
                    "AS ImportExternalProjectStaging_EstimatedCost, \r\n            True AS _from0\r\n   " +
                    "     FROM DatabaseEntities.ImportExternalProjectStaging AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.MappedRegion
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView32()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.MappedRegion", @"
    SELECT VALUE -- Constructing MappedRegion
        [ProjectFirma.Web.Models.Store.MappedRegion](T1.MappedRegion_MappedRegionID, T1.MappedRegion_TenantID, T1.MappedRegion_RegionName, T1.MappedRegion_RegionDisplayName, T1.MappedRegion_RegionFeature)
    FROM (
        SELECT 
            T.MappedRegionID AS MappedRegion_MappedRegionID, 
            T.TenantID AS MappedRegion_TenantID, 
            T.RegionName AS MappedRegion_RegionName, 
            T.RegionDisplayName AS MappedRegion_RegionDisplayName, 
            T.RegionFeature AS MappedRegion_RegionFeature, 
            True AS _from0
        FROM DatabaseEntities.MappedRegion AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.MeasurementUnitType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView33()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.MeasurementUnitType", @"
    SELECT VALUE -- Constructing MeasurementUnitType
        [ProjectFirma.Web.Models.Store.MeasurementUnitType](T1.MeasurementUnitType_MeasurementUnitTypeID, T1.MeasurementUnitType_MeasurementUnitTypeName, T1.MeasurementUnitType_MeasurementUnitTypeDisplayName, T1.MeasurementUnitType_LegendDisplayName, T1.MeasurementUnitType_SingularDisplayName, T1.MeasurementUnitType_NumberOfSignificantDigits)
    FROM (
        SELECT 
            T.MeasurementUnitTypeID AS MeasurementUnitType_MeasurementUnitTypeID, 
            T.MeasurementUnitTypeName AS MeasurementUnitType_MeasurementUnitTypeName, 
            T.MeasurementUnitTypeDisplayName AS MeasurementUnitType_MeasurementUnitTypeDisplayName, 
            T.LegendDisplayName AS MeasurementUnitType_LegendDisplayName, 
            T.SingularDisplayName AS MeasurementUnitType_SingularDisplayName, 
            T.NumberOfSignificantDigits AS MeasurementUnitType_NumberOfSignificantDigits, 
            True AS _from0
        FROM DatabaseEntities.MeasurementUnitType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.MonitoringProgram
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView34()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.MonitoringProgram", @"
    SELECT VALUE -- Constructing MonitoringProgram
        [ProjectFirma.Web.Models.Store.MonitoringProgram](T1.MonitoringProgram_MonitoringProgramID, T1.MonitoringProgram_TenantID, T1.MonitoringProgram_MonitoringProgramName, T1.MonitoringProgram_MonitoringApproach, T1.MonitoringProgram_MonitoringProgramUrl)
    FROM (
        SELECT 
            T.MonitoringProgramID AS MonitoringProgram_MonitoringProgramID, 
            T.TenantID AS MonitoringProgram_TenantID, 
            T.MonitoringProgramName AS MonitoringProgram_MonitoringProgramName, 
            T.MonitoringApproach AS MonitoringProgram_MonitoringApproach, 
            T.MonitoringProgramUrl AS MonitoringProgram_MonitoringProgramUrl, 
            True AS _from0
        FROM DatabaseEntities.MonitoringProgram AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.MonitoringProgramDocument
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView35()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.MonitoringProgramDocument", @"
    SELECT VALUE -- Constructing MonitoringProgramDocument
        [ProjectFirma.Web.Models.Store.MonitoringProgramDocument](T1.MonitoringProgramDocument_MonitoringProgramDocumentID, T1.MonitoringProgramDocument_TenantID, T1.MonitoringProgramDocument_FileResourceID, T1.MonitoringProgramDocument_MonitoringProgramID, T1.MonitoringProgramDocument_DisplayName, T1.MonitoringProgramDocument_UploadDate)
    FROM (
        SELECT 
            T.MonitoringProgramDocumentID AS MonitoringProgramDocument_MonitoringProgramDocumentID, 
            T.TenantID AS MonitoringProgramDocument_TenantID, 
            T.FileResourceID AS MonitoringProgramDocument_FileResourceID, 
            T.MonitoringProgramID AS MonitoringProgramDocument_MonitoringProgramID, 
            T.DisplayName AS MonitoringProgramDocument_DisplayName, 
            T.UploadDate AS MonitoringProgramDocument_UploadDate, 
            True AS _from0
        FROM DatabaseEntities.MonitoringProgramDocument AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.MonitoringProgramPartner
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView36()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.MonitoringProgramPartner", @"
    SELECT VALUE -- Constructing MonitoringProgramPartner
        [ProjectFirma.Web.Models.Store.MonitoringProgramPartner](T1.MonitoringProgramPartner_MonitoringProgramPartnerID, T1.MonitoringProgramPartner_TenantID, T1.MonitoringProgramPartner_MonitoringProgramID, T1.MonitoringProgramPartner_OrganizationID)
    FROM (
        SELECT 
            T.MonitoringProgramPartnerID AS MonitoringProgramPartner_MonitoringProgramPartnerID, 
            T.TenantID AS MonitoringProgramPartner_TenantID, 
            T.MonitoringProgramID AS MonitoringProgramPartner_MonitoringProgramID, 
            T.OrganizationID AS MonitoringProgramPartner_OrganizationID, 
            True AS _from0
        FROM DatabaseEntities.MonitoringProgramPartner AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.Notification
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView37()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.Notification", @"
    SELECT VALUE -- Constructing Notification
        [ProjectFirma.Web.Models.Store.Notification](T1.Notification_NotificationID, T1.Notification_TenantID, T1.Notification_NotificationTypeID, T1.Notification_PersonID, T1.Notification_NotificationDate)
    FROM (
        SELECT 
            T.NotificationID AS Notification_NotificationID, 
            T.TenantID AS Notification_TenantID, 
            T.NotificationTypeID AS Notification_NotificationTypeID, 
            T.PersonID AS Notification_PersonID, 
            T.NotificationDate AS Notification_NotificationDate, 
            True AS _from0
        FROM DatabaseEntities.Notification AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.NotificationProject
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView38()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.NotificationProject", @"
    SELECT VALUE -- Constructing NotificationProject
        [ProjectFirma.Web.Models.Store.NotificationProject](T1.NotificationProject_NotificationProjectID, T1.NotificationProject_TenantID, T1.NotificationProject_NotificationID, T1.NotificationProject_ProjectID)
    FROM (
        SELECT 
            T.NotificationProjectID AS NotificationProject_NotificationProjectID, 
            T.TenantID AS NotificationProject_TenantID, 
            T.NotificationID AS NotificationProject_NotificationID, 
            T.ProjectID AS NotificationProject_ProjectID, 
            True AS _from0
        FROM DatabaseEntities.NotificationProject AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.NotificationType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView39()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.NotificationType", @"
    SELECT VALUE -- Constructing NotificationType
        [ProjectFirma.Web.Models.Store.NotificationType](T1.NotificationType_NotificationTypeID, T1.NotificationType_NotificationTypeName, T1.NotificationType_NotificationTypeDisplayName)
    FROM (
        SELECT 
            T.NotificationTypeID AS NotificationType_NotificationTypeID, 
            T.NotificationTypeName AS NotificationType_NotificationTypeName, 
            T.NotificationTypeDisplayName AS NotificationType_NotificationTypeDisplayName, 
            True AS _from0
        FROM DatabaseEntities.NotificationType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.Organization
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView40()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.Organization", @"
    SELECT VALUE -- Constructing Organization
        [ProjectFirma.Web.Models.Store.Organization](T1.Organization_OrganizationID, T1.Organization_TenantID, T1.Organization_OrganizationGuid, T1.Organization_OrganizationName, T1.Organization_OrganizationShortName, T1.Organization_PrimaryContactPersonID, T1.Organization_IsActive, T1.Organization_OrganizationUrl, T1.Organization_LogoFileResourceID, T1.Organization_OrganizationTypeID, T1.Organization_OrganizationBoundary)
    FROM (
        SELECT 
            T.OrganizationID AS Organization_OrganizationID, 
            T.TenantID AS Organization_TenantID, 
            T.OrganizationGuid AS Organization_OrganizationGuid, 
            T.OrganizationName AS Organization_OrganizationName, 
            T.OrganizationShortName AS Organization_OrganizationShortName, 
            T.PrimaryContactPersonID AS Organization_PrimaryContactPersonID, 
            T.IsActive AS Organization_IsActive, 
            T.OrganizationUrl AS Organization_OrganizationUrl, 
            T.LogoFileResourceID AS Organization_LogoFileResourceID, 
            T.OrganizationTypeID AS Organization_OrganizationTypeID, 
            T.OrganizationBoundary AS Organization_OrganizationBoundary, 
            True AS _from0
        FROM DatabaseEntities.Organization AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.OrganizationBoundaryStaging
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView41()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.OrganizationBoundaryStaging", @"
    SELECT VALUE -- Constructing OrganizationBoundaryStaging
        [ProjectFirma.Web.Models.Store.OrganizationBoundaryStaging](T1.OrganizationBoundaryStaging_OrganizationBoundaryStagingID, T1.OrganizationBoundaryStaging_TenantID, T1.OrganizationBoundaryStaging_OrganizationID, T1.OrganizationBoundaryStaging_FeatureClassName, T1.OrganizationBoundaryStaging_GeoJson)
    FROM (
        SELECT 
            T.OrganizationBoundaryStagingID AS OrganizationBoundaryStaging_OrganizationBoundaryStagingID, 
            T.TenantID AS OrganizationBoundaryStaging_TenantID, 
            T.OrganizationID AS OrganizationBoundaryStaging_OrganizationID, 
            T.FeatureClassName AS OrganizationBoundaryStaging_FeatureClassName, 
            T.GeoJson AS OrganizationBoundaryStaging_GeoJson, 
            True AS _from0
        FROM DatabaseEntities.OrganizationBoundaryStaging AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.OrganizationType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView42()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.OrganizationType", @"
    SELECT VALUE -- Constructing OrganizationType
        [ProjectFirma.Web.Models.Store.OrganizationType](T1.OrganizationType_OrganizationTypeID, T1.OrganizationType_TenantID, T1.OrganizationType_OrganizationTypeName, T1.OrganizationType_OrganizationTypeAbbreviation, T1.OrganizationType_LegendColor, T1.OrganizationType_ShowOnProjectMaps, T1.OrganizationType_IsDefaultOrganizationType, T1.OrganizationType_IsFundingType)
    FROM (
        SELECT 
            T.OrganizationTypeID AS OrganizationType_OrganizationTypeID, 
            T.TenantID AS OrganizationType_TenantID, 
            T.OrganizationTypeName AS OrganizationType_OrganizationTypeName, 
            T.OrganizationTypeAbbreviation AS OrganizationType_OrganizationTypeAbbreviation, 
            T.LegendColor AS OrganizationType_LegendColor, 
            T.ShowOnProjectMaps AS OrganizationType_ShowOnProjectMaps, 
            T.IsDefaultOrganizationType AS OrganizationType_IsDefaultOrganizationType, 
            T.IsFundingType AS OrganizationType_IsFundingType, 
            True AS _from0
        FROM DatabaseEntities.OrganizationType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.OrganizationTypeRelationshipType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView43()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.OrganizationTypeRelationshipType", @"
    SELECT VALUE -- Constructing OrganizationTypeRelationshipType
        [ProjectFirma.Web.Models.Store.OrganizationTypeRelationshipType](T1.OrganizationTypeRelationshipType_OrganizationTypeRelationshipTypeID, T1.OrganizationTypeRelationshipType_TenantID, T1.OrganizationTypeRelationshipType_OrganizationTypeID, T1.OrganizationTypeRelationshipType_RelationshipTypeID)
    FROM (
        SELECT 
            T.OrganizationTypeRelationshipTypeID AS OrganizationTypeRelationshipType_OrganizationTypeRelationshipTypeID, 
            T.TenantID AS OrganizationTypeRelationshipType_TenantID, 
            T.OrganizationTypeID AS OrganizationTypeRelationshipType_OrganizationTypeID, 
            T.RelationshipTypeID AS OrganizationTypeRelationshipType_RelationshipTypeID, 
            True AS _from0
        FROM DatabaseEntities.OrganizationTypeRelationshipType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.PerformanceMeasure
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView44()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2229);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PerformanceMeasure\r\n        [ProjectFirma.Web");
            viewString.Append(".Models.Store.PerformanceMeasure](T1.PerformanceMeasure_PerformanceMeasureID, T1");
            viewString.Append(".PerformanceMeasure_TenantID, T1.PerformanceMeasure_CriticalDefinitions, T1.Perf");
            viewString.Append("ormanceMeasure_ProjectReporting, T1.PerformanceMeasure_PerformanceMeasureDisplay");
            viewString.Append("Name, T1.PerformanceMeasure_MeasurementUnitTypeID, T1.PerformanceMeasure_Perform");
            viewString.Append("anceMeasureTypeID, T1.PerformanceMeasure_PerformanceMeasureDefinition, T1.Perfor");
            viewString.Append("manceMeasure_DataSourceText, T1.PerformanceMeasure_ExternalDataSourceUrl, T1.Per");
            viewString.Append("formanceMeasure_ChartCaption, T1.PerformanceMeasure_SwapChartAxes, T1.Performanc");
            viewString.Append("eMeasure_CanCalculateTotal, T1.PerformanceMeasure_PerformanceMeasureSortOrder, T");
            viewString.Append("1.PerformanceMeasure_IsAggregatable, T1.PerformanceMeasure_PerformanceMeasureDat");
            viewString.Append("aSourceTypeID)\r\n    FROM (\r\n        SELECT \r\n            T.PerformanceMeasureID ");
            viewString.Append("AS PerformanceMeasure_PerformanceMeasureID, \r\n            T.TenantID AS Performa");
            viewString.Append("nceMeasure_TenantID, \r\n            T.CriticalDefinitions AS PerformanceMeasure_C");
            viewString.Append("riticalDefinitions, \r\n            T.ProjectReporting AS PerformanceMeasure_Proje");
            viewString.Append("ctReporting, \r\n            T.PerformanceMeasureDisplayName AS PerformanceMeasure");
            viewString.Append("_PerformanceMeasureDisplayName, \r\n            T.MeasurementUnitTypeID AS Perform");
            viewString.Append("anceMeasure_MeasurementUnitTypeID, \r\n            T.PerformanceMeasureTypeID AS P");
            viewString.Append("erformanceMeasure_PerformanceMeasureTypeID, \r\n            T.PerformanceMeasureDe");
            viewString.Append("finition AS PerformanceMeasure_PerformanceMeasureDefinition, \r\n            T.Dat");
            viewString.Append("aSourceText AS PerformanceMeasure_DataSourceText, \r\n            T.ExternalDataSo");
            viewString.Append("urceUrl AS PerformanceMeasure_ExternalDataSourceUrl, \r\n            T.ChartCaptio");
            viewString.Append("n AS PerformanceMeasure_ChartCaption, \r\n            T.SwapChartAxes AS Performan");
            viewString.Append("ceMeasure_SwapChartAxes, \r\n            T.CanCalculateTotal AS PerformanceMeasure");
            viewString.Append("_CanCalculateTotal, \r\n            T.PerformanceMeasureSortOrder AS PerformanceMe");
            viewString.Append("asure_PerformanceMeasureSortOrder, \r\n            T.IsAggregatable AS Performance");
            viewString.Append("Measure_IsAggregatable, \r\n            T.PerformanceMeasureDataSourceTypeID AS Pe");
            viewString.Append("rformanceMeasure_PerformanceMeasureDataSourceTypeID, \r\n            True AS _from");
            viewString.Append("0\r\n        FROM DatabaseEntities.PerformanceMeasure AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.PerformanceMeasure", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.PerformanceMeasureActual
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView45()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.PerformanceMeasureActual", @"
    SELECT VALUE -- Constructing PerformanceMeasureActual
        [ProjectFirma.Web.Models.Store.PerformanceMeasureActual](T1.PerformanceMeasureActual_PerformanceMeasureActualID, T1.PerformanceMeasureActual_TenantID, T1.PerformanceMeasureActual_ProjectID, T1.PerformanceMeasureActual_PerformanceMeasureID, T1.PerformanceMeasureActual_CalendarYear, T1.PerformanceMeasureActual_ActualValue)
    FROM (
        SELECT 
            T.PerformanceMeasureActualID AS PerformanceMeasureActual_PerformanceMeasureActualID, 
            T.TenantID AS PerformanceMeasureActual_TenantID, 
            T.ProjectID AS PerformanceMeasureActual_ProjectID, 
            T.PerformanceMeasureID AS PerformanceMeasureActual_PerformanceMeasureID, 
            T.CalendarYear AS PerformanceMeasureActual_CalendarYear, 
            T.ActualValue AS PerformanceMeasureActual_ActualValue, 
            True AS _from0
        FROM DatabaseEntities.PerformanceMeasureActual AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.PerformanceMeasureActualSubcategoryOption
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView46()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.PerformanceMeasureActualSubcategoryOption", @"
    SELECT VALUE -- Constructing PerformanceMeasureActualSubcategoryOption
        [ProjectFirma.Web.Models.Store.PerformanceMeasureActualSubcategoryOption](T1.PerformanceMeasureActualSubcategoryOption_PerformanceMeasureActualSubcategoryOptionID, T1.PerformanceMeasureActualSubcategoryOption_TenantID, T1.PerformanceMeasureActualSubcategoryOption_PerformanceMeasureActualID, T1.PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategoryOptionID, T1.PerformanceMeasureActualSubcategoryOption_PerformanceMeasureID, T1.PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategoryID)
    FROM (
        SELECT 
            T.PerformanceMeasureActualSubcategoryOptionID AS PerformanceMeasureActualSubcategoryOption_PerformanceMeasureActualSubcategoryOptionID, 
            T.TenantID AS PerformanceMeasureActualSubcategoryOption_TenantID, 
            T.PerformanceMeasureActualID AS PerformanceMeasureActualSubcategoryOption_PerformanceMeasureActualID, 
            T.PerformanceMeasureSubcategoryOptionID AS PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategoryOptionID, 
            T.PerformanceMeasureID AS PerformanceMeasureActualSubcategoryOption_PerformanceMeasureID, 
            T.PerformanceMeasureSubcategoryID AS PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategoryID, 
            True AS _from0
        FROM DatabaseEntities.PerformanceMeasureActualSubcategoryOption AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.PerformanceMeasureActualSubcategoryOptionUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView47()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.PerformanceMeasureActualSubcategoryOptionUpda" +
                    "te", "\r\n    SELECT VALUE -- Constructing PerformanceMeasureActualSubcategoryOptionUpdat" +
                    "e\r\n        [ProjectFirma.Web.Models.Store.PerformanceMeasureActualSubcategoryOpt" +
                    "ionUpdate](T1.PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasure" +
                    "ActualSubcategoryOptionUpdateID, T1.PerformanceMeasureActualSubcategoryOptionUpd" +
                    "ate_TenantID, T1.PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeas" +
                    "ureActualUpdateID, T1.PerformanceMeasureActualSubcategoryOptionUpdate_Performanc" +
                    "eMeasureSubcategoryOptionID, T1.PerformanceMeasureActualSubcategoryOptionUpdate_" +
                    "PerformanceMeasureID, T1.PerformanceMeasureActualSubcategoryOptionUpdate_Perform" +
                    "anceMeasureSubcategoryID)\r\n    FROM (\r\n        SELECT \r\n            T.Performanc" +
                    "eMeasureActualSubcategoryOptionUpdateID AS PerformanceMeasureActualSubcategoryOp" +
                    "tionUpdate_PerformanceMeasureActualSubcategoryOptionUpdateID, \r\n            T.Te" +
                    "nantID AS PerformanceMeasureActualSubcategoryOptionUpdate_TenantID, \r\n          " +
                    "  T.PerformanceMeasureActualUpdateID AS PerformanceMeasureActualSubcategoryOptio" +
                    "nUpdate_PerformanceMeasureActualUpdateID, \r\n            T.PerformanceMeasureSubc" +
                    "ategoryOptionID AS PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMe" +
                    "asureSubcategoryOptionID, \r\n            T.PerformanceMeasureID AS PerformanceMea" +
                    "sureActualSubcategoryOptionUpdate_PerformanceMeasureID, \r\n            T.Performa" +
                    "nceMeasureSubcategoryID AS PerformanceMeasureActualSubcategoryOptionUpdate_Perfo" +
                    "rmanceMeasureSubcategoryID, \r\n            True AS _from0\r\n        FROM DatabaseE" +
                    "ntities.PerformanceMeasureActualSubcategoryOptionUpdate AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.PerformanceMeasureActualUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView48()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.PerformanceMeasureActualUpdate", @"
    SELECT VALUE -- Constructing PerformanceMeasureActualUpdate
        [ProjectFirma.Web.Models.Store.PerformanceMeasureActualUpdate](T1.PerformanceMeasureActualUpdate_PerformanceMeasureActualUpdateID, T1.PerformanceMeasureActualUpdate_TenantID, T1.PerformanceMeasureActualUpdate_ProjectUpdateBatchID, T1.PerformanceMeasureActualUpdate_PerformanceMeasureID, T1.PerformanceMeasureActualUpdate_CalendarYear, T1.PerformanceMeasureActualUpdate_ActualValue)
    FROM (
        SELECT 
            T.PerformanceMeasureActualUpdateID AS PerformanceMeasureActualUpdate_PerformanceMeasureActualUpdateID, 
            T.TenantID AS PerformanceMeasureActualUpdate_TenantID, 
            T.ProjectUpdateBatchID AS PerformanceMeasureActualUpdate_ProjectUpdateBatchID, 
            T.PerformanceMeasureID AS PerformanceMeasureActualUpdate_PerformanceMeasureID, 
            T.CalendarYear AS PerformanceMeasureActualUpdate_CalendarYear, 
            T.ActualValue AS PerformanceMeasureActualUpdate_ActualValue, 
            True AS _from0
        FROM DatabaseEntities.PerformanceMeasureActualUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.PerformanceMeasureDataSourceType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView49()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.PerformanceMeasureDataSourceType", @"
    SELECT VALUE -- Constructing PerformanceMeasureDataSourceType
        [ProjectFirma.Web.Models.Store.PerformanceMeasureDataSourceType](T1.PerformanceMeasureDataSourceType_PerformanceMeasureDataSourceTypeID, T1.PerformanceMeasureDataSourceType_PerformanceMeasureDataSourceTypeName, T1.PerformanceMeasureDataSourceType_PerformanceMeasureDataSourceTypeDisplayName, T1.PerformanceMeasureDataSourceType_IsCustomCalculation)
    FROM (
        SELECT 
            T.PerformanceMeasureDataSourceTypeID AS PerformanceMeasureDataSourceType_PerformanceMeasureDataSourceTypeID, 
            T.PerformanceMeasureDataSourceTypeName AS PerformanceMeasureDataSourceType_PerformanceMeasureDataSourceTypeName, 
            T.PerformanceMeasureDataSourceTypeDisplayName AS PerformanceMeasureDataSourceType_PerformanceMeasureDataSourceTypeDisplayName, 
            T.IsCustomCalculation AS PerformanceMeasureDataSourceType_IsCustomCalculation, 
            True AS _from0
        FROM DatabaseEntities.PerformanceMeasureDataSourceType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.PerformanceMeasureExpected
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView50()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.PerformanceMeasureExpected", @"
    SELECT VALUE -- Constructing PerformanceMeasureExpected
        [ProjectFirma.Web.Models.Store.PerformanceMeasureExpected](T1.PerformanceMeasureExpected_PerformanceMeasureExpectedID, T1.PerformanceMeasureExpected_TenantID, T1.PerformanceMeasureExpected_ProjectID, T1.PerformanceMeasureExpected_PerformanceMeasureID, T1.PerformanceMeasureExpected_ExpectedValue)
    FROM (
        SELECT 
            T.PerformanceMeasureExpectedID AS PerformanceMeasureExpected_PerformanceMeasureExpectedID, 
            T.TenantID AS PerformanceMeasureExpected_TenantID, 
            T.ProjectID AS PerformanceMeasureExpected_ProjectID, 
            T.PerformanceMeasureID AS PerformanceMeasureExpected_PerformanceMeasureID, 
            T.ExpectedValue AS PerformanceMeasureExpected_ExpectedValue, 
            True AS _from0
        FROM DatabaseEntities.PerformanceMeasureExpected AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.PerformanceMeasureExpectedSubcategoryOption
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView51()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.PerformanceMeasureExpectedSubcategoryOption", "\r\n    SELECT VALUE -- Constructing PerformanceMeasureExpectedSubcategoryOption\r\n " +
                    "       [ProjectFirma.Web.Models.Store.PerformanceMeasureExpectedSubcategoryOptio" +
                    "n](T1.PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureExpectedSubc" +
                    "ategoryOptionID, T1.PerformanceMeasureExpectedSubcategoryOption_TenantID, T1.Per" +
                    "formanceMeasureExpectedSubcategoryOption_PerformanceMeasureExpectedID, T1.Perfor" +
                    "manceMeasureExpectedSubcategoryOption_PerformanceMeasureSubcategoryOptionID, T1." +
                    "PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureID, T1.Performance" +
                    "MeasureExpectedSubcategoryOption_PerformanceMeasureSubcategoryID)\r\n    FROM (\r\n " +
                    "       SELECT \r\n            T.PerformanceMeasureExpectedSubcategoryOptionID AS P" +
                    "erformanceMeasureExpectedSubcategoryOption_PerformanceMeasureExpectedSubcategory" +
                    "OptionID, \r\n            T.TenantID AS PerformanceMeasureExpectedSubcategoryOptio" +
                    "n_TenantID, \r\n            T.PerformanceMeasureExpectedID AS PerformanceMeasureEx" +
                    "pectedSubcategoryOption_PerformanceMeasureExpectedID, \r\n            T.Performanc" +
                    "eMeasureSubcategoryOptionID AS PerformanceMeasureExpectedSubcategoryOption_Perfo" +
                    "rmanceMeasureSubcategoryOptionID, \r\n            T.PerformanceMeasureID AS Perfor" +
                    "manceMeasureExpectedSubcategoryOption_PerformanceMeasureID, \r\n            T.Perf" +
                    "ormanceMeasureSubcategoryID AS PerformanceMeasureExpectedSubcategoryOption_Perfo" +
                    "rmanceMeasureSubcategoryID, \r\n            True AS _from0\r\n        FROM DatabaseE" +
                    "ntities.PerformanceMeasureExpectedSubcategoryOption AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.PerformanceMeasureMonitoringProgram
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView52()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.PerformanceMeasureMonitoringProgram", @"
    SELECT VALUE -- Constructing PerformanceMeasureMonitoringProgram
        [ProjectFirma.Web.Models.Store.PerformanceMeasureMonitoringProgram](T1.PerformanceMeasureMonitoringProgram_PerformanceMeasureMonitoringProgramID, T1.PerformanceMeasureMonitoringProgram_TenantID, T1.PerformanceMeasureMonitoringProgram_PerformanceMeasureID, T1.PerformanceMeasureMonitoringProgram_MonitoringProgramID)
    FROM (
        SELECT 
            T.PerformanceMeasureMonitoringProgramID AS PerformanceMeasureMonitoringProgram_PerformanceMeasureMonitoringProgramID, 
            T.TenantID AS PerformanceMeasureMonitoringProgram_TenantID, 
            T.PerformanceMeasureID AS PerformanceMeasureMonitoringProgram_PerformanceMeasureID, 
            T.MonitoringProgramID AS PerformanceMeasureMonitoringProgram_MonitoringProgramID, 
            True AS _from0
        FROM DatabaseEntities.PerformanceMeasureMonitoringProgram AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.PerformanceMeasureNote
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView53()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.PerformanceMeasureNote", @"
    SELECT VALUE -- Constructing PerformanceMeasureNote
        [ProjectFirma.Web.Models.Store.PerformanceMeasureNote](T1.PerformanceMeasureNote_PerformanceMeasureNoteID, T1.PerformanceMeasureNote_TenantID, T1.PerformanceMeasureNote_PerformanceMeasureID, T1.PerformanceMeasureNote_Note, T1.PerformanceMeasureNote_CreatePersonID, T1.PerformanceMeasureNote_CreateDate, T1.PerformanceMeasureNote_UpdatePersonID, T1.PerformanceMeasureNote_UpdateDate)
    FROM (
        SELECT 
            T.PerformanceMeasureNoteID AS PerformanceMeasureNote_PerformanceMeasureNoteID, 
            T.TenantID AS PerformanceMeasureNote_TenantID, 
            T.PerformanceMeasureID AS PerformanceMeasureNote_PerformanceMeasureID, 
            T.Note AS PerformanceMeasureNote_Note, 
            T.CreatePersonID AS PerformanceMeasureNote_CreatePersonID, 
            T.CreateDate AS PerformanceMeasureNote_CreateDate, 
            T.UpdatePersonID AS PerformanceMeasureNote_UpdatePersonID, 
            T.UpdateDate AS PerformanceMeasureNote_UpdateDate, 
            True AS _from0
        FROM DatabaseEntities.PerformanceMeasureNote AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.PerformanceMeasureSubcategory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView54()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.PerformanceMeasureSubcategory", @"
    SELECT VALUE -- Constructing PerformanceMeasureSubcategory
        [ProjectFirma.Web.Models.Store.PerformanceMeasureSubcategory](T1.PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID, T1.PerformanceMeasureSubcategory_TenantID, T1.PerformanceMeasureSubcategory_PerformanceMeasureID, T1.PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryDisplayName, T1.PerformanceMeasureSubcategory_ChartConfigurationJson, T1.PerformanceMeasureSubcategory_GoogleChartTypeID)
    FROM (
        SELECT 
            T.PerformanceMeasureSubcategoryID AS PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID, 
            T.TenantID AS PerformanceMeasureSubcategory_TenantID, 
            T.PerformanceMeasureID AS PerformanceMeasureSubcategory_PerformanceMeasureID, 
            T.PerformanceMeasureSubcategoryDisplayName AS PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryDisplayName, 
            T.ChartConfigurationJson AS PerformanceMeasureSubcategory_ChartConfigurationJson, 
            T.GoogleChartTypeID AS PerformanceMeasureSubcategory_GoogleChartTypeID, 
            True AS _from0
        FROM DatabaseEntities.PerformanceMeasureSubcategory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.PerformanceMeasureSubcategoryOption
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView55()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.PerformanceMeasureSubcategoryOption", @"
    SELECT VALUE -- Constructing PerformanceMeasureSubcategoryOption
        [ProjectFirma.Web.Models.Store.PerformanceMeasureSubcategoryOption](T1.PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID, T1.PerformanceMeasureSubcategoryOption_TenantID, T1.PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryID, T1.PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionName, T1.PerformanceMeasureSubcategoryOption_SortOrder, T1.PerformanceMeasureSubcategoryOption_ShowOnFactSheet)
    FROM (
        SELECT 
            T.PerformanceMeasureSubcategoryOptionID AS PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID, 
            T.TenantID AS PerformanceMeasureSubcategoryOption_TenantID, 
            T.PerformanceMeasureSubcategoryID AS PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryID, 
            T.PerformanceMeasureSubcategoryOptionName AS PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionName, 
            T.SortOrder AS PerformanceMeasureSubcategoryOption_SortOrder, 
            T.ShowOnFactSheet AS PerformanceMeasureSubcategoryOption_ShowOnFactSheet, 
            True AS _from0
        FROM DatabaseEntities.PerformanceMeasureSubcategoryOption AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.PerformanceMeasureType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView56()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.PerformanceMeasureType", @"
    SELECT VALUE -- Constructing PerformanceMeasureType
        [ProjectFirma.Web.Models.Store.PerformanceMeasureType](T1.PerformanceMeasureType_PerformanceMeasureTypeID, T1.PerformanceMeasureType_PerformanceMeasureTypeName, T1.PerformanceMeasureType_PerformanceMeasureTypeDisplayName)
    FROM (
        SELECT 
            T.PerformanceMeasureTypeID AS PerformanceMeasureType_PerformanceMeasureTypeID, 
            T.PerformanceMeasureTypeName AS PerformanceMeasureType_PerformanceMeasureTypeName, 
            T.PerformanceMeasureTypeDisplayName AS PerformanceMeasureType_PerformanceMeasureTypeDisplayName, 
            True AS _from0
        FROM DatabaseEntities.PerformanceMeasureType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.Person
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView57()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.Person", "\r\n    SELECT VALUE -- Constructing Person\r\n        [ProjectFirma.Web.Models.Store" +
                    ".Person](T1.Person_PersonID, T1.Person_TenantID, T1.Person_PersonUniqueIdentifie" +
                    "r, T1.Person_FirstName, T1.Person_LastName, T1.Person_Email, T1.Person_Phone, T1" +
                    ".Person_PasswordPdfK2SaltHash, T1.Person_RoleID, T1.Person_CreateDate, T1.Person" +
                    "_UpdateDate, T1.Person_LastActivityDate, T1.Person_IsActive, T1.Person_Organizat" +
                    "ionID, T1.Person_ReceiveSupportEmails, T1.Person_WebServiceAccessToken, T1.Perso" +
                    "n_LoginName, T1.Person_MiddleName, T1.Person_StatewideVendorNumber, T1.Person_No" +
                    "tes, T1.Person_PersonAddress, T1.Person_AddedByPersonID)\r\n    FROM (\r\n        SE" +
                    "LECT \r\n            T.PersonID AS Person_PersonID, \r\n            T.TenantID AS Pe" +
                    "rson_TenantID, \r\n            T.PersonUniqueIdentifier AS Person_PersonUniqueIden" +
                    "tifier, \r\n            T.FirstName AS Person_FirstName, \r\n            T.LastName " +
                    "AS Person_LastName, \r\n            T.Email AS Person_Email, \r\n            T.Phone" +
                    " AS Person_Phone, \r\n            T.PasswordPdfK2SaltHash AS Person_PasswordPdfK2S" +
                    "altHash, \r\n            T.RoleID AS Person_RoleID, \r\n            T.CreateDate AS " +
                    "Person_CreateDate, \r\n            T.UpdateDate AS Person_UpdateDate, \r\n          " +
                    "  T.LastActivityDate AS Person_LastActivityDate, \r\n            T.IsActive AS Per" +
                    "son_IsActive, \r\n            T.OrganizationID AS Person_OrganizationID, \r\n       " +
                    "     T.ReceiveSupportEmails AS Person_ReceiveSupportEmails, \r\n            T.WebS" +
                    "erviceAccessToken AS Person_WebServiceAccessToken, \r\n            T.LoginName AS " +
                    "Person_LoginName, \r\n            T.MiddleName AS Person_MiddleName, \r\n           " +
                    " T.StatewideVendorNumber AS Person_StatewideVendorNumber, \r\n            T.Notes " +
                    "AS Person_Notes, \r\n            T.PersonAddress AS Person_PersonAddress, \r\n      " +
                    "      T.AddedByPersonID AS Person_AddedByPersonID, \r\n            True AS _from0\r" +
                    "\n        FROM DatabaseEntities.Person AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.PersonStewardGeospatialArea
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView58()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.PersonStewardGeospatialArea", @"
    SELECT VALUE -- Constructing PersonStewardGeospatialArea
        [ProjectFirma.Web.Models.Store.PersonStewardGeospatialArea](T1.PersonStewardGeospatialArea_PersonStewardGeospatialAreaID, T1.PersonStewardGeospatialArea_TenantID, T1.PersonStewardGeospatialArea_PersonID, T1.PersonStewardGeospatialArea_GeospatialAreaID)
    FROM (
        SELECT 
            T.PersonStewardGeospatialAreaID AS PersonStewardGeospatialArea_PersonStewardGeospatialAreaID, 
            T.TenantID AS PersonStewardGeospatialArea_TenantID, 
            T.PersonID AS PersonStewardGeospatialArea_PersonID, 
            T.GeospatialAreaID AS PersonStewardGeospatialArea_GeospatialAreaID, 
            True AS _from0
        FROM DatabaseEntities.PersonStewardGeospatialArea AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.PersonStewardOrganization
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView59()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.PersonStewardOrganization", @"
    SELECT VALUE -- Constructing PersonStewardOrganization
        [ProjectFirma.Web.Models.Store.PersonStewardOrganization](T1.PersonStewardOrganization_PersonStewardOrganizationID, T1.PersonStewardOrganization_TenantID, T1.PersonStewardOrganization_PersonID, T1.PersonStewardOrganization_OrganizationID)
    FROM (
        SELECT 
            T.PersonStewardOrganizationID AS PersonStewardOrganization_PersonStewardOrganizationID, 
            T.TenantID AS PersonStewardOrganization_TenantID, 
            T.PersonID AS PersonStewardOrganization_PersonID, 
            T.OrganizationID AS PersonStewardOrganization_OrganizationID, 
            True AS _from0
        FROM DatabaseEntities.PersonStewardOrganization AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.PersonStewardTaxonomyBranch
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView60()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.PersonStewardTaxonomyBranch", @"
    SELECT VALUE -- Constructing PersonStewardTaxonomyBranch
        [ProjectFirma.Web.Models.Store.PersonStewardTaxonomyBranch](T1.PersonStewardTaxonomyBranch_PersonStewardTaxonomyBranchID, T1.PersonStewardTaxonomyBranch_TenantID, T1.PersonStewardTaxonomyBranch_PersonID, T1.PersonStewardTaxonomyBranch_TaxonomyBranchID)
    FROM (
        SELECT 
            T.PersonStewardTaxonomyBranchID AS PersonStewardTaxonomyBranch_PersonStewardTaxonomyBranchID, 
            T.TenantID AS PersonStewardTaxonomyBranch_TenantID, 
            T.PersonID AS PersonStewardTaxonomyBranch_PersonID, 
            T.TaxonomyBranchID AS PersonStewardTaxonomyBranch_TaxonomyBranchID, 
            True AS _from0
        FROM DatabaseEntities.PersonStewardTaxonomyBranch AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.Project
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView61()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2639);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Project\r\n        [ProjectFirma.Web.Models.Sto");
            viewString.Append("re.Project](T1.Project_ProjectID, T1.Project_TenantID, T1.Project_TaxonomyLeafID");
            viewString.Append(", T1.Project_ProjectStageID, T1.Project_ProjectName, T1.Project_ProjectDescripti");
            viewString.Append("on, T1.Project_ApprovalStartDate, T1.Project_CompletionDate, T1.Project_Estimate");
            viewString.Append("dTotalCost, T1.Project_ProjectLocationPoint, T1.Project_PerformanceMeasureActual");
            viewString.Append("YearsExemptionExplanation, T1.Project_IsFeatured, T1.Project_ProjectLocationNote");
            viewString.Append("s, T1.Project_PlannedDate, T1.Project_ProjectLocationSimpleTypeID, T1.Project_Pr");
            viewString.Append("imaryContactPersonID, T1.Project_ProjectApprovalStatusID, T1.Project_ProposingPe");
            viewString.Append("rsonID, T1.Project_ProposingDate, T1.Project_PerformanceMeasureNotes, T1.Project");
            viewString.Append("_SubmissionDate, T1.Project_ApprovalDate, T1.Project_ReviewedByPersonID, T1.Proj");
            viewString.Append("ect_DefaultBoundingBox, T1.Project_NoExpendituresToReportExplanation)\r\n    FROM ");
            viewString.Append("(\r\n        SELECT \r\n            T.ProjectID AS Project_ProjectID, \r\n            ");
            viewString.Append("T.TenantID AS Project_TenantID, \r\n            T.TaxonomyLeafID AS Project_Taxono");
            viewString.Append("myLeafID, \r\n            T.ProjectStageID AS Project_ProjectStageID, \r\n          ");
            viewString.Append("  T.ProjectName AS Project_ProjectName, \r\n            T.ProjectDescription AS Pr");
            viewString.Append("oject_ProjectDescription, \r\n            T.ApprovalStartDate AS Project_ApprovalS");
            viewString.Append("tartDate, \r\n            T.CompletionDate AS Project_CompletionDate, \r\n          ");
            viewString.Append("  T.EstimatedTotalCost AS Project_EstimatedTotalCost, \r\n            T.ProjectLoc");
            viewString.Append("ationPoint AS Project_ProjectLocationPoint, \r\n            T.PerformanceMeasureAc");
            viewString.Append("tualYearsExemptionExplanation AS Project_PerformanceMeasureActualYearsExemptionE");
            viewString.Append("xplanation, \r\n            T.IsFeatured AS Project_IsFeatured, \r\n            T.Pr");
            viewString.Append("ojectLocationNotes AS Project_ProjectLocationNotes, \r\n            T.PlannedDate ");
            viewString.Append("AS Project_PlannedDate, \r\n            T.ProjectLocationSimpleTypeID AS Project_P");
            viewString.Append("rojectLocationSimpleTypeID, \r\n            T.PrimaryContactPersonID AS Project_Pr");
            viewString.Append("imaryContactPersonID, \r\n            T.ProjectApprovalStatusID AS Project_Project");
            viewString.Append("ApprovalStatusID, \r\n            T.ProposingPersonID AS Project_ProposingPersonID");
            viewString.Append(", \r\n            T.ProposingDate AS Project_ProposingDate, \r\n            T.Perfor");
            viewString.Append("manceMeasureNotes AS Project_PerformanceMeasureNotes, \r\n            T.Submission");
            viewString.Append("Date AS Project_SubmissionDate, \r\n            T.ApprovalDate AS Project_Approval");
            viewString.Append("Date, \r\n            T.ReviewedByPersonID AS Project_ReviewedByPersonID, \r\n      ");
            viewString.Append("      T.DefaultBoundingBox AS Project_DefaultBoundingBox, \r\n            T.NoExpe");
            viewString.Append("ndituresToReportExplanation AS Project_NoExpendituresToReportExplanation, \r\n    ");
            viewString.Append("        True AS _from0\r\n        FROM DatabaseEntities.Project AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.Project", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectApprovalStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView62()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectApprovalStatus", @"
    SELECT VALUE -- Constructing ProjectApprovalStatus
        [ProjectFirma.Web.Models.Store.ProjectApprovalStatus](T1.ProjectApprovalStatus_ProjectApprovalStatusID, T1.ProjectApprovalStatus_ProjectApprovalStatusName, T1.ProjectApprovalStatus_ProjectApprovalStatusDisplayName)
    FROM (
        SELECT 
            T.ProjectApprovalStatusID AS ProjectApprovalStatus_ProjectApprovalStatusID, 
            T.ProjectApprovalStatusName AS ProjectApprovalStatus_ProjectApprovalStatusName, 
            T.ProjectApprovalStatusDisplayName AS ProjectApprovalStatus_ProjectApprovalStatusDisplayName, 
            True AS _from0
        FROM DatabaseEntities.ProjectApprovalStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectAssessmentQuestion
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView63()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectAssessmentQuestion", @"
    SELECT VALUE -- Constructing ProjectAssessmentQuestion
        [ProjectFirma.Web.Models.Store.ProjectAssessmentQuestion](T1.ProjectAssessmentQuestion_ProjectAssessmentQuestionID, T1.ProjectAssessmentQuestion_TenantID, T1.ProjectAssessmentQuestion_ProjectID, T1.ProjectAssessmentQuestion_AssessmentQuestionID, T1.ProjectAssessmentQuestion_Answer)
    FROM (
        SELECT 
            T.ProjectAssessmentQuestionID AS ProjectAssessmentQuestion_ProjectAssessmentQuestionID, 
            T.TenantID AS ProjectAssessmentQuestion_TenantID, 
            T.ProjectID AS ProjectAssessmentQuestion_ProjectID, 
            T.AssessmentQuestionID AS ProjectAssessmentQuestion_AssessmentQuestionID, 
            T.Answer AS ProjectAssessmentQuestion_Answer, 
            True AS _from0
        FROM DatabaseEntities.ProjectAssessmentQuestion AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectBudget
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView64()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectBudget", @"
    SELECT VALUE -- Constructing ProjectBudget
        [ProjectFirma.Web.Models.Store.ProjectBudget](T1.ProjectBudget_ProjectBudgetID, T1.ProjectBudget_TenantID, T1.ProjectBudget_ProjectID, T1.ProjectBudget_FundingSourceID, T1.ProjectBudget_ProjectCostTypeID, T1.ProjectBudget_CalendarYear, T1.ProjectBudget_BudgetedAmount)
    FROM (
        SELECT 
            T.ProjectBudgetID AS ProjectBudget_ProjectBudgetID, 
            T.TenantID AS ProjectBudget_TenantID, 
            T.ProjectID AS ProjectBudget_ProjectID, 
            T.FundingSourceID AS ProjectBudget_FundingSourceID, 
            T.ProjectCostTypeID AS ProjectBudget_ProjectCostTypeID, 
            T.CalendarYear AS ProjectBudget_CalendarYear, 
            T.BudgetedAmount AS ProjectBudget_BudgetedAmount, 
            True AS _from0
        FROM DatabaseEntities.ProjectBudget AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectBudgetUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView65()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectBudgetUpdate", @"
    SELECT VALUE -- Constructing ProjectBudgetUpdate
        [ProjectFirma.Web.Models.Store.ProjectBudgetUpdate](T1.ProjectBudgetUpdate_ProjectBudgetUpdateID, T1.ProjectBudgetUpdate_TenantID, T1.ProjectBudgetUpdate_ProjectUpdateBatchID, T1.ProjectBudgetUpdate_FundingSourceID, T1.ProjectBudgetUpdate_ProjectCostTypeID, T1.ProjectBudgetUpdate_CalendarYear, T1.ProjectBudgetUpdate_BudgetedAmount)
    FROM (
        SELECT 
            T.ProjectBudgetUpdateID AS ProjectBudgetUpdate_ProjectBudgetUpdateID, 
            T.TenantID AS ProjectBudgetUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectBudgetUpdate_ProjectUpdateBatchID, 
            T.FundingSourceID AS ProjectBudgetUpdate_FundingSourceID, 
            T.ProjectCostTypeID AS ProjectBudgetUpdate_ProjectCostTypeID, 
            T.CalendarYear AS ProjectBudgetUpdate_CalendarYear, 
            T.BudgetedAmount AS ProjectBudgetUpdate_BudgetedAmount, 
            True AS _from0
        FROM DatabaseEntities.ProjectBudgetUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectClassification
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView66()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectClassification", @"
    SELECT VALUE -- Constructing ProjectClassification
        [ProjectFirma.Web.Models.Store.ProjectClassification](T1.ProjectClassification_ProjectClassificationID, T1.ProjectClassification_TenantID, T1.ProjectClassification_ProjectID, T1.ProjectClassification_ClassificationID, T1.ProjectClassification_ProjectClassificationNotes)
    FROM (
        SELECT 
            T.ProjectClassificationID AS ProjectClassification_ProjectClassificationID, 
            T.TenantID AS ProjectClassification_TenantID, 
            T.ProjectID AS ProjectClassification_ProjectID, 
            T.ClassificationID AS ProjectClassification_ClassificationID, 
            T.ProjectClassificationNotes AS ProjectClassification_ProjectClassificationNotes, 
            True AS _from0
        FROM DatabaseEntities.ProjectClassification AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectCostType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView67()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectCostType", @"
    SELECT VALUE -- Constructing ProjectCostType
        [ProjectFirma.Web.Models.Store.ProjectCostType](T1.ProjectCostType_ProjectCostTypeID, T1.ProjectCostType_ProjectCostTypeName, T1.ProjectCostType_ProjectCostTypeDisplayName, T1.ProjectCostType_SortOrder)
    FROM (
        SELECT 
            T.ProjectCostTypeID AS ProjectCostType_ProjectCostTypeID, 
            T.ProjectCostTypeName AS ProjectCostType_ProjectCostTypeName, 
            T.ProjectCostTypeDisplayName AS ProjectCostType_ProjectCostTypeDisplayName, 
            T.SortOrder AS ProjectCostType_SortOrder, 
            True AS _from0
        FROM DatabaseEntities.ProjectCostType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectCustomAttribute
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView68()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectCustomAttribute", @"
    SELECT VALUE -- Constructing ProjectCustomAttribute
        [ProjectFirma.Web.Models.Store.ProjectCustomAttribute](T1.ProjectCustomAttribute_ProjectCustomAttributeID, T1.ProjectCustomAttribute_TenantID, T1.ProjectCustomAttribute_ProjectID, T1.ProjectCustomAttribute_ProjectCustomAttributeTypeID)
    FROM (
        SELECT 
            T.ProjectCustomAttributeID AS ProjectCustomAttribute_ProjectCustomAttributeID, 
            T.TenantID AS ProjectCustomAttribute_TenantID, 
            T.ProjectID AS ProjectCustomAttribute_ProjectID, 
            T.ProjectCustomAttributeTypeID AS ProjectCustomAttribute_ProjectCustomAttributeTypeID, 
            True AS _from0
        FROM DatabaseEntities.ProjectCustomAttribute AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectCustomAttributeDataType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView69()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectCustomAttributeDataType", @"
    SELECT VALUE -- Constructing ProjectCustomAttributeDataType
        [ProjectFirma.Web.Models.Store.ProjectCustomAttributeDataType](T1.ProjectCustomAttributeDataType_ProjectCustomAttributeDataTypeID, T1.ProjectCustomAttributeDataType_ProjectCustomAttributeDataTypeName, T1.ProjectCustomAttributeDataType_ProjectCustomAttributeDataTypeDisplayName)
    FROM (
        SELECT 
            T.ProjectCustomAttributeDataTypeID AS ProjectCustomAttributeDataType_ProjectCustomAttributeDataTypeID, 
            T.ProjectCustomAttributeDataTypeName AS ProjectCustomAttributeDataType_ProjectCustomAttributeDataTypeName, 
            T.ProjectCustomAttributeDataTypeDisplayName AS ProjectCustomAttributeDataType_ProjectCustomAttributeDataTypeDisplayName, 
            True AS _from0
        FROM DatabaseEntities.ProjectCustomAttributeDataType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectCustomAttributeType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView70()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectCustomAttributeType", "\r\n    SELECT VALUE -- Constructing ProjectCustomAttributeType\r\n        [ProjectFi" +
                    "rma.Web.Models.Store.ProjectCustomAttributeType](T1.ProjectCustomAttributeType_P" +
                    "rojectCustomAttributeTypeID, T1.ProjectCustomAttributeType_TenantID, T1.ProjectC" +
                    "ustomAttributeType_ProjectCustomAttributeTypeName, T1.ProjectCustomAttributeType" +
                    "_ProjectCustomAttributeDataTypeID, T1.ProjectCustomAttributeType_MeasurementUnit" +
                    "TypeID, T1.ProjectCustomAttributeType_IsRequired, T1.ProjectCustomAttributeType_" +
                    "ProjectCustomAttributeTypeDescription, T1.ProjectCustomAttributeType_ProjectCust" +
                    "omAttributeTypeOptionsSchema)\r\n    FROM (\r\n        SELECT \r\n            T.Projec" +
                    "tCustomAttributeTypeID AS ProjectCustomAttributeType_ProjectCustomAttributeTypeI" +
                    "D, \r\n            T.TenantID AS ProjectCustomAttributeType_TenantID, \r\n          " +
                    "  T.ProjectCustomAttributeTypeName AS ProjectCustomAttributeType_ProjectCustomAt" +
                    "tributeTypeName, \r\n            T.ProjectCustomAttributeDataTypeID AS ProjectCust" +
                    "omAttributeType_ProjectCustomAttributeDataTypeID, \r\n            T.MeasurementUni" +
                    "tTypeID AS ProjectCustomAttributeType_MeasurementUnitTypeID, \r\n            T.IsR" +
                    "equired AS ProjectCustomAttributeType_IsRequired, \r\n            T.ProjectCustomA" +
                    "ttributeTypeDescription AS ProjectCustomAttributeType_ProjectCustomAttributeType" +
                    "Description, \r\n            T.ProjectCustomAttributeTypeOptionsSchema AS ProjectC" +
                    "ustomAttributeType_ProjectCustomAttributeTypeOptionsSchema, \r\n            True A" +
                    "S _from0\r\n        FROM DatabaseEntities.ProjectCustomAttributeType AS T\r\n    ) A" +
                    "S T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectCustomAttributeUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView71()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectCustomAttributeUpdate", @"
    SELECT VALUE -- Constructing ProjectCustomAttributeUpdate
        [ProjectFirma.Web.Models.Store.ProjectCustomAttributeUpdate](T1.ProjectCustomAttributeUpdate_ProjectCustomAttributeUpdateID, T1.ProjectCustomAttributeUpdate_TenantID, T1.ProjectCustomAttributeUpdate_ProjectUpdateBatchID, T1.ProjectCustomAttributeUpdate_ProjectCustomAttributeTypeID)
    FROM (
        SELECT 
            T.ProjectCustomAttributeUpdateID AS ProjectCustomAttributeUpdate_ProjectCustomAttributeUpdateID, 
            T.TenantID AS ProjectCustomAttributeUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectCustomAttributeUpdate_ProjectUpdateBatchID, 
            T.ProjectCustomAttributeTypeID AS ProjectCustomAttributeUpdate_ProjectCustomAttributeTypeID, 
            True AS _from0
        FROM DatabaseEntities.ProjectCustomAttributeUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectCustomAttributeUpdateValue
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView72()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectCustomAttributeUpdateValue", @"
    SELECT VALUE -- Constructing ProjectCustomAttributeUpdateValue
        [ProjectFirma.Web.Models.Store.ProjectCustomAttributeUpdateValue](T1.ProjectCustomAttributeUpdateValue_ProjectCustomAttributeUpdateValueID, T1.ProjectCustomAttributeUpdateValue_TenantID, T1.ProjectCustomAttributeUpdateValue_ProjectCustomAttributeUpdateID, T1.ProjectCustomAttributeUpdateValue_AttributeValue)
    FROM (
        SELECT 
            T.ProjectCustomAttributeUpdateValueID AS ProjectCustomAttributeUpdateValue_ProjectCustomAttributeUpdateValueID, 
            T.TenantID AS ProjectCustomAttributeUpdateValue_TenantID, 
            T.ProjectCustomAttributeUpdateID AS ProjectCustomAttributeUpdateValue_ProjectCustomAttributeUpdateID, 
            T.AttributeValue AS ProjectCustomAttributeUpdateValue_AttributeValue, 
            True AS _from0
        FROM DatabaseEntities.ProjectCustomAttributeUpdateValue AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectCustomAttributeValue
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView73()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectCustomAttributeValue", @"
    SELECT VALUE -- Constructing ProjectCustomAttributeValue
        [ProjectFirma.Web.Models.Store.ProjectCustomAttributeValue](T1.ProjectCustomAttributeValue_ProjectCustomAttributeValueID, T1.ProjectCustomAttributeValue_TenantID, T1.ProjectCustomAttributeValue_ProjectCustomAttributeID, T1.ProjectCustomAttributeValue_AttributeValue)
    FROM (
        SELECT 
            T.ProjectCustomAttributeValueID AS ProjectCustomAttributeValue_ProjectCustomAttributeValueID, 
            T.TenantID AS ProjectCustomAttributeValue_TenantID, 
            T.ProjectCustomAttributeID AS ProjectCustomAttributeValue_ProjectCustomAttributeID, 
            T.AttributeValue AS ProjectCustomAttributeValue_AttributeValue, 
            True AS _from0
        FROM DatabaseEntities.ProjectCustomAttributeValue AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectDocument
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView74()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectDocument", @"
    SELECT VALUE -- Constructing ProjectDocument
        [ProjectFirma.Web.Models.Store.ProjectDocument](T1.ProjectDocument_ProjectDocumentID, T1.ProjectDocument_TenantID, T1.ProjectDocument_ProjectID, T1.ProjectDocument_FileResourceID, T1.ProjectDocument_DisplayName, T1.ProjectDocument_Description)
    FROM (
        SELECT 
            T.ProjectDocumentID AS ProjectDocument_ProjectDocumentID, 
            T.TenantID AS ProjectDocument_TenantID, 
            T.ProjectID AS ProjectDocument_ProjectID, 
            T.FileResourceID AS ProjectDocument_FileResourceID, 
            T.DisplayName AS ProjectDocument_DisplayName, 
            T.Description AS ProjectDocument_Description, 
            True AS _from0
        FROM DatabaseEntities.ProjectDocument AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectDocumentUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView75()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectDocumentUpdate", @"
    SELECT VALUE -- Constructing ProjectDocumentUpdate
        [ProjectFirma.Web.Models.Store.ProjectDocumentUpdate](T1.ProjectDocumentUpdate_ProjectDocumentUpdateID, T1.ProjectDocumentUpdate_TenantID, T1.ProjectDocumentUpdate_ProjectUpdateBatchID, T1.ProjectDocumentUpdate_FileResourceID, T1.ProjectDocumentUpdate_DisplayName, T1.ProjectDocumentUpdate_Description)
    FROM (
        SELECT 
            T.ProjectDocumentUpdateID AS ProjectDocumentUpdate_ProjectDocumentUpdateID, 
            T.TenantID AS ProjectDocumentUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectDocumentUpdate_ProjectUpdateBatchID, 
            T.FileResourceID AS ProjectDocumentUpdate_FileResourceID, 
            T.DisplayName AS ProjectDocumentUpdate_DisplayName, 
            T.Description AS ProjectDocumentUpdate_Description, 
            True AS _from0
        FROM DatabaseEntities.ProjectDocumentUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectExemptReportingType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView76()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectExemptReportingType", @"
    SELECT VALUE -- Constructing ProjectExemptReportingType
        [ProjectFirma.Web.Models.Store.ProjectExemptReportingType](T1.ProjectExemptReportingType_ProjectExemptReportingTypeID, T1.ProjectExemptReportingType_ProjectExemptReportingTypeName, T1.ProjectExemptReportingType_ProjectExemptReportingTypeDisplayName)
    FROM (
        SELECT 
            T.ProjectExemptReportingTypeID AS ProjectExemptReportingType_ProjectExemptReportingTypeID, 
            T.ProjectExemptReportingTypeName AS ProjectExemptReportingType_ProjectExemptReportingTypeName, 
            T.ProjectExemptReportingTypeDisplayName AS ProjectExemptReportingType_ProjectExemptReportingTypeDisplayName, 
            True AS _from0
        FROM DatabaseEntities.ProjectExemptReportingType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectExemptReportingYear
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView77()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectExemptReportingYear", @"
    SELECT VALUE -- Constructing ProjectExemptReportingYear
        [ProjectFirma.Web.Models.Store.ProjectExemptReportingYear](T1.ProjectExemptReportingYear_ProjectExemptReportingYearID, T1.ProjectExemptReportingYear_TenantID, T1.ProjectExemptReportingYear_ProjectID, T1.ProjectExemptReportingYear_CalendarYear, T1.ProjectExemptReportingYear_ProjectExemptReportingTypeID)
    FROM (
        SELECT 
            T.ProjectExemptReportingYearID AS ProjectExemptReportingYear_ProjectExemptReportingYearID, 
            T.TenantID AS ProjectExemptReportingYear_TenantID, 
            T.ProjectID AS ProjectExemptReportingYear_ProjectID, 
            T.CalendarYear AS ProjectExemptReportingYear_CalendarYear, 
            T.ProjectExemptReportingTypeID AS ProjectExemptReportingYear_ProjectExemptReportingTypeID, 
            True AS _from0
        FROM DatabaseEntities.ProjectExemptReportingYear AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectExemptReportingYearUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView78()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectExemptReportingYearUpdate", @"
    SELECT VALUE -- Constructing ProjectExemptReportingYearUpdate
        [ProjectFirma.Web.Models.Store.ProjectExemptReportingYearUpdate](T1.ProjectExemptReportingYearUpdate_ProjectExemptReportingYearUpdateID, T1.ProjectExemptReportingYearUpdate_TenantID, T1.ProjectExemptReportingYearUpdate_ProjectUpdateBatchID, T1.ProjectExemptReportingYearUpdate_CalendarYear, T1.ProjectExemptReportingYearUpdate_ProjectExemptReportingTypeID)
    FROM (
        SELECT 
            T.ProjectExemptReportingYearUpdateID AS ProjectExemptReportingYearUpdate_ProjectExemptReportingYearUpdateID, 
            T.TenantID AS ProjectExemptReportingYearUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectExemptReportingYearUpdate_ProjectUpdateBatchID, 
            T.CalendarYear AS ProjectExemptReportingYearUpdate_CalendarYear, 
            T.ProjectExemptReportingTypeID AS ProjectExemptReportingYearUpdate_ProjectExemptReportingTypeID, 
            True AS _from0
        FROM DatabaseEntities.ProjectExemptReportingYearUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectExternalLink
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView79()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectExternalLink", @"
    SELECT VALUE -- Constructing ProjectExternalLink
        [ProjectFirma.Web.Models.Store.ProjectExternalLink](T1.ProjectExternalLink_ProjectExternalLinkID, T1.ProjectExternalLink_TenantID, T1.ProjectExternalLink_ProjectID, T1.ProjectExternalLink_ExternalLinkLabel, T1.ProjectExternalLink_ExternalLinkUrl)
    FROM (
        SELECT 
            T.ProjectExternalLinkID AS ProjectExternalLink_ProjectExternalLinkID, 
            T.TenantID AS ProjectExternalLink_TenantID, 
            T.ProjectID AS ProjectExternalLink_ProjectID, 
            T.ExternalLinkLabel AS ProjectExternalLink_ExternalLinkLabel, 
            T.ExternalLinkUrl AS ProjectExternalLink_ExternalLinkUrl, 
            True AS _from0
        FROM DatabaseEntities.ProjectExternalLink AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectExternalLinkUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView80()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectExternalLinkUpdate", @"
    SELECT VALUE -- Constructing ProjectExternalLinkUpdate
        [ProjectFirma.Web.Models.Store.ProjectExternalLinkUpdate](T1.ProjectExternalLinkUpdate_ProjectExternalLinkUpdateID, T1.ProjectExternalLinkUpdate_TenantID, T1.ProjectExternalLinkUpdate_ProjectUpdateBatchID, T1.ProjectExternalLinkUpdate_ExternalLinkLabel, T1.ProjectExternalLinkUpdate_ExternalLinkUrl)
    FROM (
        SELECT 
            T.ProjectExternalLinkUpdateID AS ProjectExternalLinkUpdate_ProjectExternalLinkUpdateID, 
            T.TenantID AS ProjectExternalLinkUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectExternalLinkUpdate_ProjectUpdateBatchID, 
            T.ExternalLinkLabel AS ProjectExternalLinkUpdate_ExternalLinkLabel, 
            T.ExternalLinkUrl AS ProjectExternalLinkUpdate_ExternalLinkUrl, 
            True AS _from0
        FROM DatabaseEntities.ProjectExternalLinkUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectFundingSourceExpenditure
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView81()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectFundingSourceExpenditure", @"
    SELECT VALUE -- Constructing ProjectFundingSourceExpenditure
        [ProjectFirma.Web.Models.Store.ProjectFundingSourceExpenditure](T1.ProjectFundingSourceExpenditure_ProjectFundingSourceExpenditureID, T1.ProjectFundingSourceExpenditure_TenantID, T1.ProjectFundingSourceExpenditure_ProjectID, T1.ProjectFundingSourceExpenditure_FundingSourceID, T1.ProjectFundingSourceExpenditure_CalendarYear, T1.ProjectFundingSourceExpenditure_ExpenditureAmount)
    FROM (
        SELECT 
            T.ProjectFundingSourceExpenditureID AS ProjectFundingSourceExpenditure_ProjectFundingSourceExpenditureID, 
            T.TenantID AS ProjectFundingSourceExpenditure_TenantID, 
            T.ProjectID AS ProjectFundingSourceExpenditure_ProjectID, 
            T.FundingSourceID AS ProjectFundingSourceExpenditure_FundingSourceID, 
            T.CalendarYear AS ProjectFundingSourceExpenditure_CalendarYear, 
            T.ExpenditureAmount AS ProjectFundingSourceExpenditure_ExpenditureAmount, 
            True AS _from0
        FROM DatabaseEntities.ProjectFundingSourceExpenditure AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectFundingSourceExpenditureUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView82()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectFundingSourceExpenditureUpdate", @"
    SELECT VALUE -- Constructing ProjectFundingSourceExpenditureUpdate
        [ProjectFirma.Web.Models.Store.ProjectFundingSourceExpenditureUpdate](T1.ProjectFundingSourceExpenditureUpdate_ProjectFundingSourceExpenditureUpdateID, T1.ProjectFundingSourceExpenditureUpdate_TenantID, T1.ProjectFundingSourceExpenditureUpdate_ProjectUpdateBatchID, T1.ProjectFundingSourceExpenditureUpdate_FundingSourceID, T1.ProjectFundingSourceExpenditureUpdate_CalendarYear, T1.ProjectFundingSourceExpenditureUpdate_ExpenditureAmount)
    FROM (
        SELECT 
            T.ProjectFundingSourceExpenditureUpdateID AS ProjectFundingSourceExpenditureUpdate_ProjectFundingSourceExpenditureUpdateID, 
            T.TenantID AS ProjectFundingSourceExpenditureUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectFundingSourceExpenditureUpdate_ProjectUpdateBatchID, 
            T.FundingSourceID AS ProjectFundingSourceExpenditureUpdate_FundingSourceID, 
            T.CalendarYear AS ProjectFundingSourceExpenditureUpdate_CalendarYear, 
            T.ExpenditureAmount AS ProjectFundingSourceExpenditureUpdate_ExpenditureAmount, 
            True AS _from0
        FROM DatabaseEntities.ProjectFundingSourceExpenditureUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectFundingSourceRequest
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView83()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectFundingSourceRequest", @"
    SELECT VALUE -- Constructing ProjectFundingSourceRequest
        [ProjectFirma.Web.Models.Store.ProjectFundingSourceRequest](T1.ProjectFundingSourceRequest_ProjectFundingSourceRequestID, T1.ProjectFundingSourceRequest_TenantID, T1.ProjectFundingSourceRequest_ProjectID, T1.ProjectFundingSourceRequest_FundingSourceID, T1.ProjectFundingSourceRequest_SecuredAmount, T1.ProjectFundingSourceRequest_UnsecuredAmount)
    FROM (
        SELECT 
            T.ProjectFundingSourceRequestID AS ProjectFundingSourceRequest_ProjectFundingSourceRequestID, 
            T.TenantID AS ProjectFundingSourceRequest_TenantID, 
            T.ProjectID AS ProjectFundingSourceRequest_ProjectID, 
            T.FundingSourceID AS ProjectFundingSourceRequest_FundingSourceID, 
            T.SecuredAmount AS ProjectFundingSourceRequest_SecuredAmount, 
            T.UnsecuredAmount AS ProjectFundingSourceRequest_UnsecuredAmount, 
            True AS _from0
        FROM DatabaseEntities.ProjectFundingSourceRequest AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectFundingSourceRequestUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView84()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectFundingSourceRequestUpdate", @"
    SELECT VALUE -- Constructing ProjectFundingSourceRequestUpdate
        [ProjectFirma.Web.Models.Store.ProjectFundingSourceRequestUpdate](T1.ProjectFundingSourceRequestUpdate_ProjectFundingSourceRequestUpdateID, T1.ProjectFundingSourceRequestUpdate_TenantID, T1.ProjectFundingSourceRequestUpdate_ProjectUpdateBatchID, T1.ProjectFundingSourceRequestUpdate_FundingSourceID, T1.ProjectFundingSourceRequestUpdate_SecuredAmount, T1.ProjectFundingSourceRequestUpdate_UnsecuredAmount)
    FROM (
        SELECT 
            T.ProjectFundingSourceRequestUpdateID AS ProjectFundingSourceRequestUpdate_ProjectFundingSourceRequestUpdateID, 
            T.TenantID AS ProjectFundingSourceRequestUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectFundingSourceRequestUpdate_ProjectUpdateBatchID, 
            T.FundingSourceID AS ProjectFundingSourceRequestUpdate_FundingSourceID, 
            T.SecuredAmount AS ProjectFundingSourceRequestUpdate_SecuredAmount, 
            T.UnsecuredAmount AS ProjectFundingSourceRequestUpdate_UnsecuredAmount, 
            True AS _from0
        FROM DatabaseEntities.ProjectFundingSourceRequestUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectGeospatialArea
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView85()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectGeospatialArea", @"
    SELECT VALUE -- Constructing ProjectGeospatialArea
        [ProjectFirma.Web.Models.Store.ProjectGeospatialArea](T1.ProjectGeospatialArea_ProjectGeospatialAreaID, T1.ProjectGeospatialArea_TenantID, T1.ProjectGeospatialArea_ProjectID, T1.ProjectGeospatialArea_GeospatialAreaID)
    FROM (
        SELECT 
            T.ProjectGeospatialAreaID AS ProjectGeospatialArea_ProjectGeospatialAreaID, 
            T.TenantID AS ProjectGeospatialArea_TenantID, 
            T.ProjectID AS ProjectGeospatialArea_ProjectID, 
            T.GeospatialAreaID AS ProjectGeospatialArea_GeospatialAreaID, 
            True AS _from0
        FROM DatabaseEntities.ProjectGeospatialArea AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectGeospatialAreaTypeNote
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView86()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectGeospatialAreaTypeNote", @"
    SELECT VALUE -- Constructing ProjectGeospatialAreaTypeNote
        [ProjectFirma.Web.Models.Store.ProjectGeospatialAreaTypeNote](T1.ProjectGeospatialAreaTypeNote_ProjectGeospatialAreaTypeNoteID, T1.ProjectGeospatialAreaTypeNote_TenantID, T1.ProjectGeospatialAreaTypeNote_ProjectID, T1.ProjectGeospatialAreaTypeNote_GeospatialAreaTypeID, T1.ProjectGeospatialAreaTypeNote_Notes)
    FROM (
        SELECT 
            T.ProjectGeospatialAreaTypeNoteID AS ProjectGeospatialAreaTypeNote_ProjectGeospatialAreaTypeNoteID, 
            T.TenantID AS ProjectGeospatialAreaTypeNote_TenantID, 
            T.ProjectID AS ProjectGeospatialAreaTypeNote_ProjectID, 
            T.GeospatialAreaTypeID AS ProjectGeospatialAreaTypeNote_GeospatialAreaTypeID, 
            T.Notes AS ProjectGeospatialAreaTypeNote_Notes, 
            True AS _from0
        FROM DatabaseEntities.ProjectGeospatialAreaTypeNote AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectGeospatialAreaTypeNoteUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView87()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectGeospatialAreaTypeNoteUpdate", @"
    SELECT VALUE -- Constructing ProjectGeospatialAreaTypeNoteUpdate
        [ProjectFirma.Web.Models.Store.ProjectGeospatialAreaTypeNoteUpdate](T1.ProjectGeospatialAreaTypeNoteUpdate_ProjectGeospatialAreaTypeNoteUpdateID, T1.ProjectGeospatialAreaTypeNoteUpdate_TenantID, T1.ProjectGeospatialAreaTypeNoteUpdate_ProjectUpdateBatchID, T1.ProjectGeospatialAreaTypeNoteUpdate_GeospatialAreaTypeID, T1.ProjectGeospatialAreaTypeNoteUpdate_Notes)
    FROM (
        SELECT 
            T.ProjectGeospatialAreaTypeNoteUpdateID AS ProjectGeospatialAreaTypeNoteUpdate_ProjectGeospatialAreaTypeNoteUpdateID, 
            T.TenantID AS ProjectGeospatialAreaTypeNoteUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectGeospatialAreaTypeNoteUpdate_ProjectUpdateBatchID, 
            T.GeospatialAreaTypeID AS ProjectGeospatialAreaTypeNoteUpdate_GeospatialAreaTypeID, 
            T.Notes AS ProjectGeospatialAreaTypeNoteUpdate_Notes, 
            True AS _from0
        FROM DatabaseEntities.ProjectGeospatialAreaTypeNoteUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectGeospatialAreaUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView88()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectGeospatialAreaUpdate", @"
    SELECT VALUE -- Constructing ProjectGeospatialAreaUpdate
        [ProjectFirma.Web.Models.Store.ProjectGeospatialAreaUpdate](T1.ProjectGeospatialAreaUpdate_ProjectGeospatialAreaUpdateID, T1.ProjectGeospatialAreaUpdate_TenantID, T1.ProjectGeospatialAreaUpdate_ProjectUpdateBatchID, T1.ProjectGeospatialAreaUpdate_GeospatialAreaID)
    FROM (
        SELECT 
            T.ProjectGeospatialAreaUpdateID AS ProjectGeospatialAreaUpdate_ProjectGeospatialAreaUpdateID, 
            T.TenantID AS ProjectGeospatialAreaUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectGeospatialAreaUpdate_ProjectUpdateBatchID, 
            T.GeospatialAreaID AS ProjectGeospatialAreaUpdate_GeospatialAreaID, 
            True AS _from0
        FROM DatabaseEntities.ProjectGeospatialAreaUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectImage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView89()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectImage", @"
    SELECT VALUE -- Constructing ProjectImage
        [ProjectFirma.Web.Models.Store.ProjectImage](T1.ProjectImage_ProjectImageID, T1.ProjectImage_TenantID, T1.ProjectImage_FileResourceID, T1.ProjectImage_ProjectID, T1.ProjectImage_ProjectImageTimingID, T1.ProjectImage_Caption, T1.ProjectImage_Credit, T1.ProjectImage_IsKeyPhoto, T1.ProjectImage_ExcludeFromFactSheet)
    FROM (
        SELECT 
            T.ProjectImageID AS ProjectImage_ProjectImageID, 
            T.TenantID AS ProjectImage_TenantID, 
            T.FileResourceID AS ProjectImage_FileResourceID, 
            T.ProjectID AS ProjectImage_ProjectID, 
            T.ProjectImageTimingID AS ProjectImage_ProjectImageTimingID, 
            T.Caption AS ProjectImage_Caption, 
            T.Credit AS ProjectImage_Credit, 
            T.IsKeyPhoto AS ProjectImage_IsKeyPhoto, 
            T.ExcludeFromFactSheet AS ProjectImage_ExcludeFromFactSheet, 
            True AS _from0
        FROM DatabaseEntities.ProjectImage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectImageTiming
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView90()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectImageTiming", @"
    SELECT VALUE -- Constructing ProjectImageTiming
        [ProjectFirma.Web.Models.Store.ProjectImageTiming](T1.ProjectImageTiming_ProjectImageTimingID, T1.ProjectImageTiming_ProjectImageTimingName, T1.ProjectImageTiming_ProjectImageTimingDisplayName, T1.ProjectImageTiming_SortOrder)
    FROM (
        SELECT 
            T.ProjectImageTimingID AS ProjectImageTiming_ProjectImageTimingID, 
            T.ProjectImageTimingName AS ProjectImageTiming_ProjectImageTimingName, 
            T.ProjectImageTimingDisplayName AS ProjectImageTiming_ProjectImageTimingDisplayName, 
            T.SortOrder AS ProjectImageTiming_SortOrder, 
            True AS _from0
        FROM DatabaseEntities.ProjectImageTiming AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectImageUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView91()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectImageUpdate", @"
    SELECT VALUE -- Constructing ProjectImageUpdate
        [ProjectFirma.Web.Models.Store.ProjectImageUpdate](T1.ProjectImageUpdate_ProjectImageUpdateID, T1.ProjectImageUpdate_TenantID, T1.ProjectImageUpdate_FileResourceID, T1.ProjectImageUpdate_ProjectUpdateBatchID, T1.ProjectImageUpdate_ProjectImageTimingID, T1.ProjectImageUpdate_Caption, T1.ProjectImageUpdate_Credit, T1.ProjectImageUpdate_IsKeyPhoto, T1.ProjectImageUpdate_ExcludeFromFactSheet, T1.ProjectImageUpdate_ProjectImageID)
    FROM (
        SELECT 
            T.ProjectImageUpdateID AS ProjectImageUpdate_ProjectImageUpdateID, 
            T.TenantID AS ProjectImageUpdate_TenantID, 
            T.FileResourceID AS ProjectImageUpdate_FileResourceID, 
            T.ProjectUpdateBatchID AS ProjectImageUpdate_ProjectUpdateBatchID, 
            T.ProjectImageTimingID AS ProjectImageUpdate_ProjectImageTimingID, 
            T.Caption AS ProjectImageUpdate_Caption, 
            T.Credit AS ProjectImageUpdate_Credit, 
            T.IsKeyPhoto AS ProjectImageUpdate_IsKeyPhoto, 
            T.ExcludeFromFactSheet AS ProjectImageUpdate_ExcludeFromFactSheet, 
            T.ProjectImageID AS ProjectImageUpdate_ProjectImageID, 
            True AS _from0
        FROM DatabaseEntities.ProjectImageUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectInternalNote
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView92()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectInternalNote", @"
    SELECT VALUE -- Constructing ProjectInternalNote
        [ProjectFirma.Web.Models.Store.ProjectInternalNote](T1.ProjectInternalNote_ProjectInternalNoteID, T1.ProjectInternalNote_TenantID, T1.ProjectInternalNote_ProjectID, T1.ProjectInternalNote_Note, T1.ProjectInternalNote_CreatePersonID, T1.ProjectInternalNote_CreateDate, T1.ProjectInternalNote_UpdatePersonID, T1.ProjectInternalNote_UpdateDate)
    FROM (
        SELECT 
            T.ProjectInternalNoteID AS ProjectInternalNote_ProjectInternalNoteID, 
            T.TenantID AS ProjectInternalNote_TenantID, 
            T.ProjectID AS ProjectInternalNote_ProjectID, 
            T.Note AS ProjectInternalNote_Note, 
            T.CreatePersonID AS ProjectInternalNote_CreatePersonID, 
            T.CreateDate AS ProjectInternalNote_CreateDate, 
            T.UpdatePersonID AS ProjectInternalNote_UpdatePersonID, 
            T.UpdateDate AS ProjectInternalNote_UpdateDate, 
            True AS _from0
        FROM DatabaseEntities.ProjectInternalNote AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectLocation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView93()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectLocation", @"
    SELECT VALUE -- Constructing ProjectLocation
        [ProjectFirma.Web.Models.Store.ProjectLocation](T1.ProjectLocation_ProjectLocationID, T1.ProjectLocation_TenantID, T1.ProjectLocation_ProjectID, T1.ProjectLocation_ProjectLocationGeometry, T1.ProjectLocation_Annotation)
    FROM (
        SELECT 
            T.ProjectLocationID AS ProjectLocation_ProjectLocationID, 
            T.TenantID AS ProjectLocation_TenantID, 
            T.ProjectID AS ProjectLocation_ProjectID, 
            T.ProjectLocationGeometry AS ProjectLocation_ProjectLocationGeometry, 
            T.Annotation AS ProjectLocation_Annotation, 
            True AS _from0
        FROM DatabaseEntities.ProjectLocation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectLocationSimpleType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView94()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectLocationSimpleType", @"
    SELECT VALUE -- Constructing ProjectLocationSimpleType
        [ProjectFirma.Web.Models.Store.ProjectLocationSimpleType](T1.ProjectLocationSimpleType_ProjectLocationSimpleTypeID, T1.ProjectLocationSimpleType_ProjectLocationSimpleTypeName, T1.ProjectLocationSimpleType_DisplayInstructions, T1.ProjectLocationSimpleType_DisplayOrder)
    FROM (
        SELECT 
            T.ProjectLocationSimpleTypeID AS ProjectLocationSimpleType_ProjectLocationSimpleTypeID, 
            T.ProjectLocationSimpleTypeName AS ProjectLocationSimpleType_ProjectLocationSimpleTypeName, 
            T.DisplayInstructions AS ProjectLocationSimpleType_DisplayInstructions, 
            T.DisplayOrder AS ProjectLocationSimpleType_DisplayOrder, 
            True AS _from0
        FROM DatabaseEntities.ProjectLocationSimpleType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectLocationStaging
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView95()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectLocationStaging", @"
    SELECT VALUE -- Constructing ProjectLocationStaging
        [ProjectFirma.Web.Models.Store.ProjectLocationStaging](T1.ProjectLocationStaging_ProjectLocationStagingID, T1.ProjectLocationStaging_TenantID, T1.ProjectLocationStaging_ProjectID, T1.ProjectLocationStaging_PersonID, T1.ProjectLocationStaging_FeatureClassName, T1.ProjectLocationStaging_GeoJson, T1.ProjectLocationStaging_SelectedProperty, T1.ProjectLocationStaging_ShouldImport)
    FROM (
        SELECT 
            T.ProjectLocationStagingID AS ProjectLocationStaging_ProjectLocationStagingID, 
            T.TenantID AS ProjectLocationStaging_TenantID, 
            T.ProjectID AS ProjectLocationStaging_ProjectID, 
            T.PersonID AS ProjectLocationStaging_PersonID, 
            T.FeatureClassName AS ProjectLocationStaging_FeatureClassName, 
            T.GeoJson AS ProjectLocationStaging_GeoJson, 
            T.SelectedProperty AS ProjectLocationStaging_SelectedProperty, 
            T.ShouldImport AS ProjectLocationStaging_ShouldImport, 
            True AS _from0
        FROM DatabaseEntities.ProjectLocationStaging AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectLocationStagingUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView96()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectLocationStagingUpdate", @"
    SELECT VALUE -- Constructing ProjectLocationStagingUpdate
        [ProjectFirma.Web.Models.Store.ProjectLocationStagingUpdate](T1.ProjectLocationStagingUpdate_ProjectLocationStagingUpdateID, T1.ProjectLocationStagingUpdate_TenantID, T1.ProjectLocationStagingUpdate_ProjectUpdateBatchID, T1.ProjectLocationStagingUpdate_PersonID, T1.ProjectLocationStagingUpdate_FeatureClassName, T1.ProjectLocationStagingUpdate_GeoJson, T1.ProjectLocationStagingUpdate_SelectedProperty, T1.ProjectLocationStagingUpdate_ShouldImport)
    FROM (
        SELECT 
            T.ProjectLocationStagingUpdateID AS ProjectLocationStagingUpdate_ProjectLocationStagingUpdateID, 
            T.TenantID AS ProjectLocationStagingUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectLocationStagingUpdate_ProjectUpdateBatchID, 
            T.PersonID AS ProjectLocationStagingUpdate_PersonID, 
            T.FeatureClassName AS ProjectLocationStagingUpdate_FeatureClassName, 
            T.GeoJson AS ProjectLocationStagingUpdate_GeoJson, 
            T.SelectedProperty AS ProjectLocationStagingUpdate_SelectedProperty, 
            T.ShouldImport AS ProjectLocationStagingUpdate_ShouldImport, 
            True AS _from0
        FROM DatabaseEntities.ProjectLocationStagingUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectLocationUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView97()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectLocationUpdate", @"
    SELECT VALUE -- Constructing ProjectLocationUpdate
        [ProjectFirma.Web.Models.Store.ProjectLocationUpdate](T1.ProjectLocationUpdate_ProjectLocationUpdateID, T1.ProjectLocationUpdate_TenantID, T1.ProjectLocationUpdate_ProjectUpdateBatchID, T1.ProjectLocationUpdate_ProjectLocationUpdateGeometry, T1.ProjectLocationUpdate_Annotation)
    FROM (
        SELECT 
            T.ProjectLocationUpdateID AS ProjectLocationUpdate_ProjectLocationUpdateID, 
            T.TenantID AS ProjectLocationUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectLocationUpdate_ProjectUpdateBatchID, 
            T.ProjectLocationUpdateGeometry AS ProjectLocationUpdate_ProjectLocationUpdateGeometry, 
            T.Annotation AS ProjectLocationUpdate_Annotation, 
            True AS _from0
        FROM DatabaseEntities.ProjectLocationUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectNote
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView98()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectNote", @"
    SELECT VALUE -- Constructing ProjectNote
        [ProjectFirma.Web.Models.Store.ProjectNote](T1.ProjectNote_ProjectNoteID, T1.ProjectNote_TenantID, T1.ProjectNote_ProjectID, T1.ProjectNote_Note, T1.ProjectNote_CreatePersonID, T1.ProjectNote_CreateDate, T1.ProjectNote_UpdatePersonID, T1.ProjectNote_UpdateDate)
    FROM (
        SELECT 
            T.ProjectNoteID AS ProjectNote_ProjectNoteID, 
            T.TenantID AS ProjectNote_TenantID, 
            T.ProjectID AS ProjectNote_ProjectID, 
            T.Note AS ProjectNote_Note, 
            T.CreatePersonID AS ProjectNote_CreatePersonID, 
            T.CreateDate AS ProjectNote_CreateDate, 
            T.UpdatePersonID AS ProjectNote_UpdatePersonID, 
            T.UpdateDate AS ProjectNote_UpdateDate, 
            True AS _from0
        FROM DatabaseEntities.ProjectNote AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectNoteUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView99()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectNoteUpdate", @"
    SELECT VALUE -- Constructing ProjectNoteUpdate
        [ProjectFirma.Web.Models.Store.ProjectNoteUpdate](T1.ProjectNoteUpdate_ProjectNoteUpdateID, T1.ProjectNoteUpdate_TenantID, T1.ProjectNoteUpdate_ProjectUpdateBatchID, T1.ProjectNoteUpdate_Note, T1.ProjectNoteUpdate_CreatePersonID, T1.ProjectNoteUpdate_CreateDate, T1.ProjectNoteUpdate_UpdatePersonID, T1.ProjectNoteUpdate_UpdateDate)
    FROM (
        SELECT 
            T.ProjectNoteUpdateID AS ProjectNoteUpdate_ProjectNoteUpdateID, 
            T.TenantID AS ProjectNoteUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectNoteUpdate_ProjectUpdateBatchID, 
            T.Note AS ProjectNoteUpdate_Note, 
            T.CreatePersonID AS ProjectNoteUpdate_CreatePersonID, 
            T.CreateDate AS ProjectNoteUpdate_CreateDate, 
            T.UpdatePersonID AS ProjectNoteUpdate_UpdatePersonID, 
            T.UpdateDate AS ProjectNoteUpdate_UpdateDate, 
            True AS _from0
        FROM DatabaseEntities.ProjectNoteUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectOrganization
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView100()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectOrganization", @"
    SELECT VALUE -- Constructing ProjectOrganization
        [ProjectFirma.Web.Models.Store.ProjectOrganization](T1.ProjectOrganization_ProjectOrganizationID, T1.ProjectOrganization_TenantID, T1.ProjectOrganization_ProjectID, T1.ProjectOrganization_OrganizationID, T1.ProjectOrganization_RelationshipTypeID)
    FROM (
        SELECT 
            T.ProjectOrganizationID AS ProjectOrganization_ProjectOrganizationID, 
            T.TenantID AS ProjectOrganization_TenantID, 
            T.ProjectID AS ProjectOrganization_ProjectID, 
            T.OrganizationID AS ProjectOrganization_OrganizationID, 
            T.RelationshipTypeID AS ProjectOrganization_RelationshipTypeID, 
            True AS _from0
        FROM DatabaseEntities.ProjectOrganization AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectOrganizationUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView101()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectOrganizationUpdate", @"
    SELECT VALUE -- Constructing ProjectOrganizationUpdate
        [ProjectFirma.Web.Models.Store.ProjectOrganizationUpdate](T1.ProjectOrganizationUpdate_ProjectOrganizationUpdateID, T1.ProjectOrganizationUpdate_TenantID, T1.ProjectOrganizationUpdate_ProjectUpdateBatchID, T1.ProjectOrganizationUpdate_OrganizationID, T1.ProjectOrganizationUpdate_RelationshipTypeID)
    FROM (
        SELECT 
            T.ProjectOrganizationUpdateID AS ProjectOrganizationUpdate_ProjectOrganizationUpdateID, 
            T.TenantID AS ProjectOrganizationUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectOrganizationUpdate_ProjectUpdateBatchID, 
            T.OrganizationID AS ProjectOrganizationUpdate_OrganizationID, 
            T.RelationshipTypeID AS ProjectOrganizationUpdate_RelationshipTypeID, 
            True AS _from0
        FROM DatabaseEntities.ProjectOrganizationUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectPerson
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView102()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectPerson", @"
    SELECT VALUE -- Constructing ProjectPerson
        [ProjectFirma.Web.Models.Store.ProjectPerson](T1.ProjectPerson_ProjectPersonID, T1.ProjectPerson_TenantID, T1.ProjectPerson_ProjectID, T1.ProjectPerson_PersonID, T1.ProjectPerson_ProjectPersonRelationshipTypeID)
    FROM (
        SELECT 
            T.ProjectPersonID AS ProjectPerson_ProjectPersonID, 
            T.TenantID AS ProjectPerson_TenantID, 
            T.ProjectID AS ProjectPerson_ProjectID, 
            T.PersonID AS ProjectPerson_PersonID, 
            T.ProjectPersonRelationshipTypeID AS ProjectPerson_ProjectPersonRelationshipTypeID, 
            True AS _from0
        FROM DatabaseEntities.ProjectPerson AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectPersonRelationshipType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView103()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectPersonRelationshipType", @"
    SELECT VALUE -- Constructing ProjectPersonRelationshipType
        [ProjectFirma.Web.Models.Store.ProjectPersonRelationshipType](T1.ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID, T1.ProjectPersonRelationshipType_ProjectPersonRelationshipTypeName, T1.ProjectPersonRelationshipType_ProjectPersonRelationshipTypeDisplayName, T1.ProjectPersonRelationshipType_FieldDefinitionID, T1.ProjectPersonRelationshipType_IsRequired)
    FROM (
        SELECT 
            T.ProjectPersonRelationshipTypeID AS ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID, 
            T.ProjectPersonRelationshipTypeName AS ProjectPersonRelationshipType_ProjectPersonRelationshipTypeName, 
            T.ProjectPersonRelationshipTypeDisplayName AS ProjectPersonRelationshipType_ProjectPersonRelationshipTypeDisplayName, 
            T.FieldDefinitionID AS ProjectPersonRelationshipType_FieldDefinitionID, 
            T.IsRequired AS ProjectPersonRelationshipType_IsRequired, 
            True AS _from0
        FROM DatabaseEntities.ProjectPersonRelationshipType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectPersonUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView104()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectPersonUpdate", @"
    SELECT VALUE -- Constructing ProjectPersonUpdate
        [ProjectFirma.Web.Models.Store.ProjectPersonUpdate](T1.ProjectPersonUpdate_ProjectPersonUpdateID, T1.ProjectPersonUpdate_TenantID, T1.ProjectPersonUpdate_ProjectUpdateBatchID, T1.ProjectPersonUpdate_PersonID, T1.ProjectPersonUpdate_ProjectPersonRelationshipTypeID)
    FROM (
        SELECT 
            T.ProjectPersonUpdateID AS ProjectPersonUpdate_ProjectPersonUpdateID, 
            T.TenantID AS ProjectPersonUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectPersonUpdate_ProjectUpdateBatchID, 
            T.PersonID AS ProjectPersonUpdate_PersonID, 
            T.ProjectPersonRelationshipTypeID AS ProjectPersonUpdate_ProjectPersonRelationshipTypeID, 
            True AS _from0
        FROM DatabaseEntities.ProjectPersonUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectStage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView105()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectStage", @"
    SELECT VALUE -- Constructing ProjectStage
        [ProjectFirma.Web.Models.Store.ProjectStage](T1.ProjectStage_ProjectStageID, T1.ProjectStage_ProjectStageName, T1.ProjectStage_ProjectStageDisplayName, T1.ProjectStage_SortOrder, T1.ProjectStage_ProjectStageColor)
    FROM (
        SELECT 
            T.ProjectStageID AS ProjectStage_ProjectStageID, 
            T.ProjectStageName AS ProjectStage_ProjectStageName, 
            T.ProjectStageDisplayName AS ProjectStage_ProjectStageDisplayName, 
            T.SortOrder AS ProjectStage_SortOrder, 
            T.ProjectStageColor AS ProjectStage_ProjectStageColor, 
            True AS _from0
        FROM DatabaseEntities.ProjectStage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectStewardshipAreaType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView106()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectStewardshipAreaType", @"
    SELECT VALUE -- Constructing ProjectStewardshipAreaType
        [ProjectFirma.Web.Models.Store.ProjectStewardshipAreaType](T1.ProjectStewardshipAreaType_ProjectStewardshipAreaTypeID, T1.ProjectStewardshipAreaType_ProjectStewardshipAreaTypeName, T1.ProjectStewardshipAreaType_ProjectStewardshipAreaTypeDisplayName)
    FROM (
        SELECT 
            T.ProjectStewardshipAreaTypeID AS ProjectStewardshipAreaType_ProjectStewardshipAreaTypeID, 
            T.ProjectStewardshipAreaTypeName AS ProjectStewardshipAreaType_ProjectStewardshipAreaTypeName, 
            T.ProjectStewardshipAreaTypeDisplayName AS ProjectStewardshipAreaType_ProjectStewardshipAreaTypeDisplayName, 
            True AS _from0
        FROM DatabaseEntities.ProjectStewardshipAreaType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectTag
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView107()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectTag", @"
    SELECT VALUE -- Constructing ProjectTag
        [ProjectFirma.Web.Models.Store.ProjectTag](T1.ProjectTag_ProjectTagID, T1.ProjectTag_TenantID, T1.ProjectTag_ProjectID, T1.ProjectTag_TagID)
    FROM (
        SELECT 
            T.ProjectTagID AS ProjectTag_ProjectTagID, 
            T.TenantID AS ProjectTag_TenantID, 
            T.ProjectID AS ProjectTag_ProjectID, 
            T.TagID AS ProjectTag_TagID, 
            True AS _from0
        FROM DatabaseEntities.ProjectTag AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView108()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectUpdate", "\r\n    SELECT VALUE -- Constructing ProjectUpdate\r\n        [ProjectFirma.Web.Model" +
                    "s.Store.ProjectUpdate](T1.ProjectUpdate_ProjectUpdateID, T1.ProjectUpdate_Tenant" +
                    "ID, T1.ProjectUpdate_ProjectUpdateBatchID, T1.ProjectUpdate_ProjectStageID, T1.P" +
                    "rojectUpdate_ProjectDescription, T1.ProjectUpdate_ApprovalStartDate, T1.ProjectU" +
                    "pdate_CompletionDate, T1.ProjectUpdate_EstimatedTotalCost, T1.ProjectUpdate_Proj" +
                    "ectLocationPoint, T1.ProjectUpdate_ProjectLocationNotes, T1.ProjectUpdate_Planne" +
                    "dDate, T1.ProjectUpdate_ProjectLocationSimpleTypeID, T1.ProjectUpdate_PrimaryCon" +
                    "tactPersonID)\r\n    FROM (\r\n        SELECT \r\n            T.ProjectUpdateID AS Pro" +
                    "jectUpdate_ProjectUpdateID, \r\n            T.TenantID AS ProjectUpdate_TenantID, " +
                    "\r\n            T.ProjectUpdateBatchID AS ProjectUpdate_ProjectUpdateBatchID, \r\n  " +
                    "          T.ProjectStageID AS ProjectUpdate_ProjectStageID, \r\n            T.Proj" +
                    "ectDescription AS ProjectUpdate_ProjectDescription, \r\n            T.ApprovalStar" +
                    "tDate AS ProjectUpdate_ApprovalStartDate, \r\n            T.CompletionDate AS Proj" +
                    "ectUpdate_CompletionDate, \r\n            T.EstimatedTotalCost AS ProjectUpdate_Es" +
                    "timatedTotalCost, \r\n            T.ProjectLocationPoint AS ProjectUpdate_ProjectL" +
                    "ocationPoint, \r\n            T.ProjectLocationNotes AS ProjectUpdate_ProjectLocat" +
                    "ionNotes, \r\n            T.PlannedDate AS ProjectUpdate_PlannedDate, \r\n          " +
                    "  T.ProjectLocationSimpleTypeID AS ProjectUpdate_ProjectLocationSimpleTypeID, \r\n" +
                    "            T.PrimaryContactPersonID AS ProjectUpdate_PrimaryContactPersonID, \r\n" +
                    "            True AS _from0\r\n        FROM DatabaseEntities.ProjectUpdate AS T\r\n  " +
                    "  ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectUpdateBatch
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView109()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3568);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ProjectUpdateBatch\r\n        [ProjectFirma.Web");
            viewString.Append(".Models.Store.ProjectUpdateBatch](T1.ProjectUpdateBatch_ProjectUpdateBatchID, T1");
            viewString.Append(".ProjectUpdateBatch_TenantID, T1.ProjectUpdateBatch_ProjectID, T1.ProjectUpdateB");
            viewString.Append("atch_LastUpdateDate, T1.ProjectUpdateBatch_PerformanceMeasureActualYearsExemptio");
            viewString.Append("nExplanation, T1.ProjectUpdateBatch_LastUpdatePersonID, T1.ProjectUpdateBatch_Ba");
            viewString.Append("sicsComment, T1.ProjectUpdateBatch_ExpendituresComment, T1.ProjectUpdateBatch_Pe");
            viewString.Append("rformanceMeasuresComment, T1.ProjectUpdateBatch_LocationSimpleComment, T1.Projec");
            viewString.Append("tUpdateBatch_LocationDetailedComment, T1.ProjectUpdateBatch_BudgetsComment, T1.P");
            viewString.Append("rojectUpdateBatch_ProjectUpdateStateID, T1.ProjectUpdateBatch_IsPhotosUpdated, T");
            viewString.Append("1.ProjectUpdateBatch_BasicsDiffLog, T1.ProjectUpdateBatch_PerformanceMeasureDiff");
            viewString.Append("Log, T1.ProjectUpdateBatch_ExpendituresDiffLog, T1.ProjectUpdateBatch_BudgetsDif");
            viewString.Append("fLog, T1.ProjectUpdateBatch_ExternalLinksDiffLog, T1.ProjectUpdateBatch_NotesDif");
            viewString.Append("fLog, T1.ProjectUpdateBatch_GeospatialAreaComment, T1.ProjectUpdateBatch_Expecte");
            viewString.Append("dFundingComment, T1.ProjectUpdateBatch_ExpectedFundingDiffLog, T1.ProjectUpdateB");
            viewString.Append("atch_OrganizationsComment, T1.ProjectUpdateBatch_OrganizationsDiffLog, T1.Projec");
            viewString.Append("tUpdateBatch_NoExpendituresToReportExplanation, T1.ProjectUpdateBatch_ContactsCo");
            viewString.Append("mment)\r\n    FROM (\r\n        SELECT \r\n            T.ProjectUpdateBatchID AS Proje");
            viewString.Append("ctUpdateBatch_ProjectUpdateBatchID, \r\n            T.TenantID AS ProjectUpdateBat");
            viewString.Append("ch_TenantID, \r\n            T.ProjectID AS ProjectUpdateBatch_ProjectID, \r\n      ");
            viewString.Append("      T.LastUpdateDate AS ProjectUpdateBatch_LastUpdateDate, \r\n            T.Per");
            viewString.Append("formanceMeasureActualYearsExemptionExplanation AS ProjectUpdateBatch_Performance");
            viewString.Append("MeasureActualYearsExemptionExplanation, \r\n            T.LastUpdatePersonID AS Pr");
            viewString.Append("ojectUpdateBatch_LastUpdatePersonID, \r\n            T.BasicsComment AS ProjectUpd");
            viewString.Append("ateBatch_BasicsComment, \r\n            T.ExpendituresComment AS ProjectUpdateBatc");
            viewString.Append("h_ExpendituresComment, \r\n            T.PerformanceMeasuresComment AS ProjectUpda");
            viewString.Append("teBatch_PerformanceMeasuresComment, \r\n            T.LocationSimpleComment AS Pro");
            viewString.Append("jectUpdateBatch_LocationSimpleComment, \r\n            T.LocationDetailedComment A");
            viewString.Append("S ProjectUpdateBatch_LocationDetailedComment, \r\n            T.BudgetsComment AS ");
            viewString.Append("ProjectUpdateBatch_BudgetsComment, \r\n            T.ProjectUpdateStateID AS Proje");
            viewString.Append("ctUpdateBatch_ProjectUpdateStateID, \r\n            T.IsPhotosUpdated AS ProjectUp");
            viewString.Append("dateBatch_IsPhotosUpdated, \r\n            T.BasicsDiffLog AS ProjectUpdateBatch_B");
            viewString.Append("asicsDiffLog, \r\n            T.PerformanceMeasureDiffLog AS ProjectUpdateBatch_Pe");
            viewString.Append("rformanceMeasureDiffLog, \r\n            T.ExpendituresDiffLog AS ProjectUpdateBat");
            viewString.Append("ch_ExpendituresDiffLog, \r\n            T.BudgetsDiffLog AS ProjectUpdateBatch_Bud");
            viewString.Append("getsDiffLog, \r\n            T.ExternalLinksDiffLog AS ProjectUpdateBatch_External");
            viewString.Append("LinksDiffLog, \r\n            T.NotesDiffLog AS ProjectUpdateBatch_NotesDiffLog, \r");
            viewString.Append("\n            T.GeospatialAreaComment AS ProjectUpdateBatch_GeospatialAreaComment");
            viewString.Append(", \r\n            T.ExpectedFundingComment AS ProjectUpdateBatch_ExpectedFundingCo");
            viewString.Append("mment, \r\n            T.ExpectedFundingDiffLog AS ProjectUpdateBatch_ExpectedFund");
            viewString.Append("ingDiffLog, \r\n            T.OrganizationsComment AS ProjectUpdateBatch_Organizat");
            viewString.Append("ionsComment, \r\n            T.OrganizationsDiffLog AS ProjectUpdateBatch_Organiza");
            viewString.Append("tionsDiffLog, \r\n            T.NoExpendituresToReportExplanation AS ProjectUpdate");
            viewString.Append("Batch_NoExpendituresToReportExplanation, \r\n            T.ContactsComment AS Proj");
            viewString.Append("ectUpdateBatch_ContactsComment, \r\n            True AS _from0\r\n        FROM Datab");
            viewString.Append("aseEntities.ProjectUpdateBatch AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectUpdateBatch", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectUpdateConfiguration
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView110()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectUpdateConfiguration", "\r\n    SELECT VALUE -- Constructing ProjectUpdateConfiguration\r\n        [ProjectFi" +
                    "rma.Web.Models.Store.ProjectUpdateConfiguration](T1.ProjectUpdateConfiguration_P" +
                    "rojectUpdateConfigurationID, T1.ProjectUpdateConfiguration_TenantID, T1.ProjectU" +
                    "pdateConfiguration_ProjectUpdateKickOffDate, T1.ProjectUpdateConfiguration_Proje" +
                    "ctUpdateCloseOutDate, T1.ProjectUpdateConfiguration_ProjectUpdateReminderInterva" +
                    "l, T1.ProjectUpdateConfiguration_EnableProjectUpdateReminders, T1.ProjectUpdateC" +
                    "onfiguration_SendPeriodicReminders, T1.ProjectUpdateConfiguration_SendCloseOutNo" +
                    "tification, T1.ProjectUpdateConfiguration_ProjectUpdateKickOffIntroContent, T1.P" +
                    "rojectUpdateConfiguration_ProjectUpdateReminderIntroContent, T1.ProjectUpdateCon" +
                    "figuration_ProjectUpdateCloseOutIntroContent)\r\n    FROM (\r\n        SELECT \r\n    " +
                    "        T.ProjectUpdateConfigurationID AS ProjectUpdateConfiguration_ProjectUpda" +
                    "teConfigurationID, \r\n            T.TenantID AS ProjectUpdateConfiguration_Tenant" +
                    "ID, \r\n            T.ProjectUpdateKickOffDate AS ProjectUpdateConfiguration_Proje" +
                    "ctUpdateKickOffDate, \r\n            T.ProjectUpdateCloseOutDate AS ProjectUpdateC" +
                    "onfiguration_ProjectUpdateCloseOutDate, \r\n            T.ProjectUpdateReminderInt" +
                    "erval AS ProjectUpdateConfiguration_ProjectUpdateReminderInterval, \r\n           " +
                    " T.EnableProjectUpdateReminders AS ProjectUpdateConfiguration_EnableProjectUpdat" +
                    "eReminders, \r\n            T.SendPeriodicReminders AS ProjectUpdateConfiguration_" +
                    "SendPeriodicReminders, \r\n            T.SendCloseOutNotification AS ProjectUpdate" +
                    "Configuration_SendCloseOutNotification, \r\n            T.ProjectUpdateKickOffIntr" +
                    "oContent AS ProjectUpdateConfiguration_ProjectUpdateKickOffIntroContent, \r\n     " +
                    "       T.ProjectUpdateReminderIntroContent AS ProjectUpdateConfiguration_Project" +
                    "UpdateReminderIntroContent, \r\n            T.ProjectUpdateCloseOutIntroContent AS" +
                    " ProjectUpdateConfiguration_ProjectUpdateCloseOutIntroContent, \r\n            Tru" +
                    "e AS _from0\r\n        FROM DatabaseEntities.ProjectUpdateConfiguration AS T\r\n    " +
                    ") AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectUpdateHistory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView111()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectUpdateHistory", @"
    SELECT VALUE -- Constructing ProjectUpdateHistory
        [ProjectFirma.Web.Models.Store.ProjectUpdateHistory](T1.ProjectUpdateHistory_ProjectUpdateHistoryID, T1.ProjectUpdateHistory_TenantID, T1.ProjectUpdateHistory_ProjectUpdateBatchID, T1.ProjectUpdateHistory_ProjectUpdateStateID, T1.ProjectUpdateHistory_UpdatePersonID, T1.ProjectUpdateHistory_TransitionDate)
    FROM (
        SELECT 
            T.ProjectUpdateHistoryID AS ProjectUpdateHistory_ProjectUpdateHistoryID, 
            T.TenantID AS ProjectUpdateHistory_TenantID, 
            T.ProjectUpdateBatchID AS ProjectUpdateHistory_ProjectUpdateBatchID, 
            T.ProjectUpdateStateID AS ProjectUpdateHistory_ProjectUpdateStateID, 
            T.UpdatePersonID AS ProjectUpdateHistory_UpdatePersonID, 
            T.TransitionDate AS ProjectUpdateHistory_TransitionDate, 
            True AS _from0
        FROM DatabaseEntities.ProjectUpdateHistory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectUpdateState
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView112()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectUpdateState", @"
    SELECT VALUE -- Constructing ProjectUpdateState
        [ProjectFirma.Web.Models.Store.ProjectUpdateState](T1.ProjectUpdateState_ProjectUpdateStateID, T1.ProjectUpdateState_ProjectUpdateStateName, T1.ProjectUpdateState_ProjectUpdateStateDisplayName)
    FROM (
        SELECT 
            T.ProjectUpdateStateID AS ProjectUpdateState_ProjectUpdateStateID, 
            T.ProjectUpdateStateName AS ProjectUpdateState_ProjectUpdateStateName, 
            T.ProjectUpdateStateDisplayName AS ProjectUpdateState_ProjectUpdateStateDisplayName, 
            True AS _from0
        FROM DatabaseEntities.ProjectUpdateState AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.RelationshipType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView113()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.RelationshipType", @"
    SELECT VALUE -- Constructing RelationshipType
        [ProjectFirma.Web.Models.Store.RelationshipType](T1.RelationshipType_RelationshipTypeID, T1.RelationshipType_TenantID, T1.RelationshipType_RelationshipTypeName, T1.RelationshipType_CanStewardProjects, T1.RelationshipType_IsPrimaryContact, T1.RelationshipType_CanOnlyBeRelatedOnceToAProject, T1.RelationshipType_RelationshipTypeDescription, T1.RelationshipType_ReportInAccomplishmentsDashboard, T1.RelationshipType_ShowOnFactSheet)
    FROM (
        SELECT 
            T.RelationshipTypeID AS RelationshipType_RelationshipTypeID, 
            T.TenantID AS RelationshipType_TenantID, 
            T.RelationshipTypeName AS RelationshipType_RelationshipTypeName, 
            T.CanStewardProjects AS RelationshipType_CanStewardProjects, 
            T.IsPrimaryContact AS RelationshipType_IsPrimaryContact, 
            T.CanOnlyBeRelatedOnceToAProject AS RelationshipType_CanOnlyBeRelatedOnceToAProject, 
            T.RelationshipTypeDescription AS RelationshipType_RelationshipTypeDescription, 
            T.ReportInAccomplishmentsDashboard AS RelationshipType_ReportInAccomplishmentsDashboard, 
            T.ShowOnFactSheet AS RelationshipType_ShowOnFactSheet, 
            True AS _from0
        FROM DatabaseEntities.RelationshipType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.Role
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView114()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.Role", @"
    SELECT VALUE -- Constructing Role
        [ProjectFirma.Web.Models.Store.Role](T1.Role_RoleID, T1.Role_RoleName, T1.Role_RoleDisplayName, T1.Role_RoleDescription)
    FROM (
        SELECT 
            T.RoleID AS Role_RoleID, 
            T.RoleName AS Role_RoleName, 
            T.RoleDisplayName AS Role_RoleDisplayName, 
            T.RoleDescription AS Role_RoleDescription, 
            True AS _from0
        FROM DatabaseEntities.Role AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.Snapshot
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView115()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.Snapshot", @"
    SELECT VALUE -- Constructing Snapshot
        [ProjectFirma.Web.Models.Store.Snapshot](T1.Snapshot_SnapshotID, T1.Snapshot_TenantID, T1.Snapshot_SnapshotDate, T1.Snapshot_SnapshotNote, T1.Snapshot_ProjectCount)
    FROM (
        SELECT 
            T.SnapshotID AS Snapshot_SnapshotID, 
            T.TenantID AS Snapshot_TenantID, 
            T.SnapshotDate AS Snapshot_SnapshotDate, 
            T.SnapshotNote AS Snapshot_SnapshotNote, 
            T.ProjectCount AS Snapshot_ProjectCount, 
            True AS _from0
        FROM DatabaseEntities.Snapshot AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.SnapshotOrganizationTypeExpenditure
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView116()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.SnapshotOrganizationTypeExpenditure", @"
    SELECT VALUE -- Constructing SnapshotOrganizationTypeExpenditure
        [ProjectFirma.Web.Models.Store.SnapshotOrganizationTypeExpenditure](T1.SnapshotOrganizationTypeExpenditure_SnapshotOrganizationTypeExpenditureID, T1.SnapshotOrganizationTypeExpenditure_TenantID, T1.SnapshotOrganizationTypeExpenditure_SnapshotID, T1.SnapshotOrganizationTypeExpenditure_CalendarYear, T1.SnapshotOrganizationTypeExpenditure_ExpenditureAmount, T1.SnapshotOrganizationTypeExpenditure_OrganizationTypeID)
    FROM (
        SELECT 
            T.SnapshotOrganizationTypeExpenditureID AS SnapshotOrganizationTypeExpenditure_SnapshotOrganizationTypeExpenditureID, 
            T.TenantID AS SnapshotOrganizationTypeExpenditure_TenantID, 
            T.SnapshotID AS SnapshotOrganizationTypeExpenditure_SnapshotID, 
            T.CalendarYear AS SnapshotOrganizationTypeExpenditure_CalendarYear, 
            T.ExpenditureAmount AS SnapshotOrganizationTypeExpenditure_ExpenditureAmount, 
            T.OrganizationTypeID AS SnapshotOrganizationTypeExpenditure_OrganizationTypeID, 
            True AS _from0
        FROM DatabaseEntities.SnapshotOrganizationTypeExpenditure AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.SnapshotPerformanceMeasure
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView117()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.SnapshotPerformanceMeasure", @"
    SELECT VALUE -- Constructing SnapshotPerformanceMeasure
        [ProjectFirma.Web.Models.Store.SnapshotPerformanceMeasure](T1.SnapshotPerformanceMeasure_SnapshotPerformanceMeasureID, T1.SnapshotPerformanceMeasure_TenantID, T1.SnapshotPerformanceMeasure_SnapshotID, T1.SnapshotPerformanceMeasure_PerformanceMeasureID, T1.SnapshotPerformanceMeasure_CalendarYear, T1.SnapshotPerformanceMeasure_ActualValue)
    FROM (
        SELECT 
            T.SnapshotPerformanceMeasureID AS SnapshotPerformanceMeasure_SnapshotPerformanceMeasureID, 
            T.TenantID AS SnapshotPerformanceMeasure_TenantID, 
            T.SnapshotID AS SnapshotPerformanceMeasure_SnapshotID, 
            T.PerformanceMeasureID AS SnapshotPerformanceMeasure_PerformanceMeasureID, 
            T.CalendarYear AS SnapshotPerformanceMeasure_CalendarYear, 
            T.ActualValue AS SnapshotPerformanceMeasure_ActualValue, 
            True AS _from0
        FROM DatabaseEntities.SnapshotPerformanceMeasure AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.SnapshotPerformanceMeasureSubcategoryOption
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView118()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.SnapshotPerformanceMeasureSubcategoryOption", "\r\n    SELECT VALUE -- Constructing SnapshotPerformanceMeasureSubcategoryOption\r\n " +
                    "       [ProjectFirma.Web.Models.Store.SnapshotPerformanceMeasureSubcategoryOptio" +
                    "n](T1.SnapshotPerformanceMeasureSubcategoryOption_SnapshotPerformanceMeasureSubc" +
                    "ategoryOptionID, T1.SnapshotPerformanceMeasureSubcategoryOption_TenantID, T1.Sna" +
                    "pshotPerformanceMeasureSubcategoryOption_SnapshotPerformanceMeasureID, T1.Snapsh" +
                    "otPerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID, T1." +
                    "SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasureID, T1.SnapshotPer" +
                    "formanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryID)\r\n    FROM (\r\n " +
                    "       SELECT \r\n            T.SnapshotPerformanceMeasureSubcategoryOptionID AS S" +
                    "napshotPerformanceMeasureSubcategoryOption_SnapshotPerformanceMeasureSubcategory" +
                    "OptionID, \r\n            T.TenantID AS SnapshotPerformanceMeasureSubcategoryOptio" +
                    "n_TenantID, \r\n            T.SnapshotPerformanceMeasureID AS SnapshotPerformanceM" +
                    "easureSubcategoryOption_SnapshotPerformanceMeasureID, \r\n            T.Performanc" +
                    "eMeasureSubcategoryOptionID AS SnapshotPerformanceMeasureSubcategoryOption_Perfo" +
                    "rmanceMeasureSubcategoryOptionID, \r\n            T.PerformanceMeasureID AS Snapsh" +
                    "otPerformanceMeasureSubcategoryOption_PerformanceMeasureID, \r\n            T.Perf" +
                    "ormanceMeasureSubcategoryID AS SnapshotPerformanceMeasureSubcategoryOption_Perfo" +
                    "rmanceMeasureSubcategoryID, \r\n            True AS _from0\r\n        FROM DatabaseE" +
                    "ntities.SnapshotPerformanceMeasureSubcategoryOption AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.SnapshotProject
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView119()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.SnapshotProject", @"
    SELECT VALUE -- Constructing SnapshotProject
        [ProjectFirma.Web.Models.Store.SnapshotProject](T1.SnapshotProject_SnapshotProjectID, T1.SnapshotProject_TenantID, T1.SnapshotProject_SnapshotID, T1.SnapshotProject_ProjectID, T1.SnapshotProject_SnapshotProjectTypeID)
    FROM (
        SELECT 
            T.SnapshotProjectID AS SnapshotProject_SnapshotProjectID, 
            T.TenantID AS SnapshotProject_TenantID, 
            T.SnapshotID AS SnapshotProject_SnapshotID, 
            T.ProjectID AS SnapshotProject_ProjectID, 
            T.SnapshotProjectTypeID AS SnapshotProject_SnapshotProjectTypeID, 
            True AS _from0
        FROM DatabaseEntities.SnapshotProject AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.SnapshotProjectType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView120()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.SnapshotProjectType", @"
    SELECT VALUE -- Constructing SnapshotProjectType
        [ProjectFirma.Web.Models.Store.SnapshotProjectType](T1.SnapshotProjectType_SnapshotProjectTypeID, T1.SnapshotProjectType_SnapshotProjectTypeName, T1.SnapshotProjectType_SnapshotProjectTypeDisplayName)
    FROM (
        SELECT 
            T.SnapshotProjectTypeID AS SnapshotProjectType_SnapshotProjectTypeID, 
            T.SnapshotProjectTypeName AS SnapshotProjectType_SnapshotProjectTypeName, 
            T.SnapshotProjectTypeDisplayName AS SnapshotProjectType_SnapshotProjectTypeDisplayName, 
            True AS _from0
        FROM DatabaseEntities.SnapshotProjectType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.StateProvince
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView121()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.StateProvince", @"
    SELECT VALUE -- Constructing StateProvince
        [ProjectFirma.Web.Models.Store.StateProvince](T1.StateProvince_StateProvinceID, T1.StateProvince_TenantID, T1.StateProvince_StateProvinceName, T1.StateProvince_StateProvinceAbbreviation, T1.StateProvince_StateProvinceFeature, T1.StateProvince_StateProvinceFeatureForAnalysis)
    FROM (
        SELECT 
            T.StateProvinceID AS StateProvince_StateProvinceID, 
            T.TenantID AS StateProvince_TenantID, 
            T.StateProvinceName AS StateProvince_StateProvinceName, 
            T.StateProvinceAbbreviation AS StateProvince_StateProvinceAbbreviation, 
            T.StateProvinceFeature AS StateProvince_StateProvinceFeature, 
            T.StateProvinceFeatureForAnalysis AS StateProvince_StateProvinceFeatureForAnalysis, 
            True AS _from0
        FROM DatabaseEntities.StateProvince AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.SupportRequestLog
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView122()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.SupportRequestLog", @"
    SELECT VALUE -- Constructing SupportRequestLog
        [ProjectFirma.Web.Models.Store.SupportRequestLog](T1.SupportRequestLog_SupportRequestLogID, T1.SupportRequestLog_TenantID, T1.SupportRequestLog_RequestDate, T1.SupportRequestLog_RequestPersonName, T1.SupportRequestLog_RequestPersonEmail, T1.SupportRequestLog_RequestPersonID, T1.SupportRequestLog_SupportRequestTypeID, T1.SupportRequestLog_RequestDescription, T1.SupportRequestLog_RequestPersonOrganization, T1.SupportRequestLog_RequestPersonPhone)
    FROM (
        SELECT 
            T.SupportRequestLogID AS SupportRequestLog_SupportRequestLogID, 
            T.TenantID AS SupportRequestLog_TenantID, 
            T.RequestDate AS SupportRequestLog_RequestDate, 
            T.RequestPersonName AS SupportRequestLog_RequestPersonName, 
            T.RequestPersonEmail AS SupportRequestLog_RequestPersonEmail, 
            T.RequestPersonID AS SupportRequestLog_RequestPersonID, 
            T.SupportRequestTypeID AS SupportRequestLog_SupportRequestTypeID, 
            T.RequestDescription AS SupportRequestLog_RequestDescription, 
            T.RequestPersonOrganization AS SupportRequestLog_RequestPersonOrganization, 
            T.RequestPersonPhone AS SupportRequestLog_RequestPersonPhone, 
            True AS _from0
        FROM DatabaseEntities.SupportRequestLog AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.SupportRequestType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView123()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.SupportRequestType", @"
    SELECT VALUE -- Constructing SupportRequestType
        [ProjectFirma.Web.Models.Store.SupportRequestType](T1.SupportRequestType_SupportRequestTypeID, T1.SupportRequestType_SupportRequestTypeName, T1.SupportRequestType_SupportRequestTypeDisplayName, T1.SupportRequestType_SupportRequestTypeSortOrder)
    FROM (
        SELECT 
            T.SupportRequestTypeID AS SupportRequestType_SupportRequestTypeID, 
            T.SupportRequestTypeName AS SupportRequestType_SupportRequestTypeName, 
            T.SupportRequestTypeDisplayName AS SupportRequestType_SupportRequestTypeDisplayName, 
            T.SupportRequestTypeSortOrder AS SupportRequestType_SupportRequestTypeSortOrder, 
            True AS _from0
        FROM DatabaseEntities.SupportRequestType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.Tag
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView124()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.Tag", @"
    SELECT VALUE -- Constructing Tag
        [ProjectFirma.Web.Models.Store.Tag](T1.Tag_TagID, T1.Tag_TenantID, T1.Tag_TagName, T1.Tag_TagDescription)
    FROM (
        SELECT 
            T.TagID AS Tag_TagID, 
            T.TenantID AS Tag_TenantID, 
            T.TagName AS Tag_TagName, 
            T.TagDescription AS Tag_TagDescription, 
            True AS _from0
        FROM DatabaseEntities.Tag AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.TaxonomyBranch
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView125()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.TaxonomyBranch", @"
    SELECT VALUE -- Constructing TaxonomyBranch
        [ProjectFirma.Web.Models.Store.TaxonomyBranch](T1.TaxonomyBranch_TaxonomyBranchID, T1.TaxonomyBranch_TenantID, T1.TaxonomyBranch_TaxonomyTrunkID, T1.TaxonomyBranch_TaxonomyBranchName, T1.TaxonomyBranch_TaxonomyBranchDescription, T1.TaxonomyBranch_ThemeColor, T1.TaxonomyBranch_TaxonomyBranchCode, T1.TaxonomyBranch_TaxonomyBranchSortOrder)
    FROM (
        SELECT 
            T.TaxonomyBranchID AS TaxonomyBranch_TaxonomyBranchID, 
            T.TenantID AS TaxonomyBranch_TenantID, 
            T.TaxonomyTrunkID AS TaxonomyBranch_TaxonomyTrunkID, 
            T.TaxonomyBranchName AS TaxonomyBranch_TaxonomyBranchName, 
            T.TaxonomyBranchDescription AS TaxonomyBranch_TaxonomyBranchDescription, 
            T.ThemeColor AS TaxonomyBranch_ThemeColor, 
            T.TaxonomyBranchCode AS TaxonomyBranch_TaxonomyBranchCode, 
            T.TaxonomyBranchSortOrder AS TaxonomyBranch_TaxonomyBranchSortOrder, 
            True AS _from0
        FROM DatabaseEntities.TaxonomyBranch AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.TaxonomyLeaf
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView126()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.TaxonomyLeaf", @"
    SELECT VALUE -- Constructing TaxonomyLeaf
        [ProjectFirma.Web.Models.Store.TaxonomyLeaf](T1.TaxonomyLeaf_TaxonomyLeafID, T1.TaxonomyLeaf_TenantID, T1.TaxonomyLeaf_TaxonomyBranchID, T1.TaxonomyLeaf_TaxonomyLeafName, T1.TaxonomyLeaf_TaxonomyLeafDescription, T1.TaxonomyLeaf_TaxonomyLeafCode, T1.TaxonomyLeaf_ThemeColor, T1.TaxonomyLeaf_TaxonomyLeafSortOrder)
    FROM (
        SELECT 
            T.TaxonomyLeafID AS TaxonomyLeaf_TaxonomyLeafID, 
            T.TenantID AS TaxonomyLeaf_TenantID, 
            T.TaxonomyBranchID AS TaxonomyLeaf_TaxonomyBranchID, 
            T.TaxonomyLeafName AS TaxonomyLeaf_TaxonomyLeafName, 
            T.TaxonomyLeafDescription AS TaxonomyLeaf_TaxonomyLeafDescription, 
            T.TaxonomyLeafCode AS TaxonomyLeaf_TaxonomyLeafCode, 
            T.ThemeColor AS TaxonomyLeaf_ThemeColor, 
            T.TaxonomyLeafSortOrder AS TaxonomyLeaf_TaxonomyLeafSortOrder, 
            True AS _from0
        FROM DatabaseEntities.TaxonomyLeaf AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.TaxonomyLeafPerformanceMeasure
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView127()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.TaxonomyLeafPerformanceMeasure", @"
    SELECT VALUE -- Constructing TaxonomyLeafPerformanceMeasure
        [ProjectFirma.Web.Models.Store.TaxonomyLeafPerformanceMeasure](T1.TaxonomyLeafPerformanceMeasure_TaxonomyLeafPerformanceMeasureID, T1.TaxonomyLeafPerformanceMeasure_TenantID, T1.TaxonomyLeafPerformanceMeasure_TaxonomyLeafID, T1.TaxonomyLeafPerformanceMeasure_PerformanceMeasureID, T1.TaxonomyLeafPerformanceMeasure_IsPrimaryTaxonomyLeaf)
    FROM (
        SELECT 
            T.TaxonomyLeafPerformanceMeasureID AS TaxonomyLeafPerformanceMeasure_TaxonomyLeafPerformanceMeasureID, 
            T.TenantID AS TaxonomyLeafPerformanceMeasure_TenantID, 
            T.TaxonomyLeafID AS TaxonomyLeafPerformanceMeasure_TaxonomyLeafID, 
            T.PerformanceMeasureID AS TaxonomyLeafPerformanceMeasure_PerformanceMeasureID, 
            T.IsPrimaryTaxonomyLeaf AS TaxonomyLeafPerformanceMeasure_IsPrimaryTaxonomyLeaf, 
            True AS _from0
        FROM DatabaseEntities.TaxonomyLeafPerformanceMeasure AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.TaxonomyLevel
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView128()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.TaxonomyLevel", @"
    SELECT VALUE -- Constructing TaxonomyLevel
        [ProjectFirma.Web.Models.Store.TaxonomyLevel](T1.TaxonomyLevel_TaxonomyLevelID, T1.TaxonomyLevel_TaxonomyLevelName, T1.TaxonomyLevel_TaxonomyLevelDisplayName)
    FROM (
        SELECT 
            T.TaxonomyLevelID AS TaxonomyLevel_TaxonomyLevelID, 
            T.TaxonomyLevelName AS TaxonomyLevel_TaxonomyLevelName, 
            T.TaxonomyLevelDisplayName AS TaxonomyLevel_TaxonomyLevelDisplayName, 
            True AS _from0
        FROM DatabaseEntities.TaxonomyLevel AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.TaxonomyTrunk
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView129()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.TaxonomyTrunk", @"
    SELECT VALUE -- Constructing TaxonomyTrunk
        [ProjectFirma.Web.Models.Store.TaxonomyTrunk](T1.TaxonomyTrunk_TaxonomyTrunkID, T1.TaxonomyTrunk_TenantID, T1.TaxonomyTrunk_TaxonomyTrunkName, T1.TaxonomyTrunk_TaxonomyTrunkDescription, T1.TaxonomyTrunk_ThemeColor, T1.TaxonomyTrunk_TaxonomyTrunkCode, T1.TaxonomyTrunk_TaxonomyTrunkSortOrder)
    FROM (
        SELECT 
            T.TaxonomyTrunkID AS TaxonomyTrunk_TaxonomyTrunkID, 
            T.TenantID AS TaxonomyTrunk_TenantID, 
            T.TaxonomyTrunkName AS TaxonomyTrunk_TaxonomyTrunkName, 
            T.TaxonomyTrunkDescription AS TaxonomyTrunk_TaxonomyTrunkDescription, 
            T.ThemeColor AS TaxonomyTrunk_ThemeColor, 
            T.TaxonomyTrunkCode AS TaxonomyTrunk_TaxonomyTrunkCode, 
            T.TaxonomyTrunkSortOrder AS TaxonomyTrunk_TaxonomyTrunkSortOrder, 
            True AS _from0
        FROM DatabaseEntities.TaxonomyTrunk AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.TechnicalAssistanceParameter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView130()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.TechnicalAssistanceParameter", @"
    SELECT VALUE -- Constructing TechnicalAssistanceParameter
        [ProjectFirma.Web.Models.Store.TechnicalAssistanceParameter](T1.TechnicalAssistanceParameter_TechnicalAssistanceParameterID, T1.TechnicalAssistanceParameter_TenantID, T1.TechnicalAssistanceParameter_Year, T1.TechnicalAssistanceParameter_EngineeringHourlyCost, T1.TechnicalAssistanceParameter_OtherAssistanceHourlyCost)
    FROM (
        SELECT 
            T.TechnicalAssistanceParameterID AS TechnicalAssistanceParameter_TechnicalAssistanceParameterID, 
            T.TenantID AS TechnicalAssistanceParameter_TenantID, 
            T.Year AS TechnicalAssistanceParameter_Year, 
            T.EngineeringHourlyCost AS TechnicalAssistanceParameter_EngineeringHourlyCost, 
            T.OtherAssistanceHourlyCost AS TechnicalAssistanceParameter_OtherAssistanceHourlyCost, 
            True AS _from0
        FROM DatabaseEntities.TechnicalAssistanceParameter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.Tenant
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView131()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.Tenant", @"
    SELECT VALUE -- Constructing Tenant
        [ProjectFirma.Web.Models.Store.Tenant](T1.Tenant_TenantID, T1.Tenant_TenantName, T1.Tenant_CanonicalHostNameLocal, T1.Tenant_CanonicalHostNameQa, T1.Tenant_CanonicalHostNameProd, T1.Tenant_ReportingYearStartDate, T1.Tenant_UseFiscalYears, T1.Tenant_UsesTechnicalAssistanceParameters)
    FROM (
        SELECT 
            T.TenantID AS Tenant_TenantID, 
            T.TenantName AS Tenant_TenantName, 
            T.CanonicalHostNameLocal AS Tenant_CanonicalHostNameLocal, 
            T.CanonicalHostNameQa AS Tenant_CanonicalHostNameQa, 
            T.CanonicalHostNameProd AS Tenant_CanonicalHostNameProd, 
            T.ReportingYearStartDate AS Tenant_ReportingYearStartDate, 
            T.UseFiscalYears AS Tenant_UseFiscalYears, 
            T.UsesTechnicalAssistanceParameters AS Tenant_UsesTechnicalAssistanceParameters, 
            True AS _from0
        FROM DatabaseEntities.Tenant AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.TenantAttribute
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView132()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3780);
            viewString.Append("\r\n    SELECT VALUE -- Constructing TenantAttribute\r\n        [ProjectFirma.Web.Mo");
            viewString.Append("dels.Store.TenantAttribute](T1.TenantAttribute_TenantAttributeID, T1.TenantAttri");
            viewString.Append("bute_TenantID, T1.TenantAttribute_DefaultBoundingBox, T1.TenantAttribute_Minimum");
            viewString.Append("Year, T1.TenantAttribute_PrimaryContactPersonID, T1.TenantAttribute_TenantSquare");
            viewString.Append("LogoFileResourceID, T1.TenantAttribute_TenantBannerLogoFileResourceID, T1.Tenant");
            viewString.Append("Attribute_TenantStyleSheetFileResourceID, T1.TenantAttribute_TenantDisplayName, ");
            viewString.Append("T1.TenantAttribute_ToolDisplayName, T1.TenantAttribute_RecaptchaPublicKey, T1.Te");
            viewString.Append("nantAttribute_RecaptchaPrivateKey, T1.TenantAttribute_ShowApplicationsToThePubli");
            viewString.Append("c, T1.TenantAttribute_TaxonomyLevelID, T1.TenantAttribute_AssociatePerfomanceMea");
            viewString.Append("sureTaxonomyLevelID, T1.TenantAttribute_IsActive, T1.TenantAttribute_ProjectExte");
            viewString.Append("rnalDataSourceEnabled, T1.TenantAttribute_AccomplishmentsDashboardFundingDisplay");
            viewString.Append("TypeID, T1.TenantAttribute_AccomplishmentsDashboardAccomplishmentsButtonText, T1");
            viewString.Append(".TenantAttribute_AccomplishmentsDashboardExpendituresButtonText, T1.TenantAttrib");
            viewString.Append("ute_AccomplishmentsDashboardOrganizationsButtonText, T1.TenantAttribute_Accompli");
            viewString.Append("shmentsDashboardIncludeReportingOrganizationType, T1.TenantAttribute_ShowLeadImp");
            viewString.Append("lementerLogoOnFactSheet, T1.TenantAttribute_EnableAccomplishmentsDashboard, T1.T");
            viewString.Append("enantAttribute_ProjectStewardshipAreaTypeID)\r\n    FROM (\r\n        SELECT \r\n     ");
            viewString.Append("       T.TenantAttributeID AS TenantAttribute_TenantAttributeID, \r\n            T");
            viewString.Append(".TenantID AS TenantAttribute_TenantID, \r\n            T.DefaultBoundingBox AS Ten");
            viewString.Append("antAttribute_DefaultBoundingBox, \r\n            T.MinimumYear AS TenantAttribute_");
            viewString.Append("MinimumYear, \r\n            T.PrimaryContactPersonID AS TenantAttribute_PrimaryCo");
            viewString.Append("ntactPersonID, \r\n            T.TenantSquareLogoFileResourceID AS TenantAttribute");
            viewString.Append("_TenantSquareLogoFileResourceID, \r\n            T.TenantBannerLogoFileResourceID ");
            viewString.Append("AS TenantAttribute_TenantBannerLogoFileResourceID, \r\n            T.TenantStyleSh");
            viewString.Append("eetFileResourceID AS TenantAttribute_TenantStyleSheetFileResourceID, \r\n         ");
            viewString.Append("   T.TenantDisplayName AS TenantAttribute_TenantDisplayName, \r\n            T.Too");
            viewString.Append("lDisplayName AS TenantAttribute_ToolDisplayName, \r\n            T.RecaptchaPublic");
            viewString.Append("Key AS TenantAttribute_RecaptchaPublicKey, \r\n            T.RecaptchaPrivateKey A");
            viewString.Append("S TenantAttribute_RecaptchaPrivateKey, \r\n            T.ShowApplicationsToThePubl");
            viewString.Append("ic AS TenantAttribute_ShowApplicationsToThePublic, \r\n            T.TaxonomyLevel");
            viewString.Append("ID AS TenantAttribute_TaxonomyLevelID, \r\n            T.AssociatePerfomanceMeasur");
            viewString.Append("eTaxonomyLevelID AS TenantAttribute_AssociatePerfomanceMeasureTaxonomyLevelID, \r");
            viewString.Append("\n            T.IsActive AS TenantAttribute_IsActive, \r\n            T.ProjectExte");
            viewString.Append("rnalDataSourceEnabled AS TenantAttribute_ProjectExternalDataSourceEnabled, \r\n   ");
            viewString.Append("         T.AccomplishmentsDashboardFundingDisplayTypeID AS TenantAttribute_Accom");
            viewString.Append("plishmentsDashboardFundingDisplayTypeID, \r\n            T.AccomplishmentsDashboar");
            viewString.Append("dAccomplishmentsButtonText AS TenantAttribute_AccomplishmentsDashboardAccomplish");
            viewString.Append("mentsButtonText, \r\n            T.AccomplishmentsDashboardExpendituresButtonText ");
            viewString.Append("AS TenantAttribute_AccomplishmentsDashboardExpendituresButtonText, \r\n           ");
            viewString.Append(" T.AccomplishmentsDashboardOrganizationsButtonText AS TenantAttribute_Accomplish");
            viewString.Append("mentsDashboardOrganizationsButtonText, \r\n            T.AccomplishmentsDashboardI");
            viewString.Append("ncludeReportingOrganizationType AS TenantAttribute_AccomplishmentsDashboardInclu");
            viewString.Append("deReportingOrganizationType, \r\n            T.ShowLeadImplementerLogoOnFactSheet ");
            viewString.Append("AS TenantAttribute_ShowLeadImplementerLogoOnFactSheet, \r\n            T.EnableAcc");
            viewString.Append("omplishmentsDashboard AS TenantAttribute_EnableAccomplishmentsDashboard, \r\n     ");
            viewString.Append("       T.ProjectStewardshipAreaTypeID AS TenantAttribute_ProjectStewardshipAreaT");
            viewString.Append("ypeID, \r\n            True AS _from0\r\n        FROM DatabaseEntities.TenantAttribu");
            viewString.Append("te AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.TenantAttribute", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.TrainingVideo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView133()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.TrainingVideo", @"
    SELECT VALUE -- Constructing TrainingVideo
        [ProjectFirma.Web.Models.Store.TrainingVideo](T1.TrainingVideo_TrainingVideoID, T1.TrainingVideo_TenantID, T1.TrainingVideo_VideoName, T1.TrainingVideo_VideoDescription, T1.TrainingVideo_VideoUploadDate, T1.TrainingVideo_VideoURL)
    FROM (
        SELECT 
            T.TrainingVideoID AS TrainingVideo_TrainingVideoID, 
            T.TenantID AS TrainingVideo_TenantID, 
            T.VideoName AS TrainingVideo_VideoName, 
            T.VideoDescription AS TrainingVideo_VideoDescription, 
            T.VideoUploadDate AS TrainingVideo_VideoUploadDate, 
            T.VideoURL AS TrainingVideo_VideoURL, 
            True AS _from0
        FROM DatabaseEntities.TrainingVideo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.TreatmentActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView134()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2425);
            viewString.Append("\r\n    SELECT VALUE -- Constructing TreatmentActivity\r\n        [ProjectFirma.Web.");
            viewString.Append("Models.Store.TreatmentActivity](T1.TreatmentActivity_TreatmentActivityID, T1.Tre");
            viewString.Append("atmentActivity_TenantID, T1.TreatmentActivity_ProjectID, T1.TreatmentActivity_Fu");
            viewString.Append("ndingSourceID, T1.TreatmentActivity_TreatmentActivityFootprintAcres, T1.Treatmen");
            viewString.Append("tActivity_TreatmentActivityBrushControlAcres, T1.TreatmentActivity_TreatmentActi");
            viewString.Append("vityThinningAcres, T1.TreatmentActivity_TreatmentActivityPruningAcres, T1.Treatm");
            viewString.Append("entActivity_TreatmentActivitySlashAcres, T1.TreatmentActivity_TreatmentActivityP");
            viewString.Append("rescribedBurnAcres, T1.TreatmentActivity_TreatmentActivityAllocatedAmount, T1.Tr");
            viewString.Append("eatmentActivity_TreatmentActivityTotalCost, T1.TreatmentActivity_TreatmentActivi");
            viewString.Append("tyGrantCost, T1.TreatmentActivity_TreatmentActivityStartDate, T1.TreatmentActivi");
            viewString.Append("ty_TreatmentActivityEndDate, T1.TreatmentActivity_TreatmentActivityNotes)\r\n    F");
            viewString.Append("ROM (\r\n        SELECT \r\n            T.TreatmentActivityID AS TreatmentActivity_T");
            viewString.Append("reatmentActivityID, \r\n            T.TenantID AS TreatmentActivity_TenantID, \r\n  ");
            viewString.Append("          T.ProjectID AS TreatmentActivity_ProjectID, \r\n            T.FundingSou");
            viewString.Append("rceID AS TreatmentActivity_FundingSourceID, \r\n            T.TreatmentActivityFoo");
            viewString.Append("tprintAcres AS TreatmentActivity_TreatmentActivityFootprintAcres, \r\n            ");
            viewString.Append("T.TreatmentActivityBrushControlAcres AS TreatmentActivity_TreatmentActivityBrush");
            viewString.Append("ControlAcres, \r\n            T.TreatmentActivityThinningAcres AS TreatmentActivit");
            viewString.Append("y_TreatmentActivityThinningAcres, \r\n            T.TreatmentActivityPruningAcres ");
            viewString.Append("AS TreatmentActivity_TreatmentActivityPruningAcres, \r\n            T.TreatmentAct");
            viewString.Append("ivitySlashAcres AS TreatmentActivity_TreatmentActivitySlashAcres, \r\n            ");
            viewString.Append("T.TreatmentActivityPrescribedBurnAcres AS TreatmentActivity_TreatmentActivityPre");
            viewString.Append("scribedBurnAcres, \r\n            T.TreatmentActivityAllocatedAmount AS TreatmentA");
            viewString.Append("ctivity_TreatmentActivityAllocatedAmount, \r\n            T.TreatmentActivityTotal");
            viewString.Append("Cost AS TreatmentActivity_TreatmentActivityTotalCost, \r\n            T.TreatmentA");
            viewString.Append("ctivityGrantCost AS TreatmentActivity_TreatmentActivityGrantCost, \r\n            ");
            viewString.Append("T.TreatmentActivityStartDate AS TreatmentActivity_TreatmentActivityStartDate, \r\n");
            viewString.Append("            T.TreatmentActivityEndDate AS TreatmentActivity_TreatmentActivityEnd");
            viewString.Append("Date, \r\n            T.TreatmentActivityNotes AS TreatmentActivity_TreatmentActiv");
            viewString.Append("ityNotes, \r\n            True AS _from0\r\n        FROM DatabaseEntities.TreatmentA");
            viewString.Append("ctivity AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.TreatmentActivity", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.AccomplishmentsDashboardFundingDisplayType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView135()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.AccomplishmentsDashboardFundingDisplayType", @"
    SELECT VALUE -- Constructing AccomplishmentsDashboardFundingDisplayType
        [ProjectFirma.Web.Models.AccomplishmentsDashboardFundingDisplayType](T1.AccomplishmentsDashboardFundingDisplayType_AccomplishmentsDashboardFundingDisplayTypeID, T1.AccomplishmentsDashboardFundingDisplayType_AccomplishmentsDashboardFundingDisplayTypeName, T1.AccomplishmentsDashboardFundingDisplayType_AccomplishmentsDashboardFundingDisplayTypeDisplayName, T1.AccomplishmentsDashboardFundingDisplayType_SortOrder)
    FROM (
        SELECT 
            T.AccomplishmentsDashboardFundingDisplayTypeID AS AccomplishmentsDashboardFundingDisplayType_AccomplishmentsDashboardFundingDisplayTypeID, 
            T.AccomplishmentsDashboardFundingDisplayTypeName AS AccomplishmentsDashboardFundingDisplayType_AccomplishmentsDashboardFundingDisplayTypeName, 
            T.AccomplishmentsDashboardFundingDisplayTypeDisplayName AS AccomplishmentsDashboardFundingDisplayType_AccomplishmentsDashboardFundingDisplayTypeDisplayName, 
            T.SortOrder AS AccomplishmentsDashboardFundingDisplayType_SortOrder, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.AccomplishmentsDashboardFundingDisplayType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.AssessmentGoal
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView136()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.AssessmentGoal", @"
    SELECT VALUE -- Constructing AssessmentGoal
        [ProjectFirma.Web.Models.AssessmentGoal](T1.AssessmentGoal_AssessmentGoalID, T1.AssessmentGoal_TenantID, T1.AssessmentGoal_AssessmentGoalNumber, T1.AssessmentGoal_AssessmentGoalTitle, T1.AssessmentGoal_AssessmentGoalDescription)
    FROM (
        SELECT 
            T.AssessmentGoalID AS AssessmentGoal_AssessmentGoalID, 
            T.TenantID AS AssessmentGoal_TenantID, 
            T.AssessmentGoalNumber AS AssessmentGoal_AssessmentGoalNumber, 
            T.AssessmentGoalTitle AS AssessmentGoal_AssessmentGoalTitle, 
            T.AssessmentGoalDescription AS AssessmentGoal_AssessmentGoalDescription, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.AssessmentGoal AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.AssessmentQuestion
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView137()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.AssessmentQuestion", @"
    SELECT VALUE -- Constructing AssessmentQuestion
        [ProjectFirma.Web.Models.AssessmentQuestion](T1.AssessmentQuestion_AssessmentQuestionID, T1.AssessmentQuestion_TenantID, T1.AssessmentQuestion_AssessmentSubGoalID, T1.AssessmentQuestion_AssessmentQuestionText, T1.AssessmentQuestion_ArchiveDate)
    FROM (
        SELECT 
            T.AssessmentQuestionID AS AssessmentQuestion_AssessmentQuestionID, 
            T.TenantID AS AssessmentQuestion_TenantID, 
            T.AssessmentSubGoalID AS AssessmentQuestion_AssessmentSubGoalID, 
            T.AssessmentQuestionText AS AssessmentQuestion_AssessmentQuestionText, 
            T.ArchiveDate AS AssessmentQuestion_ArchiveDate, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.AssessmentQuestion AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.AssessmentSubGoal
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView138()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.AssessmentSubGoal", @"
    SELECT VALUE -- Constructing AssessmentSubGoal
        [ProjectFirma.Web.Models.AssessmentSubGoal](T1.AssessmentSubGoal_AssessmentSubGoalID, T1.AssessmentSubGoal_TenantID, T1.AssessmentSubGoal_AssessmentGoalID, T1.AssessmentSubGoal_AssessmentSubGoalNumber, T1.AssessmentSubGoal_AssessmentSubGoalTitle, T1.AssessmentSubGoal_AssessmentSubGoalDescription)
    FROM (
        SELECT 
            T.AssessmentSubGoalID AS AssessmentSubGoal_AssessmentSubGoalID, 
            T.TenantID AS AssessmentSubGoal_TenantID, 
            T.AssessmentGoalID AS AssessmentSubGoal_AssessmentGoalID, 
            T.AssessmentSubGoalNumber AS AssessmentSubGoal_AssessmentSubGoalNumber, 
            T.AssessmentSubGoalTitle AS AssessmentSubGoal_AssessmentSubGoalTitle, 
            T.AssessmentSubGoalDescription AS AssessmentSubGoal_AssessmentSubGoalDescription, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.AssessmentSubGoal AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.AuditLog
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView139()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.AuditLog", @"
    SELECT VALUE -- Constructing AuditLog
        [ProjectFirma.Web.Models.AuditLog](T1.AuditLog_AuditLogID, T1.AuditLog_TenantID, T1.AuditLog_PersonID, T1.AuditLog_AuditLogDate, T1.AuditLog_AuditLogEventTypeID, T1.AuditLog_TableName, T1.AuditLog_RecordID, T1.AuditLog_ColumnName, T1.AuditLog_OriginalValue, T1.AuditLog_NewValue, T1.AuditLog_AuditDescription, T1.AuditLog_ProjectID)
    FROM (
        SELECT 
            T.AuditLogID AS AuditLog_AuditLogID, 
            T.TenantID AS AuditLog_TenantID, 
            T.PersonID AS AuditLog_PersonID, 
            T.AuditLogDate AS AuditLog_AuditLogDate, 
            T.AuditLogEventTypeID AS AuditLog_AuditLogEventTypeID, 
            T.TableName AS AuditLog_TableName, 
            T.RecordID AS AuditLog_RecordID, 
            T.ColumnName AS AuditLog_ColumnName, 
            T.OriginalValue AS AuditLog_OriginalValue, 
            T.NewValue AS AuditLog_NewValue, 
            T.AuditDescription AS AuditLog_AuditDescription, 
            T.ProjectID AS AuditLog_ProjectID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.AuditLog AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.AuditLogEventType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView140()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.AuditLogEventType", @"
    SELECT VALUE -- Constructing AuditLogEventType
        [ProjectFirma.Web.Models.AuditLogEventType](T1.AuditLogEventType_AuditLogEventTypeID, T1.AuditLogEventType_AuditLogEventTypeName, T1.AuditLogEventType_AuditLogEventTypeDisplayName)
    FROM (
        SELECT 
            T.AuditLogEventTypeID AS AuditLogEventType_AuditLogEventTypeID, 
            T.AuditLogEventTypeName AS AuditLogEventType_AuditLogEventTypeName, 
            T.AuditLogEventTypeDisplayName AS AuditLogEventType_AuditLogEventTypeDisplayName, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.AuditLogEventType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.Classification
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView141()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.Classification", @"
    SELECT VALUE -- Constructing Classification
        [ProjectFirma.Web.Models.Classification](T1.Classification_ClassificationID, T1.Classification_TenantID, T1.Classification_ClassificationDescription, T1.Classification_ThemeColor, T1.Classification_DisplayName, T1.Classification_GoalStatement, T1.Classification_KeyImageFileResourceID, T1.Classification_ClassificationSystemID, T1.Classification_ClassificationSortOrder)
    FROM (
        SELECT 
            T.ClassificationID AS Classification_ClassificationID, 
            T.TenantID AS Classification_TenantID, 
            T.ClassificationDescription AS Classification_ClassificationDescription, 
            T.ThemeColor AS Classification_ThemeColor, 
            T.DisplayName AS Classification_DisplayName, 
            T.GoalStatement AS Classification_GoalStatement, 
            T.KeyImageFileResourceID AS Classification_KeyImageFileResourceID, 
            T.ClassificationSystemID AS Classification_ClassificationSystemID, 
            T.ClassificationSortOrder AS Classification_ClassificationSortOrder, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.Classification AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ClassificationPerformanceMeasure
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView142()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ClassificationPerformanceMeasure", @"
    SELECT VALUE -- Constructing ClassificationPerformanceMeasure
        [ProjectFirma.Web.Models.ClassificationPerformanceMeasure](T1.ClassificationPerformanceMeasure_ClassificationPerformanceMeasureID, T1.ClassificationPerformanceMeasure_TenantID, T1.ClassificationPerformanceMeasure_ClassificationID, T1.ClassificationPerformanceMeasure_PerformanceMeasureID, T1.ClassificationPerformanceMeasure_IsPrimaryChart)
    FROM (
        SELECT 
            T.ClassificationPerformanceMeasureID AS ClassificationPerformanceMeasure_ClassificationPerformanceMeasureID, 
            T.TenantID AS ClassificationPerformanceMeasure_TenantID, 
            T.ClassificationID AS ClassificationPerformanceMeasure_ClassificationID, 
            T.PerformanceMeasureID AS ClassificationPerformanceMeasure_PerformanceMeasureID, 
            T.IsPrimaryChart AS ClassificationPerformanceMeasure_IsPrimaryChart, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ClassificationPerformanceMeasure AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ClassificationSystem
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView143()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ClassificationSystem", @"
    SELECT VALUE -- Constructing ClassificationSystem
        [ProjectFirma.Web.Models.ClassificationSystem](T1.ClassificationSystem_ClassificationSystemID, T1.ClassificationSystem_TenantID, T1.ClassificationSystem_ClassificationSystemName, T1.ClassificationSystem_ClassificationSystemDefinition, T1.ClassificationSystem_ClassificationSystemListPageContent)
    FROM (
        SELECT 
            T.ClassificationSystemID AS ClassificationSystem_ClassificationSystemID, 
            T.TenantID AS ClassificationSystem_TenantID, 
            T.ClassificationSystemName AS ClassificationSystem_ClassificationSystemName, 
            T.ClassificationSystemDefinition AS ClassificationSystem_ClassificationSystemDefinition, 
            T.ClassificationSystemListPageContent AS ClassificationSystem_ClassificationSystemListPageContent, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ClassificationSystem AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ContractorTimeActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView144()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ContractorTimeActivity", "\r\n    SELECT VALUE -- Constructing ContractorTimeActivity\r\n        [ProjectFirma." +
                    "Web.Models.ContractorTimeActivity](T1.ContractorTimeActivity_ContractorTimeActiv" +
                    "ityID, T1.ContractorTimeActivity_TenantID, T1.ContractorTimeActivity_ProjectID, " +
                    "T1.ContractorTimeActivity_FundingSourceID, T1.ContractorTimeActivity_ContractorT" +
                    "imeActivityAcreage, T1.ContractorTimeActivity_ContractorTimeActivityHours, T1.Co" +
                    "ntractorTimeActivity_ContractorTimeActivityRate, T1.ContractorTimeActivity_Contr" +
                    "actorTimeActivityStartDate, T1.ContractorTimeActivity_ContractorTimeActivityEndD" +
                    "ate, T1.ContractorTimeActivity_ContractorTimeActivityNotes)\r\n    FROM (\r\n       " +
                    " SELECT \r\n            T.ContractorTimeActivityID AS ContractorTimeActivity_Contr" +
                    "actorTimeActivityID, \r\n            T.TenantID AS ContractorTimeActivity_TenantID" +
                    ", \r\n            T.ProjectID AS ContractorTimeActivity_ProjectID, \r\n            T" +
                    ".FundingSourceID AS ContractorTimeActivity_FundingSourceID, \r\n            T.Cont" +
                    "ractorTimeActivityAcreage AS ContractorTimeActivity_ContractorTimeActivityAcreag" +
                    "e, \r\n            T.ContractorTimeActivityHours AS ContractorTimeActivity_Contrac" +
                    "torTimeActivityHours, \r\n            T.ContractorTimeActivityRate AS ContractorTi" +
                    "meActivity_ContractorTimeActivityRate, \r\n            T.ContractorTimeActivitySta" +
                    "rtDate AS ContractorTimeActivity_ContractorTimeActivityStartDate, \r\n            " +
                    "T.ContractorTimeActivityEndDate AS ContractorTimeActivity_ContractorTimeActivity" +
                    "EndDate, \r\n            T.ContractorTimeActivityNotes AS ContractorTimeActivity_C" +
                    "ontractorTimeActivityNotes, \r\n            True AS _from0\r\n        FROM ProjectFi" +
                    "rmaWebModelsStoreContainer.ContractorTimeActivity AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.CostParameterSet
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView145()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.CostParameterSet", @"
    SELECT VALUE -- Constructing CostParameterSet
        [ProjectFirma.Web.Models.CostParameterSet](T1.CostParameterSet_CostParameterSetID, T1.CostParameterSet_TenantID, T1.CostParameterSet_InflationRate, T1.CostParameterSet_CurrentYearForPVCalculations, T1.CostParameterSet_Comment, T1.CostParameterSet_CreateDate)
    FROM (
        SELECT 
            T.CostParameterSetID AS CostParameterSet_CostParameterSetID, 
            T.TenantID AS CostParameterSet_TenantID, 
            T.InflationRate AS CostParameterSet_InflationRate, 
            T.CurrentYearForPVCalculations AS CostParameterSet_CurrentYearForPVCalculations, 
            T.Comment AS CostParameterSet_Comment, 
            T.CreateDate AS CostParameterSet_CreateDate, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.CostParameterSet AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.County
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView146()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.County", @"
    SELECT VALUE -- Constructing County
        [ProjectFirma.Web.Models.County](T1.County_CountyID, T1.County_TenantID, T1.County_CountyName, T1.County_StateProvinceID, T1.County_CountyFeature)
    FROM (
        SELECT 
            T.CountyID AS County_CountyID, 
            T.TenantID AS County_TenantID, 
            T.CountyName AS County_CountyName, 
            T.StateProvinceID AS County_StateProvinceID, 
            T.CountyFeature AS County_CountyFeature, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.County AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.CustomPage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView147()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.CustomPage", @"
    SELECT VALUE -- Constructing CustomPage
        [ProjectFirma.Web.Models.CustomPage](T1.CustomPage_CustomPageID, T1.CustomPage_TenantID, T1.CustomPage_CustomPageDisplayName, T1.CustomPage_CustomPageVanityUrl, T1.CustomPage_CustomPageDisplayTypeID, T1.CustomPage_CustomPageContent)
    FROM (
        SELECT 
            T.CustomPageID AS CustomPage_CustomPageID, 
            T.TenantID AS CustomPage_TenantID, 
            T.CustomPageDisplayName AS CustomPage_CustomPageDisplayName, 
            T.CustomPageVanityUrl AS CustomPage_CustomPageVanityUrl, 
            T.CustomPageDisplayTypeID AS CustomPage_CustomPageDisplayTypeID, 
            T.CustomPageContent AS CustomPage_CustomPageContent, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.CustomPage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.CustomPageDisplayType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView148()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.CustomPageDisplayType", @"
    SELECT VALUE -- Constructing CustomPageDisplayType
        [ProjectFirma.Web.Models.CustomPageDisplayType](T1.CustomPageDisplayType_CustomPageDisplayTypeID, T1.CustomPageDisplayType_CustomPageDisplayTypeName, T1.CustomPageDisplayType_CustomPageDisplayTypeDisplayName, T1.CustomPageDisplayType_CustomPageDisplayTypeDescription)
    FROM (
        SELECT 
            T.CustomPageDisplayTypeID AS CustomPageDisplayType_CustomPageDisplayTypeID, 
            T.CustomPageDisplayTypeName AS CustomPageDisplayType_CustomPageDisplayTypeName, 
            T.CustomPageDisplayTypeDisplayName AS CustomPageDisplayType_CustomPageDisplayTypeDisplayName, 
            T.CustomPageDisplayTypeDescription AS CustomPageDisplayType_CustomPageDisplayTypeDescription, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.CustomPageDisplayType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.CustomPageImage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView149()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.CustomPageImage", @"
    SELECT VALUE -- Constructing CustomPageImage
        [ProjectFirma.Web.Models.CustomPageImage](T1.CustomPageImage_CustomPageImageID, T1.CustomPageImage_TenantID, T1.CustomPageImage_CustomPageID, T1.CustomPageImage_FileResourceID)
    FROM (
        SELECT 
            T.CustomPageImageID AS CustomPageImage_CustomPageImageID, 
            T.TenantID AS CustomPageImage_TenantID, 
            T.CustomPageID AS CustomPageImage_CustomPageID, 
            T.FileResourceID AS CustomPageImage_FileResourceID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.CustomPageImage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.FieldDefinition
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView150()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.FieldDefinition", @"
    SELECT VALUE -- Constructing FieldDefinition
        [ProjectFirma.Web.Models.FieldDefinition](T1.FieldDefinition_FieldDefinitionID, T1.FieldDefinition_FieldDefinitionName, T1.FieldDefinition_FieldDefinitionDisplayName, T1.FieldDefinition_DefaultDefinition)
    FROM (
        SELECT 
            T.FieldDefinitionID AS FieldDefinition_FieldDefinitionID, 
            T.FieldDefinitionName AS FieldDefinition_FieldDefinitionName, 
            T.FieldDefinitionDisplayName AS FieldDefinition_FieldDefinitionDisplayName, 
            T.DefaultDefinition AS FieldDefinition_DefaultDefinition, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.FieldDefinition AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.FieldDefinitionData
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView151()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.FieldDefinitionData", @"
    SELECT VALUE -- Constructing FieldDefinitionData
        [ProjectFirma.Web.Models.FieldDefinitionData](T1.FieldDefinitionData_FieldDefinitionDataID, T1.FieldDefinitionData_TenantID, T1.FieldDefinitionData_FieldDefinitionID, T1.FieldDefinitionData_FieldDefinitionDataValue, T1.FieldDefinitionData_FieldDefinitionLabel)
    FROM (
        SELECT 
            T.FieldDefinitionDataID AS FieldDefinitionData_FieldDefinitionDataID, 
            T.TenantID AS FieldDefinitionData_TenantID, 
            T.FieldDefinitionID AS FieldDefinitionData_FieldDefinitionID, 
            T.FieldDefinitionDataValue AS FieldDefinitionData_FieldDefinitionDataValue, 
            T.FieldDefinitionLabel AS FieldDefinitionData_FieldDefinitionLabel, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.FieldDefinitionData AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.FieldDefinitionDataImage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView152()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.FieldDefinitionDataImage", @"
    SELECT VALUE -- Constructing FieldDefinitionDataImage
        [ProjectFirma.Web.Models.FieldDefinitionDataImage](T1.FieldDefinitionDataImage_FieldDefinitionDataImageID, T1.FieldDefinitionDataImage_TenantID, T1.FieldDefinitionDataImage_FieldDefinitionDataID, T1.FieldDefinitionDataImage_FileResourceID)
    FROM (
        SELECT 
            T.FieldDefinitionDataImageID AS FieldDefinitionDataImage_FieldDefinitionDataImageID, 
            T.TenantID AS FieldDefinitionDataImage_TenantID, 
            T.FieldDefinitionDataID AS FieldDefinitionDataImage_FieldDefinitionDataID, 
            T.FileResourceID AS FieldDefinitionDataImage_FileResourceID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.FieldDefinitionDataImage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.FileResource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView153()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.FileResource", @"
    SELECT VALUE -- Constructing FileResource
        [ProjectFirma.Web.Models.FileResource](T1.FileResource_FileResourceID, T1.FileResource_TenantID, T1.FileResource_FileResourceMimeTypeID, T1.FileResource_OriginalBaseFilename, T1.FileResource_OriginalFileExtension, T1.FileResource_FileResourceGUID, T1.FileResource_FileResourceData, T1.FileResource_CreatePersonID, T1.FileResource_CreateDate)
    FROM (
        SELECT 
            T.FileResourceID AS FileResource_FileResourceID, 
            T.TenantID AS FileResource_TenantID, 
            T.FileResourceMimeTypeID AS FileResource_FileResourceMimeTypeID, 
            T.OriginalBaseFilename AS FileResource_OriginalBaseFilename, 
            T.OriginalFileExtension AS FileResource_OriginalFileExtension, 
            T.FileResourceGUID AS FileResource_FileResourceGUID, 
            T.FileResourceData AS FileResource_FileResourceData, 
            T.CreatePersonID AS FileResource_CreatePersonID, 
            T.CreateDate AS FileResource_CreateDate, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.FileResource AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.FileResourceMimeType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView154()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.FileResourceMimeType", @"
    SELECT VALUE -- Constructing FileResourceMimeType
        [ProjectFirma.Web.Models.FileResourceMimeType](T1.FileResourceMimeType_FileResourceMimeTypeID, T1.FileResourceMimeType_FileResourceMimeTypeName, T1.FileResourceMimeType_FileResourceMimeTypeDisplayName, T1.FileResourceMimeType_FileResourceMimeTypeContentTypeName, T1.FileResourceMimeType_FileResourceMimeTypeIconSmallFilename, T1.FileResourceMimeType_FileResourceMimeTypeIconNormalFilename)
    FROM (
        SELECT 
            T.FileResourceMimeTypeID AS FileResourceMimeType_FileResourceMimeTypeID, 
            T.FileResourceMimeTypeName AS FileResourceMimeType_FileResourceMimeTypeName, 
            T.FileResourceMimeTypeDisplayName AS FileResourceMimeType_FileResourceMimeTypeDisplayName, 
            T.FileResourceMimeTypeContentTypeName AS FileResourceMimeType_FileResourceMimeTypeContentTypeName, 
            T.FileResourceMimeTypeIconSmallFilename AS FileResourceMimeType_FileResourceMimeTypeIconSmallFilename, 
            T.FileResourceMimeTypeIconNormalFilename AS FileResourceMimeType_FileResourceMimeTypeIconNormalFilename, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.FileResourceMimeType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.FirmaHomePageImage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView155()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.FirmaHomePageImage", @"
    SELECT VALUE -- Constructing FirmaHomePageImage
        [ProjectFirma.Web.Models.FirmaHomePageImage](T1.FirmaHomePageImage_FirmaHomePageImageID, T1.FirmaHomePageImage_TenantID, T1.FirmaHomePageImage_FileResourceID, T1.FirmaHomePageImage_Caption, T1.FirmaHomePageImage_SortOrder)
    FROM (
        SELECT 
            T.FirmaHomePageImageID AS FirmaHomePageImage_FirmaHomePageImageID, 
            T.TenantID AS FirmaHomePageImage_TenantID, 
            T.FileResourceID AS FirmaHomePageImage_FileResourceID, 
            T.Caption AS FirmaHomePageImage_Caption, 
            T.SortOrder AS FirmaHomePageImage_SortOrder, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.FirmaHomePageImage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.FirmaPage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView156()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.FirmaPage", @"
    SELECT VALUE -- Constructing FirmaPage
        [ProjectFirma.Web.Models.FirmaPage](T1.FirmaPage_FirmaPageID, T1.FirmaPage_TenantID, T1.FirmaPage_FirmaPageTypeID, T1.FirmaPage_FirmaPageContent)
    FROM (
        SELECT 
            T.FirmaPageID AS FirmaPage_FirmaPageID, 
            T.TenantID AS FirmaPage_TenantID, 
            T.FirmaPageTypeID AS FirmaPage_FirmaPageTypeID, 
            T.FirmaPageContent AS FirmaPage_FirmaPageContent, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.FirmaPage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.FirmaPageImage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView157()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.FirmaPageImage", @"
    SELECT VALUE -- Constructing FirmaPageImage
        [ProjectFirma.Web.Models.FirmaPageImage](T1.FirmaPageImage_FirmaPageImageID, T1.FirmaPageImage_TenantID, T1.FirmaPageImage_FirmaPageID, T1.FirmaPageImage_FileResourceID)
    FROM (
        SELECT 
            T.FirmaPageImageID AS FirmaPageImage_FirmaPageImageID, 
            T.TenantID AS FirmaPageImage_TenantID, 
            T.FirmaPageID AS FirmaPageImage_FirmaPageID, 
            T.FileResourceID AS FirmaPageImage_FileResourceID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.FirmaPageImage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.FirmaPageRenderType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView158()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.FirmaPageRenderType", @"
    SELECT VALUE -- Constructing FirmaPageRenderType
        [ProjectFirma.Web.Models.FirmaPageRenderType](T1.FirmaPageRenderType_FirmaPageRenderTypeID, T1.FirmaPageRenderType_FirmaPageRenderTypeName, T1.FirmaPageRenderType_FirmaPageRenderTypeDisplayName)
    FROM (
        SELECT 
            T.FirmaPageRenderTypeID AS FirmaPageRenderType_FirmaPageRenderTypeID, 
            T.FirmaPageRenderTypeName AS FirmaPageRenderType_FirmaPageRenderTypeName, 
            T.FirmaPageRenderTypeDisplayName AS FirmaPageRenderType_FirmaPageRenderTypeDisplayName, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.FirmaPageRenderType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.FirmaPageType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView159()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.FirmaPageType", @"
    SELECT VALUE -- Constructing FirmaPageType
        [ProjectFirma.Web.Models.FirmaPageType](T1.FirmaPageType_FirmaPageTypeID, T1.FirmaPageType_FirmaPageTypeName, T1.FirmaPageType_FirmaPageTypeDisplayName, T1.FirmaPageType_FirmaPageRenderTypeID)
    FROM (
        SELECT 
            T.FirmaPageTypeID AS FirmaPageType_FirmaPageTypeID, 
            T.FirmaPageTypeName AS FirmaPageType_FirmaPageTypeName, 
            T.FirmaPageTypeDisplayName AS FirmaPageType_FirmaPageTypeDisplayName, 
            T.FirmaPageRenderTypeID AS FirmaPageType_FirmaPageRenderTypeID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.FirmaPageType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.FundingSource
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView160()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.FundingSource", @"
    SELECT VALUE -- Constructing FundingSource
        [ProjectFirma.Web.Models.FundingSource](T1.FundingSource_FundingSourceID, T1.FundingSource_TenantID, T1.FundingSource_OrganizationID, T1.FundingSource_FundingSourceName, T1.FundingSource_IsActive, T1.FundingSource_FundingSourceDescription, T1.FundingSource_FundingSourceAmount)
    FROM (
        SELECT 
            T.FundingSourceID AS FundingSource_FundingSourceID, 
            T.TenantID AS FundingSource_TenantID, 
            T.OrganizationID AS FundingSource_OrganizationID, 
            T.FundingSourceName AS FundingSource_FundingSourceName, 
            T.IsActive AS FundingSource_IsActive, 
            T.FundingSourceDescription AS FundingSource_FundingSourceDescription, 
            T.FundingSourceAmount AS FundingSource_FundingSourceAmount, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.FundingSource AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.GeospatialArea
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView161()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.GeospatialArea", @"
    SELECT VALUE -- Constructing GeospatialArea
        [ProjectFirma.Web.Models.GeospatialArea](T1.GeospatialArea_GeospatialAreaID, T1.GeospatialArea_TenantID, T1.GeospatialArea_GeospatialAreaName, T1.GeospatialArea_GeospatialAreaFeature, T1.GeospatialArea_GeospatialAreaTypeID)
    FROM (
        SELECT 
            T.GeospatialAreaID AS GeospatialArea_GeospatialAreaID, 
            T.TenantID AS GeospatialArea_TenantID, 
            T.GeospatialAreaName AS GeospatialArea_GeospatialAreaName, 
            T.GeospatialAreaFeature AS GeospatialArea_GeospatialAreaFeature, 
            T.GeospatialAreaTypeID AS GeospatialArea_GeospatialAreaTypeID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.GeospatialArea AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.GeospatialAreaType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView162()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.GeospatialAreaType", @"
    SELECT VALUE -- Constructing GeospatialAreaType
        [ProjectFirma.Web.Models.GeospatialAreaType](T1.GeospatialAreaType_GeospatialAreaTypeID, T1.GeospatialAreaType_TenantID, T1.GeospatialAreaType_GeospatialAreaTypeName, T1.GeospatialAreaType_GeospatialAreaTypeNamePluralized, T1.GeospatialAreaType_GeospatialAreaIntroContent, T1.GeospatialAreaType_GeospatialAreaTypeDefinition, T1.GeospatialAreaType_MapServiceUrl, T1.GeospatialAreaType_GeospatialAreaLayerName)
    FROM (
        SELECT 
            T.GeospatialAreaTypeID AS GeospatialAreaType_GeospatialAreaTypeID, 
            T.TenantID AS GeospatialAreaType_TenantID, 
            T.GeospatialAreaTypeName AS GeospatialAreaType_GeospatialAreaTypeName, 
            T.GeospatialAreaTypeNamePluralized AS GeospatialAreaType_GeospatialAreaTypeNamePluralized, 
            T.GeospatialAreaIntroContent AS GeospatialAreaType_GeospatialAreaIntroContent, 
            T.GeospatialAreaTypeDefinition AS GeospatialAreaType_GeospatialAreaTypeDefinition, 
            T.MapServiceUrl AS GeospatialAreaType_MapServiceUrl, 
            T.GeospatialAreaLayerName AS GeospatialAreaType_GeospatialAreaLayerName, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.GeospatialAreaType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.GoogleChartType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView163()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.GoogleChartType", @"
    SELECT VALUE -- Constructing GoogleChartType
        [ProjectFirma.Web.Models.GoogleChartType](T1.GoogleChartType_GoogleChartTypeID, T1.GoogleChartType_GoogleChartTypeName, T1.GoogleChartType_GoogleChartTypeDisplayName, T1.GoogleChartType_SeriesDataDisplayType)
    FROM (
        SELECT 
            T.GoogleChartTypeID AS GoogleChartType_GoogleChartTypeID, 
            T.GoogleChartTypeName AS GoogleChartType_GoogleChartTypeName, 
            T.GoogleChartTypeDisplayName AS GoogleChartType_GoogleChartTypeDisplayName, 
            T.SeriesDataDisplayType AS GoogleChartType_SeriesDataDisplayType, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.GoogleChartType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.Grant
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView164()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.Grant", @"
    SELECT VALUE -- Constructing Grant
        [ProjectFirma.Web.Models.Grant](T1.Grant_GrantID, T1.Grant_TenantID, T1.Grant_GrantNumber, T1.Grant_StartDate, T1.Grant_EndDate, T1.Grant_AwardedFunds)
    FROM (
        SELECT 
            T.GrantID AS Grant_GrantID, 
            T.TenantID AS Grant_TenantID, 
            T.GrantNumber AS Grant_GrantNumber, 
            T.StartDate AS Grant_StartDate, 
            T.EndDate AS Grant_EndDate, 
            T.AwardedFunds AS Grant_AwardedFunds, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.Grant AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.GrantAllocation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView165()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.GrantAllocation", @"
    SELECT VALUE -- Constructing GrantAllocation
        [ProjectFirma.Web.Models.GrantAllocation](T1.GrantAllocation_GrantAllocationID, T1.GrantAllocation_TenantID, T1.GrantAllocation_GrantID, T1.GrantAllocation_ProjectName, T1.GrantAllocation_StartDate, T1.GrantAllocation_EndDate, T1.GrantAllocation_AllocationAmount)
    FROM (
        SELECT 
            T.GrantAllocationID AS GrantAllocation_GrantAllocationID, 
            T.TenantID AS GrantAllocation_TenantID, 
            T.GrantID AS GrantAllocation_GrantID, 
            T.ProjectName AS GrantAllocation_ProjectName, 
            T.StartDate AS GrantAllocation_StartDate, 
            T.EndDate AS GrantAllocation_EndDate, 
            T.AllocationAmount AS GrantAllocation_AllocationAmount, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.GrantAllocation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ImportExternalProjectStaging
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView166()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ImportExternalProjectStaging", "\r\n    SELECT VALUE -- Constructing ImportExternalProjectStaging\r\n        [Project" +
                    "Firma.Web.Models.ImportExternalProjectStaging](T1.ImportExternalProjectStaging_I" +
                    "mportExternalProjectStagingID, T1.ImportExternalProjectStaging_TenantID, T1.Impo" +
                    "rtExternalProjectStaging_CreatePersonID, T1.ImportExternalProjectStaging_CreateD" +
                    "ate, T1.ImportExternalProjectStaging_ProjectName, T1.ImportExternalProjectStagin" +
                    "g_Description, T1.ImportExternalProjectStaging_PlannedDate, T1.ImportExternalPro" +
                    "jectStaging_ApprovalStartDate, T1.ImportExternalProjectStaging_EndDate, T1.Impor" +
                    "tExternalProjectStaging_EstimatedCost)\r\n    FROM (\r\n        SELECT \r\n           " +
                    " T.ImportExternalProjectStagingID AS ImportExternalProjectStaging_ImportExternal" +
                    "ProjectStagingID, \r\n            T.TenantID AS ImportExternalProjectStaging_Tenan" +
                    "tID, \r\n            T.CreatePersonID AS ImportExternalProjectStaging_CreatePerson" +
                    "ID, \r\n            T.CreateDate AS ImportExternalProjectStaging_CreateDate, \r\n   " +
                    "         T.ProjectName AS ImportExternalProjectStaging_ProjectName, \r\n          " +
                    "  T.Description AS ImportExternalProjectStaging_Description, \r\n            T.Pla" +
                    "nnedDate AS ImportExternalProjectStaging_PlannedDate, \r\n            T.ApprovalSt" +
                    "artDate AS ImportExternalProjectStaging_ApprovalStartDate, \r\n            T.EndDa" +
                    "te AS ImportExternalProjectStaging_EndDate, \r\n            T.EstimatedCost AS Imp" +
                    "ortExternalProjectStaging_EstimatedCost, \r\n            True AS _from0\r\n        F" +
                    "ROM ProjectFirmaWebModelsStoreContainer.ImportExternalProjectStaging AS T\r\n    )" +
                    " AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.MappedRegion
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView167()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.MappedRegion", @"
    SELECT VALUE -- Constructing MappedRegion
        [ProjectFirma.Web.Models.MappedRegion](T1.MappedRegion_MappedRegionID, T1.MappedRegion_TenantID, T1.MappedRegion_RegionName, T1.MappedRegion_RegionDisplayName, T1.MappedRegion_RegionFeature)
    FROM (
        SELECT 
            T.MappedRegionID AS MappedRegion_MappedRegionID, 
            T.TenantID AS MappedRegion_TenantID, 
            T.RegionName AS MappedRegion_RegionName, 
            T.RegionDisplayName AS MappedRegion_RegionDisplayName, 
            T.RegionFeature AS MappedRegion_RegionFeature, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.MappedRegion AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.MeasurementUnitType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView168()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.MeasurementUnitType", @"
    SELECT VALUE -- Constructing MeasurementUnitType
        [ProjectFirma.Web.Models.MeasurementUnitType](T1.MeasurementUnitType_MeasurementUnitTypeID, T1.MeasurementUnitType_MeasurementUnitTypeName, T1.MeasurementUnitType_MeasurementUnitTypeDisplayName, T1.MeasurementUnitType_LegendDisplayName, T1.MeasurementUnitType_SingularDisplayName, T1.MeasurementUnitType_NumberOfSignificantDigits)
    FROM (
        SELECT 
            T.MeasurementUnitTypeID AS MeasurementUnitType_MeasurementUnitTypeID, 
            T.MeasurementUnitTypeName AS MeasurementUnitType_MeasurementUnitTypeName, 
            T.MeasurementUnitTypeDisplayName AS MeasurementUnitType_MeasurementUnitTypeDisplayName, 
            T.LegendDisplayName AS MeasurementUnitType_LegendDisplayName, 
            T.SingularDisplayName AS MeasurementUnitType_SingularDisplayName, 
            T.NumberOfSignificantDigits AS MeasurementUnitType_NumberOfSignificantDigits, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.MeasurementUnitType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.MonitoringProgram
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView169()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.MonitoringProgram", @"
    SELECT VALUE -- Constructing MonitoringProgram
        [ProjectFirma.Web.Models.MonitoringProgram](T1.MonitoringProgram_MonitoringProgramID, T1.MonitoringProgram_TenantID, T1.MonitoringProgram_MonitoringProgramName, T1.MonitoringProgram_MonitoringApproach, T1.MonitoringProgram_MonitoringProgramUrl)
    FROM (
        SELECT 
            T.MonitoringProgramID AS MonitoringProgram_MonitoringProgramID, 
            T.TenantID AS MonitoringProgram_TenantID, 
            T.MonitoringProgramName AS MonitoringProgram_MonitoringProgramName, 
            T.MonitoringApproach AS MonitoringProgram_MonitoringApproach, 
            T.MonitoringProgramUrl AS MonitoringProgram_MonitoringProgramUrl, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.MonitoringProgram AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.MonitoringProgramDocument
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView170()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.MonitoringProgramDocument", @"
    SELECT VALUE -- Constructing MonitoringProgramDocument
        [ProjectFirma.Web.Models.MonitoringProgramDocument](T1.MonitoringProgramDocument_MonitoringProgramDocumentID, T1.MonitoringProgramDocument_TenantID, T1.MonitoringProgramDocument_FileResourceID, T1.MonitoringProgramDocument_MonitoringProgramID, T1.MonitoringProgramDocument_DisplayName, T1.MonitoringProgramDocument_UploadDate)
    FROM (
        SELECT 
            T.MonitoringProgramDocumentID AS MonitoringProgramDocument_MonitoringProgramDocumentID, 
            T.TenantID AS MonitoringProgramDocument_TenantID, 
            T.FileResourceID AS MonitoringProgramDocument_FileResourceID, 
            T.MonitoringProgramID AS MonitoringProgramDocument_MonitoringProgramID, 
            T.DisplayName AS MonitoringProgramDocument_DisplayName, 
            T.UploadDate AS MonitoringProgramDocument_UploadDate, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.MonitoringProgramDocument AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.MonitoringProgramPartner
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView171()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.MonitoringProgramPartner", @"
    SELECT VALUE -- Constructing MonitoringProgramPartner
        [ProjectFirma.Web.Models.MonitoringProgramPartner](T1.MonitoringProgramPartner_MonitoringProgramPartnerID, T1.MonitoringProgramPartner_TenantID, T1.MonitoringProgramPartner_MonitoringProgramID, T1.MonitoringProgramPartner_OrganizationID)
    FROM (
        SELECT 
            T.MonitoringProgramPartnerID AS MonitoringProgramPartner_MonitoringProgramPartnerID, 
            T.TenantID AS MonitoringProgramPartner_TenantID, 
            T.MonitoringProgramID AS MonitoringProgramPartner_MonitoringProgramID, 
            T.OrganizationID AS MonitoringProgramPartner_OrganizationID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.MonitoringProgramPartner AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.Notification
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView172()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.Notification", @"
    SELECT VALUE -- Constructing Notification
        [ProjectFirma.Web.Models.Notification](T1.Notification_NotificationID, T1.Notification_TenantID, T1.Notification_NotificationTypeID, T1.Notification_PersonID, T1.Notification_NotificationDate)
    FROM (
        SELECT 
            T.NotificationID AS Notification_NotificationID, 
            T.TenantID AS Notification_TenantID, 
            T.NotificationTypeID AS Notification_NotificationTypeID, 
            T.PersonID AS Notification_PersonID, 
            T.NotificationDate AS Notification_NotificationDate, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.Notification AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.NotificationProject
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView173()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.NotificationProject", @"
    SELECT VALUE -- Constructing NotificationProject
        [ProjectFirma.Web.Models.NotificationProject](T1.NotificationProject_NotificationProjectID, T1.NotificationProject_TenantID, T1.NotificationProject_NotificationID, T1.NotificationProject_ProjectID)
    FROM (
        SELECT 
            T.NotificationProjectID AS NotificationProject_NotificationProjectID, 
            T.TenantID AS NotificationProject_TenantID, 
            T.NotificationID AS NotificationProject_NotificationID, 
            T.ProjectID AS NotificationProject_ProjectID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.NotificationProject AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.NotificationType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView174()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.NotificationType", @"
    SELECT VALUE -- Constructing NotificationType
        [ProjectFirma.Web.Models.NotificationType](T1.NotificationType_NotificationTypeID, T1.NotificationType_NotificationTypeName, T1.NotificationType_NotificationTypeDisplayName)
    FROM (
        SELECT 
            T.NotificationTypeID AS NotificationType_NotificationTypeID, 
            T.NotificationTypeName AS NotificationType_NotificationTypeName, 
            T.NotificationTypeDisplayName AS NotificationType_NotificationTypeDisplayName, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.NotificationType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.Organization
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView175()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.Organization", @"
    SELECT VALUE -- Constructing Organization
        [ProjectFirma.Web.Models.Organization](T1.Organization_OrganizationID, T1.Organization_TenantID, T1.Organization_OrganizationGuid, T1.Organization_OrganizationName, T1.Organization_OrganizationShortName, T1.Organization_PrimaryContactPersonID, T1.Organization_IsActive, T1.Organization_OrganizationUrl, T1.Organization_LogoFileResourceID, T1.Organization_OrganizationTypeID, T1.Organization_OrganizationBoundary)
    FROM (
        SELECT 
            T.OrganizationID AS Organization_OrganizationID, 
            T.TenantID AS Organization_TenantID, 
            T.OrganizationGuid AS Organization_OrganizationGuid, 
            T.OrganizationName AS Organization_OrganizationName, 
            T.OrganizationShortName AS Organization_OrganizationShortName, 
            T.PrimaryContactPersonID AS Organization_PrimaryContactPersonID, 
            T.IsActive AS Organization_IsActive, 
            T.OrganizationUrl AS Organization_OrganizationUrl, 
            T.LogoFileResourceID AS Organization_LogoFileResourceID, 
            T.OrganizationTypeID AS Organization_OrganizationTypeID, 
            T.OrganizationBoundary AS Organization_OrganizationBoundary, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.Organization AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.OrganizationBoundaryStaging
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView176()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.OrganizationBoundaryStaging", @"
    SELECT VALUE -- Constructing OrganizationBoundaryStaging
        [ProjectFirma.Web.Models.OrganizationBoundaryStaging](T1.OrganizationBoundaryStaging_OrganizationBoundaryStagingID, T1.OrganizationBoundaryStaging_TenantID, T1.OrganizationBoundaryStaging_OrganizationID, T1.OrganizationBoundaryStaging_FeatureClassName, T1.OrganizationBoundaryStaging_GeoJson)
    FROM (
        SELECT 
            T.OrganizationBoundaryStagingID AS OrganizationBoundaryStaging_OrganizationBoundaryStagingID, 
            T.TenantID AS OrganizationBoundaryStaging_TenantID, 
            T.OrganizationID AS OrganizationBoundaryStaging_OrganizationID, 
            T.FeatureClassName AS OrganizationBoundaryStaging_FeatureClassName, 
            T.GeoJson AS OrganizationBoundaryStaging_GeoJson, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.OrganizationBoundaryStaging AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.OrganizationType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView177()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.OrganizationType", @"
    SELECT VALUE -- Constructing OrganizationType
        [ProjectFirma.Web.Models.OrganizationType](T1.OrganizationType_OrganizationTypeID, T1.OrganizationType_TenantID, T1.OrganizationType_OrganizationTypeName, T1.OrganizationType_OrganizationTypeAbbreviation, T1.OrganizationType_LegendColor, T1.OrganizationType_ShowOnProjectMaps, T1.OrganizationType_IsDefaultOrganizationType, T1.OrganizationType_IsFundingType)
    FROM (
        SELECT 
            T.OrganizationTypeID AS OrganizationType_OrganizationTypeID, 
            T.TenantID AS OrganizationType_TenantID, 
            T.OrganizationTypeName AS OrganizationType_OrganizationTypeName, 
            T.OrganizationTypeAbbreviation AS OrganizationType_OrganizationTypeAbbreviation, 
            T.LegendColor AS OrganizationType_LegendColor, 
            T.ShowOnProjectMaps AS OrganizationType_ShowOnProjectMaps, 
            T.IsDefaultOrganizationType AS OrganizationType_IsDefaultOrganizationType, 
            T.IsFundingType AS OrganizationType_IsFundingType, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.OrganizationType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.OrganizationTypeRelationshipType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView178()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.OrganizationTypeRelationshipType", @"
    SELECT VALUE -- Constructing OrganizationTypeRelationshipType
        [ProjectFirma.Web.Models.OrganizationTypeRelationshipType](T1.OrganizationTypeRelationshipType_OrganizationTypeRelationshipTypeID, T1.OrganizationTypeRelationshipType_TenantID, T1.OrganizationTypeRelationshipType_OrganizationTypeID, T1.OrganizationTypeRelationshipType_RelationshipTypeID)
    FROM (
        SELECT 
            T.OrganizationTypeRelationshipTypeID AS OrganizationTypeRelationshipType_OrganizationTypeRelationshipTypeID, 
            T.TenantID AS OrganizationTypeRelationshipType_TenantID, 
            T.OrganizationTypeID AS OrganizationTypeRelationshipType_OrganizationTypeID, 
            T.RelationshipTypeID AS OrganizationTypeRelationshipType_RelationshipTypeID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.OrganizationTypeRelationshipType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.PerformanceMeasure
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView179()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2242);
            viewString.Append("\r\n    SELECT VALUE -- Constructing PerformanceMeasure\r\n        [ProjectFirma.Web");
            viewString.Append(".Models.PerformanceMeasure](T1.PerformanceMeasure_PerformanceMeasureID, T1.Perfo");
            viewString.Append("rmanceMeasure_TenantID, T1.PerformanceMeasure_CriticalDefinitions, T1.Performanc");
            viewString.Append("eMeasure_ProjectReporting, T1.PerformanceMeasure_PerformanceMeasureDisplayName, ");
            viewString.Append("T1.PerformanceMeasure_MeasurementUnitTypeID, T1.PerformanceMeasure_PerformanceMe");
            viewString.Append("asureTypeID, T1.PerformanceMeasure_PerformanceMeasureDefinition, T1.PerformanceM");
            viewString.Append("easure_DataSourceText, T1.PerformanceMeasure_ExternalDataSourceUrl, T1.Performan");
            viewString.Append("ceMeasure_ChartCaption, T1.PerformanceMeasure_SwapChartAxes, T1.PerformanceMeasu");
            viewString.Append("re_CanCalculateTotal, T1.PerformanceMeasure_PerformanceMeasureSortOrder, T1.Perf");
            viewString.Append("ormanceMeasure_IsAggregatable, T1.PerformanceMeasure_PerformanceMeasureDataSourc");
            viewString.Append("eTypeID)\r\n    FROM (\r\n        SELECT \r\n            T.PerformanceMeasureID AS Per");
            viewString.Append("formanceMeasure_PerformanceMeasureID, \r\n            T.TenantID AS PerformanceMea");
            viewString.Append("sure_TenantID, \r\n            T.CriticalDefinitions AS PerformanceMeasure_Critica");
            viewString.Append("lDefinitions, \r\n            T.ProjectReporting AS PerformanceMeasure_ProjectRepo");
            viewString.Append("rting, \r\n            T.PerformanceMeasureDisplayName AS PerformanceMeasure_Perfo");
            viewString.Append("rmanceMeasureDisplayName, \r\n            T.MeasurementUnitTypeID AS PerformanceMe");
            viewString.Append("asure_MeasurementUnitTypeID, \r\n            T.PerformanceMeasureTypeID AS Perform");
            viewString.Append("anceMeasure_PerformanceMeasureTypeID, \r\n            T.PerformanceMeasureDefiniti");
            viewString.Append("on AS PerformanceMeasure_PerformanceMeasureDefinition, \r\n            T.DataSourc");
            viewString.Append("eText AS PerformanceMeasure_DataSourceText, \r\n            T.ExternalDataSourceUr");
            viewString.Append("l AS PerformanceMeasure_ExternalDataSourceUrl, \r\n            T.ChartCaption AS P");
            viewString.Append("erformanceMeasure_ChartCaption, \r\n            T.SwapChartAxes AS PerformanceMeas");
            viewString.Append("ure_SwapChartAxes, \r\n            T.CanCalculateTotal AS PerformanceMeasure_CanCa");
            viewString.Append("lculateTotal, \r\n            T.PerformanceMeasureSortOrder AS PerformanceMeasure_");
            viewString.Append("PerformanceMeasureSortOrder, \r\n            T.IsAggregatable AS PerformanceMeasur");
            viewString.Append("e_IsAggregatable, \r\n            T.PerformanceMeasureDataSourceTypeID AS Performa");
            viewString.Append("nceMeasure_PerformanceMeasureDataSourceTypeID, \r\n            True AS _from0\r\n   ");
            viewString.Append("     FROM ProjectFirmaWebModelsStoreContainer.PerformanceMeasure AS T\r\n    ) AS ");
            viewString.Append("T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.PerformanceMeasure", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.PerformanceMeasureActual
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView180()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.PerformanceMeasureActual", @"
    SELECT VALUE -- Constructing PerformanceMeasureActual
        [ProjectFirma.Web.Models.PerformanceMeasureActual](T1.PerformanceMeasureActual_PerformanceMeasureActualID, T1.PerformanceMeasureActual_TenantID, T1.PerformanceMeasureActual_ProjectID, T1.PerformanceMeasureActual_PerformanceMeasureID, T1.PerformanceMeasureActual_CalendarYear, T1.PerformanceMeasureActual_ActualValue)
    FROM (
        SELECT 
            T.PerformanceMeasureActualID AS PerformanceMeasureActual_PerformanceMeasureActualID, 
            T.TenantID AS PerformanceMeasureActual_TenantID, 
            T.ProjectID AS PerformanceMeasureActual_ProjectID, 
            T.PerformanceMeasureID AS PerformanceMeasureActual_PerformanceMeasureID, 
            T.CalendarYear AS PerformanceMeasureActual_CalendarYear, 
            T.ActualValue AS PerformanceMeasureActual_ActualValue, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.PerformanceMeasureActual AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.PerformanceMeasureActualSubcategoryOption
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView181()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.PerformanceMeasureActualSubcategoryOption", @"
    SELECT VALUE -- Constructing PerformanceMeasureActualSubcategoryOption
        [ProjectFirma.Web.Models.PerformanceMeasureActualSubcategoryOption](T1.PerformanceMeasureActualSubcategoryOption_PerformanceMeasureActualSubcategoryOptionID, T1.PerformanceMeasureActualSubcategoryOption_TenantID, T1.PerformanceMeasureActualSubcategoryOption_PerformanceMeasureActualID, T1.PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategoryOptionID, T1.PerformanceMeasureActualSubcategoryOption_PerformanceMeasureID, T1.PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategoryID)
    FROM (
        SELECT 
            T.PerformanceMeasureActualSubcategoryOptionID AS PerformanceMeasureActualSubcategoryOption_PerformanceMeasureActualSubcategoryOptionID, 
            T.TenantID AS PerformanceMeasureActualSubcategoryOption_TenantID, 
            T.PerformanceMeasureActualID AS PerformanceMeasureActualSubcategoryOption_PerformanceMeasureActualID, 
            T.PerformanceMeasureSubcategoryOptionID AS PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategoryOptionID, 
            T.PerformanceMeasureID AS PerformanceMeasureActualSubcategoryOption_PerformanceMeasureID, 
            T.PerformanceMeasureSubcategoryID AS PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategoryID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.PerformanceMeasureActualSubcategoryOption AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.PerformanceMeasureActualSubcategoryOptionUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView182()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.PerformanceMeasureActualSubcategoryOptionUpdate", "\r\n    SELECT VALUE -- Constructing PerformanceMeasureActualSubcategoryOptionUpdat" +
                    "e\r\n        [ProjectFirma.Web.Models.PerformanceMeasureActualSubcategoryOptionUpd" +
                    "ate](T1.PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureActual" +
                    "SubcategoryOptionUpdateID, T1.PerformanceMeasureActualSubcategoryOptionUpdate_Te" +
                    "nantID, T1.PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureAct" +
                    "ualUpdateID, T1.PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasu" +
                    "reSubcategoryOptionID, T1.PerformanceMeasureActualSubcategoryOptionUpdate_Perfor" +
                    "manceMeasureID, T1.PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMe" +
                    "asureSubcategoryID)\r\n    FROM (\r\n        SELECT \r\n            T.PerformanceMeasu" +
                    "reActualSubcategoryOptionUpdateID AS PerformanceMeasureActualSubcategoryOptionUp" +
                    "date_PerformanceMeasureActualSubcategoryOptionUpdateID, \r\n            T.TenantID" +
                    " AS PerformanceMeasureActualSubcategoryOptionUpdate_TenantID, \r\n            T.Pe" +
                    "rformanceMeasureActualUpdateID AS PerformanceMeasureActualSubcategoryOptionUpdat" +
                    "e_PerformanceMeasureActualUpdateID, \r\n            T.PerformanceMeasureSubcategor" +
                    "yOptionID AS PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureS" +
                    "ubcategoryOptionID, \r\n            T.PerformanceMeasureID AS PerformanceMeasureAc" +
                    "tualSubcategoryOptionUpdate_PerformanceMeasureID, \r\n            T.PerformanceMea" +
                    "sureSubcategoryID AS PerformanceMeasureActualSubcategoryOptionUpdate_Performance" +
                    "MeasureSubcategoryID, \r\n            True AS _from0\r\n        FROM ProjectFirmaWeb" +
                    "ModelsStoreContainer.PerformanceMeasureActualSubcategoryOptionUpdate AS T\r\n    )" +
                    " AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.PerformanceMeasureActualUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView183()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.PerformanceMeasureActualUpdate", @"
    SELECT VALUE -- Constructing PerformanceMeasureActualUpdate
        [ProjectFirma.Web.Models.PerformanceMeasureActualUpdate](T1.PerformanceMeasureActualUpdate_PerformanceMeasureActualUpdateID, T1.PerformanceMeasureActualUpdate_TenantID, T1.PerformanceMeasureActualUpdate_ProjectUpdateBatchID, T1.PerformanceMeasureActualUpdate_PerformanceMeasureID, T1.PerformanceMeasureActualUpdate_CalendarYear, T1.PerformanceMeasureActualUpdate_ActualValue)
    FROM (
        SELECT 
            T.PerformanceMeasureActualUpdateID AS PerformanceMeasureActualUpdate_PerformanceMeasureActualUpdateID, 
            T.TenantID AS PerformanceMeasureActualUpdate_TenantID, 
            T.ProjectUpdateBatchID AS PerformanceMeasureActualUpdate_ProjectUpdateBatchID, 
            T.PerformanceMeasureID AS PerformanceMeasureActualUpdate_PerformanceMeasureID, 
            T.CalendarYear AS PerformanceMeasureActualUpdate_CalendarYear, 
            T.ActualValue AS PerformanceMeasureActualUpdate_ActualValue, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.PerformanceMeasureActualUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.PerformanceMeasureDataSourceType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView184()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.PerformanceMeasureDataSourceType", @"
    SELECT VALUE -- Constructing PerformanceMeasureDataSourceType
        [ProjectFirma.Web.Models.PerformanceMeasureDataSourceType](T1.PerformanceMeasureDataSourceType_PerformanceMeasureDataSourceTypeID, T1.PerformanceMeasureDataSourceType_PerformanceMeasureDataSourceTypeName, T1.PerformanceMeasureDataSourceType_PerformanceMeasureDataSourceTypeDisplayName, T1.PerformanceMeasureDataSourceType_IsCustomCalculation)
    FROM (
        SELECT 
            T.PerformanceMeasureDataSourceTypeID AS PerformanceMeasureDataSourceType_PerformanceMeasureDataSourceTypeID, 
            T.PerformanceMeasureDataSourceTypeName AS PerformanceMeasureDataSourceType_PerformanceMeasureDataSourceTypeName, 
            T.PerformanceMeasureDataSourceTypeDisplayName AS PerformanceMeasureDataSourceType_PerformanceMeasureDataSourceTypeDisplayName, 
            T.IsCustomCalculation AS PerformanceMeasureDataSourceType_IsCustomCalculation, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.PerformanceMeasureDataSourceType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.PerformanceMeasureExpected
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView185()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.PerformanceMeasureExpected", @"
    SELECT VALUE -- Constructing PerformanceMeasureExpected
        [ProjectFirma.Web.Models.PerformanceMeasureExpected](T1.PerformanceMeasureExpected_PerformanceMeasureExpectedID, T1.PerformanceMeasureExpected_TenantID, T1.PerformanceMeasureExpected_ProjectID, T1.PerformanceMeasureExpected_PerformanceMeasureID, T1.PerformanceMeasureExpected_ExpectedValue)
    FROM (
        SELECT 
            T.PerformanceMeasureExpectedID AS PerformanceMeasureExpected_PerformanceMeasureExpectedID, 
            T.TenantID AS PerformanceMeasureExpected_TenantID, 
            T.ProjectID AS PerformanceMeasureExpected_ProjectID, 
            T.PerformanceMeasureID AS PerformanceMeasureExpected_PerformanceMeasureID, 
            T.ExpectedValue AS PerformanceMeasureExpected_ExpectedValue, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.PerformanceMeasureExpected AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.PerformanceMeasureExpectedSubcategoryOption
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView186()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.PerformanceMeasureExpectedSubcategoryOption", "\r\n    SELECT VALUE -- Constructing PerformanceMeasureExpectedSubcategoryOption\r\n " +
                    "       [ProjectFirma.Web.Models.PerformanceMeasureExpectedSubcategoryOption](T1." +
                    "PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureExpectedSubcategor" +
                    "yOptionID, T1.PerformanceMeasureExpectedSubcategoryOption_TenantID, T1.Performan" +
                    "ceMeasureExpectedSubcategoryOption_PerformanceMeasureExpectedID, T1.PerformanceM" +
                    "easureExpectedSubcategoryOption_PerformanceMeasureSubcategoryOptionID, T1.Perfor" +
                    "manceMeasureExpectedSubcategoryOption_PerformanceMeasureID, T1.PerformanceMeasur" +
                    "eExpectedSubcategoryOption_PerformanceMeasureSubcategoryID)\r\n    FROM (\r\n       " +
                    " SELECT \r\n            T.PerformanceMeasureExpectedSubcategoryOptionID AS Perform" +
                    "anceMeasureExpectedSubcategoryOption_PerformanceMeasureExpectedSubcategoryOption" +
                    "ID, \r\n            T.TenantID AS PerformanceMeasureExpectedSubcategoryOption_Tena" +
                    "ntID, \r\n            T.PerformanceMeasureExpectedID AS PerformanceMeasureExpected" +
                    "SubcategoryOption_PerformanceMeasureExpectedID, \r\n            T.PerformanceMeasu" +
                    "reSubcategoryOptionID AS PerformanceMeasureExpectedSubcategoryOption_Performance" +
                    "MeasureSubcategoryOptionID, \r\n            T.PerformanceMeasureID AS PerformanceM" +
                    "easureExpectedSubcategoryOption_PerformanceMeasureID, \r\n            T.Performanc" +
                    "eMeasureSubcategoryID AS PerformanceMeasureExpectedSubcategoryOption_Performance" +
                    "MeasureSubcategoryID, \r\n            True AS _from0\r\n        FROM ProjectFirmaWeb" +
                    "ModelsStoreContainer.PerformanceMeasureExpectedSubcategoryOption AS T\r\n    ) AS " +
                    "T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.PerformanceMeasureMonitoringProgram
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView187()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.PerformanceMeasureMonitoringProgram", @"
    SELECT VALUE -- Constructing PerformanceMeasureMonitoringProgram
        [ProjectFirma.Web.Models.PerformanceMeasureMonitoringProgram](T1.PerformanceMeasureMonitoringProgram_PerformanceMeasureMonitoringProgramID, T1.PerformanceMeasureMonitoringProgram_TenantID, T1.PerformanceMeasureMonitoringProgram_PerformanceMeasureID, T1.PerformanceMeasureMonitoringProgram_MonitoringProgramID)
    FROM (
        SELECT 
            T.PerformanceMeasureMonitoringProgramID AS PerformanceMeasureMonitoringProgram_PerformanceMeasureMonitoringProgramID, 
            T.TenantID AS PerformanceMeasureMonitoringProgram_TenantID, 
            T.PerformanceMeasureID AS PerformanceMeasureMonitoringProgram_PerformanceMeasureID, 
            T.MonitoringProgramID AS PerformanceMeasureMonitoringProgram_MonitoringProgramID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.PerformanceMeasureMonitoringProgram AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.PerformanceMeasureNote
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView188()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.PerformanceMeasureNote", @"
    SELECT VALUE -- Constructing PerformanceMeasureNote
        [ProjectFirma.Web.Models.PerformanceMeasureNote](T1.PerformanceMeasureNote_PerformanceMeasureNoteID, T1.PerformanceMeasureNote_TenantID, T1.PerformanceMeasureNote_PerformanceMeasureID, T1.PerformanceMeasureNote_Note, T1.PerformanceMeasureNote_CreatePersonID, T1.PerformanceMeasureNote_CreateDate, T1.PerformanceMeasureNote_UpdatePersonID, T1.PerformanceMeasureNote_UpdateDate)
    FROM (
        SELECT 
            T.PerformanceMeasureNoteID AS PerformanceMeasureNote_PerformanceMeasureNoteID, 
            T.TenantID AS PerformanceMeasureNote_TenantID, 
            T.PerformanceMeasureID AS PerformanceMeasureNote_PerformanceMeasureID, 
            T.Note AS PerformanceMeasureNote_Note, 
            T.CreatePersonID AS PerformanceMeasureNote_CreatePersonID, 
            T.CreateDate AS PerformanceMeasureNote_CreateDate, 
            T.UpdatePersonID AS PerformanceMeasureNote_UpdatePersonID, 
            T.UpdateDate AS PerformanceMeasureNote_UpdateDate, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.PerformanceMeasureNote AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.PerformanceMeasureSubcategory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView189()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.PerformanceMeasureSubcategory", @"
    SELECT VALUE -- Constructing PerformanceMeasureSubcategory
        [ProjectFirma.Web.Models.PerformanceMeasureSubcategory](T1.PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID, T1.PerformanceMeasureSubcategory_TenantID, T1.PerformanceMeasureSubcategory_PerformanceMeasureID, T1.PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryDisplayName, T1.PerformanceMeasureSubcategory_ChartConfigurationJson, T1.PerformanceMeasureSubcategory_GoogleChartTypeID)
    FROM (
        SELECT 
            T.PerformanceMeasureSubcategoryID AS PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID, 
            T.TenantID AS PerformanceMeasureSubcategory_TenantID, 
            T.PerformanceMeasureID AS PerformanceMeasureSubcategory_PerformanceMeasureID, 
            T.PerformanceMeasureSubcategoryDisplayName AS PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryDisplayName, 
            T.ChartConfigurationJson AS PerformanceMeasureSubcategory_ChartConfigurationJson, 
            T.GoogleChartTypeID AS PerformanceMeasureSubcategory_GoogleChartTypeID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.PerformanceMeasureSubcategory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.PerformanceMeasureSubcategoryOption
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView190()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.PerformanceMeasureSubcategoryOption", @"
    SELECT VALUE -- Constructing PerformanceMeasureSubcategoryOption
        [ProjectFirma.Web.Models.PerformanceMeasureSubcategoryOption](T1.PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID, T1.PerformanceMeasureSubcategoryOption_TenantID, T1.PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryID, T1.PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionName, T1.PerformanceMeasureSubcategoryOption_SortOrder, T1.PerformanceMeasureSubcategoryOption_ShowOnFactSheet)
    FROM (
        SELECT 
            T.PerformanceMeasureSubcategoryOptionID AS PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID, 
            T.TenantID AS PerformanceMeasureSubcategoryOption_TenantID, 
            T.PerformanceMeasureSubcategoryID AS PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryID, 
            T.PerformanceMeasureSubcategoryOptionName AS PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionName, 
            T.SortOrder AS PerformanceMeasureSubcategoryOption_SortOrder, 
            T.ShowOnFactSheet AS PerformanceMeasureSubcategoryOption_ShowOnFactSheet, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.PerformanceMeasureSubcategoryOption AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.PerformanceMeasureType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView191()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.PerformanceMeasureType", @"
    SELECT VALUE -- Constructing PerformanceMeasureType
        [ProjectFirma.Web.Models.PerformanceMeasureType](T1.PerformanceMeasureType_PerformanceMeasureTypeID, T1.PerformanceMeasureType_PerformanceMeasureTypeName, T1.PerformanceMeasureType_PerformanceMeasureTypeDisplayName)
    FROM (
        SELECT 
            T.PerformanceMeasureTypeID AS PerformanceMeasureType_PerformanceMeasureTypeID, 
            T.PerformanceMeasureTypeName AS PerformanceMeasureType_PerformanceMeasureTypeName, 
            T.PerformanceMeasureTypeDisplayName AS PerformanceMeasureType_PerformanceMeasureTypeDisplayName, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.PerformanceMeasureType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.Person
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView192()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.Person", "\r\n    SELECT VALUE -- Constructing Person\r\n        [ProjectFirma.Web.Models.Perso" +
                    "n](T1.Person_PersonID, T1.Person_TenantID, T1.Person_PersonUniqueIdentifier, T1." +
                    "Person_FirstName, T1.Person_LastName, T1.Person_Email, T1.Person_Phone, T1.Perso" +
                    "n_PasswordPdfK2SaltHash, T1.Person_RoleID, T1.Person_CreateDate, T1.Person_Updat" +
                    "eDate, T1.Person_LastActivityDate, T1.Person_IsActive, T1.Person_OrganizationID," +
                    " T1.Person_ReceiveSupportEmails, T1.Person_WebServiceAccessToken, T1.Person_Logi" +
                    "nName, T1.Person_MiddleName, T1.Person_StatewideVendorNumber, T1.Person_Notes, T" +
                    "1.Person_PersonAddress, T1.Person_AddedByPersonID)\r\n    FROM (\r\n        SELECT \r" +
                    "\n            T.PersonID AS Person_PersonID, \r\n            T.TenantID AS Person_T" +
                    "enantID, \r\n            T.PersonUniqueIdentifier AS Person_PersonUniqueIdentifier" +
                    ", \r\n            T.FirstName AS Person_FirstName, \r\n            T.LastName AS Per" +
                    "son_LastName, \r\n            T.Email AS Person_Email, \r\n            T.Phone AS Pe" +
                    "rson_Phone, \r\n            T.PasswordPdfK2SaltHash AS Person_PasswordPdfK2SaltHas" +
                    "h, \r\n            T.RoleID AS Person_RoleID, \r\n            T.CreateDate AS Person" +
                    "_CreateDate, \r\n            T.UpdateDate AS Person_UpdateDate, \r\n            T.La" +
                    "stActivityDate AS Person_LastActivityDate, \r\n            T.IsActive AS Person_Is" +
                    "Active, \r\n            T.OrganizationID AS Person_OrganizationID, \r\n            T" +
                    ".ReceiveSupportEmails AS Person_ReceiveSupportEmails, \r\n            T.WebService" +
                    "AccessToken AS Person_WebServiceAccessToken, \r\n            T.LoginName AS Person" +
                    "_LoginName, \r\n            T.MiddleName AS Person_MiddleName, \r\n            T.Sta" +
                    "tewideVendorNumber AS Person_StatewideVendorNumber, \r\n            T.Notes AS Per" +
                    "son_Notes, \r\n            T.PersonAddress AS Person_PersonAddress, \r\n            " +
                    "T.AddedByPersonID AS Person_AddedByPersonID, \r\n            True AS _from0\r\n     " +
                    "   FROM ProjectFirmaWebModelsStoreContainer.Person AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.PersonStewardGeospatialArea
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView193()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.PersonStewardGeospatialArea", @"
    SELECT VALUE -- Constructing PersonStewardGeospatialArea
        [ProjectFirma.Web.Models.PersonStewardGeospatialArea](T1.PersonStewardGeospatialArea_PersonStewardGeospatialAreaID, T1.PersonStewardGeospatialArea_TenantID, T1.PersonStewardGeospatialArea_PersonID, T1.PersonStewardGeospatialArea_GeospatialAreaID)
    FROM (
        SELECT 
            T.PersonStewardGeospatialAreaID AS PersonStewardGeospatialArea_PersonStewardGeospatialAreaID, 
            T.TenantID AS PersonStewardGeospatialArea_TenantID, 
            T.PersonID AS PersonStewardGeospatialArea_PersonID, 
            T.GeospatialAreaID AS PersonStewardGeospatialArea_GeospatialAreaID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.PersonStewardGeospatialArea AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.PersonStewardOrganization
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView194()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.PersonStewardOrganization", @"
    SELECT VALUE -- Constructing PersonStewardOrganization
        [ProjectFirma.Web.Models.PersonStewardOrganization](T1.PersonStewardOrganization_PersonStewardOrganizationID, T1.PersonStewardOrganization_TenantID, T1.PersonStewardOrganization_PersonID, T1.PersonStewardOrganization_OrganizationID)
    FROM (
        SELECT 
            T.PersonStewardOrganizationID AS PersonStewardOrganization_PersonStewardOrganizationID, 
            T.TenantID AS PersonStewardOrganization_TenantID, 
            T.PersonID AS PersonStewardOrganization_PersonID, 
            T.OrganizationID AS PersonStewardOrganization_OrganizationID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.PersonStewardOrganization AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.PersonStewardTaxonomyBranch
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView195()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.PersonStewardTaxonomyBranch", @"
    SELECT VALUE -- Constructing PersonStewardTaxonomyBranch
        [ProjectFirma.Web.Models.PersonStewardTaxonomyBranch](T1.PersonStewardTaxonomyBranch_PersonStewardTaxonomyBranchID, T1.PersonStewardTaxonomyBranch_TenantID, T1.PersonStewardTaxonomyBranch_PersonID, T1.PersonStewardTaxonomyBranch_TaxonomyBranchID)
    FROM (
        SELECT 
            T.PersonStewardTaxonomyBranchID AS PersonStewardTaxonomyBranch_PersonStewardTaxonomyBranchID, 
            T.TenantID AS PersonStewardTaxonomyBranch_TenantID, 
            T.PersonID AS PersonStewardTaxonomyBranch_PersonID, 
            T.TaxonomyBranchID AS PersonStewardTaxonomyBranch_TaxonomyBranchID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.PersonStewardTaxonomyBranch AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.Project
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView196()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2652);
            viewString.Append("\r\n    SELECT VALUE -- Constructing Project\r\n        [ProjectFirma.Web.Models.Pro");
            viewString.Append("ject](T1.Project_ProjectID, T1.Project_TenantID, T1.Project_TaxonomyLeafID, T1.P");
            viewString.Append("roject_ProjectStageID, T1.Project_ProjectName, T1.Project_ProjectDescription, T1");
            viewString.Append(".Project_ApprovalStartDate, T1.Project_CompletionDate, T1.Project_EstimatedTotal");
            viewString.Append("Cost, T1.Project_ProjectLocationPoint, T1.Project_PerformanceMeasureActualYearsE");
            viewString.Append("xemptionExplanation, T1.Project_IsFeatured, T1.Project_ProjectLocationNotes, T1.");
            viewString.Append("Project_PlannedDate, T1.Project_ProjectLocationSimpleTypeID, T1.Project_PrimaryC");
            viewString.Append("ontactPersonID, T1.Project_ProjectApprovalStatusID, T1.Project_ProposingPersonID");
            viewString.Append(", T1.Project_ProposingDate, T1.Project_PerformanceMeasureNotes, T1.Project_Submi");
            viewString.Append("ssionDate, T1.Project_ApprovalDate, T1.Project_ReviewedByPersonID, T1.Project_De");
            viewString.Append("faultBoundingBox, T1.Project_NoExpendituresToReportExplanation)\r\n    FROM (\r\n   ");
            viewString.Append("     SELECT \r\n            T.ProjectID AS Project_ProjectID, \r\n            T.Tena");
            viewString.Append("ntID AS Project_TenantID, \r\n            T.TaxonomyLeafID AS Project_TaxonomyLeaf");
            viewString.Append("ID, \r\n            T.ProjectStageID AS Project_ProjectStageID, \r\n            T.Pr");
            viewString.Append("ojectName AS Project_ProjectName, \r\n            T.ProjectDescription AS Project_");
            viewString.Append("ProjectDescription, \r\n            T.ApprovalStartDate AS Project_ApprovalStartDa");
            viewString.Append("te, \r\n            T.CompletionDate AS Project_CompletionDate, \r\n            T.Es");
            viewString.Append("timatedTotalCost AS Project_EstimatedTotalCost, \r\n            T.ProjectLocationP");
            viewString.Append("oint AS Project_ProjectLocationPoint, \r\n            T.PerformanceMeasureActualYe");
            viewString.Append("arsExemptionExplanation AS Project_PerformanceMeasureActualYearsExemptionExplana");
            viewString.Append("tion, \r\n            T.IsFeatured AS Project_IsFeatured, \r\n            T.ProjectL");
            viewString.Append("ocationNotes AS Project_ProjectLocationNotes, \r\n            T.PlannedDate AS Pro");
            viewString.Append("ject_PlannedDate, \r\n            T.ProjectLocationSimpleTypeID AS Project_Project");
            viewString.Append("LocationSimpleTypeID, \r\n            T.PrimaryContactPersonID AS Project_PrimaryC");
            viewString.Append("ontactPersonID, \r\n            T.ProjectApprovalStatusID AS Project_ProjectApprov");
            viewString.Append("alStatusID, \r\n            T.ProposingPersonID AS Project_ProposingPersonID, \r\n  ");
            viewString.Append("          T.ProposingDate AS Project_ProposingDate, \r\n            T.PerformanceM");
            viewString.Append("easureNotes AS Project_PerformanceMeasureNotes, \r\n            T.SubmissionDate A");
            viewString.Append("S Project_SubmissionDate, \r\n            T.ApprovalDate AS Project_ApprovalDate, ");
            viewString.Append("\r\n            T.ReviewedByPersonID AS Project_ReviewedByPersonID, \r\n            ");
            viewString.Append("T.DefaultBoundingBox AS Project_DefaultBoundingBox, \r\n            T.NoExpenditur");
            viewString.Append("esToReportExplanation AS Project_NoExpendituresToReportExplanation, \r\n          ");
            viewString.Append("  True AS _from0\r\n        FROM ProjectFirmaWebModelsStoreContainer.Project AS T\r");
            viewString.Append("\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.Project", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectApprovalStatus
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView197()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectApprovalStatus", @"
    SELECT VALUE -- Constructing ProjectApprovalStatus
        [ProjectFirma.Web.Models.ProjectApprovalStatus](T1.ProjectApprovalStatus_ProjectApprovalStatusID, T1.ProjectApprovalStatus_ProjectApprovalStatusName, T1.ProjectApprovalStatus_ProjectApprovalStatusDisplayName)
    FROM (
        SELECT 
            T.ProjectApprovalStatusID AS ProjectApprovalStatus_ProjectApprovalStatusID, 
            T.ProjectApprovalStatusName AS ProjectApprovalStatus_ProjectApprovalStatusName, 
            T.ProjectApprovalStatusDisplayName AS ProjectApprovalStatus_ProjectApprovalStatusDisplayName, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectApprovalStatus AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectAssessmentQuestion
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView198()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectAssessmentQuestion", @"
    SELECT VALUE -- Constructing ProjectAssessmentQuestion
        [ProjectFirma.Web.Models.ProjectAssessmentQuestion](T1.ProjectAssessmentQuestion_ProjectAssessmentQuestionID, T1.ProjectAssessmentQuestion_TenantID, T1.ProjectAssessmentQuestion_ProjectID, T1.ProjectAssessmentQuestion_AssessmentQuestionID, T1.ProjectAssessmentQuestion_Answer)
    FROM (
        SELECT 
            T.ProjectAssessmentQuestionID AS ProjectAssessmentQuestion_ProjectAssessmentQuestionID, 
            T.TenantID AS ProjectAssessmentQuestion_TenantID, 
            T.ProjectID AS ProjectAssessmentQuestion_ProjectID, 
            T.AssessmentQuestionID AS ProjectAssessmentQuestion_AssessmentQuestionID, 
            T.Answer AS ProjectAssessmentQuestion_Answer, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectAssessmentQuestion AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectBudget
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView199()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectBudget", @"
    SELECT VALUE -- Constructing ProjectBudget
        [ProjectFirma.Web.Models.ProjectBudget](T1.ProjectBudget_ProjectBudgetID, T1.ProjectBudget_TenantID, T1.ProjectBudget_ProjectID, T1.ProjectBudget_FundingSourceID, T1.ProjectBudget_ProjectCostTypeID, T1.ProjectBudget_CalendarYear, T1.ProjectBudget_BudgetedAmount)
    FROM (
        SELECT 
            T.ProjectBudgetID AS ProjectBudget_ProjectBudgetID, 
            T.TenantID AS ProjectBudget_TenantID, 
            T.ProjectID AS ProjectBudget_ProjectID, 
            T.FundingSourceID AS ProjectBudget_FundingSourceID, 
            T.ProjectCostTypeID AS ProjectBudget_ProjectCostTypeID, 
            T.CalendarYear AS ProjectBudget_CalendarYear, 
            T.BudgetedAmount AS ProjectBudget_BudgetedAmount, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectBudget AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectBudgetUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView200()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectBudgetUpdate", @"
    SELECT VALUE -- Constructing ProjectBudgetUpdate
        [ProjectFirma.Web.Models.ProjectBudgetUpdate](T1.ProjectBudgetUpdate_ProjectBudgetUpdateID, T1.ProjectBudgetUpdate_TenantID, T1.ProjectBudgetUpdate_ProjectUpdateBatchID, T1.ProjectBudgetUpdate_FundingSourceID, T1.ProjectBudgetUpdate_ProjectCostTypeID, T1.ProjectBudgetUpdate_CalendarYear, T1.ProjectBudgetUpdate_BudgetedAmount)
    FROM (
        SELECT 
            T.ProjectBudgetUpdateID AS ProjectBudgetUpdate_ProjectBudgetUpdateID, 
            T.TenantID AS ProjectBudgetUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectBudgetUpdate_ProjectUpdateBatchID, 
            T.FundingSourceID AS ProjectBudgetUpdate_FundingSourceID, 
            T.ProjectCostTypeID AS ProjectBudgetUpdate_ProjectCostTypeID, 
            T.CalendarYear AS ProjectBudgetUpdate_CalendarYear, 
            T.BudgetedAmount AS ProjectBudgetUpdate_BudgetedAmount, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectBudgetUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectClassification
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView201()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectClassification", @"
    SELECT VALUE -- Constructing ProjectClassification
        [ProjectFirma.Web.Models.ProjectClassification](T1.ProjectClassification_ProjectClassificationID, T1.ProjectClassification_TenantID, T1.ProjectClassification_ProjectID, T1.ProjectClassification_ClassificationID, T1.ProjectClassification_ProjectClassificationNotes)
    FROM (
        SELECT 
            T.ProjectClassificationID AS ProjectClassification_ProjectClassificationID, 
            T.TenantID AS ProjectClassification_TenantID, 
            T.ProjectID AS ProjectClassification_ProjectID, 
            T.ClassificationID AS ProjectClassification_ClassificationID, 
            T.ProjectClassificationNotes AS ProjectClassification_ProjectClassificationNotes, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectClassification AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectCostType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView202()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectCostType", @"
    SELECT VALUE -- Constructing ProjectCostType
        [ProjectFirma.Web.Models.ProjectCostType](T1.ProjectCostType_ProjectCostTypeID, T1.ProjectCostType_ProjectCostTypeName, T1.ProjectCostType_ProjectCostTypeDisplayName, T1.ProjectCostType_SortOrder)
    FROM (
        SELECT 
            T.ProjectCostTypeID AS ProjectCostType_ProjectCostTypeID, 
            T.ProjectCostTypeName AS ProjectCostType_ProjectCostTypeName, 
            T.ProjectCostTypeDisplayName AS ProjectCostType_ProjectCostTypeDisplayName, 
            T.SortOrder AS ProjectCostType_SortOrder, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectCostType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectCustomAttribute
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView203()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectCustomAttribute", @"
    SELECT VALUE -- Constructing ProjectCustomAttribute
        [ProjectFirma.Web.Models.ProjectCustomAttribute](T1.ProjectCustomAttribute_ProjectCustomAttributeID, T1.ProjectCustomAttribute_TenantID, T1.ProjectCustomAttribute_ProjectID, T1.ProjectCustomAttribute_ProjectCustomAttributeTypeID)
    FROM (
        SELECT 
            T.ProjectCustomAttributeID AS ProjectCustomAttribute_ProjectCustomAttributeID, 
            T.TenantID AS ProjectCustomAttribute_TenantID, 
            T.ProjectID AS ProjectCustomAttribute_ProjectID, 
            T.ProjectCustomAttributeTypeID AS ProjectCustomAttribute_ProjectCustomAttributeTypeID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectCustomAttribute AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectCustomAttributeDataType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView204()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectCustomAttributeDataType", @"
    SELECT VALUE -- Constructing ProjectCustomAttributeDataType
        [ProjectFirma.Web.Models.ProjectCustomAttributeDataType](T1.ProjectCustomAttributeDataType_ProjectCustomAttributeDataTypeID, T1.ProjectCustomAttributeDataType_ProjectCustomAttributeDataTypeName, T1.ProjectCustomAttributeDataType_ProjectCustomAttributeDataTypeDisplayName)
    FROM (
        SELECT 
            T.ProjectCustomAttributeDataTypeID AS ProjectCustomAttributeDataType_ProjectCustomAttributeDataTypeID, 
            T.ProjectCustomAttributeDataTypeName AS ProjectCustomAttributeDataType_ProjectCustomAttributeDataTypeName, 
            T.ProjectCustomAttributeDataTypeDisplayName AS ProjectCustomAttributeDataType_ProjectCustomAttributeDataTypeDisplayName, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectCustomAttributeDataType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectCustomAttributeType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView205()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectCustomAttributeType", "\r\n    SELECT VALUE -- Constructing ProjectCustomAttributeType\r\n        [ProjectFi" +
                    "rma.Web.Models.ProjectCustomAttributeType](T1.ProjectCustomAttributeType_Project" +
                    "CustomAttributeTypeID, T1.ProjectCustomAttributeType_TenantID, T1.ProjectCustomA" +
                    "ttributeType_ProjectCustomAttributeTypeName, T1.ProjectCustomAttributeType_Proje" +
                    "ctCustomAttributeDataTypeID, T1.ProjectCustomAttributeType_MeasurementUnitTypeID" +
                    ", T1.ProjectCustomAttributeType_IsRequired, T1.ProjectCustomAttributeType_Projec" +
                    "tCustomAttributeTypeDescription, T1.ProjectCustomAttributeType_ProjectCustomAttr" +
                    "ibuteTypeOptionsSchema)\r\n    FROM (\r\n        SELECT \r\n            T.ProjectCusto" +
                    "mAttributeTypeID AS ProjectCustomAttributeType_ProjectCustomAttributeTypeID, \r\n " +
                    "           T.TenantID AS ProjectCustomAttributeType_TenantID, \r\n            T.Pr" +
                    "ojectCustomAttributeTypeName AS ProjectCustomAttributeType_ProjectCustomAttribut" +
                    "eTypeName, \r\n            T.ProjectCustomAttributeDataTypeID AS ProjectCustomAttr" +
                    "ibuteType_ProjectCustomAttributeDataTypeID, \r\n            T.MeasurementUnitTypeI" +
                    "D AS ProjectCustomAttributeType_MeasurementUnitTypeID, \r\n            T.IsRequire" +
                    "d AS ProjectCustomAttributeType_IsRequired, \r\n            T.ProjectCustomAttribu" +
                    "teTypeDescription AS ProjectCustomAttributeType_ProjectCustomAttributeTypeDescri" +
                    "ption, \r\n            T.ProjectCustomAttributeTypeOptionsSchema AS ProjectCustomA" +
                    "ttributeType_ProjectCustomAttributeTypeOptionsSchema, \r\n            True AS _fro" +
                    "m0\r\n        FROM ProjectFirmaWebModelsStoreContainer.ProjectCustomAttributeType " +
                    "AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectCustomAttributeUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView206()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectCustomAttributeUpdate", @"
    SELECT VALUE -- Constructing ProjectCustomAttributeUpdate
        [ProjectFirma.Web.Models.ProjectCustomAttributeUpdate](T1.ProjectCustomAttributeUpdate_ProjectCustomAttributeUpdateID, T1.ProjectCustomAttributeUpdate_TenantID, T1.ProjectCustomAttributeUpdate_ProjectUpdateBatchID, T1.ProjectCustomAttributeUpdate_ProjectCustomAttributeTypeID)
    FROM (
        SELECT 
            T.ProjectCustomAttributeUpdateID AS ProjectCustomAttributeUpdate_ProjectCustomAttributeUpdateID, 
            T.TenantID AS ProjectCustomAttributeUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectCustomAttributeUpdate_ProjectUpdateBatchID, 
            T.ProjectCustomAttributeTypeID AS ProjectCustomAttributeUpdate_ProjectCustomAttributeTypeID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectCustomAttributeUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectCustomAttributeUpdateValue
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView207()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectCustomAttributeUpdateValue", @"
    SELECT VALUE -- Constructing ProjectCustomAttributeUpdateValue
        [ProjectFirma.Web.Models.ProjectCustomAttributeUpdateValue](T1.ProjectCustomAttributeUpdateValue_ProjectCustomAttributeUpdateValueID, T1.ProjectCustomAttributeUpdateValue_TenantID, T1.ProjectCustomAttributeUpdateValue_ProjectCustomAttributeUpdateID, T1.ProjectCustomAttributeUpdateValue_AttributeValue)
    FROM (
        SELECT 
            T.ProjectCustomAttributeUpdateValueID AS ProjectCustomAttributeUpdateValue_ProjectCustomAttributeUpdateValueID, 
            T.TenantID AS ProjectCustomAttributeUpdateValue_TenantID, 
            T.ProjectCustomAttributeUpdateID AS ProjectCustomAttributeUpdateValue_ProjectCustomAttributeUpdateID, 
            T.AttributeValue AS ProjectCustomAttributeUpdateValue_AttributeValue, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectCustomAttributeUpdateValue AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectCustomAttributeValue
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView208()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectCustomAttributeValue", @"
    SELECT VALUE -- Constructing ProjectCustomAttributeValue
        [ProjectFirma.Web.Models.ProjectCustomAttributeValue](T1.ProjectCustomAttributeValue_ProjectCustomAttributeValueID, T1.ProjectCustomAttributeValue_TenantID, T1.ProjectCustomAttributeValue_ProjectCustomAttributeID, T1.ProjectCustomAttributeValue_AttributeValue)
    FROM (
        SELECT 
            T.ProjectCustomAttributeValueID AS ProjectCustomAttributeValue_ProjectCustomAttributeValueID, 
            T.TenantID AS ProjectCustomAttributeValue_TenantID, 
            T.ProjectCustomAttributeID AS ProjectCustomAttributeValue_ProjectCustomAttributeID, 
            T.AttributeValue AS ProjectCustomAttributeValue_AttributeValue, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectCustomAttributeValue AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectDocument
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView209()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectDocument", @"
    SELECT VALUE -- Constructing ProjectDocument
        [ProjectFirma.Web.Models.ProjectDocument](T1.ProjectDocument_ProjectDocumentID, T1.ProjectDocument_TenantID, T1.ProjectDocument_ProjectID, T1.ProjectDocument_FileResourceID, T1.ProjectDocument_DisplayName, T1.ProjectDocument_Description)
    FROM (
        SELECT 
            T.ProjectDocumentID AS ProjectDocument_ProjectDocumentID, 
            T.TenantID AS ProjectDocument_TenantID, 
            T.ProjectID AS ProjectDocument_ProjectID, 
            T.FileResourceID AS ProjectDocument_FileResourceID, 
            T.DisplayName AS ProjectDocument_DisplayName, 
            T.Description AS ProjectDocument_Description, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectDocument AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectDocumentUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView210()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectDocumentUpdate", @"
    SELECT VALUE -- Constructing ProjectDocumentUpdate
        [ProjectFirma.Web.Models.ProjectDocumentUpdate](T1.ProjectDocumentUpdate_ProjectDocumentUpdateID, T1.ProjectDocumentUpdate_TenantID, T1.ProjectDocumentUpdate_ProjectUpdateBatchID, T1.ProjectDocumentUpdate_FileResourceID, T1.ProjectDocumentUpdate_DisplayName, T1.ProjectDocumentUpdate_Description)
    FROM (
        SELECT 
            T.ProjectDocumentUpdateID AS ProjectDocumentUpdate_ProjectDocumentUpdateID, 
            T.TenantID AS ProjectDocumentUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectDocumentUpdate_ProjectUpdateBatchID, 
            T.FileResourceID AS ProjectDocumentUpdate_FileResourceID, 
            T.DisplayName AS ProjectDocumentUpdate_DisplayName, 
            T.Description AS ProjectDocumentUpdate_Description, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectDocumentUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectExemptReportingType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView211()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectExemptReportingType", @"
    SELECT VALUE -- Constructing ProjectExemptReportingType
        [ProjectFirma.Web.Models.ProjectExemptReportingType](T1.ProjectExemptReportingType_ProjectExemptReportingTypeID, T1.ProjectExemptReportingType_ProjectExemptReportingTypeName, T1.ProjectExemptReportingType_ProjectExemptReportingTypeDisplayName)
    FROM (
        SELECT 
            T.ProjectExemptReportingTypeID AS ProjectExemptReportingType_ProjectExemptReportingTypeID, 
            T.ProjectExemptReportingTypeName AS ProjectExemptReportingType_ProjectExemptReportingTypeName, 
            T.ProjectExemptReportingTypeDisplayName AS ProjectExemptReportingType_ProjectExemptReportingTypeDisplayName, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectExemptReportingType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectExemptReportingYear
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView212()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectExemptReportingYear", @"
    SELECT VALUE -- Constructing ProjectExemptReportingYear
        [ProjectFirma.Web.Models.ProjectExemptReportingYear](T1.ProjectExemptReportingYear_ProjectExemptReportingYearID, T1.ProjectExemptReportingYear_TenantID, T1.ProjectExemptReportingYear_ProjectID, T1.ProjectExemptReportingYear_CalendarYear, T1.ProjectExemptReportingYear_ProjectExemptReportingTypeID)
    FROM (
        SELECT 
            T.ProjectExemptReportingYearID AS ProjectExemptReportingYear_ProjectExemptReportingYearID, 
            T.TenantID AS ProjectExemptReportingYear_TenantID, 
            T.ProjectID AS ProjectExemptReportingYear_ProjectID, 
            T.CalendarYear AS ProjectExemptReportingYear_CalendarYear, 
            T.ProjectExemptReportingTypeID AS ProjectExemptReportingYear_ProjectExemptReportingTypeID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectExemptReportingYear AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectExemptReportingYearUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView213()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectExemptReportingYearUpdate", @"
    SELECT VALUE -- Constructing ProjectExemptReportingYearUpdate
        [ProjectFirma.Web.Models.ProjectExemptReportingYearUpdate](T1.ProjectExemptReportingYearUpdate_ProjectExemptReportingYearUpdateID, T1.ProjectExemptReportingYearUpdate_TenantID, T1.ProjectExemptReportingYearUpdate_ProjectUpdateBatchID, T1.ProjectExemptReportingYearUpdate_CalendarYear, T1.ProjectExemptReportingYearUpdate_ProjectExemptReportingTypeID)
    FROM (
        SELECT 
            T.ProjectExemptReportingYearUpdateID AS ProjectExemptReportingYearUpdate_ProjectExemptReportingYearUpdateID, 
            T.TenantID AS ProjectExemptReportingYearUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectExemptReportingYearUpdate_ProjectUpdateBatchID, 
            T.CalendarYear AS ProjectExemptReportingYearUpdate_CalendarYear, 
            T.ProjectExemptReportingTypeID AS ProjectExemptReportingYearUpdate_ProjectExemptReportingTypeID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectExemptReportingYearUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectExternalLink
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView214()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectExternalLink", @"
    SELECT VALUE -- Constructing ProjectExternalLink
        [ProjectFirma.Web.Models.ProjectExternalLink](T1.ProjectExternalLink_ProjectExternalLinkID, T1.ProjectExternalLink_TenantID, T1.ProjectExternalLink_ProjectID, T1.ProjectExternalLink_ExternalLinkLabel, T1.ProjectExternalLink_ExternalLinkUrl)
    FROM (
        SELECT 
            T.ProjectExternalLinkID AS ProjectExternalLink_ProjectExternalLinkID, 
            T.TenantID AS ProjectExternalLink_TenantID, 
            T.ProjectID AS ProjectExternalLink_ProjectID, 
            T.ExternalLinkLabel AS ProjectExternalLink_ExternalLinkLabel, 
            T.ExternalLinkUrl AS ProjectExternalLink_ExternalLinkUrl, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectExternalLink AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectExternalLinkUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView215()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectExternalLinkUpdate", @"
    SELECT VALUE -- Constructing ProjectExternalLinkUpdate
        [ProjectFirma.Web.Models.ProjectExternalLinkUpdate](T1.ProjectExternalLinkUpdate_ProjectExternalLinkUpdateID, T1.ProjectExternalLinkUpdate_TenantID, T1.ProjectExternalLinkUpdate_ProjectUpdateBatchID, T1.ProjectExternalLinkUpdate_ExternalLinkLabel, T1.ProjectExternalLinkUpdate_ExternalLinkUrl)
    FROM (
        SELECT 
            T.ProjectExternalLinkUpdateID AS ProjectExternalLinkUpdate_ProjectExternalLinkUpdateID, 
            T.TenantID AS ProjectExternalLinkUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectExternalLinkUpdate_ProjectUpdateBatchID, 
            T.ExternalLinkLabel AS ProjectExternalLinkUpdate_ExternalLinkLabel, 
            T.ExternalLinkUrl AS ProjectExternalLinkUpdate_ExternalLinkUrl, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectExternalLinkUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectFundingSourceExpenditure
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView216()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectFundingSourceExpenditure", @"
    SELECT VALUE -- Constructing ProjectFundingSourceExpenditure
        [ProjectFirma.Web.Models.ProjectFundingSourceExpenditure](T1.ProjectFundingSourceExpenditure_ProjectFundingSourceExpenditureID, T1.ProjectFundingSourceExpenditure_TenantID, T1.ProjectFundingSourceExpenditure_ProjectID, T1.ProjectFundingSourceExpenditure_FundingSourceID, T1.ProjectFundingSourceExpenditure_CalendarYear, T1.ProjectFundingSourceExpenditure_ExpenditureAmount)
    FROM (
        SELECT 
            T.ProjectFundingSourceExpenditureID AS ProjectFundingSourceExpenditure_ProjectFundingSourceExpenditureID, 
            T.TenantID AS ProjectFundingSourceExpenditure_TenantID, 
            T.ProjectID AS ProjectFundingSourceExpenditure_ProjectID, 
            T.FundingSourceID AS ProjectFundingSourceExpenditure_FundingSourceID, 
            T.CalendarYear AS ProjectFundingSourceExpenditure_CalendarYear, 
            T.ExpenditureAmount AS ProjectFundingSourceExpenditure_ExpenditureAmount, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectFundingSourceExpenditure AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectFundingSourceExpenditureUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView217()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectFundingSourceExpenditureUpdate", @"
    SELECT VALUE -- Constructing ProjectFundingSourceExpenditureUpdate
        [ProjectFirma.Web.Models.ProjectFundingSourceExpenditureUpdate](T1.ProjectFundingSourceExpenditureUpdate_ProjectFundingSourceExpenditureUpdateID, T1.ProjectFundingSourceExpenditureUpdate_TenantID, T1.ProjectFundingSourceExpenditureUpdate_ProjectUpdateBatchID, T1.ProjectFundingSourceExpenditureUpdate_FundingSourceID, T1.ProjectFundingSourceExpenditureUpdate_CalendarYear, T1.ProjectFundingSourceExpenditureUpdate_ExpenditureAmount)
    FROM (
        SELECT 
            T.ProjectFundingSourceExpenditureUpdateID AS ProjectFundingSourceExpenditureUpdate_ProjectFundingSourceExpenditureUpdateID, 
            T.TenantID AS ProjectFundingSourceExpenditureUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectFundingSourceExpenditureUpdate_ProjectUpdateBatchID, 
            T.FundingSourceID AS ProjectFundingSourceExpenditureUpdate_FundingSourceID, 
            T.CalendarYear AS ProjectFundingSourceExpenditureUpdate_CalendarYear, 
            T.ExpenditureAmount AS ProjectFundingSourceExpenditureUpdate_ExpenditureAmount, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectFundingSourceExpenditureUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectFundingSourceRequest
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView218()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectFundingSourceRequest", @"
    SELECT VALUE -- Constructing ProjectFundingSourceRequest
        [ProjectFirma.Web.Models.ProjectFundingSourceRequest](T1.ProjectFundingSourceRequest_ProjectFundingSourceRequestID, T1.ProjectFundingSourceRequest_TenantID, T1.ProjectFundingSourceRequest_ProjectID, T1.ProjectFundingSourceRequest_FundingSourceID, T1.ProjectFundingSourceRequest_SecuredAmount, T1.ProjectFundingSourceRequest_UnsecuredAmount)
    FROM (
        SELECT 
            T.ProjectFundingSourceRequestID AS ProjectFundingSourceRequest_ProjectFundingSourceRequestID, 
            T.TenantID AS ProjectFundingSourceRequest_TenantID, 
            T.ProjectID AS ProjectFundingSourceRequest_ProjectID, 
            T.FundingSourceID AS ProjectFundingSourceRequest_FundingSourceID, 
            T.SecuredAmount AS ProjectFundingSourceRequest_SecuredAmount, 
            T.UnsecuredAmount AS ProjectFundingSourceRequest_UnsecuredAmount, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectFundingSourceRequest AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectFundingSourceRequestUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView219()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectFundingSourceRequestUpdate", @"
    SELECT VALUE -- Constructing ProjectFundingSourceRequestUpdate
        [ProjectFirma.Web.Models.ProjectFundingSourceRequestUpdate](T1.ProjectFundingSourceRequestUpdate_ProjectFundingSourceRequestUpdateID, T1.ProjectFundingSourceRequestUpdate_TenantID, T1.ProjectFundingSourceRequestUpdate_ProjectUpdateBatchID, T1.ProjectFundingSourceRequestUpdate_FundingSourceID, T1.ProjectFundingSourceRequestUpdate_SecuredAmount, T1.ProjectFundingSourceRequestUpdate_UnsecuredAmount)
    FROM (
        SELECT 
            T.ProjectFundingSourceRequestUpdateID AS ProjectFundingSourceRequestUpdate_ProjectFundingSourceRequestUpdateID, 
            T.TenantID AS ProjectFundingSourceRequestUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectFundingSourceRequestUpdate_ProjectUpdateBatchID, 
            T.FundingSourceID AS ProjectFundingSourceRequestUpdate_FundingSourceID, 
            T.SecuredAmount AS ProjectFundingSourceRequestUpdate_SecuredAmount, 
            T.UnsecuredAmount AS ProjectFundingSourceRequestUpdate_UnsecuredAmount, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectFundingSourceRequestUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectGeospatialArea
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView220()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectGeospatialArea", @"
    SELECT VALUE -- Constructing ProjectGeospatialArea
        [ProjectFirma.Web.Models.ProjectGeospatialArea](T1.ProjectGeospatialArea_ProjectGeospatialAreaID, T1.ProjectGeospatialArea_TenantID, T1.ProjectGeospatialArea_ProjectID, T1.ProjectGeospatialArea_GeospatialAreaID)
    FROM (
        SELECT 
            T.ProjectGeospatialAreaID AS ProjectGeospatialArea_ProjectGeospatialAreaID, 
            T.TenantID AS ProjectGeospatialArea_TenantID, 
            T.ProjectID AS ProjectGeospatialArea_ProjectID, 
            T.GeospatialAreaID AS ProjectGeospatialArea_GeospatialAreaID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectGeospatialArea AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectGeospatialAreaTypeNote
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView221()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectGeospatialAreaTypeNote", @"
    SELECT VALUE -- Constructing ProjectGeospatialAreaTypeNote
        [ProjectFirma.Web.Models.ProjectGeospatialAreaTypeNote](T1.ProjectGeospatialAreaTypeNote_ProjectGeospatialAreaTypeNoteID, T1.ProjectGeospatialAreaTypeNote_TenantID, T1.ProjectGeospatialAreaTypeNote_ProjectID, T1.ProjectGeospatialAreaTypeNote_GeospatialAreaTypeID, T1.ProjectGeospatialAreaTypeNote_Notes)
    FROM (
        SELECT 
            T.ProjectGeospatialAreaTypeNoteID AS ProjectGeospatialAreaTypeNote_ProjectGeospatialAreaTypeNoteID, 
            T.TenantID AS ProjectGeospatialAreaTypeNote_TenantID, 
            T.ProjectID AS ProjectGeospatialAreaTypeNote_ProjectID, 
            T.GeospatialAreaTypeID AS ProjectGeospatialAreaTypeNote_GeospatialAreaTypeID, 
            T.Notes AS ProjectGeospatialAreaTypeNote_Notes, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectGeospatialAreaTypeNote AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectGeospatialAreaTypeNoteUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView222()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectGeospatialAreaTypeNoteUpdate", @"
    SELECT VALUE -- Constructing ProjectGeospatialAreaTypeNoteUpdate
        [ProjectFirma.Web.Models.ProjectGeospatialAreaTypeNoteUpdate](T1.ProjectGeospatialAreaTypeNoteUpdate_ProjectGeospatialAreaTypeNoteUpdateID, T1.ProjectGeospatialAreaTypeNoteUpdate_TenantID, T1.ProjectGeospatialAreaTypeNoteUpdate_ProjectUpdateBatchID, T1.ProjectGeospatialAreaTypeNoteUpdate_GeospatialAreaTypeID, T1.ProjectGeospatialAreaTypeNoteUpdate_Notes)
    FROM (
        SELECT 
            T.ProjectGeospatialAreaTypeNoteUpdateID AS ProjectGeospatialAreaTypeNoteUpdate_ProjectGeospatialAreaTypeNoteUpdateID, 
            T.TenantID AS ProjectGeospatialAreaTypeNoteUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectGeospatialAreaTypeNoteUpdate_ProjectUpdateBatchID, 
            T.GeospatialAreaTypeID AS ProjectGeospatialAreaTypeNoteUpdate_GeospatialAreaTypeID, 
            T.Notes AS ProjectGeospatialAreaTypeNoteUpdate_Notes, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectGeospatialAreaTypeNoteUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectGeospatialAreaUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView223()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectGeospatialAreaUpdate", @"
    SELECT VALUE -- Constructing ProjectGeospatialAreaUpdate
        [ProjectFirma.Web.Models.ProjectGeospatialAreaUpdate](T1.ProjectGeospatialAreaUpdate_ProjectGeospatialAreaUpdateID, T1.ProjectGeospatialAreaUpdate_TenantID, T1.ProjectGeospatialAreaUpdate_ProjectUpdateBatchID, T1.ProjectGeospatialAreaUpdate_GeospatialAreaID)
    FROM (
        SELECT 
            T.ProjectGeospatialAreaUpdateID AS ProjectGeospatialAreaUpdate_ProjectGeospatialAreaUpdateID, 
            T.TenantID AS ProjectGeospatialAreaUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectGeospatialAreaUpdate_ProjectUpdateBatchID, 
            T.GeospatialAreaID AS ProjectGeospatialAreaUpdate_GeospatialAreaID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectGeospatialAreaUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectImage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView224()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectImage", @"
    SELECT VALUE -- Constructing ProjectImage
        [ProjectFirma.Web.Models.ProjectImage](T1.ProjectImage_ProjectImageID, T1.ProjectImage_TenantID, T1.ProjectImage_FileResourceID, T1.ProjectImage_ProjectID, T1.ProjectImage_ProjectImageTimingID, T1.ProjectImage_Caption, T1.ProjectImage_Credit, T1.ProjectImage_IsKeyPhoto, T1.ProjectImage_ExcludeFromFactSheet)
    FROM (
        SELECT 
            T.ProjectImageID AS ProjectImage_ProjectImageID, 
            T.TenantID AS ProjectImage_TenantID, 
            T.FileResourceID AS ProjectImage_FileResourceID, 
            T.ProjectID AS ProjectImage_ProjectID, 
            T.ProjectImageTimingID AS ProjectImage_ProjectImageTimingID, 
            T.Caption AS ProjectImage_Caption, 
            T.Credit AS ProjectImage_Credit, 
            T.IsKeyPhoto AS ProjectImage_IsKeyPhoto, 
            T.ExcludeFromFactSheet AS ProjectImage_ExcludeFromFactSheet, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectImage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectImageTiming
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView225()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectImageTiming", @"
    SELECT VALUE -- Constructing ProjectImageTiming
        [ProjectFirma.Web.Models.ProjectImageTiming](T1.ProjectImageTiming_ProjectImageTimingID, T1.ProjectImageTiming_ProjectImageTimingName, T1.ProjectImageTiming_ProjectImageTimingDisplayName, T1.ProjectImageTiming_SortOrder)
    FROM (
        SELECT 
            T.ProjectImageTimingID AS ProjectImageTiming_ProjectImageTimingID, 
            T.ProjectImageTimingName AS ProjectImageTiming_ProjectImageTimingName, 
            T.ProjectImageTimingDisplayName AS ProjectImageTiming_ProjectImageTimingDisplayName, 
            T.SortOrder AS ProjectImageTiming_SortOrder, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectImageTiming AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectImageUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView226()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectImageUpdate", @"
    SELECT VALUE -- Constructing ProjectImageUpdate
        [ProjectFirma.Web.Models.ProjectImageUpdate](T1.ProjectImageUpdate_ProjectImageUpdateID, T1.ProjectImageUpdate_TenantID, T1.ProjectImageUpdate_FileResourceID, T1.ProjectImageUpdate_ProjectUpdateBatchID, T1.ProjectImageUpdate_ProjectImageTimingID, T1.ProjectImageUpdate_Caption, T1.ProjectImageUpdate_Credit, T1.ProjectImageUpdate_IsKeyPhoto, T1.ProjectImageUpdate_ExcludeFromFactSheet, T1.ProjectImageUpdate_ProjectImageID)
    FROM (
        SELECT 
            T.ProjectImageUpdateID AS ProjectImageUpdate_ProjectImageUpdateID, 
            T.TenantID AS ProjectImageUpdate_TenantID, 
            T.FileResourceID AS ProjectImageUpdate_FileResourceID, 
            T.ProjectUpdateBatchID AS ProjectImageUpdate_ProjectUpdateBatchID, 
            T.ProjectImageTimingID AS ProjectImageUpdate_ProjectImageTimingID, 
            T.Caption AS ProjectImageUpdate_Caption, 
            T.Credit AS ProjectImageUpdate_Credit, 
            T.IsKeyPhoto AS ProjectImageUpdate_IsKeyPhoto, 
            T.ExcludeFromFactSheet AS ProjectImageUpdate_ExcludeFromFactSheet, 
            T.ProjectImageID AS ProjectImageUpdate_ProjectImageID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectImageUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectInternalNote
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView227()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectInternalNote", @"
    SELECT VALUE -- Constructing ProjectInternalNote
        [ProjectFirma.Web.Models.ProjectInternalNote](T1.ProjectInternalNote_ProjectInternalNoteID, T1.ProjectInternalNote_TenantID, T1.ProjectInternalNote_ProjectID, T1.ProjectInternalNote_Note, T1.ProjectInternalNote_CreatePersonID, T1.ProjectInternalNote_CreateDate, T1.ProjectInternalNote_UpdatePersonID, T1.ProjectInternalNote_UpdateDate)
    FROM (
        SELECT 
            T.ProjectInternalNoteID AS ProjectInternalNote_ProjectInternalNoteID, 
            T.TenantID AS ProjectInternalNote_TenantID, 
            T.ProjectID AS ProjectInternalNote_ProjectID, 
            T.Note AS ProjectInternalNote_Note, 
            T.CreatePersonID AS ProjectInternalNote_CreatePersonID, 
            T.CreateDate AS ProjectInternalNote_CreateDate, 
            T.UpdatePersonID AS ProjectInternalNote_UpdatePersonID, 
            T.UpdateDate AS ProjectInternalNote_UpdateDate, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectInternalNote AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectLocation
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView228()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectLocation", @"
    SELECT VALUE -- Constructing ProjectLocation
        [ProjectFirma.Web.Models.ProjectLocation](T1.ProjectLocation_ProjectLocationID, T1.ProjectLocation_TenantID, T1.ProjectLocation_ProjectID, T1.ProjectLocation_ProjectLocationGeometry, T1.ProjectLocation_Annotation)
    FROM (
        SELECT 
            T.ProjectLocationID AS ProjectLocation_ProjectLocationID, 
            T.TenantID AS ProjectLocation_TenantID, 
            T.ProjectID AS ProjectLocation_ProjectID, 
            T.ProjectLocationGeometry AS ProjectLocation_ProjectLocationGeometry, 
            T.Annotation AS ProjectLocation_Annotation, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectLocation AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectLocationSimpleType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView229()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectLocationSimpleType", @"
    SELECT VALUE -- Constructing ProjectLocationSimpleType
        [ProjectFirma.Web.Models.ProjectLocationSimpleType](T1.ProjectLocationSimpleType_ProjectLocationSimpleTypeID, T1.ProjectLocationSimpleType_ProjectLocationSimpleTypeName, T1.ProjectLocationSimpleType_DisplayInstructions, T1.ProjectLocationSimpleType_DisplayOrder)
    FROM (
        SELECT 
            T.ProjectLocationSimpleTypeID AS ProjectLocationSimpleType_ProjectLocationSimpleTypeID, 
            T.ProjectLocationSimpleTypeName AS ProjectLocationSimpleType_ProjectLocationSimpleTypeName, 
            T.DisplayInstructions AS ProjectLocationSimpleType_DisplayInstructions, 
            T.DisplayOrder AS ProjectLocationSimpleType_DisplayOrder, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectLocationSimpleType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectLocationStaging
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView230()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectLocationStaging", @"
    SELECT VALUE -- Constructing ProjectLocationStaging
        [ProjectFirma.Web.Models.ProjectLocationStaging](T1.ProjectLocationStaging_ProjectLocationStagingID, T1.ProjectLocationStaging_TenantID, T1.ProjectLocationStaging_ProjectID, T1.ProjectLocationStaging_PersonID, T1.ProjectLocationStaging_FeatureClassName, T1.ProjectLocationStaging_GeoJson, T1.ProjectLocationStaging_SelectedProperty, T1.ProjectLocationStaging_ShouldImport)
    FROM (
        SELECT 
            T.ProjectLocationStagingID AS ProjectLocationStaging_ProjectLocationStagingID, 
            T.TenantID AS ProjectLocationStaging_TenantID, 
            T.ProjectID AS ProjectLocationStaging_ProjectID, 
            T.PersonID AS ProjectLocationStaging_PersonID, 
            T.FeatureClassName AS ProjectLocationStaging_FeatureClassName, 
            T.GeoJson AS ProjectLocationStaging_GeoJson, 
            T.SelectedProperty AS ProjectLocationStaging_SelectedProperty, 
            T.ShouldImport AS ProjectLocationStaging_ShouldImport, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectLocationStaging AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectLocationStagingUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView231()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectLocationStagingUpdate", @"
    SELECT VALUE -- Constructing ProjectLocationStagingUpdate
        [ProjectFirma.Web.Models.ProjectLocationStagingUpdate](T1.ProjectLocationStagingUpdate_ProjectLocationStagingUpdateID, T1.ProjectLocationStagingUpdate_TenantID, T1.ProjectLocationStagingUpdate_ProjectUpdateBatchID, T1.ProjectLocationStagingUpdate_PersonID, T1.ProjectLocationStagingUpdate_FeatureClassName, T1.ProjectLocationStagingUpdate_GeoJson, T1.ProjectLocationStagingUpdate_SelectedProperty, T1.ProjectLocationStagingUpdate_ShouldImport)
    FROM (
        SELECT 
            T.ProjectLocationStagingUpdateID AS ProjectLocationStagingUpdate_ProjectLocationStagingUpdateID, 
            T.TenantID AS ProjectLocationStagingUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectLocationStagingUpdate_ProjectUpdateBatchID, 
            T.PersonID AS ProjectLocationStagingUpdate_PersonID, 
            T.FeatureClassName AS ProjectLocationStagingUpdate_FeatureClassName, 
            T.GeoJson AS ProjectLocationStagingUpdate_GeoJson, 
            T.SelectedProperty AS ProjectLocationStagingUpdate_SelectedProperty, 
            T.ShouldImport AS ProjectLocationStagingUpdate_ShouldImport, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectLocationStagingUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectLocationUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView232()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectLocationUpdate", @"
    SELECT VALUE -- Constructing ProjectLocationUpdate
        [ProjectFirma.Web.Models.ProjectLocationUpdate](T1.ProjectLocationUpdate_ProjectLocationUpdateID, T1.ProjectLocationUpdate_TenantID, T1.ProjectLocationUpdate_ProjectUpdateBatchID, T1.ProjectLocationUpdate_ProjectLocationUpdateGeometry, T1.ProjectLocationUpdate_Annotation)
    FROM (
        SELECT 
            T.ProjectLocationUpdateID AS ProjectLocationUpdate_ProjectLocationUpdateID, 
            T.TenantID AS ProjectLocationUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectLocationUpdate_ProjectUpdateBatchID, 
            T.ProjectLocationUpdateGeometry AS ProjectLocationUpdate_ProjectLocationUpdateGeometry, 
            T.Annotation AS ProjectLocationUpdate_Annotation, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectLocationUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectNote
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView233()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectNote", @"
    SELECT VALUE -- Constructing ProjectNote
        [ProjectFirma.Web.Models.ProjectNote](T1.ProjectNote_ProjectNoteID, T1.ProjectNote_TenantID, T1.ProjectNote_ProjectID, T1.ProjectNote_Note, T1.ProjectNote_CreatePersonID, T1.ProjectNote_CreateDate, T1.ProjectNote_UpdatePersonID, T1.ProjectNote_UpdateDate)
    FROM (
        SELECT 
            T.ProjectNoteID AS ProjectNote_ProjectNoteID, 
            T.TenantID AS ProjectNote_TenantID, 
            T.ProjectID AS ProjectNote_ProjectID, 
            T.Note AS ProjectNote_Note, 
            T.CreatePersonID AS ProjectNote_CreatePersonID, 
            T.CreateDate AS ProjectNote_CreateDate, 
            T.UpdatePersonID AS ProjectNote_UpdatePersonID, 
            T.UpdateDate AS ProjectNote_UpdateDate, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectNote AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectNoteUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView234()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectNoteUpdate", @"
    SELECT VALUE -- Constructing ProjectNoteUpdate
        [ProjectFirma.Web.Models.ProjectNoteUpdate](T1.ProjectNoteUpdate_ProjectNoteUpdateID, T1.ProjectNoteUpdate_TenantID, T1.ProjectNoteUpdate_ProjectUpdateBatchID, T1.ProjectNoteUpdate_Note, T1.ProjectNoteUpdate_CreatePersonID, T1.ProjectNoteUpdate_CreateDate, T1.ProjectNoteUpdate_UpdatePersonID, T1.ProjectNoteUpdate_UpdateDate)
    FROM (
        SELECT 
            T.ProjectNoteUpdateID AS ProjectNoteUpdate_ProjectNoteUpdateID, 
            T.TenantID AS ProjectNoteUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectNoteUpdate_ProjectUpdateBatchID, 
            T.Note AS ProjectNoteUpdate_Note, 
            T.CreatePersonID AS ProjectNoteUpdate_CreatePersonID, 
            T.CreateDate AS ProjectNoteUpdate_CreateDate, 
            T.UpdatePersonID AS ProjectNoteUpdate_UpdatePersonID, 
            T.UpdateDate AS ProjectNoteUpdate_UpdateDate, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectNoteUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectOrganization
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView235()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectOrganization", @"
    SELECT VALUE -- Constructing ProjectOrganization
        [ProjectFirma.Web.Models.ProjectOrganization](T1.ProjectOrganization_ProjectOrganizationID, T1.ProjectOrganization_TenantID, T1.ProjectOrganization_ProjectID, T1.ProjectOrganization_OrganizationID, T1.ProjectOrganization_RelationshipTypeID)
    FROM (
        SELECT 
            T.ProjectOrganizationID AS ProjectOrganization_ProjectOrganizationID, 
            T.TenantID AS ProjectOrganization_TenantID, 
            T.ProjectID AS ProjectOrganization_ProjectID, 
            T.OrganizationID AS ProjectOrganization_OrganizationID, 
            T.RelationshipTypeID AS ProjectOrganization_RelationshipTypeID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectOrganization AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectOrganizationUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView236()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectOrganizationUpdate", @"
    SELECT VALUE -- Constructing ProjectOrganizationUpdate
        [ProjectFirma.Web.Models.ProjectOrganizationUpdate](T1.ProjectOrganizationUpdate_ProjectOrganizationUpdateID, T1.ProjectOrganizationUpdate_TenantID, T1.ProjectOrganizationUpdate_ProjectUpdateBatchID, T1.ProjectOrganizationUpdate_OrganizationID, T1.ProjectOrganizationUpdate_RelationshipTypeID)
    FROM (
        SELECT 
            T.ProjectOrganizationUpdateID AS ProjectOrganizationUpdate_ProjectOrganizationUpdateID, 
            T.TenantID AS ProjectOrganizationUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectOrganizationUpdate_ProjectUpdateBatchID, 
            T.OrganizationID AS ProjectOrganizationUpdate_OrganizationID, 
            T.RelationshipTypeID AS ProjectOrganizationUpdate_RelationshipTypeID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectOrganizationUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectPerson
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView237()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectPerson", @"
    SELECT VALUE -- Constructing ProjectPerson
        [ProjectFirma.Web.Models.ProjectPerson](T1.ProjectPerson_ProjectPersonID, T1.ProjectPerson_TenantID, T1.ProjectPerson_ProjectID, T1.ProjectPerson_PersonID, T1.ProjectPerson_ProjectPersonRelationshipTypeID)
    FROM (
        SELECT 
            T.ProjectPersonID AS ProjectPerson_ProjectPersonID, 
            T.TenantID AS ProjectPerson_TenantID, 
            T.ProjectID AS ProjectPerson_ProjectID, 
            T.PersonID AS ProjectPerson_PersonID, 
            T.ProjectPersonRelationshipTypeID AS ProjectPerson_ProjectPersonRelationshipTypeID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectPerson AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectPersonRelationshipType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView238()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectPersonRelationshipType", @"
    SELECT VALUE -- Constructing ProjectPersonRelationshipType
        [ProjectFirma.Web.Models.ProjectPersonRelationshipType](T1.ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID, T1.ProjectPersonRelationshipType_ProjectPersonRelationshipTypeName, T1.ProjectPersonRelationshipType_ProjectPersonRelationshipTypeDisplayName, T1.ProjectPersonRelationshipType_FieldDefinitionID, T1.ProjectPersonRelationshipType_IsRequired)
    FROM (
        SELECT 
            T.ProjectPersonRelationshipTypeID AS ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID, 
            T.ProjectPersonRelationshipTypeName AS ProjectPersonRelationshipType_ProjectPersonRelationshipTypeName, 
            T.ProjectPersonRelationshipTypeDisplayName AS ProjectPersonRelationshipType_ProjectPersonRelationshipTypeDisplayName, 
            T.FieldDefinitionID AS ProjectPersonRelationshipType_FieldDefinitionID, 
            T.IsRequired AS ProjectPersonRelationshipType_IsRequired, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectPersonRelationshipType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectPersonUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView239()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectPersonUpdate", @"
    SELECT VALUE -- Constructing ProjectPersonUpdate
        [ProjectFirma.Web.Models.ProjectPersonUpdate](T1.ProjectPersonUpdate_ProjectPersonUpdateID, T1.ProjectPersonUpdate_TenantID, T1.ProjectPersonUpdate_ProjectUpdateBatchID, T1.ProjectPersonUpdate_PersonID, T1.ProjectPersonUpdate_ProjectPersonRelationshipTypeID)
    FROM (
        SELECT 
            T.ProjectPersonUpdateID AS ProjectPersonUpdate_ProjectPersonUpdateID, 
            T.TenantID AS ProjectPersonUpdate_TenantID, 
            T.ProjectUpdateBatchID AS ProjectPersonUpdate_ProjectUpdateBatchID, 
            T.PersonID AS ProjectPersonUpdate_PersonID, 
            T.ProjectPersonRelationshipTypeID AS ProjectPersonUpdate_ProjectPersonRelationshipTypeID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectPersonUpdate AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectStage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView240()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectStage", @"
    SELECT VALUE -- Constructing ProjectStage
        [ProjectFirma.Web.Models.ProjectStage](T1.ProjectStage_ProjectStageID, T1.ProjectStage_ProjectStageName, T1.ProjectStage_ProjectStageDisplayName, T1.ProjectStage_SortOrder, T1.ProjectStage_ProjectStageColor)
    FROM (
        SELECT 
            T.ProjectStageID AS ProjectStage_ProjectStageID, 
            T.ProjectStageName AS ProjectStage_ProjectStageName, 
            T.ProjectStageDisplayName AS ProjectStage_ProjectStageDisplayName, 
            T.SortOrder AS ProjectStage_SortOrder, 
            T.ProjectStageColor AS ProjectStage_ProjectStageColor, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectStage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectStewardshipAreaType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView241()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectStewardshipAreaType", @"
    SELECT VALUE -- Constructing ProjectStewardshipAreaType
        [ProjectFirma.Web.Models.ProjectStewardshipAreaType](T1.ProjectStewardshipAreaType_ProjectStewardshipAreaTypeID, T1.ProjectStewardshipAreaType_ProjectStewardshipAreaTypeName, T1.ProjectStewardshipAreaType_ProjectStewardshipAreaTypeDisplayName)
    FROM (
        SELECT 
            T.ProjectStewardshipAreaTypeID AS ProjectStewardshipAreaType_ProjectStewardshipAreaTypeID, 
            T.ProjectStewardshipAreaTypeName AS ProjectStewardshipAreaType_ProjectStewardshipAreaTypeName, 
            T.ProjectStewardshipAreaTypeDisplayName AS ProjectStewardshipAreaType_ProjectStewardshipAreaTypeDisplayName, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectStewardshipAreaType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectTag
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView242()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectTag", @"
    SELECT VALUE -- Constructing ProjectTag
        [ProjectFirma.Web.Models.ProjectTag](T1.ProjectTag_ProjectTagID, T1.ProjectTag_TenantID, T1.ProjectTag_ProjectID, T1.ProjectTag_TagID)
    FROM (
        SELECT 
            T.ProjectTagID AS ProjectTag_ProjectTagID, 
            T.TenantID AS ProjectTag_TenantID, 
            T.ProjectID AS ProjectTag_ProjectID, 
            T.TagID AS ProjectTag_TagID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectTag AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectUpdate
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView243()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectUpdate", "\r\n    SELECT VALUE -- Constructing ProjectUpdate\r\n        [ProjectFirma.Web.Model" +
                    "s.ProjectUpdate](T1.ProjectUpdate_ProjectUpdateID, T1.ProjectUpdate_TenantID, T1" +
                    ".ProjectUpdate_ProjectUpdateBatchID, T1.ProjectUpdate_ProjectStageID, T1.Project" +
                    "Update_ProjectDescription, T1.ProjectUpdate_ApprovalStartDate, T1.ProjectUpdate_" +
                    "CompletionDate, T1.ProjectUpdate_EstimatedTotalCost, T1.ProjectUpdate_ProjectLoc" +
                    "ationPoint, T1.ProjectUpdate_ProjectLocationNotes, T1.ProjectUpdate_PlannedDate," +
                    " T1.ProjectUpdate_ProjectLocationSimpleTypeID, T1.ProjectUpdate_PrimaryContactPe" +
                    "rsonID)\r\n    FROM (\r\n        SELECT \r\n            T.ProjectUpdateID AS ProjectUp" +
                    "date_ProjectUpdateID, \r\n            T.TenantID AS ProjectUpdate_TenantID, \r\n    " +
                    "        T.ProjectUpdateBatchID AS ProjectUpdate_ProjectUpdateBatchID, \r\n        " +
                    "    T.ProjectStageID AS ProjectUpdate_ProjectStageID, \r\n            T.ProjectDes" +
                    "cription AS ProjectUpdate_ProjectDescription, \r\n            T.ApprovalStartDate " +
                    "AS ProjectUpdate_ApprovalStartDate, \r\n            T.CompletionDate AS ProjectUpd" +
                    "ate_CompletionDate, \r\n            T.EstimatedTotalCost AS ProjectUpdate_Estimate" +
                    "dTotalCost, \r\n            T.ProjectLocationPoint AS ProjectUpdate_ProjectLocatio" +
                    "nPoint, \r\n            T.ProjectLocationNotes AS ProjectUpdate_ProjectLocationNot" +
                    "es, \r\n            T.PlannedDate AS ProjectUpdate_PlannedDate, \r\n            T.Pr" +
                    "ojectLocationSimpleTypeID AS ProjectUpdate_ProjectLocationSimpleTypeID, \r\n      " +
                    "      T.PrimaryContactPersonID AS ProjectUpdate_PrimaryContactPersonID, \r\n      " +
                    "      True AS _from0\r\n        FROM ProjectFirmaWebModelsStoreContainer.ProjectUp" +
                    "date AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectUpdateBatch
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView244()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3581);
            viewString.Append("\r\n    SELECT VALUE -- Constructing ProjectUpdateBatch\r\n        [ProjectFirma.Web");
            viewString.Append(".Models.ProjectUpdateBatch](T1.ProjectUpdateBatch_ProjectUpdateBatchID, T1.Proje");
            viewString.Append("ctUpdateBatch_TenantID, T1.ProjectUpdateBatch_ProjectID, T1.ProjectUpdateBatch_L");
            viewString.Append("astUpdateDate, T1.ProjectUpdateBatch_PerformanceMeasureActualYearsExemptionExpla");
            viewString.Append("nation, T1.ProjectUpdateBatch_LastUpdatePersonID, T1.ProjectUpdateBatch_BasicsCo");
            viewString.Append("mment, T1.ProjectUpdateBatch_ExpendituresComment, T1.ProjectUpdateBatch_Performa");
            viewString.Append("nceMeasuresComment, T1.ProjectUpdateBatch_LocationSimpleComment, T1.ProjectUpdat");
            viewString.Append("eBatch_LocationDetailedComment, T1.ProjectUpdateBatch_BudgetsComment, T1.Project");
            viewString.Append("UpdateBatch_ProjectUpdateStateID, T1.ProjectUpdateBatch_IsPhotosUpdated, T1.Proj");
            viewString.Append("ectUpdateBatch_BasicsDiffLog, T1.ProjectUpdateBatch_PerformanceMeasureDiffLog, T");
            viewString.Append("1.ProjectUpdateBatch_ExpendituresDiffLog, T1.ProjectUpdateBatch_BudgetsDiffLog, ");
            viewString.Append("T1.ProjectUpdateBatch_ExternalLinksDiffLog, T1.ProjectUpdateBatch_NotesDiffLog, ");
            viewString.Append("T1.ProjectUpdateBatch_GeospatialAreaComment, T1.ProjectUpdateBatch_ExpectedFundi");
            viewString.Append("ngComment, T1.ProjectUpdateBatch_ExpectedFundingDiffLog, T1.ProjectUpdateBatch_O");
            viewString.Append("rganizationsComment, T1.ProjectUpdateBatch_OrganizationsDiffLog, T1.ProjectUpdat");
            viewString.Append("eBatch_NoExpendituresToReportExplanation, T1.ProjectUpdateBatch_ContactsComment)");
            viewString.Append("\r\n    FROM (\r\n        SELECT \r\n            T.ProjectUpdateBatchID AS ProjectUpda");
            viewString.Append("teBatch_ProjectUpdateBatchID, \r\n            T.TenantID AS ProjectUpdateBatch_Ten");
            viewString.Append("antID, \r\n            T.ProjectID AS ProjectUpdateBatch_ProjectID, \r\n            ");
            viewString.Append("T.LastUpdateDate AS ProjectUpdateBatch_LastUpdateDate, \r\n            T.Performan");
            viewString.Append("ceMeasureActualYearsExemptionExplanation AS ProjectUpdateBatch_PerformanceMeasur");
            viewString.Append("eActualYearsExemptionExplanation, \r\n            T.LastUpdatePersonID AS ProjectU");
            viewString.Append("pdateBatch_LastUpdatePersonID, \r\n            T.BasicsComment AS ProjectUpdateBat");
            viewString.Append("ch_BasicsComment, \r\n            T.ExpendituresComment AS ProjectUpdateBatch_Expe");
            viewString.Append("ndituresComment, \r\n            T.PerformanceMeasuresComment AS ProjectUpdateBatc");
            viewString.Append("h_PerformanceMeasuresComment, \r\n            T.LocationSimpleComment AS ProjectUp");
            viewString.Append("dateBatch_LocationSimpleComment, \r\n            T.LocationDetailedComment AS Proj");
            viewString.Append("ectUpdateBatch_LocationDetailedComment, \r\n            T.BudgetsComment AS Projec");
            viewString.Append("tUpdateBatch_BudgetsComment, \r\n            T.ProjectUpdateStateID AS ProjectUpda");
            viewString.Append("teBatch_ProjectUpdateStateID, \r\n            T.IsPhotosUpdated AS ProjectUpdateBa");
            viewString.Append("tch_IsPhotosUpdated, \r\n            T.BasicsDiffLog AS ProjectUpdateBatch_BasicsD");
            viewString.Append("iffLog, \r\n            T.PerformanceMeasureDiffLog AS ProjectUpdateBatch_Performa");
            viewString.Append("nceMeasureDiffLog, \r\n            T.ExpendituresDiffLog AS ProjectUpdateBatch_Exp");
            viewString.Append("endituresDiffLog, \r\n            T.BudgetsDiffLog AS ProjectUpdateBatch_BudgetsDi");
            viewString.Append("ffLog, \r\n            T.ExternalLinksDiffLog AS ProjectUpdateBatch_ExternalLinksD");
            viewString.Append("iffLog, \r\n            T.NotesDiffLog AS ProjectUpdateBatch_NotesDiffLog, \r\n     ");
            viewString.Append("       T.GeospatialAreaComment AS ProjectUpdateBatch_GeospatialAreaComment, \r\n  ");
            viewString.Append("          T.ExpectedFundingComment AS ProjectUpdateBatch_ExpectedFundingComment,");
            viewString.Append(" \r\n            T.ExpectedFundingDiffLog AS ProjectUpdateBatch_ExpectedFundingDif");
            viewString.Append("fLog, \r\n            T.OrganizationsComment AS ProjectUpdateBatch_OrganizationsCo");
            viewString.Append("mment, \r\n            T.OrganizationsDiffLog AS ProjectUpdateBatch_OrganizationsD");
            viewString.Append("iffLog, \r\n            T.NoExpendituresToReportExplanation AS ProjectUpdateBatch_");
            viewString.Append("NoExpendituresToReportExplanation, \r\n            T.ContactsComment AS ProjectUpd");
            viewString.Append("ateBatch_ContactsComment, \r\n            True AS _from0\r\n        FROM ProjectFirm");
            viewString.Append("aWebModelsStoreContainer.ProjectUpdateBatch AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectUpdateBatch", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectUpdateConfiguration
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView245()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectUpdateConfiguration", "\r\n    SELECT VALUE -- Constructing ProjectUpdateConfiguration\r\n        [ProjectFi" +
                    "rma.Web.Models.ProjectUpdateConfiguration](T1.ProjectUpdateConfiguration_Project" +
                    "UpdateConfigurationID, T1.ProjectUpdateConfiguration_TenantID, T1.ProjectUpdateC" +
                    "onfiguration_ProjectUpdateKickOffDate, T1.ProjectUpdateConfiguration_ProjectUpda" +
                    "teCloseOutDate, T1.ProjectUpdateConfiguration_ProjectUpdateReminderInterval, T1." +
                    "ProjectUpdateConfiguration_EnableProjectUpdateReminders, T1.ProjectUpdateConfigu" +
                    "ration_SendPeriodicReminders, T1.ProjectUpdateConfiguration_SendCloseOutNotifica" +
                    "tion, T1.ProjectUpdateConfiguration_ProjectUpdateKickOffIntroContent, T1.Project" +
                    "UpdateConfiguration_ProjectUpdateReminderIntroContent, T1.ProjectUpdateConfigura" +
                    "tion_ProjectUpdateCloseOutIntroContent)\r\n    FROM (\r\n        SELECT \r\n          " +
                    "  T.ProjectUpdateConfigurationID AS ProjectUpdateConfiguration_ProjectUpdateConf" +
                    "igurationID, \r\n            T.TenantID AS ProjectUpdateConfiguration_TenantID, \r\n" +
                    "            T.ProjectUpdateKickOffDate AS ProjectUpdateConfiguration_ProjectUpda" +
                    "teKickOffDate, \r\n            T.ProjectUpdateCloseOutDate AS ProjectUpdateConfigu" +
                    "ration_ProjectUpdateCloseOutDate, \r\n            T.ProjectUpdateReminderInterval " +
                    "AS ProjectUpdateConfiguration_ProjectUpdateReminderInterval, \r\n            T.Ena" +
                    "bleProjectUpdateReminders AS ProjectUpdateConfiguration_EnableProjectUpdateRemin" +
                    "ders, \r\n            T.SendPeriodicReminders AS ProjectUpdateConfiguration_SendPe" +
                    "riodicReminders, \r\n            T.SendCloseOutNotification AS ProjectUpdateConfig" +
                    "uration_SendCloseOutNotification, \r\n            T.ProjectUpdateKickOffIntroConte" +
                    "nt AS ProjectUpdateConfiguration_ProjectUpdateKickOffIntroContent, \r\n           " +
                    " T.ProjectUpdateReminderIntroContent AS ProjectUpdateConfiguration_ProjectUpdate" +
                    "ReminderIntroContent, \r\n            T.ProjectUpdateCloseOutIntroContent AS Proje" +
                    "ctUpdateConfiguration_ProjectUpdateCloseOutIntroContent, \r\n            True AS _" +
                    "from0\r\n        FROM ProjectFirmaWebModelsStoreContainer.ProjectUpdateConfigurati" +
                    "on AS T\r\n    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectUpdateHistory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView246()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectUpdateHistory", @"
    SELECT VALUE -- Constructing ProjectUpdateHistory
        [ProjectFirma.Web.Models.ProjectUpdateHistory](T1.ProjectUpdateHistory_ProjectUpdateHistoryID, T1.ProjectUpdateHistory_TenantID, T1.ProjectUpdateHistory_ProjectUpdateBatchID, T1.ProjectUpdateHistory_ProjectUpdateStateID, T1.ProjectUpdateHistory_UpdatePersonID, T1.ProjectUpdateHistory_TransitionDate)
    FROM (
        SELECT 
            T.ProjectUpdateHistoryID AS ProjectUpdateHistory_ProjectUpdateHistoryID, 
            T.TenantID AS ProjectUpdateHistory_TenantID, 
            T.ProjectUpdateBatchID AS ProjectUpdateHistory_ProjectUpdateBatchID, 
            T.ProjectUpdateStateID AS ProjectUpdateHistory_ProjectUpdateStateID, 
            T.UpdatePersonID AS ProjectUpdateHistory_UpdatePersonID, 
            T.TransitionDate AS ProjectUpdateHistory_TransitionDate, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectUpdateHistory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectUpdateState
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView247()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectUpdateState", @"
    SELECT VALUE -- Constructing ProjectUpdateState
        [ProjectFirma.Web.Models.ProjectUpdateState](T1.ProjectUpdateState_ProjectUpdateStateID, T1.ProjectUpdateState_ProjectUpdateStateName, T1.ProjectUpdateState_ProjectUpdateStateDisplayName)
    FROM (
        SELECT 
            T.ProjectUpdateStateID AS ProjectUpdateState_ProjectUpdateStateID, 
            T.ProjectUpdateStateName AS ProjectUpdateState_ProjectUpdateStateName, 
            T.ProjectUpdateStateDisplayName AS ProjectUpdateState_ProjectUpdateStateDisplayName, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectUpdateState AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.RelationshipType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView248()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.RelationshipType", @"
    SELECT VALUE -- Constructing RelationshipType
        [ProjectFirma.Web.Models.RelationshipType](T1.RelationshipType_RelationshipTypeID, T1.RelationshipType_TenantID, T1.RelationshipType_RelationshipTypeName, T1.RelationshipType_CanStewardProjects, T1.RelationshipType_IsPrimaryContact, T1.RelationshipType_CanOnlyBeRelatedOnceToAProject, T1.RelationshipType_RelationshipTypeDescription, T1.RelationshipType_ReportInAccomplishmentsDashboard, T1.RelationshipType_ShowOnFactSheet)
    FROM (
        SELECT 
            T.RelationshipTypeID AS RelationshipType_RelationshipTypeID, 
            T.TenantID AS RelationshipType_TenantID, 
            T.RelationshipTypeName AS RelationshipType_RelationshipTypeName, 
            T.CanStewardProjects AS RelationshipType_CanStewardProjects, 
            T.IsPrimaryContact AS RelationshipType_IsPrimaryContact, 
            T.CanOnlyBeRelatedOnceToAProject AS RelationshipType_CanOnlyBeRelatedOnceToAProject, 
            T.RelationshipTypeDescription AS RelationshipType_RelationshipTypeDescription, 
            T.ReportInAccomplishmentsDashboard AS RelationshipType_ReportInAccomplishmentsDashboard, 
            T.ShowOnFactSheet AS RelationshipType_ShowOnFactSheet, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.RelationshipType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.Role
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView249()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.Role", @"
    SELECT VALUE -- Constructing Role
        [ProjectFirma.Web.Models.Role](T1.Role_RoleID, T1.Role_RoleName, T1.Role_RoleDisplayName, T1.Role_RoleDescription)
    FROM (
        SELECT 
            T.RoleID AS Role_RoleID, 
            T.RoleName AS Role_RoleName, 
            T.RoleDisplayName AS Role_RoleDisplayName, 
            T.RoleDescription AS Role_RoleDescription, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.Role AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.Snapshot
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView250()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.Snapshot", @"
    SELECT VALUE -- Constructing Snapshot
        [ProjectFirma.Web.Models.Snapshot](T1.Snapshot_SnapshotID, T1.Snapshot_TenantID, T1.Snapshot_SnapshotDate, T1.Snapshot_SnapshotNote, T1.Snapshot_ProjectCount)
    FROM (
        SELECT 
            T.SnapshotID AS Snapshot_SnapshotID, 
            T.TenantID AS Snapshot_TenantID, 
            T.SnapshotDate AS Snapshot_SnapshotDate, 
            T.SnapshotNote AS Snapshot_SnapshotNote, 
            T.ProjectCount AS Snapshot_ProjectCount, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.Snapshot AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.SnapshotOrganizationTypeExpenditure
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView251()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.SnapshotOrganizationTypeExpenditure", @"
    SELECT VALUE -- Constructing SnapshotOrganizationTypeExpenditure
        [ProjectFirma.Web.Models.SnapshotOrganizationTypeExpenditure](T1.SnapshotOrganizationTypeExpenditure_SnapshotOrganizationTypeExpenditureID, T1.SnapshotOrganizationTypeExpenditure_TenantID, T1.SnapshotOrganizationTypeExpenditure_SnapshotID, T1.SnapshotOrganizationTypeExpenditure_CalendarYear, T1.SnapshotOrganizationTypeExpenditure_ExpenditureAmount, T1.SnapshotOrganizationTypeExpenditure_OrganizationTypeID)
    FROM (
        SELECT 
            T.SnapshotOrganizationTypeExpenditureID AS SnapshotOrganizationTypeExpenditure_SnapshotOrganizationTypeExpenditureID, 
            T.TenantID AS SnapshotOrganizationTypeExpenditure_TenantID, 
            T.SnapshotID AS SnapshotOrganizationTypeExpenditure_SnapshotID, 
            T.CalendarYear AS SnapshotOrganizationTypeExpenditure_CalendarYear, 
            T.ExpenditureAmount AS SnapshotOrganizationTypeExpenditure_ExpenditureAmount, 
            T.OrganizationTypeID AS SnapshotOrganizationTypeExpenditure_OrganizationTypeID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.SnapshotOrganizationTypeExpenditure AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.SnapshotPerformanceMeasure
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView252()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.SnapshotPerformanceMeasure", @"
    SELECT VALUE -- Constructing SnapshotPerformanceMeasure
        [ProjectFirma.Web.Models.SnapshotPerformanceMeasure](T1.SnapshotPerformanceMeasure_SnapshotPerformanceMeasureID, T1.SnapshotPerformanceMeasure_TenantID, T1.SnapshotPerformanceMeasure_SnapshotID, T1.SnapshotPerformanceMeasure_PerformanceMeasureID, T1.SnapshotPerformanceMeasure_CalendarYear, T1.SnapshotPerformanceMeasure_ActualValue)
    FROM (
        SELECT 
            T.SnapshotPerformanceMeasureID AS SnapshotPerformanceMeasure_SnapshotPerformanceMeasureID, 
            T.TenantID AS SnapshotPerformanceMeasure_TenantID, 
            T.SnapshotID AS SnapshotPerformanceMeasure_SnapshotID, 
            T.PerformanceMeasureID AS SnapshotPerformanceMeasure_PerformanceMeasureID, 
            T.CalendarYear AS SnapshotPerformanceMeasure_CalendarYear, 
            T.ActualValue AS SnapshotPerformanceMeasure_ActualValue, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.SnapshotPerformanceMeasure AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.SnapshotPerformanceMeasureSubcategoryOption
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView253()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.SnapshotPerformanceMeasureSubcategoryOption", "\r\n    SELECT VALUE -- Constructing SnapshotPerformanceMeasureSubcategoryOption\r\n " +
                    "       [ProjectFirma.Web.Models.SnapshotPerformanceMeasureSubcategoryOption](T1." +
                    "SnapshotPerformanceMeasureSubcategoryOption_SnapshotPerformanceMeasureSubcategor" +
                    "yOptionID, T1.SnapshotPerformanceMeasureSubcategoryOption_TenantID, T1.SnapshotP" +
                    "erformanceMeasureSubcategoryOption_SnapshotPerformanceMeasureID, T1.SnapshotPerf" +
                    "ormanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID, T1.Snapsh" +
                    "otPerformanceMeasureSubcategoryOption_PerformanceMeasureID, T1.SnapshotPerforman" +
                    "ceMeasureSubcategoryOption_PerformanceMeasureSubcategoryID)\r\n    FROM (\r\n       " +
                    " SELECT \r\n            T.SnapshotPerformanceMeasureSubcategoryOptionID AS Snapsho" +
                    "tPerformanceMeasureSubcategoryOption_SnapshotPerformanceMeasureSubcategoryOption" +
                    "ID, \r\n            T.TenantID AS SnapshotPerformanceMeasureSubcategoryOption_Tena" +
                    "ntID, \r\n            T.SnapshotPerformanceMeasureID AS SnapshotPerformanceMeasure" +
                    "SubcategoryOption_SnapshotPerformanceMeasureID, \r\n            T.PerformanceMeasu" +
                    "reSubcategoryOptionID AS SnapshotPerformanceMeasureSubcategoryOption_Performance" +
                    "MeasureSubcategoryOptionID, \r\n            T.PerformanceMeasureID AS SnapshotPerf" +
                    "ormanceMeasureSubcategoryOption_PerformanceMeasureID, \r\n            T.Performanc" +
                    "eMeasureSubcategoryID AS SnapshotPerformanceMeasureSubcategoryOption_Performance" +
                    "MeasureSubcategoryID, \r\n            True AS _from0\r\n        FROM ProjectFirmaWeb" +
                    "ModelsStoreContainer.SnapshotPerformanceMeasureSubcategoryOption AS T\r\n    ) AS " +
                    "T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.SnapshotProject
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView254()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.SnapshotProject", @"
    SELECT VALUE -- Constructing SnapshotProject
        [ProjectFirma.Web.Models.SnapshotProject](T1.SnapshotProject_SnapshotProjectID, T1.SnapshotProject_TenantID, T1.SnapshotProject_SnapshotID, T1.SnapshotProject_ProjectID, T1.SnapshotProject_SnapshotProjectTypeID)
    FROM (
        SELECT 
            T.SnapshotProjectID AS SnapshotProject_SnapshotProjectID, 
            T.TenantID AS SnapshotProject_TenantID, 
            T.SnapshotID AS SnapshotProject_SnapshotID, 
            T.ProjectID AS SnapshotProject_ProjectID, 
            T.SnapshotProjectTypeID AS SnapshotProject_SnapshotProjectTypeID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.SnapshotProject AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.SnapshotProjectType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView255()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.SnapshotProjectType", @"
    SELECT VALUE -- Constructing SnapshotProjectType
        [ProjectFirma.Web.Models.SnapshotProjectType](T1.SnapshotProjectType_SnapshotProjectTypeID, T1.SnapshotProjectType_SnapshotProjectTypeName, T1.SnapshotProjectType_SnapshotProjectTypeDisplayName)
    FROM (
        SELECT 
            T.SnapshotProjectTypeID AS SnapshotProjectType_SnapshotProjectTypeID, 
            T.SnapshotProjectTypeName AS SnapshotProjectType_SnapshotProjectTypeName, 
            T.SnapshotProjectTypeDisplayName AS SnapshotProjectType_SnapshotProjectTypeDisplayName, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.SnapshotProjectType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.StateProvince
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView256()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.StateProvince", @"
    SELECT VALUE -- Constructing StateProvince
        [ProjectFirma.Web.Models.StateProvince](T1.StateProvince_StateProvinceID, T1.StateProvince_TenantID, T1.StateProvince_StateProvinceName, T1.StateProvince_StateProvinceAbbreviation, T1.StateProvince_StateProvinceFeature, T1.StateProvince_StateProvinceFeatureForAnalysis)
    FROM (
        SELECT 
            T.StateProvinceID AS StateProvince_StateProvinceID, 
            T.TenantID AS StateProvince_TenantID, 
            T.StateProvinceName AS StateProvince_StateProvinceName, 
            T.StateProvinceAbbreviation AS StateProvince_StateProvinceAbbreviation, 
            T.StateProvinceFeature AS StateProvince_StateProvinceFeature, 
            T.StateProvinceFeatureForAnalysis AS StateProvince_StateProvinceFeatureForAnalysis, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.StateProvince AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.SupportRequestLog
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView257()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.SupportRequestLog", @"
    SELECT VALUE -- Constructing SupportRequestLog
        [ProjectFirma.Web.Models.SupportRequestLog](T1.SupportRequestLog_SupportRequestLogID, T1.SupportRequestLog_TenantID, T1.SupportRequestLog_RequestDate, T1.SupportRequestLog_RequestPersonName, T1.SupportRequestLog_RequestPersonEmail, T1.SupportRequestLog_RequestPersonID, T1.SupportRequestLog_SupportRequestTypeID, T1.SupportRequestLog_RequestDescription, T1.SupportRequestLog_RequestPersonOrganization, T1.SupportRequestLog_RequestPersonPhone)
    FROM (
        SELECT 
            T.SupportRequestLogID AS SupportRequestLog_SupportRequestLogID, 
            T.TenantID AS SupportRequestLog_TenantID, 
            T.RequestDate AS SupportRequestLog_RequestDate, 
            T.RequestPersonName AS SupportRequestLog_RequestPersonName, 
            T.RequestPersonEmail AS SupportRequestLog_RequestPersonEmail, 
            T.RequestPersonID AS SupportRequestLog_RequestPersonID, 
            T.SupportRequestTypeID AS SupportRequestLog_SupportRequestTypeID, 
            T.RequestDescription AS SupportRequestLog_RequestDescription, 
            T.RequestPersonOrganization AS SupportRequestLog_RequestPersonOrganization, 
            T.RequestPersonPhone AS SupportRequestLog_RequestPersonPhone, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.SupportRequestLog AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.SupportRequestType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView258()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.SupportRequestType", @"
    SELECT VALUE -- Constructing SupportRequestType
        [ProjectFirma.Web.Models.SupportRequestType](T1.SupportRequestType_SupportRequestTypeID, T1.SupportRequestType_SupportRequestTypeName, T1.SupportRequestType_SupportRequestTypeDisplayName, T1.SupportRequestType_SupportRequestTypeSortOrder)
    FROM (
        SELECT 
            T.SupportRequestTypeID AS SupportRequestType_SupportRequestTypeID, 
            T.SupportRequestTypeName AS SupportRequestType_SupportRequestTypeName, 
            T.SupportRequestTypeDisplayName AS SupportRequestType_SupportRequestTypeDisplayName, 
            T.SupportRequestTypeSortOrder AS SupportRequestType_SupportRequestTypeSortOrder, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.SupportRequestType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.Tag
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView259()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.Tag", @"
    SELECT VALUE -- Constructing Tag
        [ProjectFirma.Web.Models.Tag](T1.Tag_TagID, T1.Tag_TenantID, T1.Tag_TagName, T1.Tag_TagDescription)
    FROM (
        SELECT 
            T.TagID AS Tag_TagID, 
            T.TenantID AS Tag_TenantID, 
            T.TagName AS Tag_TagName, 
            T.TagDescription AS Tag_TagDescription, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.Tag AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.TaxonomyBranch
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView260()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.TaxonomyBranch", @"
    SELECT VALUE -- Constructing TaxonomyBranch
        [ProjectFirma.Web.Models.TaxonomyBranch](T1.TaxonomyBranch_TaxonomyBranchID, T1.TaxonomyBranch_TenantID, T1.TaxonomyBranch_TaxonomyTrunkID, T1.TaxonomyBranch_TaxonomyBranchName, T1.TaxonomyBranch_TaxonomyBranchDescription, T1.TaxonomyBranch_ThemeColor, T1.TaxonomyBranch_TaxonomyBranchCode, T1.TaxonomyBranch_TaxonomyBranchSortOrder)
    FROM (
        SELECT 
            T.TaxonomyBranchID AS TaxonomyBranch_TaxonomyBranchID, 
            T.TenantID AS TaxonomyBranch_TenantID, 
            T.TaxonomyTrunkID AS TaxonomyBranch_TaxonomyTrunkID, 
            T.TaxonomyBranchName AS TaxonomyBranch_TaxonomyBranchName, 
            T.TaxonomyBranchDescription AS TaxonomyBranch_TaxonomyBranchDescription, 
            T.ThemeColor AS TaxonomyBranch_ThemeColor, 
            T.TaxonomyBranchCode AS TaxonomyBranch_TaxonomyBranchCode, 
            T.TaxonomyBranchSortOrder AS TaxonomyBranch_TaxonomyBranchSortOrder, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.TaxonomyBranch AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.TaxonomyLeaf
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView261()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.TaxonomyLeaf", @"
    SELECT VALUE -- Constructing TaxonomyLeaf
        [ProjectFirma.Web.Models.TaxonomyLeaf](T1.TaxonomyLeaf_TaxonomyLeafID, T1.TaxonomyLeaf_TenantID, T1.TaxonomyLeaf_TaxonomyBranchID, T1.TaxonomyLeaf_TaxonomyLeafName, T1.TaxonomyLeaf_TaxonomyLeafDescription, T1.TaxonomyLeaf_TaxonomyLeafCode, T1.TaxonomyLeaf_ThemeColor, T1.TaxonomyLeaf_TaxonomyLeafSortOrder)
    FROM (
        SELECT 
            T.TaxonomyLeafID AS TaxonomyLeaf_TaxonomyLeafID, 
            T.TenantID AS TaxonomyLeaf_TenantID, 
            T.TaxonomyBranchID AS TaxonomyLeaf_TaxonomyBranchID, 
            T.TaxonomyLeafName AS TaxonomyLeaf_TaxonomyLeafName, 
            T.TaxonomyLeafDescription AS TaxonomyLeaf_TaxonomyLeafDescription, 
            T.TaxonomyLeafCode AS TaxonomyLeaf_TaxonomyLeafCode, 
            T.ThemeColor AS TaxonomyLeaf_ThemeColor, 
            T.TaxonomyLeafSortOrder AS TaxonomyLeaf_TaxonomyLeafSortOrder, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.TaxonomyLeaf AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.TaxonomyLeafPerformanceMeasure
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView262()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.TaxonomyLeafPerformanceMeasure", @"
    SELECT VALUE -- Constructing TaxonomyLeafPerformanceMeasure
        [ProjectFirma.Web.Models.TaxonomyLeafPerformanceMeasure](T1.TaxonomyLeafPerformanceMeasure_TaxonomyLeafPerformanceMeasureID, T1.TaxonomyLeafPerformanceMeasure_TenantID, T1.TaxonomyLeafPerformanceMeasure_TaxonomyLeafID, T1.TaxonomyLeafPerformanceMeasure_PerformanceMeasureID, T1.TaxonomyLeafPerformanceMeasure_IsPrimaryTaxonomyLeaf)
    FROM (
        SELECT 
            T.TaxonomyLeafPerformanceMeasureID AS TaxonomyLeafPerformanceMeasure_TaxonomyLeafPerformanceMeasureID, 
            T.TenantID AS TaxonomyLeafPerformanceMeasure_TenantID, 
            T.TaxonomyLeafID AS TaxonomyLeafPerformanceMeasure_TaxonomyLeafID, 
            T.PerformanceMeasureID AS TaxonomyLeafPerformanceMeasure_PerformanceMeasureID, 
            T.IsPrimaryTaxonomyLeaf AS TaxonomyLeafPerformanceMeasure_IsPrimaryTaxonomyLeaf, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.TaxonomyLeafPerformanceMeasure AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.TaxonomyLevel
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView263()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.TaxonomyLevel", @"
    SELECT VALUE -- Constructing TaxonomyLevel
        [ProjectFirma.Web.Models.TaxonomyLevel](T1.TaxonomyLevel_TaxonomyLevelID, T1.TaxonomyLevel_TaxonomyLevelName, T1.TaxonomyLevel_TaxonomyLevelDisplayName)
    FROM (
        SELECT 
            T.TaxonomyLevelID AS TaxonomyLevel_TaxonomyLevelID, 
            T.TaxonomyLevelName AS TaxonomyLevel_TaxonomyLevelName, 
            T.TaxonomyLevelDisplayName AS TaxonomyLevel_TaxonomyLevelDisplayName, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.TaxonomyLevel AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.TaxonomyTrunk
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView264()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.TaxonomyTrunk", @"
    SELECT VALUE -- Constructing TaxonomyTrunk
        [ProjectFirma.Web.Models.TaxonomyTrunk](T1.TaxonomyTrunk_TaxonomyTrunkID, T1.TaxonomyTrunk_TenantID, T1.TaxonomyTrunk_TaxonomyTrunkName, T1.TaxonomyTrunk_TaxonomyTrunkDescription, T1.TaxonomyTrunk_ThemeColor, T1.TaxonomyTrunk_TaxonomyTrunkCode, T1.TaxonomyTrunk_TaxonomyTrunkSortOrder)
    FROM (
        SELECT 
            T.TaxonomyTrunkID AS TaxonomyTrunk_TaxonomyTrunkID, 
            T.TenantID AS TaxonomyTrunk_TenantID, 
            T.TaxonomyTrunkName AS TaxonomyTrunk_TaxonomyTrunkName, 
            T.TaxonomyTrunkDescription AS TaxonomyTrunk_TaxonomyTrunkDescription, 
            T.ThemeColor AS TaxonomyTrunk_ThemeColor, 
            T.TaxonomyTrunkCode AS TaxonomyTrunk_TaxonomyTrunkCode, 
            T.TaxonomyTrunkSortOrder AS TaxonomyTrunk_TaxonomyTrunkSortOrder, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.TaxonomyTrunk AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.TechnicalAssistanceParameter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView265()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.TechnicalAssistanceParameter", @"
    SELECT VALUE -- Constructing TechnicalAssistanceParameter
        [ProjectFirma.Web.Models.TechnicalAssistanceParameter](T1.TechnicalAssistanceParameter_TechnicalAssistanceParameterID, T1.TechnicalAssistanceParameter_TenantID, T1.TechnicalAssistanceParameter_Year, T1.TechnicalAssistanceParameter_EngineeringHourlyCost, T1.TechnicalAssistanceParameter_OtherAssistanceHourlyCost)
    FROM (
        SELECT 
            T.TechnicalAssistanceParameterID AS TechnicalAssistanceParameter_TechnicalAssistanceParameterID, 
            T.TenantID AS TechnicalAssistanceParameter_TenantID, 
            T.Year AS TechnicalAssistanceParameter_Year, 
            T.EngineeringHourlyCost AS TechnicalAssistanceParameter_EngineeringHourlyCost, 
            T.OtherAssistanceHourlyCost AS TechnicalAssistanceParameter_OtherAssistanceHourlyCost, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.TechnicalAssistanceParameter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.Tenant
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView266()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.Tenant", @"
    SELECT VALUE -- Constructing Tenant
        [ProjectFirma.Web.Models.Tenant](T1.Tenant_TenantID, T1.Tenant_TenantName, T1.Tenant_CanonicalHostNameLocal, T1.Tenant_CanonicalHostNameQa, T1.Tenant_CanonicalHostNameProd, T1.Tenant_ReportingYearStartDate, T1.Tenant_UseFiscalYears, T1.Tenant_UsesTechnicalAssistanceParameters)
    FROM (
        SELECT 
            T.TenantID AS Tenant_TenantID, 
            T.TenantName AS Tenant_TenantName, 
            T.CanonicalHostNameLocal AS Tenant_CanonicalHostNameLocal, 
            T.CanonicalHostNameQa AS Tenant_CanonicalHostNameQa, 
            T.CanonicalHostNameProd AS Tenant_CanonicalHostNameProd, 
            T.ReportingYearStartDate AS Tenant_ReportingYearStartDate, 
            T.UseFiscalYears AS Tenant_UseFiscalYears, 
            T.UsesTechnicalAssistanceParameters AS Tenant_UsesTechnicalAssistanceParameters, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.Tenant AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.TenantAttribute
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView267()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(3793);
            viewString.Append("\r\n    SELECT VALUE -- Constructing TenantAttribute\r\n        [ProjectFirma.Web.Mo");
            viewString.Append("dels.TenantAttribute](T1.TenantAttribute_TenantAttributeID, T1.TenantAttribute_T");
            viewString.Append("enantID, T1.TenantAttribute_DefaultBoundingBox, T1.TenantAttribute_MinimumYear, ");
            viewString.Append("T1.TenantAttribute_PrimaryContactPersonID, T1.TenantAttribute_TenantSquareLogoFi");
            viewString.Append("leResourceID, T1.TenantAttribute_TenantBannerLogoFileResourceID, T1.TenantAttrib");
            viewString.Append("ute_TenantStyleSheetFileResourceID, T1.TenantAttribute_TenantDisplayName, T1.Ten");
            viewString.Append("antAttribute_ToolDisplayName, T1.TenantAttribute_RecaptchaPublicKey, T1.TenantAt");
            viewString.Append("tribute_RecaptchaPrivateKey, T1.TenantAttribute_ShowApplicationsToThePublic, T1.");
            viewString.Append("TenantAttribute_TaxonomyLevelID, T1.TenantAttribute_AssociatePerfomanceMeasureTa");
            viewString.Append("xonomyLevelID, T1.TenantAttribute_IsActive, T1.TenantAttribute_ProjectExternalDa");
            viewString.Append("taSourceEnabled, T1.TenantAttribute_AccomplishmentsDashboardFundingDisplayTypeID");
            viewString.Append(", T1.TenantAttribute_AccomplishmentsDashboardAccomplishmentsButtonText, T1.Tenan");
            viewString.Append("tAttribute_AccomplishmentsDashboardExpendituresButtonText, T1.TenantAttribute_Ac");
            viewString.Append("complishmentsDashboardOrganizationsButtonText, T1.TenantAttribute_Accomplishment");
            viewString.Append("sDashboardIncludeReportingOrganizationType, T1.TenantAttribute_ShowLeadImplement");
            viewString.Append("erLogoOnFactSheet, T1.TenantAttribute_EnableAccomplishmentsDashboard, T1.TenantA");
            viewString.Append("ttribute_ProjectStewardshipAreaTypeID)\r\n    FROM (\r\n        SELECT \r\n           ");
            viewString.Append(" T.TenantAttributeID AS TenantAttribute_TenantAttributeID, \r\n            T.Tenan");
            viewString.Append("tID AS TenantAttribute_TenantID, \r\n            T.DefaultBoundingBox AS TenantAtt");
            viewString.Append("ribute_DefaultBoundingBox, \r\n            T.MinimumYear AS TenantAttribute_Minimu");
            viewString.Append("mYear, \r\n            T.PrimaryContactPersonID AS TenantAttribute_PrimaryContactP");
            viewString.Append("ersonID, \r\n            T.TenantSquareLogoFileResourceID AS TenantAttribute_Tenan");
            viewString.Append("tSquareLogoFileResourceID, \r\n            T.TenantBannerLogoFileResourceID AS Ten");
            viewString.Append("antAttribute_TenantBannerLogoFileResourceID, \r\n            T.TenantStyleSheetFil");
            viewString.Append("eResourceID AS TenantAttribute_TenantStyleSheetFileResourceID, \r\n            T.T");
            viewString.Append("enantDisplayName AS TenantAttribute_TenantDisplayName, \r\n            T.ToolDispl");
            viewString.Append("ayName AS TenantAttribute_ToolDisplayName, \r\n            T.RecaptchaPublicKey AS");
            viewString.Append(" TenantAttribute_RecaptchaPublicKey, \r\n            T.RecaptchaPrivateKey AS Tena");
            viewString.Append("ntAttribute_RecaptchaPrivateKey, \r\n            T.ShowApplicationsToThePublic AS ");
            viewString.Append("TenantAttribute_ShowApplicationsToThePublic, \r\n            T.TaxonomyLevelID AS ");
            viewString.Append("TenantAttribute_TaxonomyLevelID, \r\n            T.AssociatePerfomanceMeasureTaxon");
            viewString.Append("omyLevelID AS TenantAttribute_AssociatePerfomanceMeasureTaxonomyLevelID, \r\n     ");
            viewString.Append("       T.IsActive AS TenantAttribute_IsActive, \r\n            T.ProjectExternalDa");
            viewString.Append("taSourceEnabled AS TenantAttribute_ProjectExternalDataSourceEnabled, \r\n         ");
            viewString.Append("   T.AccomplishmentsDashboardFundingDisplayTypeID AS TenantAttribute_Accomplishm");
            viewString.Append("entsDashboardFundingDisplayTypeID, \r\n            T.AccomplishmentsDashboardAccom");
            viewString.Append("plishmentsButtonText AS TenantAttribute_AccomplishmentsDashboardAccomplishmentsB");
            viewString.Append("uttonText, \r\n            T.AccomplishmentsDashboardExpendituresButtonText AS Ten");
            viewString.Append("antAttribute_AccomplishmentsDashboardExpendituresButtonText, \r\n            T.Acc");
            viewString.Append("omplishmentsDashboardOrganizationsButtonText AS TenantAttribute_AccomplishmentsD");
            viewString.Append("ashboardOrganizationsButtonText, \r\n            T.AccomplishmentsDashboardInclude");
            viewString.Append("ReportingOrganizationType AS TenantAttribute_AccomplishmentsDashboardIncludeRepo");
            viewString.Append("rtingOrganizationType, \r\n            T.ShowLeadImplementerLogoOnFactSheet AS Ten");
            viewString.Append("antAttribute_ShowLeadImplementerLogoOnFactSheet, \r\n            T.EnableAccomplis");
            viewString.Append("hmentsDashboard AS TenantAttribute_EnableAccomplishmentsDashboard, \r\n           ");
            viewString.Append(" T.ProjectStewardshipAreaTypeID AS TenantAttribute_ProjectStewardshipAreaTypeID,");
            viewString.Append(" \r\n            True AS _from0\r\n        FROM ProjectFirmaWebModelsStoreContainer.");
            viewString.Append("TenantAttribute AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.TenantAttribute", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.TrainingVideo
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView268()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.TrainingVideo", @"
    SELECT VALUE -- Constructing TrainingVideo
        [ProjectFirma.Web.Models.TrainingVideo](T1.TrainingVideo_TrainingVideoID, T1.TrainingVideo_TenantID, T1.TrainingVideo_VideoName, T1.TrainingVideo_VideoDescription, T1.TrainingVideo_VideoUploadDate, T1.TrainingVideo_VideoURL)
    FROM (
        SELECT 
            T.TrainingVideoID AS TrainingVideo_TrainingVideoID, 
            T.TenantID AS TrainingVideo_TenantID, 
            T.VideoName AS TrainingVideo_VideoName, 
            T.VideoDescription AS TrainingVideo_VideoDescription, 
            T.VideoUploadDate AS TrainingVideo_VideoUploadDate, 
            T.VideoURL AS TrainingVideo_VideoURL, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.TrainingVideo AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.TreatmentActivity
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView269()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2438);
            viewString.Append("\r\n    SELECT VALUE -- Constructing TreatmentActivity\r\n        [ProjectFirma.Web.");
            viewString.Append("Models.TreatmentActivity](T1.TreatmentActivity_TreatmentActivityID, T1.Treatment");
            viewString.Append("Activity_TenantID, T1.TreatmentActivity_ProjectID, T1.TreatmentActivity_FundingS");
            viewString.Append("ourceID, T1.TreatmentActivity_TreatmentActivityFootprintAcres, T1.TreatmentActiv");
            viewString.Append("ity_TreatmentActivityBrushControlAcres, T1.TreatmentActivity_TreatmentActivityTh");
            viewString.Append("inningAcres, T1.TreatmentActivity_TreatmentActivityPruningAcres, T1.TreatmentAct");
            viewString.Append("ivity_TreatmentActivitySlashAcres, T1.TreatmentActivity_TreatmentActivityPrescri");
            viewString.Append("bedBurnAcres, T1.TreatmentActivity_TreatmentActivityAllocatedAmount, T1.Treatmen");
            viewString.Append("tActivity_TreatmentActivityTotalCost, T1.TreatmentActivity_TreatmentActivityGran");
            viewString.Append("tCost, T1.TreatmentActivity_TreatmentActivityStartDate, T1.TreatmentActivity_Tre");
            viewString.Append("atmentActivityEndDate, T1.TreatmentActivity_TreatmentActivityNotes)\r\n    FROM (\r");
            viewString.Append("\n        SELECT \r\n            T.TreatmentActivityID AS TreatmentActivity_Treatme");
            viewString.Append("ntActivityID, \r\n            T.TenantID AS TreatmentActivity_TenantID, \r\n        ");
            viewString.Append("    T.ProjectID AS TreatmentActivity_ProjectID, \r\n            T.FundingSourceID ");
            viewString.Append("AS TreatmentActivity_FundingSourceID, \r\n            T.TreatmentActivityFootprint");
            viewString.Append("Acres AS TreatmentActivity_TreatmentActivityFootprintAcres, \r\n            T.Trea");
            viewString.Append("tmentActivityBrushControlAcres AS TreatmentActivity_TreatmentActivityBrushContro");
            viewString.Append("lAcres, \r\n            T.TreatmentActivityThinningAcres AS TreatmentActivity_Trea");
            viewString.Append("tmentActivityThinningAcres, \r\n            T.TreatmentActivityPruningAcres AS Tre");
            viewString.Append("atmentActivity_TreatmentActivityPruningAcres, \r\n            T.TreatmentActivityS");
            viewString.Append("lashAcres AS TreatmentActivity_TreatmentActivitySlashAcres, \r\n            T.Trea");
            viewString.Append("tmentActivityPrescribedBurnAcres AS TreatmentActivity_TreatmentActivityPrescribe");
            viewString.Append("dBurnAcres, \r\n            T.TreatmentActivityAllocatedAmount AS TreatmentActivit");
            viewString.Append("y_TreatmentActivityAllocatedAmount, \r\n            T.TreatmentActivityTotalCost A");
            viewString.Append("S TreatmentActivity_TreatmentActivityTotalCost, \r\n            T.TreatmentActivit");
            viewString.Append("yGrantCost AS TreatmentActivity_TreatmentActivityGrantCost, \r\n            T.Trea");
            viewString.Append("tmentActivityStartDate AS TreatmentActivity_TreatmentActivityStartDate, \r\n      ");
            viewString.Append("      T.TreatmentActivityEndDate AS TreatmentActivity_TreatmentActivityEndDate, ");
            viewString.Append("\r\n            T.TreatmentActivityNotes AS TreatmentActivity_TreatmentActivityNot");
            viewString.Append("es, \r\n            True AS _from0\r\n        FROM ProjectFirmaWebModelsStoreContain");
            viewString.Append("er.TreatmentActivity AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.TreatmentActivity", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ActivityType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView270()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ActivityType", @"
    SELECT VALUE -- Constructing ActivityType
        [ProjectFirma.Web.Models.Store.ActivityType](T1.ActivityType_ActivityTypeID, T1.ActivityType_ActivityTypeName, T1.ActivityType_ActivityTypeDisplayName)
    FROM (
        SELECT 
            T.ActivityTypeID AS ActivityType_ActivityTypeID, 
            T.ActivityTypeName AS ActivityType_ActivityTypeName, 
            T.ActivityTypeDisplayName AS ActivityType_ActivityTypeDisplayName, 
            True AS _from0
        FROM DatabaseEntities.ActivityType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ActivityType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView271()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ActivityType", @"
    SELECT VALUE -- Constructing ActivityType
        [ProjectFirma.Web.Models.ActivityType](T1.ActivityType_ActivityTypeID, T1.ActivityType_ActivityTypeName, T1.ActivityType_ActivityTypeDisplayName)
    FROM (
        SELECT 
            T.ActivityTypeID AS ActivityType_ActivityTypeID, 
            T.ActivityTypeName AS ActivityType_ActivityTypeName, 
            T.ActivityTypeDisplayName AS ActivityType_ActivityTypeDisplayName, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ActivityType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.DatabaseMigration
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView272()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.DatabaseMigration", @"
    SELECT VALUE -- Constructing DatabaseMigration
        [ProjectFirma.Web.Models.Store.DatabaseMigration](T1.DatabaseMigration_DatabaseMigrationNumber)
    FROM (
        SELECT 
            T.DatabaseMigrationNumber AS DatabaseMigration_DatabaseMigrationNumber, 
            True AS _from0
        FROM DatabaseEntities.DatabaseMigration AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.DatabaseMigration
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView273()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.DatabaseMigration", @"
    SELECT VALUE -- Constructing DatabaseMigration
        [ProjectFirma.Web.Models.DatabaseMigration](T1.DatabaseMigration_DatabaseMigrationNumber)
    FROM (
        SELECT 
            T.DatabaseMigrationNumber AS DatabaseMigration_DatabaseMigrationNumber, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.DatabaseMigration AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.Deployment
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView274()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.Deployment", @"
    SELECT VALUE -- Constructing Deployment
        [ProjectFirma.Web.Models.Store.Deployment](T1.Deployment_DeploymentID, T1.Deployment_Version, T1.Deployment_Date, T1.Deployment_DeployedBy, T1.Deployment_DeployedFrom, T1.Deployment_Source, T1.Deployment_Script)
    FROM (
        SELECT 
            T.DeploymentID AS Deployment_DeploymentID, 
            T.Version AS Deployment_Version, 
            T.Date AS Deployment_Date, 
            T.DeployedBy AS Deployment_DeployedBy, 
            T.DeployedFrom AS Deployment_DeployedFrom, 
            T.Source AS Deployment_Source, 
            T.Script AS Deployment_Script, 
            True AS _from0
        FROM DatabaseEntities.Deployment AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.Deployment
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView275()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.Deployment", @"
    SELECT VALUE -- Constructing Deployment
        [ProjectFirma.Web.Models.Deployment](T1.Deployment_DeploymentID, T1.Deployment_Version, T1.Deployment_Date, T1.Deployment_DeployedBy, T1.Deployment_DeployedFrom, T1.Deployment_Source, T1.Deployment_Script)
    FROM (
        SELECT 
            T.DeploymentID AS Deployment_DeploymentID, 
            T.Version AS Deployment_Version, 
            T.Date AS Deployment_Date, 
            T.DeployedBy AS Deployment_DeployedBy, 
            T.DeployedFrom AS Deployment_DeployedFrom, 
            T.Source AS Deployment_Source, 
            T.Script AS Deployment_Script, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.Deployment AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.geometry_columns
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView276()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.geometry_columns", @"
    SELECT VALUE -- Constructing geometry_columns
        [ProjectFirma.Web.Models.Store.geometry_columns](T1.[geometry_columns.f_table_catalog], T1.[geometry_columns.f_table_schema], T1.[geometry_columns.f_table_name], T1.[geometry_columns.f_geometry_column], T1.[geometry_columns.coord_dimension], T1.[geometry_columns.srid], T1.[geometry_columns.geometry_type])
    FROM (
        SELECT 
            T.f_table_catalog AS [geometry_columns.f_table_catalog], 
            T.f_table_schema AS [geometry_columns.f_table_schema], 
            T.f_table_name AS [geometry_columns.f_table_name], 
            T.f_geometry_column AS [geometry_columns.f_geometry_column], 
            T.coord_dimension AS [geometry_columns.coord_dimension], 
            T.srid AS [geometry_columns.srid], 
            T.geometry_type AS [geometry_columns.geometry_type], 
            True AS _from0
        FROM DatabaseEntities.geometry_columns AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.geometry_columns
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView277()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.geometry_columns", @"
    SELECT VALUE -- Constructing geometry_columns
        [ProjectFirma.Web.Models.geometry_columns](T1.[geometry_columns.f_table_catalog], T1.[geometry_columns.f_table_schema], T1.[geometry_columns.f_table_name], T1.[geometry_columns.f_geometry_column], T1.[geometry_columns.coord_dimension], T1.[geometry_columns.srid], T1.[geometry_columns.geometry_type])
    FROM (
        SELECT 
            T.f_table_catalog AS [geometry_columns.f_table_catalog], 
            T.f_table_schema AS [geometry_columns.f_table_schema], 
            T.f_table_name AS [geometry_columns.f_table_name], 
            T.f_geometry_column AS [geometry_columns.f_geometry_column], 
            T.coord_dimension AS [geometry_columns.coord_dimension], 
            T.srid AS [geometry_columns.srid], 
            T.geometry_type AS [geometry_columns.geometry_type], 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.geometry_columns AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.PerformanceMeasureTargetValueType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView278()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.PerformanceMeasureTargetValueType", @"
    SELECT VALUE -- Constructing PerformanceMeasureTargetValueType
        [ProjectFirma.Web.Models.Store.PerformanceMeasureTargetValueType](T1.PerformanceMeasureTargetValueType_PerformanceMeasureTargetValueTypeID, T1.PerformanceMeasureTargetValueType_PerformanceMeasureTargetValueTypeName, T1.PerformanceMeasureTargetValueType_PerformanceMeasureTargetValueTypeDisplayName)
    FROM (
        SELECT 
            T.PerformanceMeasureTargetValueTypeID AS PerformanceMeasureTargetValueType_PerformanceMeasureTargetValueTypeID, 
            T.PerformanceMeasureTargetValueTypeName AS PerformanceMeasureTargetValueType_PerformanceMeasureTargetValueTypeName, 
            T.PerformanceMeasureTargetValueTypeDisplayName AS PerformanceMeasureTargetValueType_PerformanceMeasureTargetValueTypeDisplayName, 
            True AS _from0
        FROM DatabaseEntities.PerformanceMeasureTargetValueType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.PerformanceMeasureTargetValueType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView279()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.PerformanceMeasureTargetValueType", @"
    SELECT VALUE -- Constructing PerformanceMeasureTargetValueType
        [ProjectFirma.Web.Models.PerformanceMeasureTargetValueType](T1.PerformanceMeasureTargetValueType_PerformanceMeasureTargetValueTypeID, T1.PerformanceMeasureTargetValueType_PerformanceMeasureTargetValueTypeName, T1.PerformanceMeasureTargetValueType_PerformanceMeasureTargetValueTypeDisplayName)
    FROM (
        SELECT 
            T.PerformanceMeasureTargetValueTypeID AS PerformanceMeasureTargetValueType_PerformanceMeasureTargetValueTypeID, 
            T.PerformanceMeasureTargetValueTypeName AS PerformanceMeasureTargetValueType_PerformanceMeasureTargetValueTypeName, 
            T.PerformanceMeasureTargetValueTypeDisplayName AS PerformanceMeasureTargetValueType_PerformanceMeasureTargetValueTypeDisplayName, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.PerformanceMeasureTargetValueType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectColorByType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView280()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectColorByType", @"
    SELECT VALUE -- Constructing ProjectColorByType
        [ProjectFirma.Web.Models.Store.ProjectColorByType](T1.ProjectColorByType_ProjectColorByTypeID, T1.ProjectColorByType_ProjectColorByTypeName, T1.ProjectColorByType_ProjectColorByTypeNameWithIdentifier, T1.ProjectColorByType_ProjectColorByTypeDisplayName, T1.ProjectColorByType_SortOrder)
    FROM (
        SELECT 
            T.ProjectColorByTypeID AS ProjectColorByType_ProjectColorByTypeID, 
            T.ProjectColorByTypeName AS ProjectColorByType_ProjectColorByTypeName, 
            T.ProjectColorByTypeNameWithIdentifier AS ProjectColorByType_ProjectColorByTypeNameWithIdentifier, 
            T.ProjectColorByTypeDisplayName AS ProjectColorByType_ProjectColorByTypeDisplayName, 
            T.SortOrder AS ProjectColorByType_SortOrder, 
            True AS _from0
        FROM DatabaseEntities.ProjectColorByType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectColorByType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView281()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectColorByType", @"
    SELECT VALUE -- Constructing ProjectColorByType
        [ProjectFirma.Web.Models.ProjectColorByType](T1.ProjectColorByType_ProjectColorByTypeID, T1.ProjectColorByType_ProjectColorByTypeName, T1.ProjectColorByType_ProjectColorByTypeNameWithIdentifier, T1.ProjectColorByType_ProjectColorByTypeDisplayName, T1.ProjectColorByType_SortOrder)
    FROM (
        SELECT 
            T.ProjectColorByTypeID AS ProjectColorByType_ProjectColorByTypeID, 
            T.ProjectColorByTypeName AS ProjectColorByType_ProjectColorByTypeName, 
            T.ProjectColorByTypeNameWithIdentifier AS ProjectColorByType_ProjectColorByTypeNameWithIdentifier, 
            T.ProjectColorByTypeDisplayName AS ProjectColorByType_ProjectColorByTypeDisplayName, 
            T.SortOrder AS ProjectColorByType_SortOrder, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectColorByType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectCreateSection
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView282()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectCreateSection", @"
    SELECT VALUE -- Constructing ProjectCreateSection
        [ProjectFirma.Web.Models.Store.ProjectCreateSection](T1.ProjectCreateSection_ProjectCreateSectionID, T1.ProjectCreateSection_ProjectCreateSectionName, T1.ProjectCreateSection_ProjectCreateSectionDisplayName, T1.ProjectCreateSection_SortOrder, T1.ProjectCreateSection_HasCompletionStatus, T1.ProjectCreateSection_ProjectWorkflowSectionGroupingID)
    FROM (
        SELECT 
            T.ProjectCreateSectionID AS ProjectCreateSection_ProjectCreateSectionID, 
            T.ProjectCreateSectionName AS ProjectCreateSection_ProjectCreateSectionName, 
            T.ProjectCreateSectionDisplayName AS ProjectCreateSection_ProjectCreateSectionDisplayName, 
            T.SortOrder AS ProjectCreateSection_SortOrder, 
            T.HasCompletionStatus AS ProjectCreateSection_HasCompletionStatus, 
            T.ProjectWorkflowSectionGroupingID AS ProjectCreateSection_ProjectWorkflowSectionGroupingID, 
            True AS _from0
        FROM DatabaseEntities.ProjectCreateSection AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectUpdateSection
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView283()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectUpdateSection", @"
    SELECT VALUE -- Constructing ProjectUpdateSection
        [ProjectFirma.Web.Models.Store.ProjectUpdateSection](T1.ProjectUpdateSection_ProjectUpdateSectionID, T1.ProjectUpdateSection_ProjectUpdateSectionName, T1.ProjectUpdateSection_ProjectUpdateSectionDisplayName, T1.ProjectUpdateSection_SortOrder, T1.ProjectUpdateSection_HasCompletionStatus, T1.ProjectUpdateSection_ProjectWorkflowSectionGroupingID)
    FROM (
        SELECT 
            T.ProjectUpdateSectionID AS ProjectUpdateSection_ProjectUpdateSectionID, 
            T.ProjectUpdateSectionName AS ProjectUpdateSection_ProjectUpdateSectionName, 
            T.ProjectUpdateSectionDisplayName AS ProjectUpdateSection_ProjectUpdateSectionDisplayName, 
            T.SortOrder AS ProjectUpdateSection_SortOrder, 
            T.HasCompletionStatus AS ProjectUpdateSection_HasCompletionStatus, 
            T.ProjectWorkflowSectionGroupingID AS ProjectUpdateSection_ProjectWorkflowSectionGroupingID, 
            True AS _from0
        FROM DatabaseEntities.ProjectUpdateSection AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectWorkflowSectionGrouping
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView284()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectWorkflowSectionGrouping", @"
    SELECT VALUE -- Constructing ProjectWorkflowSectionGrouping
        [ProjectFirma.Web.Models.Store.ProjectWorkflowSectionGrouping](T1.ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID, T1.ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingName, T1.ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingDisplayName, T1.ProjectWorkflowSectionGrouping_SortOrder)
    FROM (
        SELECT 
            T.ProjectWorkflowSectionGroupingID AS ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID, 
            T.ProjectWorkflowSectionGroupingName AS ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingName, 
            T.ProjectWorkflowSectionGroupingDisplayName AS ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingDisplayName, 
            T.SortOrder AS ProjectWorkflowSectionGrouping_SortOrder, 
            True AS _from0
        FROM DatabaseEntities.ProjectWorkflowSectionGrouping AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectCreateSection
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView285()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectCreateSection", @"
    SELECT VALUE -- Constructing ProjectCreateSection
        [ProjectFirma.Web.Models.ProjectCreateSection](T1.ProjectCreateSection_ProjectCreateSectionID, T1.ProjectCreateSection_ProjectCreateSectionName, T1.ProjectCreateSection_ProjectCreateSectionDisplayName, T1.ProjectCreateSection_SortOrder, T1.ProjectCreateSection_HasCompletionStatus, T1.ProjectCreateSection_ProjectWorkflowSectionGroupingID)
    FROM (
        SELECT 
            T.ProjectCreateSectionID AS ProjectCreateSection_ProjectCreateSectionID, 
            T.ProjectCreateSectionName AS ProjectCreateSection_ProjectCreateSectionName, 
            T.ProjectCreateSectionDisplayName AS ProjectCreateSection_ProjectCreateSectionDisplayName, 
            T.SortOrder AS ProjectCreateSection_SortOrder, 
            T.HasCompletionStatus AS ProjectCreateSection_HasCompletionStatus, 
            T.ProjectWorkflowSectionGroupingID AS ProjectCreateSection_ProjectWorkflowSectionGroupingID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectCreateSection AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectUpdateSection
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView286()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectUpdateSection", @"
    SELECT VALUE -- Constructing ProjectUpdateSection
        [ProjectFirma.Web.Models.ProjectUpdateSection](T1.ProjectUpdateSection_ProjectUpdateSectionID, T1.ProjectUpdateSection_ProjectUpdateSectionName, T1.ProjectUpdateSection_ProjectUpdateSectionDisplayName, T1.ProjectUpdateSection_SortOrder, T1.ProjectUpdateSection_HasCompletionStatus, T1.ProjectUpdateSection_ProjectWorkflowSectionGroupingID)
    FROM (
        SELECT 
            T.ProjectUpdateSectionID AS ProjectUpdateSection_ProjectUpdateSectionID, 
            T.ProjectUpdateSectionName AS ProjectUpdateSection_ProjectUpdateSectionName, 
            T.ProjectUpdateSectionDisplayName AS ProjectUpdateSection_ProjectUpdateSectionDisplayName, 
            T.SortOrder AS ProjectUpdateSection_SortOrder, 
            T.HasCompletionStatus AS ProjectUpdateSection_HasCompletionStatus, 
            T.ProjectWorkflowSectionGroupingID AS ProjectUpdateSection_ProjectWorkflowSectionGroupingID, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectUpdateSection AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectWorkflowSectionGrouping
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView287()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectWorkflowSectionGrouping", @"
    SELECT VALUE -- Constructing ProjectWorkflowSectionGrouping
        [ProjectFirma.Web.Models.ProjectWorkflowSectionGrouping](T1.ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID, T1.ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingName, T1.ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingDisplayName, T1.ProjectWorkflowSectionGrouping_SortOrder)
    FROM (
        SELECT 
            T.ProjectWorkflowSectionGroupingID AS ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID, 
            T.ProjectWorkflowSectionGroupingName AS ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingName, 
            T.ProjectWorkflowSectionGroupingDisplayName AS ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingDisplayName, 
            T.SortOrder AS ProjectWorkflowSectionGrouping_SortOrder, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectWorkflowSectionGrouping AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.ProjectLocationFilterType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView288()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.ProjectLocationFilterType", @"
    SELECT VALUE -- Constructing ProjectLocationFilterType
        [ProjectFirma.Web.Models.Store.ProjectLocationFilterType](T1.ProjectLocationFilterType_ProjectLocationFilterTypeID, T1.ProjectLocationFilterType_ProjectLocationFilterTypeName, T1.ProjectLocationFilterType_ProjectLocationFilterTypeNameWithIdentifier, T1.ProjectLocationFilterType_ProjectLocationFilterTypeDisplayName, T1.ProjectLocationFilterType_SortOrder, T1.ProjectLocationFilterType_DisplayGroup)
    FROM (
        SELECT 
            T.ProjectLocationFilterTypeID AS ProjectLocationFilterType_ProjectLocationFilterTypeID, 
            T.ProjectLocationFilterTypeName AS ProjectLocationFilterType_ProjectLocationFilterTypeName, 
            T.ProjectLocationFilterTypeNameWithIdentifier AS ProjectLocationFilterType_ProjectLocationFilterTypeNameWithIdentifier, 
            T.ProjectLocationFilterTypeDisplayName AS ProjectLocationFilterType_ProjectLocationFilterTypeDisplayName, 
            T.SortOrder AS ProjectLocationFilterType_SortOrder, 
            T.DisplayGroup AS ProjectLocationFilterType_DisplayGroup, 
            True AS _from0
        FROM DatabaseEntities.ProjectLocationFilterType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.ProjectLocationFilterType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView289()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.ProjectLocationFilterType", @"
    SELECT VALUE -- Constructing ProjectLocationFilterType
        [ProjectFirma.Web.Models.ProjectLocationFilterType](T1.ProjectLocationFilterType_ProjectLocationFilterTypeID, T1.ProjectLocationFilterType_ProjectLocationFilterTypeName, T1.ProjectLocationFilterType_ProjectLocationFilterTypeNameWithIdentifier, T1.ProjectLocationFilterType_ProjectLocationFilterTypeDisplayName, T1.ProjectLocationFilterType_SortOrder, T1.ProjectLocationFilterType_DisplayGroup)
    FROM (
        SELECT 
            T.ProjectLocationFilterTypeID AS ProjectLocationFilterType_ProjectLocationFilterTypeID, 
            T.ProjectLocationFilterTypeName AS ProjectLocationFilterType_ProjectLocationFilterTypeName, 
            T.ProjectLocationFilterTypeNameWithIdentifier AS ProjectLocationFilterType_ProjectLocationFilterTypeNameWithIdentifier, 
            T.ProjectLocationFilterTypeDisplayName AS ProjectLocationFilterType_ProjectLocationFilterTypeDisplayName, 
            T.SortOrder AS ProjectLocationFilterType_SortOrder, 
            T.DisplayGroup AS ProjectLocationFilterType_DisplayGroup, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.ProjectLocationFilterType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.spatial_ref_sys
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView290()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.spatial_ref_sys", @"
    SELECT VALUE -- Constructing spatial_ref_sys
        [ProjectFirma.Web.Models.Store.spatial_ref_sys](T1.[spatial_ref_sys.srid], T1.[spatial_ref_sys.auth_name], T1.[spatial_ref_sys.auth_srid], T1.[spatial_ref_sys.srtext], T1.[spatial_ref_sys.proj4text])
    FROM (
        SELECT 
            T.srid AS [spatial_ref_sys.srid], 
            T.auth_name AS [spatial_ref_sys.auth_name], 
            T.auth_srid AS [spatial_ref_sys.auth_srid], 
            T.srtext AS [spatial_ref_sys.srtext], 
            T.proj4text AS [spatial_ref_sys.proj4text], 
            True AS _from0
        FROM DatabaseEntities.spatial_ref_sys AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.spatial_ref_sys
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView291()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.spatial_ref_sys", @"
    SELECT VALUE -- Constructing spatial_ref_sys
        [ProjectFirma.Web.Models.spatial_ref_sys](T1.[spatial_ref_sys.srid], T1.[spatial_ref_sys.auth_name], T1.[spatial_ref_sys.auth_srid], T1.[spatial_ref_sys.srtext], T1.[spatial_ref_sys.proj4text])
    FROM (
        SELECT 
            T.srid AS [spatial_ref_sys.srid], 
            T.auth_name AS [spatial_ref_sys.auth_name], 
            T.auth_srid AS [spatial_ref_sys.auth_srid], 
            T.srtext AS [spatial_ref_sys.srtext], 
            T.proj4text AS [spatial_ref_sys.proj4text], 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.spatial_ref_sys AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.tmpGrantsFlatFile
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView292()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2201);
            viewString.Append("\r\n    SELECT VALUE -- Constructing tmpGrantsFlatFile\r\n        [ProjectFirma.Web.");
            viewString.Append("Models.Store.tmpGrantsFlatFile](T1.[tmpGrantsFlatFile.Grant_Number], T1.tmpGrant");
            viewString.Append("sFlatFile_CFDA, T1.tmpGrantsFlatFile_Title, T1.[tmpGrantsFlatFile.Program_Manage");
            viewString.Append("r], T1.[tmpGrantsFlatFile.Prog_Index], T1.[tmpGrantsFlatFile.Project_Codes], T1.");
            viewString.Append("[tmpGrantsFlatFile.Funding_Increase], T1.[tmpGrantsFlatFile.Federal_Fund_Code], ");
            viewString.Append("T1.[tmpGrantsFlatFile.Funds_Awarded], T1.[tmpGrantsFlatFile.Matching_Funds], T1.");
            viewString.Append("[tmpGrantsFlatFile.Grant_Total], T1.[tmpGrantsFlatFile.DNR_Match_Amount], T1.[tm");
            viewString.Append("pGrantsFlatFile.Non_DNR_Other_Match], T1.[tmpGrantsFlatFile.Landowner_Match], T1");
            viewString.Append(".[tmpGrantsFlatFile.Match_PI_Alpha_Code], T1.[tmpGrantsFlatFile.Expend_Method], ");
            viewString.Append("T1.[tmpGrantsFlatFile.Start_Date], T1.[tmpGrantsFlatFile.End_Date], T1.tmpGrants");
            viewString.Append("FlatFile_Notes)\r\n    FROM (\r\n        SELECT \r\n            T.Grant_Number AS [tmp");
            viewString.Append("GrantsFlatFile.Grant_Number], \r\n            T.CFDA AS tmpGrantsFlatFile_CFDA, \r\n");
            viewString.Append("            T.Title AS tmpGrantsFlatFile_Title, \r\n            T.Program_Manager ");
            viewString.Append("AS [tmpGrantsFlatFile.Program_Manager], \r\n            T.Prog_Index AS [tmpGrants");
            viewString.Append("FlatFile.Prog_Index], \r\n            T.Project_Codes AS [tmpGrantsFlatFile.Projec");
            viewString.Append("t_Codes], \r\n            T.Funding_Increase AS [tmpGrantsFlatFile.Funding_Increas");
            viewString.Append("e], \r\n            T.Federal_Fund_Code AS [tmpGrantsFlatFile.Federal_Fund_Code], ");
            viewString.Append("\r\n            T.Funds_Awarded AS [tmpGrantsFlatFile.Funds_Awarded], \r\n          ");
            viewString.Append("  T.Matching_Funds AS [tmpGrantsFlatFile.Matching_Funds], \r\n            T.Grant_");
            viewString.Append("Total AS [tmpGrantsFlatFile.Grant_Total], \r\n            T.DNR_Match_Amount AS [t");
            viewString.Append("mpGrantsFlatFile.DNR_Match_Amount], \r\n            T.Non_DNR_Other_Match AS [tmpG");
            viewString.Append("rantsFlatFile.Non_DNR_Other_Match], \r\n            T.Landowner_Match AS [tmpGrant");
            viewString.Append("sFlatFile.Landowner_Match], \r\n            T.Match_PI_Alpha_Code AS [tmpGrantsFla");
            viewString.Append("tFile.Match_PI_Alpha_Code], \r\n            T.Expend_Method AS [tmpGrantsFlatFile.");
            viewString.Append("Expend_Method], \r\n            T.Start_Date AS [tmpGrantsFlatFile.Start_Date], \r\n");
            viewString.Append("            T.End_Date AS [tmpGrantsFlatFile.End_Date], \r\n            T.Notes AS");
            viewString.Append(" tmpGrantsFlatFile_Notes, \r\n            True AS _from0\r\n        FROM DatabaseEnt");
            viewString.Append("ities.tmpGrantsFlatFile AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.tmpGrantsFlatFile", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.tmpGrantsFlatFile
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView293()
        {
            System.Text.StringBuilder viewString = new System.Text.StringBuilder(2214);
            viewString.Append("\r\n    SELECT VALUE -- Constructing tmpGrantsFlatFile\r\n        [ProjectFirma.Web.");
            viewString.Append("Models.tmpGrantsFlatFile](T1.[tmpGrantsFlatFile.Grant_Number], T1.tmpGrantsFlatF");
            viewString.Append("ile_CFDA, T1.tmpGrantsFlatFile_Title, T1.[tmpGrantsFlatFile.Program_Manager], T1");
            viewString.Append(".[tmpGrantsFlatFile.Prog_Index], T1.[tmpGrantsFlatFile.Project_Codes], T1.[tmpGr");
            viewString.Append("antsFlatFile.Funding_Increase], T1.[tmpGrantsFlatFile.Federal_Fund_Code], T1.[tm");
            viewString.Append("pGrantsFlatFile.Funds_Awarded], T1.[tmpGrantsFlatFile.Matching_Funds], T1.[tmpGr");
            viewString.Append("antsFlatFile.Grant_Total], T1.[tmpGrantsFlatFile.DNR_Match_Amount], T1.[tmpGrant");
            viewString.Append("sFlatFile.Non_DNR_Other_Match], T1.[tmpGrantsFlatFile.Landowner_Match], T1.[tmpG");
            viewString.Append("rantsFlatFile.Match_PI_Alpha_Code], T1.[tmpGrantsFlatFile.Expend_Method], T1.[tm");
            viewString.Append("pGrantsFlatFile.Start_Date], T1.[tmpGrantsFlatFile.End_Date], T1.tmpGrantsFlatFi");
            viewString.Append("le_Notes)\r\n    FROM (\r\n        SELECT \r\n            T.Grant_Number AS [tmpGrants");
            viewString.Append("FlatFile.Grant_Number], \r\n            T.CFDA AS tmpGrantsFlatFile_CFDA, \r\n      ");
            viewString.Append("      T.Title AS tmpGrantsFlatFile_Title, \r\n            T.Program_Manager AS [tm");
            viewString.Append("pGrantsFlatFile.Program_Manager], \r\n            T.Prog_Index AS [tmpGrantsFlatFi");
            viewString.Append("le.Prog_Index], \r\n            T.Project_Codes AS [tmpGrantsFlatFile.Project_Code");
            viewString.Append("s], \r\n            T.Funding_Increase AS [tmpGrantsFlatFile.Funding_Increase], \r\n");
            viewString.Append("            T.Federal_Fund_Code AS [tmpGrantsFlatFile.Federal_Fund_Code], \r\n    ");
            viewString.Append("        T.Funds_Awarded AS [tmpGrantsFlatFile.Funds_Awarded], \r\n            T.Ma");
            viewString.Append("tching_Funds AS [tmpGrantsFlatFile.Matching_Funds], \r\n            T.Grant_Total ");
            viewString.Append("AS [tmpGrantsFlatFile.Grant_Total], \r\n            T.DNR_Match_Amount AS [tmpGran");
            viewString.Append("tsFlatFile.DNR_Match_Amount], \r\n            T.Non_DNR_Other_Match AS [tmpGrantsF");
            viewString.Append("latFile.Non_DNR_Other_Match], \r\n            T.Landowner_Match AS [tmpGrantsFlatF");
            viewString.Append("ile.Landowner_Match], \r\n            T.Match_PI_Alpha_Code AS [tmpGrantsFlatFile.");
            viewString.Append("Match_PI_Alpha_Code], \r\n            T.Expend_Method AS [tmpGrantsFlatFile.Expend");
            viewString.Append("_Method], \r\n            T.Start_Date AS [tmpGrantsFlatFile.Start_Date], \r\n      ");
            viewString.Append("      T.End_Date AS [tmpGrantsFlatFile.End_Date], \r\n            T.Notes AS tmpGr");
            viewString.Append("antsFlatFile_Notes, \r\n            True AS _from0\r\n        FROM ProjectFirmaWebMo");
            viewString.Append("delsStoreContainer.tmpGrantsFlatFile AS T\r\n    ) AS T1");
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.tmpGrantsFlatFile", viewString.ToString());
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.TreatmentType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView294()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.TreatmentType", @"
    SELECT VALUE -- Constructing TreatmentType
        [ProjectFirma.Web.Models.Store.TreatmentType](T1.TreatmentType_TreatmentTypeID, T1.TreatmentType_TreatmentTypeName, T1.TreatmentType_TreatmentTypeDisplayName)
    FROM (
        SELECT 
            T.TreatmentTypeID AS TreatmentType_TreatmentTypeID, 
            T.TreatmentTypeName AS TreatmentType_TreatmentTypeName, 
            T.TreatmentTypeDisplayName AS TreatmentType_TreatmentTypeDisplayName, 
            True AS _from0
        FROM DatabaseEntities.TreatmentType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.TreatmentType
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView295()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.TreatmentType", @"
    SELECT VALUE -- Constructing TreatmentType
        [ProjectFirma.Web.Models.TreatmentType](T1.TreatmentType_TreatmentTypeID, T1.TreatmentType_TreatmentTypeName, T1.TreatmentType_TreatmentTypeDisplayName)
    FROM (
        SELECT 
            T.TreatmentTypeID AS TreatmentType_TreatmentTypeID, 
            T.TreatmentTypeName AS TreatmentType_TreatmentTypeName, 
            T.TreatmentTypeDisplayName AS TreatmentType_TreatmentTypeDisplayName, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.TreatmentType AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.AggregatedCounter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView296()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.AggregatedCounter", @"
    SELECT VALUE -- Constructing AggregatedCounter
        [ProjectFirma.Web.Models.Store.AggregatedCounter](T1.AggregatedCounter_Id, T1.AggregatedCounter_Key, T1.AggregatedCounter_Value, T1.AggregatedCounter_ExpireAt)
    FROM (
        SELECT 
            T.Id AS AggregatedCounter_Id, 
            T.[Key] AS AggregatedCounter_Key, 
            T.[Value] AS AggregatedCounter_Value, 
            T.ExpireAt AS AggregatedCounter_ExpireAt, 
            True AS _from0
        FROM DatabaseEntities.AggregatedCounter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.AggregatedCounter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView297()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.AggregatedCounter", @"
    SELECT VALUE -- Constructing AggregatedCounter
        [ProjectFirma.Web.Models.AggregatedCounter](T1.AggregatedCounter_Id, T1.AggregatedCounter_Key, T1.AggregatedCounter_Value, T1.AggregatedCounter_ExpireAt)
    FROM (
        SELECT 
            T.Id AS AggregatedCounter_Id, 
            T.[Key] AS AggregatedCounter_Key, 
            T.[Value] AS AggregatedCounter_Value, 
            T.ExpireAt AS AggregatedCounter_ExpireAt, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.AggregatedCounter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.Counter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView298()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.Counter", @"
    SELECT VALUE -- Constructing Counter
        [ProjectFirma.Web.Models.Store.Counter](T1.Counter_Id, T1.Counter_Key, T1.Counter_Value, T1.Counter_ExpireAt)
    FROM (
        SELECT 
            T.Id AS Counter_Id, 
            T.[Key] AS Counter_Key, 
            T.[Value] AS Counter_Value, 
            T.ExpireAt AS Counter_ExpireAt, 
            True AS _from0
        FROM DatabaseEntities.Counter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.Counter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView299()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.Counter", @"
    SELECT VALUE -- Constructing Counter
        [ProjectFirma.Web.Models.Counter](T1.Counter_Id, T1.Counter_Key, T1.Counter_Value, T1.Counter_ExpireAt)
    FROM (
        SELECT 
            T.Id AS Counter_Id, 
            T.[Key] AS Counter_Key, 
            T.[Value] AS Counter_Value, 
            T.ExpireAt AS Counter_ExpireAt, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.Counter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.Hash
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView300()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.Hash", @"
    SELECT VALUE -- Constructing Hash
        [ProjectFirma.Web.Models.Store.Hash](T1.Hash_Id, T1.Hash_Key, T1.Hash_Field, T1.Hash_Value, T1.Hash_ExpireAt)
    FROM (
        SELECT 
            T.Id AS Hash_Id, 
            T.[Key] AS Hash_Key, 
            T.Field AS Hash_Field, 
            T.[Value] AS Hash_Value, 
            T.ExpireAt AS Hash_ExpireAt, 
            True AS _from0
        FROM DatabaseEntities.Hash AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.Hash
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView301()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.Hash", @"
    SELECT VALUE -- Constructing Hash
        [ProjectFirma.Web.Models.Hash](T1.Hash_Id, T1.Hash_Key, T1.Hash_Field, T1.Hash_Value, T1.Hash_ExpireAt)
    FROM (
        SELECT 
            T.Id AS Hash_Id, 
            T.[Key] AS Hash_Key, 
            T.Field AS Hash_Field, 
            T.[Value] AS Hash_Value, 
            T.ExpireAt AS Hash_ExpireAt, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.Hash AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.Job
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView302()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.Job", @"
    SELECT VALUE -- Constructing Job
        [ProjectFirma.Web.Models.Store.Job](T1.Job_Id, T1.Job_StateId, T1.Job_StateName, T1.Job_InvocationData, T1.Job_Arguments, T1.Job_CreatedAt, T1.Job_ExpireAt)
    FROM (
        SELECT 
            T.Id AS Job_Id, 
            T.StateId AS Job_StateId, 
            T.StateName AS Job_StateName, 
            T.InvocationData AS Job_InvocationData, 
            T.Arguments AS Job_Arguments, 
            T.CreatedAt AS Job_CreatedAt, 
            T.ExpireAt AS Job_ExpireAt, 
            True AS _from0
        FROM DatabaseEntities.Job AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.JobParameter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView303()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.JobParameter", @"
    SELECT VALUE -- Constructing JobParameter
        [ProjectFirma.Web.Models.Store.JobParameter](T1.JobParameter_Id, T1.JobParameter_JobId, T1.JobParameter_Name, T1.JobParameter_Value)
    FROM (
        SELECT 
            T.Id AS JobParameter_Id, 
            T.JobId AS JobParameter_JobId, 
            T.Name AS JobParameter_Name, 
            T.[Value] AS JobParameter_Value, 
            True AS _from0
        FROM DatabaseEntities.JobParameter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.State
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView304()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.State", @"
    SELECT VALUE -- Constructing State
        [ProjectFirma.Web.Models.Store.State](T1.State_Id, T1.State_JobId, T1.State_Name, T1.State_Reason, T1.State_CreatedAt, T1.State_Data)
    FROM (
        SELECT 
            T.Id AS State_Id, 
            T.JobId AS State_JobId, 
            T.Name AS State_Name, 
            T.Reason AS State_Reason, 
            T.CreatedAt AS State_CreatedAt, 
            T.Data AS State_Data, 
            True AS _from0
        FROM DatabaseEntities.State AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.Job
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView305()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.Job", @"
    SELECT VALUE -- Constructing Job
        [ProjectFirma.Web.Models.Job](T1.Job_Id, T1.Job_StateId, T1.Job_StateName, T1.Job_InvocationData, T1.Job_Arguments, T1.Job_CreatedAt, T1.Job_ExpireAt)
    FROM (
        SELECT 
            T.Id AS Job_Id, 
            T.StateId AS Job_StateId, 
            T.StateName AS Job_StateName, 
            T.InvocationData AS Job_InvocationData, 
            T.Arguments AS Job_Arguments, 
            T.CreatedAt AS Job_CreatedAt, 
            T.ExpireAt AS Job_ExpireAt, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.Job AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.JobParameter
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView306()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.JobParameter", @"
    SELECT VALUE -- Constructing JobParameter
        [ProjectFirma.Web.Models.JobParameter](T1.JobParameter_Id, T1.JobParameter_JobId, T1.JobParameter_Name, T1.JobParameter_Value)
    FROM (
        SELECT 
            T.Id AS JobParameter_Id, 
            T.JobId AS JobParameter_JobId, 
            T.Name AS JobParameter_Name, 
            T.[Value] AS JobParameter_Value, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.JobParameter AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.State
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView307()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.State", @"
    SELECT VALUE -- Constructing State
        [ProjectFirma.Web.Models.State](T1.State_Id, T1.State_JobId, T1.State_Name, T1.State_Reason, T1.State_CreatedAt, T1.State_Data)
    FROM (
        SELECT 
            T.Id AS State_Id, 
            T.JobId AS State_JobId, 
            T.Name AS State_Name, 
            T.Reason AS State_Reason, 
            T.CreatedAt AS State_CreatedAt, 
            T.Data AS State_Data, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.State AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.JobQueue
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView308()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.JobQueue", @"
    SELECT VALUE -- Constructing JobQueue
        [ProjectFirma.Web.Models.Store.JobQueue](T1.JobQueue_Id, T1.JobQueue_JobId, T1.JobQueue_Queue, T1.JobQueue_FetchedAt)
    FROM (
        SELECT 
            T.Id AS JobQueue_Id, 
            T.JobId AS JobQueue_JobId, 
            T.Queue AS JobQueue_Queue, 
            T.FetchedAt AS JobQueue_FetchedAt, 
            True AS _from0
        FROM DatabaseEntities.JobQueue AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.JobQueue
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView309()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.JobQueue", @"
    SELECT VALUE -- Constructing JobQueue
        [ProjectFirma.Web.Models.JobQueue](T1.JobQueue_Id, T1.JobQueue_JobId, T1.JobQueue_Queue, T1.JobQueue_FetchedAt)
    FROM (
        SELECT 
            T.Id AS JobQueue_Id, 
            T.JobId AS JobQueue_JobId, 
            T.Queue AS JobQueue_Queue, 
            T.FetchedAt AS JobQueue_FetchedAt, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.JobQueue AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.List
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView310()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.List", @"
    SELECT VALUE -- Constructing List
        [ProjectFirma.Web.Models.Store.List](T1.List_Id, T1.List_Key, T1.List_Value, T1.List_ExpireAt)
    FROM (
        SELECT 
            T.Id AS List_Id, 
            T.[Key] AS List_Key, 
            T.[Value] AS List_Value, 
            T.ExpireAt AS List_ExpireAt, 
            True AS _from0
        FROM DatabaseEntities.List AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.List
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView311()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.List", @"
    SELECT VALUE -- Constructing List
        [ProjectFirma.Web.Models.List](T1.List_Id, T1.List_Key, T1.List_Value, T1.List_ExpireAt)
    FROM (
        SELECT 
            T.Id AS List_Id, 
            T.[Key] AS List_Key, 
            T.[Value] AS List_Value, 
            T.ExpireAt AS List_ExpireAt, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.List AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.Schema
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView312()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.Schema", @"
    SELECT VALUE -- Constructing Schema
        [ProjectFirma.Web.Models.Store.Schema](T1.Schema_Version)
    FROM (
        SELECT 
            T.Version AS Schema_Version, 
            True AS _from0
        FROM DatabaseEntities.Schema AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.Schema
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView313()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.Schema", @"
    SELECT VALUE -- Constructing Schema
        [ProjectFirma.Web.Models.Schema](T1.Schema_Version)
    FROM (
        SELECT 
            T.Version AS Schema_Version, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.Schema AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.Server
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView314()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.Server", @"
    SELECT VALUE -- Constructing Server
        [ProjectFirma.Web.Models.Store.Server](T1.Server_Id, T1.Server_Data, T1.Server_LastHeartbeat)
    FROM (
        SELECT 
            T.Id AS Server_Id, 
            T.Data AS Server_Data, 
            T.LastHeartbeat AS Server_LastHeartbeat, 
            True AS _from0
        FROM DatabaseEntities.Server AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.Server
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView315()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.Server", @"
    SELECT VALUE -- Constructing Server
        [ProjectFirma.Web.Models.Server](T1.Server_Id, T1.Server_Data, T1.Server_LastHeartbeat)
    FROM (
        SELECT 
            T.Id AS Server_Id, 
            T.Data AS Server_Data, 
            T.LastHeartbeat AS Server_LastHeartbeat, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.Server AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.Set
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView316()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.Set", @"
    SELECT VALUE -- Constructing Set
        [ProjectFirma.Web.Models.Store.Set](T1.Set_Id, T1.Set_Key, T1.Set_Score, T1.Set_Value, T1.Set_ExpireAt)
    FROM (
        SELECT 
            T.Id AS Set_Id, 
            T.[Key] AS Set_Key, 
            T.Score AS Set_Score, 
            T.[Value] AS Set_Value, 
            T.ExpireAt AS Set_ExpireAt, 
            True AS _from0
        FROM DatabaseEntities.[Set] AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.Set
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView317()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.Set", @"
    SELECT VALUE -- Constructing Set
        [ProjectFirma.Web.Models.Set](T1.Set_Id, T1.Set_Key, T1.Set_Score, T1.Set_Value, T1.Set_ExpireAt)
    FROM (
        SELECT 
            T.Id AS Set_Id, 
            T.[Key] AS Set_Key, 
            T.Score AS Set_Score, 
            T.[Value] AS Set_Value, 
            T.ExpireAt AS Set_ExpireAt, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.[Set] AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for ProjectFirmaWebModelsStoreContainer.vGeoServerGeospatialArea
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView318()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("ProjectFirmaWebModelsStoreContainer.vGeoServerGeospatialArea", @"
    SELECT VALUE -- Constructing vGeoServerGeospatialArea
        [ProjectFirma.Web.Models.Store.vGeoServerGeospatialArea](T1.vGeoServerGeospatialArea_GeospatialAreaID, T1.vGeoServerGeospatialArea_PrimaryKey, T1.vGeoServerGeospatialArea_GeospatialAreaName, T1.vGeoServerGeospatialArea_GeospatialAreaFeature, T1.[vGeoServerGeospatialArea.Ogr_Geometry], T1.vGeoServerGeospatialArea_TenantID, T1.vGeoServerGeospatialArea_TenantName, T1.vGeoServerGeospatialArea_GeospatialAreaTypeName)
    FROM (
        SELECT 
            T.GeospatialAreaID AS vGeoServerGeospatialArea_GeospatialAreaID, 
            T.PrimaryKey AS vGeoServerGeospatialArea_PrimaryKey, 
            T.GeospatialAreaName AS vGeoServerGeospatialArea_GeospatialAreaName, 
            T.GeospatialAreaFeature AS vGeoServerGeospatialArea_GeospatialAreaFeature, 
            T.Ogr_Geometry AS [vGeoServerGeospatialArea.Ogr_Geometry], 
            T.TenantID AS vGeoServerGeospatialArea_TenantID, 
            T.TenantName AS vGeoServerGeospatialArea_TenantName, 
            T.GeospatialAreaTypeName AS vGeoServerGeospatialArea_GeospatialAreaTypeName, 
            True AS _from0
        FROM DatabaseEntities.vGeoServerGeospatialArea AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for DatabaseEntities.vGeoServerGeospatialArea
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView319()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("DatabaseEntities.vGeoServerGeospatialArea", @"
    SELECT VALUE -- Constructing vGeoServerGeospatialArea
        [ProjectFirma.Web.Models.vGeoServerGeospatialArea](T1.vGeoServerGeospatialArea_GeospatialAreaID, T1.vGeoServerGeospatialArea_PrimaryKey, T1.vGeoServerGeospatialArea_GeospatialAreaName, T1.vGeoServerGeospatialArea_GeospatialAreaFeature, T1.[vGeoServerGeospatialArea.Ogr_Geometry], T1.vGeoServerGeospatialArea_TenantID, T1.vGeoServerGeospatialArea_TenantName, T1.vGeoServerGeospatialArea_GeospatialAreaTypeName)
    FROM (
        SELECT 
            T.GeospatialAreaID AS vGeoServerGeospatialArea_GeospatialAreaID, 
            T.PrimaryKey AS vGeoServerGeospatialArea_PrimaryKey, 
            T.GeospatialAreaName AS vGeoServerGeospatialArea_GeospatialAreaName, 
            T.GeospatialAreaFeature AS vGeoServerGeospatialArea_GeospatialAreaFeature, 
            T.Ogr_Geometry AS [vGeoServerGeospatialArea.Ogr_Geometry], 
            T.TenantID AS vGeoServerGeospatialArea_TenantID, 
            T.TenantName AS vGeoServerGeospatialArea_TenantName, 
            T.GeospatialAreaTypeName AS vGeoServerGeospatialArea_GeospatialAreaTypeName, 
            True AS _from0
        FROM ProjectFirmaWebModelsStoreContainer.vGeoServerGeospatialArea AS T
    ) AS T1");
        }
    }
}
