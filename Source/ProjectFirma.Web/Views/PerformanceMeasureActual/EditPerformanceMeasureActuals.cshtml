@*-----------------------------------------------------------------------
<copyright file="EditPerformanceMeasureActuals.cshtml" company="Tahoe Regional Planning Agency">
Copyright (c) Tahoe Regional Planning Agency. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using LtInfo.Common.HtmlHelperExtensions
@using ProjectFirma.Web.Models
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@inherits ProjectFirma.Web.Views.PerformanceMeasureActual.EditPerformanceMeasureActuals
<script type="text/javascript">
    // <![CDATA[
    angular.module("ProjectFirmaApp").factory("angularModelAndViewData", function()
    {
        return {
            AngularModel: @Html.Raw(JObject.FromObject(Model)),
            AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped))
        };
    });
    angular.bootstrap(jQuery("#EditPerformanceMeasureActualsApp"), ["ProjectFirmaApp"]);
    // ]]>
</script>

<div class="validationError">
    @Html.ValidationSummary()
</div>

<div id="EditPerformanceMeasureActualsApp" ng-controller="PerformanceMeasureActualController">
    @if (Model.ProjectExemptReportingYears != null && Model.ProjectExemptReportingYears.Any())
    {
        <div style="margin-top: 5px">
            <h4 ng-class="AngularViewData.ShowExemptYears ? 'expanded' : 'collapsed'" ng-click="AngularViewData.ShowExemptYears = !AngularViewData.ShowExemptYears"> What if my project has no accomplishments to report?</h4>
            <div ng-show="AngularViewData.ShowExemptYears" style="padding: 0 0 10px 27px">
                Select the years for which you have no accomplishments to report and provide a brief explanation.
                <div>
                    <label ng-repeat="projectExemptYear in AngularModel.ProjectExemptReportingYears" style="padding-right: 10px">
                        <input type="checkbox" ng-model="projectExemptYear.IsExempt"/> <span ng-bind="projectExemptYear.CalendarYear"></span></label>
                </div>
                @Html.TextAreaFor(x => x.Explanation, new Dictionary<string, object> {{"style", "width:300px"}, {"placeholder", "Explanation here"}, {"ng-model", "AngularModel.Explanation"}})
                @Html.ValidationMessageFor(x => x.Explanation)
            </div>
        </div>
    }
    @MultiTenantHelpers.GetPerformanceMeasureName() to Add:
    <select ng-model="PerformanceMeasureToAdd" ng-options="performanceMeasure.DisplayName for performanceMeasure in filteredPerformanceMeasures()" style="width: 700px"></select>
    <button class="btn btn-xs btn-firma" type="button" ng-click="addRow()">Add</button>
    <table class="dialogFormLayout" ng-show="AngularModel.PerformanceMeasureActuals.length > 0">
        <tr>
            <th></th>
            <th style="white-space: nowrap">@Html.Raw(Html.LabelWithSugarFor(FieldDefinition.PerformanceMeasure))</th>
            <th>Year</th>
            <th ng-show="hasAnySubcategories()">Subcategories</th>
            <th colspan="2" style="white-space: nowrap">@Html.LabelWithSugarFor(FieldDefinition.ReportedValue)</th>
        </tr>
        <tr ng-repeat="performanceMeasureActual in AngularModel.PerformanceMeasureActuals | orderBy:[getPerformanceMeasureName, 'CalendarYear', getProjectName]">
            <td>
                <span class="glyphicon glyphicon-trash" title="Remove row" alt="Remove row" ng-click="deleteRow(performanceMeasureActual)" style="cursor: pointer"></span>
            </td>
            <td>
                <span class="helpicon glyphicon glyphicon-question-sign blue" title="Click to get help on {{getPerformanceMeasureName(performanceMeasureActual)}}" data-pmqtip="getPerformanceMeasure(performanceMeasureActual.PerformanceMeasureID)"></span>
                <span ng-bind="getPerformanceMeasureName(performanceMeasureActual)"></span>
            </td>
            <td>
                <select ng-model="performanceMeasureActual.CalendarYear" ng-options="calendarYear for calendarYear in filteredCalendarYears()"></select>
            </td>
            <td style="white-space: nowrap">
                <span ng-repeat="performanceMeasureActualSubcategoryOption in performanceMeasureActual.PerformanceMeasureActualSubcategoryOptions | orderBy:[getSubcategoryName]">
                    <select ng-model="performanceMeasureActualSubcategoryOption.PerformanceMeasureSubcategoryOptionID" style="width: 120px" ng-show="getPerformanceMeasure(performanceMeasureActual.PerformanceMeasureID).HasRealSubcategories">
                        <optgroup label="{{getSubcategoryName(performanceMeasureActualSubcategoryOption)}}">
                            <option ng-repeat="performanceMeasureSubcategoryOption in getSubcategoryOptionsForSubcategory(performanceMeasureActualSubcategoryOption.PerformanceMeasureSubcategoryID)" value="{{performanceMeasureSubcategoryOption.PerformanceMeasureSubcategoryOptionID}}" ng-selected="performanceMeasureActualSubcategoryOption.PerformanceMeasureSubcategoryOptionID == performanceMeasureSubcategoryOption.PerformanceMeasureSubcategoryOptionID">{{performanceMeasureSubcategoryOption.PerformanceMeasureSubcategoryOptionName}}</option>
                        </optgroup>
                    </select>
                </span>
            </td>
            <td>
                <input type="number" class="sitkaNumber" ng-model="performanceMeasureActual.ActualValue" step="any"/>
            </td>
            <td style="white-space: nowrap" ng-bind="getMeasurementUnitTypeDisplayName(performanceMeasureActual)"></td>
        </tr>
    </table>
    @using (Html.BeginForm())
    {
        <div ng-repeat="performanceMeasureActual in AngularModel.PerformanceMeasureActuals | orderBy:'PerformanceMeasureID'">
            <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureActuals[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{performanceMeasureActual.ProjectID}}">
            <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureActuals[0].PerformanceMeasureID).ToString().Replace("0", "{{$index}}")" value="{{performanceMeasureActual.PerformanceMeasureID}}">
            <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureActuals[0].CalendarYear).ToString().Replace("0", "{{$index}}")" value="{{performanceMeasureActual.CalendarYear}}">
            <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureActuals[0].ActualValue).ToString().Replace("0", "{{$index}}")" value="{{performanceMeasureActual.ActualValue}}">
            <div ng-repeat="performanceMeasureActualSubcategoryOption in performanceMeasureActual.PerformanceMeasureActualSubcategoryOptions | orderBy:'PerformanceMeasureSubcategoryOptionID'">
                <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureActuals[0].PerformanceMeasureActualSubcategoryOptions[1].PerformanceMeasureSubcategoryOptionID).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{performanceMeasureActualSubcategoryOption.PerformanceMeasureSubcategoryOptionID}}">
                <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureActuals[0].PerformanceMeasureActualSubcategoryOptions[1].PerformanceMeasureSubcategoryID).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{performanceMeasureActualSubcategoryOption.PerformanceMeasureSubcategoryID}}">
                <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureActuals[0].PerformanceMeasureActualSubcategoryOptions[1].PerformanceMeasureID).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{performanceMeasureActualSubcategoryOption.PerformanceMeasureID}}">
            </div>
        </div>
        <div ng-repeat="projectExemptYear in AngularModel.ProjectExemptReportingYears">
            <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYears[0].CalendarYear).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYear.CalendarYear}}"/>
            <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYears[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYear.ProjectID}}"/>
            <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYears[0].ProjectExemptReportingYearID).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYear.ProjectExemptReportingYearID}}"/>
            <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYears[0].IsExempt).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYear.IsExempt}}"/>
        </div>
        <input type="hidden" name="@Html.NameFor(x => x.Explanation)" value="{{AngularModel.Explanation}}"/>
    }
</div>
