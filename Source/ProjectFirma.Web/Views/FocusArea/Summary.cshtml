@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.Shared
@using ProjectFirma.Web.Views.Shared.ProjectControls
@using ProjectFirma.Web.Views.Shared.ProjectLocationControls
@using ProjectFirma.Web.Views
@using ProjectFirma.Web.Views.Shared
@using LtInfo.Common.BootstrapWrappers
@using LtInfo.Common.DhtmlWrappers
@using LtInfo.Common.HtmlHelperExtensions
@using LtInfo.Common.ModalDialog
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@inherits ProjectFirma.Web.Views.FocusArea.Summary

@section JavascriptAndStylesContent
{
    @{ DhtmlxGridIncludes.RenderPartialView(Html); }
    @{ MapJavascriptIncludes.RenderPartialView(Html); }

    <style>
        #@ViewDataTyped.ProjectLocationsMapInitJson.MapDivID
        {
            height: 420px;
        }
    </style>
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-6">
            <div class="summarySection">
                <h2>@ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditFocusAreaUrl, string.Format("Edit Focus Area - {0}", ViewDataTyped.FocusArea.DisplayName), ViewDataTyped.UserHasFocusAreaManagePermissions) Basics</h2>
                <div class="contentWrapper">
                    <table class="summaryLayout">
                        <tr>
                            <td>
                                @{ ProjectTaxonomy.RenderPartialView(Html, ViewDataTyped.ProjectTaxonomyViewData); }
                            </td>
                        </tr>
                    </table>
                </div>
            </div>

            <div class="summarySection">
                <h2>@ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditDescriptionUrl, string.Format("Edit Description - {0}", ViewDataTyped.FocusArea.DisplayName), ViewDataTyped.UserHasFocusAreaManagePermissions) Description</h2>
                <div class="contentWrapper">
                    <div>
                        @ViewDataTyped.FocusArea.FocusAreaDescriptionHtmlString
                    </div>
                </div>
            </div>

            <div class="summarySection">
                <h2><a href="@ViewDataTyped.ManageProgramsUrl">Programs</a>
                </h2>
                <div class="contentWrapper">
                    @if (ViewDataTyped.FocusArea.Programs.Any())
                    {
                        <table class="summaryLayout">
                            <tr>
                                <th>@Html.LabelWithFieldDefinitionFor(FieldDefinition.Program):</th>
                            </tr>
                            @foreach (var program in ViewDataTyped.FocusArea.Programs.OrderBy(x => x.DisplayNumber))
                            {
                                <tr>
                                    <td>
                                        @program.DisplayNameAsUrl
                                    </td>
                                </tr>
                            }
                        </table>
                    }
                    else
                    {
                        <p>No programs set for this focus area.</p>
                    }
                </div>
            </div>

            <div class="summarySection">
                <h2>
                    <a href="@ViewDataTyped.ManageActionPrioritiesUrl">Action Priorities</a>
                </h2>
                <div class="contentWrapper">
                    @if (ViewDataTyped.FocusArea.ActionPriorities.Any())
                    {
                        <table class="summaryLayout">
                            <tr>
                                <th>@Html.LabelWithFieldDefinitionFor(FieldDefinition.ActionPriority):</th>
                            </tr>
                            @foreach (var actionPriority in ViewDataTyped.FocusArea.ActionPriorities)
                            {
                                <tr>
                                    <td>
                                        @actionPriority.GetDisplayNameAsUrl()
                                    </td>
                                </tr>
                            }
                        </table>
                    }
                    else
                    {
                        <p>No action priorities set for this focus area.</p>
                    }
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="summarySection">
                <h2>Focus Area Projects Map</h2>
                <div style="padding: 10px">
                    To zoom into a specific area, hold down the Shift key and drag a rectangle.
                    <div style="border-radius: 8px; background-color: white; margin: 5px 0 5px 0">
                        @{ ProjectLocationsMap.RenderPartialView(Html, ViewDataTyped.ProjectLocationsMapViewData); }
                    </div>
                    Some projects operate over larger areas and are not represented on the map, but are listed in the project grid below. A <a href="@ViewDataTyped.ProjectMapFilteredUrl">full-screen, filterable version of this map</a> is also available.
                </div >
            </div>
        </div>
    </div>
</div>

<div class="summarySection">
    <h2>
        <a href="@ViewDataTyped.FullProjectListUrl">Projects</a>
    </h2>
    <div class="contentWrapper">
        @Html.DhtmlxGrid(ViewDataTyped.BasicProjectInfoGridSpec, ViewDataTyped.FiveYearListProjectGridName, ViewDataTyped.FiveYearListProjectGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
    </div>
</div>

<div style="margin-top: 20px">
    <a class="btn btn-sm btn-firma" href="@ViewDataTyped.BackUrl">@BootstrapHtmlHelpers.MakeGlyphIcon("glyphicon-chevron-left") Index</a>
</div>

<script type="text/javascript">
    jQuery(document).ready(function()
    {
        var projectLocationsMapInitJson = @Html.Raw(JObject.FromObject(ViewDataTyped.ProjectLocationsMapInitJson).ToString(Formatting.None));
        var map = new ProjectFirmaMaps.Map(projectLocationsMapInitJson);
        map.initializeProjectLocations(projectLocationsMapInitJson);
    })
</script>