@*-----------------------------------------------------------------------
    <copyright file="DuplicateGrantModification.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
    Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common.HtmlHelperExtensions
@using ProjectFirma.Web.Models
@inherits ProjectFirma.Web.Views.GrantModification.DuplicateGrantModification



<h2>@FieldDefinition.GrantModification.GetFieldDefinitionLabel() Duplication</h2>
<p>Saving this form will create a new a @FieldDefinition.GrantModification.GetFieldDefinitionLabel() and @FieldDefinition.GrantAllocation.GetFieldDefinitionLabelPluralized() from the @ViewDataTyped.GrantModificationToDuplicate.GrantModificationName @FieldDefinition.GrantModification.GetFieldDefinitionLabel(). </p>
<p>Start Date and End Date will be copied automatically.</p>

@Html.ValidationSummary()

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-xs-3 control-label">
                @Html.LabelWithSugarFor(m => m.GrantModificationName)
            </div>
            <div class="col-xs-8">
                @Html.TextBoxFor(m => m.GrantModificationName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.GrantModificationName)
            </div>
        </div>
        
        <div class="form-group">
            <div class="col-xs-3 control-label">@Html.LabelWithSugarFor(m => m.GrantModificationPurpose)</div>
            <div class="col-xs-8">
                @Html.CheckBoxListFor(m => m.GrantModificationPurpose, ViewDataTyped.GrantModificationPurposes, new { @class = "col-xs-6" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-xs-3 control-label">
                @Html.LabelWithSugarFor(m => m.GrantModificationStatusID)
            </div>
            <div class="col-xs-8">
                @Html.DropDownListFor(m => m.GrantModificationStatusID, ViewDataTyped.GrantModificationStatuses, new { style = "width: auto;", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.GrantModificationStatusID)
            </div>
        </div>

        @*<div class="form-group">
            <div class="col-xs-3 control-label">
                @Html.LabelWithSugarFor(m => m.GrantStartDate)
            </div>
            <div class="col-xs-3">
                @Html.EditorFor(m => m.GrantStartDate, new { style = "width: auto;", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.GrantStartDate)
            </div>
            <div class="col-xs-2 control-label">
                @Html.LabelWithSugarFor(m => m.GrantEndDate)
            </div>
            <div class="col-xs-3">
                @Html.EditorFor(m => m.GrantEndDate, new { style = "width: auto;", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.GrantEndDate)
            </div>
        </div>*@
        
        <div class="form-group">
            <div class="col-xs-3 control-label">
                @Html.LabelWithSugarFor(m => m.GrantModificationAmount)
            </div>
            <div class="col-xs-8">
                @Html.EditorFor(m => m.GrantModificationAmount)
                @Html.ValidationMessageFor(m => m.GrantModificationAmount)
            </div>
        </div>
        
        
        <p>The @FieldDefinition.GrantAllocation.GetFieldDefinitionLabelPluralized() below are associated with @ViewDataTyped.GrantModificationToDuplicate.GrantModificationName @FieldDefinition.GrantModification.GetFieldDefinitionLabel().</p>
        <div class="form-group">
            <div class="col-xs-12"><p>Select the <strong>@FieldDefinition.GrantAllocation.GetFieldDefinitionLabelPluralized()</strong> you wish to copy:</p></div>
            <div class="col-xs-12">
                @if(ViewDataTyped.GrantAllocations.Any())
                {
                    @Html.CheckBoxListFor(m => m.GrantAllocationsToDuplicate, ViewDataTyped.GrantAllocations, new {@class = "col-xs-3"})

                }
                else
                {
                <p>There are no @FieldDefinition.GrantAllocation.GetFieldDefinitionLabelPluralized() associated to "@ViewDataTyped.GrantModificationToDuplicate.GrantModificationName" @FieldDefinition.GrantModification.GetFieldDefinitionLabel().</p>
                }
            </div>
        </div>
        
        <p>On save you will be redirected to the @FieldDefinition.Grant.GetFieldDefinitionLabel() Detail page for this new @FieldDefinition.Grant.GetFieldDefinitionLabel().</p>
    </div>
    @Html.HiddenFor(m => m.GrantID)
    @Html.HiddenFor(m => m.GrantModificationID)
}