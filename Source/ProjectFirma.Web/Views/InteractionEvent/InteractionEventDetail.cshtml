@*-----------------------------------------------------------------------
    <copyright file="InteractionEventDetail.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
    Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common
@using ProjectFirma.Web.Views
@using ProjectFirma.Web.Views.Shared
@using LtInfo.Common.BootstrapWrappers
@using LtInfo.Common.DhtmlWrappers
@using LtInfo.Common.ModalDialog
@using MoreLinq
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.PerformanceMeasure
@inherits ProjectFirma.Web.Views.InteractionEvent.InteractionEventDetail
@section JavascriptAndStylesContent
{
    @{ DhtmlxGridIncludes.RenderPartialView(Html); }
    @{ MapJavascriptIncludes.RenderPartialView(Html); }
}
<script type="text/javascript">
    // <![CDATA[
    angular.module("ProjectFirmaApp").factory("angularModelAndViewData", function ()
    {
        return {
            AngularModel: @Html.Raw(JObject.FromObject(Model)),
            AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped.AngularViewData))
        };
    });
    jQuery(document).ready(function () {
        
        angular.bootstrap(jQuery("#EditInteractionEventContactAngularApp"), ["ProjectFirmaApp"]);

        jQuery(".selectpicker").selectpicker("refresh");

    });
    // ]]>
</script>
<script src="@Url.Content("~/Views/InteractionEvent/InteractionEventContactController.js")" type="text/javascript"></script>
<script type="text/javascript" src="/Content/Bootstrap-select/bootstrap-select.min.js"></script>
<link rel="stylesheet" href="/Content/Bootstrap-select/bootstrap-select.min.css" type="text/css" />

<div>
    <a class="btn backButton" href="@ViewDataTyped.IndexUrl">@BootstrapHtmlHelpers.MakeGlyphIcon("glyphicon-chevron-left") Back to all @FieldDefinition.InteractionEvent.FieldDefinitionDisplayName</a>
</div>
<div class="panel panelFirma">
    <div class="panel-heading panelTitle">
        @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditInteractionEventUrl, string.Format("Edit {0} - {1}", FieldDefinition.InteractionEvent.FieldDefinitionDisplayName, ViewDataTyped.InteractionEvent.InteractionEventTitle), ViewDataTyped.UserHasInteractionEventManagePermissions) Basics
    </div>
    <div class="panel-body">
        <div class="row">
            <div class="col-xs-12">
                <div class="row">
                    <div class="col-xs-3 fieldLabel">@Html.Label("Title")</div>
                    <div class="col-xs-6">@ViewDataTyped.InteractionEvent.InteractionEventTitle</div>
                </div>
                <div class="row">
                    <div class="col-xs-3 fieldLabel">@Html.Label("Description")</div>
                    <div class="col-xs-6">@(ViewDataTyped.InteractionEvent.InteractionEventDescription)</div>
                </div>
                <div class="row">
                    <div class="col-xs-3 fieldLabel">@Html.Label("Date")</div>
                    <div class="col-xs-6">@(ViewDataTyped.InteractionEvent.DateDisplay)</div>
                </div>
                <div class="row">
                    <div class="col-xs-3 fieldLabel">@Html.Label(FieldDefinition.InteractionEventType.GetFieldDefinitionLabel())</div>
                    <div class="col-xs-6">@(ViewDataTyped.InteractionEvent.InteractionEventType.InteractionEventTypeDisplayName)</div>
                </div>
                <div class="row">
                    <div class="col-xs-3 fieldLabel">@Html.Label(FieldDefinition.DNRStaffPerson.GetFieldDefinitionLabel())</div>
                    <div class="col-xs-6">@(ViewDataTyped.InteractionEvent.StaffPerson.GetFullNameFirstLastAsUrl())</div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="EditInteractionEventContactAngularApp" ng-controller="InteractionEventContactController" class="panel panelFirma">
    <div class="panel-heading panelTitle">
        Contacts
    </div>
    <div class="panel-body">
        <div class="row">
            @*Relationship type and description*@
            <div class="col-md-12">@Html.LabelFor(x => x.InteractionEventContacts)</div>
        </div>
        <div class="row">
            <div class="col-md-9">
                <div class="row">
                    @*Selectpicker*@
                    <div class="col-md-12">
                        <div class="input-group" style="width: 100%;">
                            <select class="selectpicker" id="@Html.IdFor(x => x.InteractionEventContacts)" ng-model="selectedContactID" data-width="100%" data-live-search="true" data-size="8">
                                <option value="" disabled selected>Select one</option>
                                <option ng-repeat="contact in getAvailableContactsForInteractionEvents()"
                                        ng-bind="contact.FullName"
                                        ng-value="contact.PersonID"
                                        ng-selected="isOptionSelected(contact)"></option>
                            </select>
                            <button type="button" class="btn btn-sm btn-firma" ng-click="addInteractionEventContact(selectedContactID)" ng-disabled="!selectedContactID">
                                <span class="glyphicon glyphicon-plus"></span>
                                Add
                            </button>
                        </div>
                    </div>
                </div>
                <div class="row" ng-repeat="contact in chosenContactsForInteractionEvent()" style="margin-top: 5px;">
                    @*Selections*@
                    <div class="col-md-12">
                        <span>
                            <a href="#" ng-click="removeInteractionEventContact(contact.PersonID); $event.preventDefault();">
                                <i class="glyphicon glyphicon-trash" title="Remove @FieldDefinition.InteractionEventContact.GetFieldDefinitionLabel()" alt="Remove @FieldDefinition.InteractionEventContact.GetFieldDefinitionLabel()"></i>
                            </a>
                        </span><span ng-bind="contact.FullName"></span>
                    </div>
                </div>
            </div>
        </div>

    </div>

    @using (Html.BeginForm())
    {
        <div ng-repeat="interactionEventContact in AngularModel.InteractionEventContacts">
            <input type="hidden" name="@Html.NameFor(x => x.InteractionEventContacts[0].PersonID).ToString().Replace("0", "{{$index}}")" value="{{interactionEventContact.PersonID}}" />
        </div>
    }


</div>
<div class="panel panelFirma">
    <div class="panel-heading panelTitle">
        @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditInteractionEventProjectsUrl, string.Format("Edit {0} - {1}", FieldDefinition.InteractionEvent.FieldDefinitionDisplayName, ViewDataTyped.InteractionEvent.InteractionEventTitle), ViewDataTyped.UserHasInteractionEventManagePermissions) Projects
    </div>
    <div class="panel-body">
        <div class="row">
            @*<div class="col-xs-12">
                    <div class="row">
                        <div class="col-xs-3 fieldLabel">@Html.Label("Title")</div>
                        <div class="col-xs-6">@ViewDataTyped.InteractionEvent.InteractionEventTitle</div>
                    </div>
                    <div class="row">
                        <div class="col-xs-3 fieldLabel">@Html.Label("Description")</div>
                        <div class="col-xs-6">@(ViewDataTyped.InteractionEvent.InteractionEventDescription)</div>
                    </div>
                    <div class="row">
                        <div class="col-xs-3 fieldLabel">@Html.Label("Date")</div>
                        <div class="col-xs-6">@(ViewDataTyped.InteractionEvent.DateDisplay)</div>
                    </div>
                    <div class="row">
                        <div class="col-xs-3 fieldLabel">@Html.Label(FieldDefinition.InteractionEventType.GetFieldDefinitionLabel())</div>
                        <div class="col-xs-6">@(ViewDataTyped.InteractionEvent.InteractionEventType.InteractionEventTypeDisplayName)</div>
                    </div>
                    <div class="row">
                        <div class="col-xs-3 fieldLabel">@Html.Label(FieldDefinition.DNRStaffPerson.GetFieldDefinitionLabel())</div>
                        <div class="col-xs-6">@(ViewDataTyped.InteractionEvent.StaffPerson.GetFullNameFirstLastAsUrl())</div>
                    </div>
                </div>*@
        </div>
    </div>
</div>