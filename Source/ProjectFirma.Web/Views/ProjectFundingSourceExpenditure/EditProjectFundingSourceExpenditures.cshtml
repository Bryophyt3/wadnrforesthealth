@using ProjectFirma.Web.Models
@using LtInfo.Common.HtmlHelperExtensions
@using Newtonsoft.Json.Linq
@inherits ProjectFirma.Web.Views.ProjectFundingSourceExpenditure.EditProjectFundingSourceExpenditures
<script type="text/javascript">
    // <![CDATA[
    angular.module("ProjectFirmaApp").factory("angularModelAndViewData", function()
    {
        return {
            AngularModel: @Html.Raw(JObject.FromObject(Model)),
            AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped))
        };
    });
    angular.bootstrap(jQuery("#EditFundingSourceExpendituresApp"), ["ProjectFirmaApp"]);
    // ]]>
</script>

<div class="validationError">
    @Html.ValidationSummary()
</div>

<div ng-app="ProjectFirmaApp" id="EditFundingSourceExpendituresApp" ng-controller="ProjectFundingSourceExpenditureController" style="max-height: 600px; overflow-y: auto">
    @if (ViewDataTyped.FromFundingSource)
    {
        <div style="text-align: left">
            Project to Add:
            <select ng-model="ProjectToAdd" ng-options="project.DisplayName for project in filteredProjects()" style="width: 600px"></select>
            <button class="btn btn-xs btn-firma" type="button" ng-click="addRow()">Add</button>
        </div>
    }
    else
    {
        <div style="display: inline-block; margin-right: 5px;">
            Funding Source to Add:<br/>
            <label style="font-size: 12px"><input type="checkbox" ng-model="ShowOnlyProjectFunders"/>Show only my project's Funders</label>
        </div>
        <div style="display: inline-block; vertical-align: top">
            <select ng-model="FundingSourceToAdd" ng-options="fundingSource.DisplayName group by fundingSource.OrganizationName for fundingSource in filteredFundingSources()" style="width: 500px"></select>
            <button class="btn btn-xs btn-firma" type="button" ng-click="addRow()">Add</button>
        </div>
    }
    <table class="dialogFormLayout" style="margin-top: 20px; overflow: scroll" ng-show="AngularModel.ProjectFundingSourceExpenditures.length > 0">
        <tr>
            <th></th>
            <th style="white-space: nowrap">@Html.Raw(ViewDataTyped.FromFundingSource ? Html.LabelWithSugarFor(FieldDefinition.Project) : Html.LabelWithSugarFor(FieldDefinition.FundingSource))</th>
            <th ng-repeat="calendarYear in getCalendarYearRange()" style="text-align: right; vertical-align: top">
                <span class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear - 1)" ng-show="$first && calendarYear > 2007" title="Add Previous Year '{{calendarYear - 1}}'" alt="Add Previous Year '{{calendarYear - 1}}'" style="cursor: pointer"></span>
                <span ng-bind="calendarYear"></span>
                <span class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear + 1)" ng-show="$last" title="Add Next Year '{{calendarYear + 1}}'" alt="Add Next Year '{{calendarYear + 1}}'" style="cursor: pointer"></span>
            </th>
            <th style="text-align: right">Total</th>
        </tr>
        <tr ng-repeat="projectFundingSourceExpenditure in AngularModel.ProjectFundingSourceExpenditures | orderBy:[getFundingSourceName, getProjectName]">
            <td>
                <span class="glyphicon glyphicon-trash blue" title="Remove row" alt="Remove row" ng-click="deleteRow(projectFundingSourceExpenditure)" style="cursor: pointer"></span></td>
            <td ng-bind="@(ViewDataTyped.FromFundingSource ? "getProjectName(projectFundingSourceExpenditure)" : "getFundingSourceName(projectFundingSourceExpenditure)")">
            <td style="text-align: right" ng-repeat="calendarYearExpenditure in projectFundingSourceExpenditure.CalendarYearExpenditures | orderBy:'CalendarYear'">
                <input type="text" ng-model="calendarYearExpenditure.MonetaryAmount" class="sitkaCurrency" ng-currency />
            </td>
            <th style="text-align: right" ng-bind="getExpenditureTotalForRow(projectFundingSourceExpenditure) | nfcurrency">
            </th>
        </tr>
        <tr>
            <th colspan="2">Total:</th>
            <th ng-repeat="calendarYear in getCalendarYearRange()" style="text-align: right" ng-bind="getExpenditureTotalForCalendarYear(calendarYear) | nfcurrency">
            </th>
            <th style="text-align: right" ng-bind="getExpenditureTotalForCalendarYear() | nfcurrency">
            </th>
        </tr>
    </table>

    @using (Html.BeginForm())
    {
        <div ng-repeat="projectFundingSourceExpenditure in AngularModel.ProjectFundingSourceExpenditures | orderBy:[getFundingSourceName, getProjectName]">
            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceExpenditure.ProjectID}}"/>
            <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].FundingSourceID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceExpenditure.FundingSourceID}}"/>
            <div ng-repeat="calendarYearExpenditure in projectFundingSourceExpenditure.CalendarYearExpenditures | orderBy:'CalendarYear'">
                <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].CalendarYearExpenditures[1].CalendarYear).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{calendarYearExpenditure.CalendarYear}}"/>
                <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].CalendarYearExpenditures[1].MonetaryAmount).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{calendarYearExpenditure.MonetaryAmount}}"/>
            </div>
        </div>
    }
</div>