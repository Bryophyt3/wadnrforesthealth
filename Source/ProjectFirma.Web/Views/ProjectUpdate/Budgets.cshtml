@*-----------------------------------------------------------------------
<copyright file="Budgets.cshtml" company="Tahoe Regional Planning Agency">
Copyright (c) Tahoe Regional Planning Agency. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.ProjectUpdate
@using ProjectFirma.Web.Views.Shared.ExpenditureAndBudgetControls
@using LtInfo.Common
@using LtInfo.Common.HtmlHelperExtensions
@using LtInfo.Common.ModalDialog
@using Newtonsoft.Json.Linq
@inherits Budgets

@section JavascriptAndStylesContent
{
    @if (ViewDataTyped.IsEditable && ViewDataTyped.AreProjectBasicsValid)
    {
        <script src="@Url.Content("~/Views/ProjectUpdate/BudgetsController.js")" type="text/javascript"></script>
        <script type="text/javascript">
            // <![CDATA[
            angular.module("ProjectFirmaApp").factory("angularModelAndViewData", function()
            {
                return {
                    AngularModel: @Html.Raw(JObject.FromObject(Model)),
                    AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped.ViewDataForAngular))
                    };
            });
            jQuery(document).ready(function() { HookupCheckIfFormIsDirty(undefined, ".submitProject"); });
            // ]]>
        </script>
    }
}

To enter your project's annual budgets, add the appropriate @FieldDefinition.FundingSource.GetFieldDefinitionLabelPluralized() and then enter the amount contributed by each for the duration defined by your project's Planning / Design Start and @FieldDefinition.CompletionYear.GetFieldDefinitionLabel()
(or, if @FieldDefinition.CompletionYear.GetFieldDefinitionLabel() isn't set, through the current year). If your project had no budgets for a given year, enter zero "0" for that year for at least one of its @FieldDefinition.FundingSource.GetFieldDefinitionLabelPluralized().

<div class="row" style="margin-top: 10px;">
    <div class="col-md-3">
        <span>Other financial information for this project that might be helpful</span>
    </div>
    <div class="col-md-9">
        @if (ViewDataTyped.Project.FundingType == FundingType.Capital)
        {
            <div style="width: 300px">@FieldDefinition.EstimatedTotalCost.GetFieldDefinitionLabel(): <span style="float: right; font-weight: bold">@ViewDataTyped.ProjectUpdateBatch.ProjectUpdate.EstimatedTotalCost.ToStringCurrency()</span></div>
            <div style="width: 300px">@FieldDefinition.SecuredFunding.GetFieldDefinitionLabel(): <span style="float: right; font-weight: bold">@ViewDataTyped.ProjectUpdateBatch.ProjectUpdate.SecuredFunding.ToStringCurrency()</span></div>
            <div style="width: 300px">@FieldDefinition.UnfundedNeed.GetFieldDefinitionLabel(): <span style="float: right; font-weight: bold">@ViewDataTyped.ProjectUpdateBatch.ProjectUpdate.UnfundedNeed.ToStringCurrency()</span></div>
        }
        else if (ViewDataTyped.Project.FundingType == FundingType.OperationsAndMaintenance)
        {
            <table>
                <tr>
                    <td style="width: 200px">
                        @FieldDefinition.EstimatedAnnualOperatingCost.GetFieldDefinitionLabel():
                    </td>
                    <td>
                        <span style="font-weight: bold">@ViewDataTyped.ProjectUpdateBatch.ProjectUpdate.EstimatedAnnualOperatingCost.ToStringCurrency()</span>
                    </td>
                </tr>
                <tr>
                    <td>
                        Estimated Total Operating Cost:
                    </td>
                    @if (CostParameterSet.CanCalculateTotalRemainingOperatingCostInYearOfExpenditure(ViewDataTyped.ProjectUpdateBatch.ProjectUpdate))
                    {
                        <td>
                            <span style="font-weight: bold">@ViewDataTyped.TotalOperatingCostInYearOfExpenditure.ToStringCurrency()</span> (For years @ViewDataTyped.StartYearForTotalOperatingCostCalculation-@ViewDataTyped.ProjectUpdateBatch.ProjectUpdate.CompletionYear using @ViewDataTyped.InflationRate.ToStringPercent() annual inflation)
                        </td>
                    }
                </tr>
            </table>
        }
    </div>
</div>

@if (!ViewDataTyped.IsEditable)
{
    ProjectBudgetDetail.RenderPartialView(Html, ViewDataTyped.ProjectBudgetDetailViewData);
}
else if (!ViewDataTyped.AreProjectBasicsValid)
{
    <div class="alert alert-danger">
        @FirmaValidationMessages.UpdateSectionIsDependentUponBasicsSection
    </div>
}
else
{
    <div class="validationError">
        @Html.ValidationSummary()
    </div>

    <div ng-app="ProjectFirmaApp" ng-controller="ProjectBudgetController">
        <div style="display: inline-block; margin-right: 5px; vertical-align: top">
            @FieldDefinition.FundingSource.GetFieldDefinitionLabel() to Add:
        </div>
        <div style="display: inline-block">
            <select ng-model="FundingSourceToAdd" ng-options="fundingSource.DisplayName group by fundingSource.OrganizationName for fundingSource in filteredFundingSources()" style="width: 500px"></select>
            <button class="btn btn-xs btn-firma" type="button" ng-click="addRow()">Add</button>
            <span style="vertical-align: middle; display: inline-block; margin-left: 5px">
                Not listed?
                @ModalDialogFormHelper.ModalDialogFormLink("Contact support", ViewDataTyped.RequestFundingSourceUrl, "Request Support", 800, "Submit Request", "Cancel", new List<string>(), null, null)
            </span>
            <br />
            <label style="font-size: 12px"><input type="checkbox" ng-model="ShowOnlyProjectFunders" /> Show only my project's funders</label>
        </div>

        <div ng-show="AngularModel.ProjectBudgets.length > 0">
            <hr />
            Group By:
            <label>
                <input type="radio" name="budgetGroupedBy" checked="checked" ng-click="setGroupByProjectCostType(false)" />
                @FieldDefinition.FundingSource.GetFieldDefinitionLabel()
            </label>
            <label>
                <input type="radio" name="budgetGroupedBy" ng-click="setGroupByProjectCostType(true)" />
                Cost Type
            </label>
        </div>
        <table class="table" style="overflow: scroll" ng-show="AngularModel.ProjectBudgets.length > 0 && !IsGroupedByProjectCostType">
            <thead>
                <tr>
                    <th colspan="3" style="white-space: nowrap">@Html.LabelWithSugarFor(FieldDefinition.FundingSource)</th>
                    <th ng-repeat="calendarYear in getCalendarYearRange()" style="text-align: right; vertical-align: top">
                        <span class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear - 1)" ng-show="$first" title="Add Previous Year '{{calendarYear - 1}}'" alt="Add Previous Year '{{calendarYear - 1}}'" style="cursor: pointer"></span>
                        <span ng-bind="calendarYear"></span>
                        <span class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear + 1)" ng-show="$last" title="Add Next Year '{{calendarYear + 1}}'" alt="Add Next Year '{{calendarYear + 1}}'" style="cursor: pointer"></span>
                    </th>
                    <th style="text-align: right">Total</th>
                </tr>
            </thead>
            <tbody ng-repeat="fundingSourceID in getAllUsedFundingSourceIds() | orderBy:[getFundingSourceNameById]">
                <tr>
                    <td class="fit">
                        <span class="glyphicon glyphicon-collapse-down blue" ng-click="showHideProjectCostTypes(fundingSourceID)" ng-show="existsInFundingSourcesNotShowingProjectCostTypes(fundingSourceID)" title="Show Cost Types" alt="Show Cost Types" style="cursor: pointer"></span>
                        <span class="glyphicon glyphicon-collapse-up blue" ng-click="showHideProjectCostTypes(fundingSourceID)" ng-show="!existsInFundingSourcesNotShowingProjectCostTypes(fundingSourceID)" title="Hide Cost Types" alt="Hide Cost Types" style="cursor: pointer"></span>
                        <span class="glyphicon glyphicon-trash blue" title="Remove row" alt="Remove row" ng-click="deleteFundingSourceRow(fundingSourceID)" style="cursor: pointer"></span>
                    </td>
                    <td colspan="2" class="fit">
                        <span ng-bind="getFundingSourceNameById(fundingSourceID)"></span>
                    </td>
                    <td style="text-align: right; width: 75px" ng-repeat="calendarYear in getCalendarYearRange()">
                        <span ng-bind="getBudgetTotalForFundingSourceAndCalendarYear(fundingSourceID, calendarYear) | nfcurrency"></span>
                    </td>
                    <th style="text-align: right" ng-bind="getBudgetTotalForFundingSource(fundingSourceID) | nfcurrency">
                    </th>
                </tr>
                <tr ng-repeat="ProjectBudget in getProjectBudgetRowsForFundingSource(fundingSourceID)" ng-show="!existsInFundingSourcesNotShowingProjectCostTypes(fundingSourceID)">
                    <td></td>
                    <td style="width: 15px">&nbsp;</td>
                    <td ng-bind="getProjectCostTypeName(ProjectBudget)" />
                    <td style="text-align: right; width: 75px" ng-repeat="calendarYearBudget in ProjectBudget.CalendarYearBudgets | orderBy:'CalendarYear'">
                        <input type="text" style="text-align: right; width:80px" ng-model="calendarYearBudget.MonetaryAmount" class="sitkaCurrency" ng-currency />
                    </td>
                    <th style="text-align: right" ng-bind="getBudgetTotalForRow(ProjectBudget) | nfcurrency">
                    </th>
                </tr>
                <tr>
                    <td colspan="{{getCalendarYearRange().length + 4}}">
                        <hr style="border-color: #9e9e9e" />
                    </td>
                </tr>
            </tbody>
        </table>
        <table class="table" style="overflow: scroll" ng-show="AngularModel.ProjectBudgets.length > 0 && IsGroupedByProjectCostType">
            <thead>
                <tr>
                    <th colspan="3" class="fit">@Html.LabelWithSugarFor(FieldDefinition.FundingSource)</th>
                    <th ng-repeat="calendarYear in getCalendarYearRange()" style="text-align: right; vertical-align: top">
                        <span class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear - 1)" ng-show="$first" title="Add Previous Year '{{calendarYear - 1}}'" alt="Add Previous Year '{{calendarYear - 1}}'" style="cursor: pointer"></span>
                        <span ng-bind="calendarYear"></span>
                        <span class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear + 1)" ng-show="$last" title="Add Next Year '{{calendarYear + 1}}'" alt="Add Next Year '{{calendarYear + 1}}'" style="cursor: pointer"></span>
                    </th>
                    <th style="text-align: right">Total</th>
                </tr>
            </thead>

            <tbody ng-repeat="ProjectCostType in AngularViewData.AllProjectCostTypes | orderBy:'SortOrder'">
                <tr>
                    <td class="fit" colspan="2">
                        <span class="glyphicon glyphicon-collapse-down blue" ng-click="showHideFundingSources(ProjectCostType)" ng-show="existsInHiddenProjectCostTypes(ProjectCostType)" title="Show @FieldDefinition.FundingSource.GetFieldDefinitionLabelPluralized()" alt="Show @FieldDefinition.FundingSource.GetFieldDefinitionLabelPluralized()" style="cursor: pointer"></span>
                        <span class="glyphicon glyphicon-collapse-up blue" ng-click="showHideFundingSources(ProjectCostType)" ng-show="!existsInHiddenProjectCostTypes(ProjectCostType)" title="Hide @FieldDefinition.FundingSource.GetFieldDefinitionLabelPluralized()" alt="Hide @FieldDefinition.FundingSource.GetFieldDefinitionLabelPluralized()" style="cursor: pointer"></span>
                    </td>
                    <td class="fit">
                        <span ng-bind="ProjectCostType.ProjectCostTypeDisplayName"></span>
                    </td>
                    <td style="text-align: right; width: 75px" ng-repeat="calendarYear in getCalendarYearRange()">
                        <span ng-bind="getBudgetTotalForProjectCostTypeAndCalendarYear(ProjectCostType.ProjectCostTypeID, calendarYear) | nfcurrency"></span>
                    </td>
                    <th style="text-align: right" ng-bind="getBudgetTotalForProjectCostType(ProjectCostType.ProjectCostTypeID) | nfcurrency">
                    </th>
                </tr>
                <tr ng-repeat="ProjectBudget in getProjectBudgetRowsForProjectCostType(ProjectCostType) | orderBy:[getFundingSourceName]" ng-show="!existsInHiddenProjectCostTypes(ProjectCostType)">
                    <td></td>
                    <td class="fit" style="width: 20px">
                        <span class="glyphicon glyphicon-trash blue" title="Remove row" alt="Remove row" ng-click="deleteFundingSourceRow(ProjectBudget.FundingSourceID)" style="cursor: pointer"></span>
                    </td>
                    <td class="fit" style="text-align: left" ng-bind="getFundingSourceName(ProjectBudget)" />
                    <td style="text-align: right; width: 75px" ng-repeat="calendarYearBudget in ProjectBudget.CalendarYearBudgets | orderBy:'CalendarYear'">
                        <input type="text" style="text-align: right; width: 80px" ng-model="calendarYearBudget.MonetaryAmount" class="sitkaCurrency" ng-currency />
                    </td>
                    <th style="text-align: right" ng-bind="getBudgetTotalForRow(ProjectBudget) | nfcurrency">
                    </th>
                </tr>
            </tbody>
            <tr>
                <th colspan="3">Total:</th>
                <th ng-repeat="calendarYear in getCalendarYearRange()" style="text-align: right" ng-bind="getBudgetTotalForCalendarYear(calendarYear) | nfcurrency">
                </th>
                <th style="text-align: right" ng-bind="getBudgetTotalForCalendarYear() | nfcurrency">
                </th>
            </tr>
        </table>
        
        @using (Html.BeginForm())
        {
            <div ng-repeat="ProjectBudget in AngularModel.ProjectBudgets | orderBy:[getFundingSourceName]">
                <input type="hidden" name="@Html.NameFor(x => x.ProjectBudgets[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{ProjectBudget.ProjectID}}" />
                <input type="hidden" name="@Html.NameFor(x => x.ProjectBudgets[0].FundingSourceID).ToString().Replace("0", "{{$index}}")" value="{{ProjectBudget.FundingSourceID}}" />
                <input type="hidden" name="@Html.NameFor(x => x.ProjectBudgets[0].ProjectCostTypeID).ToString().Replace("0", "{{$index}}")" value="{{ProjectBudget.ProjectCostTypeID}}" />
                <div ng-repeat="calendarYearBudget in ProjectBudget.CalendarYearBudgets | orderBy:'CalendarYear'">
                    <input type="hidden" name="@Html.NameFor(x => x.ProjectBudgets[0].CalendarYearBudgets[1].CalendarYear).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{calendarYearBudget.CalendarYear}}" />
                    <input type="hidden" name="@Html.NameFor(x => x.ProjectBudgets[0].CalendarYearBudgets[1].MonetaryAmount).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{calendarYearBudget.MonetaryAmount}}" />
                </div>
            </div>

            if (ViewDataTyped.ShowApproveAndReturnButton)
            {
                <hr />
                <div class="row form-group">
                    <div class="col-md-3">@Html.LabelWithSugarFor(x => x.Comments)</div>
                    <div class="col-md-9">
                        @Html.TextAreaFor(x => x.Comments, new { @class = "sectionComments" })
                        @Html.Hidden("Section", ViewDataTyped.SelectedProjectUpdateSection)
                    </div>
                </div>
            }
            <hr />
            SectionComments.RenderPartialView(Html, ViewDataTyped.SectionCommentsViewData);
            <table class="summaryLayout" style="width: 100%">
                <tr>
                    <td>
                        @ModalDialogFormHelper.ModalDialogFormLink("Refresh", ViewDataTyped.RefreshUrl, "Refresh this section", 500, "Continue", "Cancel", new List<string> {"btn btn-xs btn-firma"}, null, null)
                        @if (ViewDataTyped.UpdateStatus.IsBudgetsUpdated)
                        {
                            @ModalDialogFormHelper.ModalDialogFormLink("diff-link-id", "Show Changes", ViewDataTyped.DiffUrl, "Changes to  Budget", 800, "hidden-save-button", string.Empty, "diff-close-button", "Close", new List<string> {"btn btn-xs btn-firma"}, null, null, null, new List<string>() {"btn-firma", "btn-xs"})
                        }
                    </td>
                    <td>
                        @if (ViewDataTyped.ViewDataForAngular.ValidationWarnings.Any())
                        {
                            <div data-ng-show="AngularModel.ShowValidationWarnings" data-ng-class="AngularModel.ShowValidationWarnings ? 'alert alert-danger' : 'hidden'">
                                <ul>
                                    <li data-ng-repeat="warning in AngularViewData.ValidationWarnings">
                                        <span data-ng-bind="warning"></span>
                                    </li>
                                </ul>
                            </div>
                        }
                    </td>
                    <td style="text-align: right; white-space: nowrap">
                        <button class="btn btn-xs btn-firma" type="submit" style="margin-left: 10px">Save</button>
                    </td>
                </tr>
            </table>
        }
    </div>
}
