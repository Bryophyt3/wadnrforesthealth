@*-----------------------------------------------------------------------
<copyright file="SiteLayout.cshtml" company="Tahoe Regional Planning Agency">
Copyright (c) Tahoe Regional Planning Agency. All rights reserved.
<author>Sitka Technology Group</author>
<date>Wednesday, February 22, 2017</date>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.ProjectUpdate
@using LtInfo.Common
@using LtInfo.Common.BootstrapWrappers
@using LtInfo.Common.ModalDialog
@using LtInfo.Common.Models
@using ProjectFirma.Web.Common
@inherits SiteLayout

@{
    SetLayout("~/Views/Shared/SiteLayout.cshtml", ViewDataTyped);
}

@section JavascriptAndStylesContent
{
    <link href="@Url.Content("~/Content/css/projectUpdateWizard.css")" rel="stylesheet" type="text/css" />

    <style>
        #main-container
        {
            @if (ViewDataTyped.SelectedProjectUpdateSection != ProjectUpdateSectionEnum.Instructions)
            {
                <text>border-top-left-radius: 6px;</text>
            }

        }
    </style>

    @RenderSection("JavascriptAndStylesContent", false)
}

@section RightOfPageTitle
{
    <a href="@ViewDataTyped.ProjectUpdateMyProjectsUrl" style="text-decoration: none">Back to Update My Projects list</a>
}

<div id="projectWizardContent" class="row">
    <div id="tab-container" class="col-sm-4 col-md-3">
        <ol>
            <li style="list-style-type: none" class="@SetSelectedSectionStyle(ProjectUpdateSectionEnum.Instructions, ViewDataTyped.SelectedProjectUpdateSection)">
                <a href="@ViewDataTyped.ProjectUpdateInstructionsUrl">Instructions</a>
            </li>
            <li style="list-style-type: none">
                <hr class="navMenu" />
            </li>
            <li value="1" class="@SetSelectedSectionStyle(ProjectUpdateSectionEnum.Basics, ViewDataTyped.SelectedProjectUpdateSection)">
                <a href="@ViewDataTyped.ProjectUpdateBasicsUrl">
                    Basics
                    @Html.Raw(ViewDataTyped.UpdateStatus.IsBasicsUpdated ? ProjectWizardComponents.SectionHasUpdatesIcon : null)
                </a>
                <span class="pull-right statusIcon">
                    @Html.Raw(ViewDataTyped.ProjectUpdateBatch.AreProjectBasicsValid ? ProjectWizardComponents.RequiredInfoOkSubmitReadyIcon : ProjectWizardComponents.RequiredInfoNotProvidedIcon)
                </span>

            </li>
            <li class="@SetSelectedSectionStyle(ProjectUpdateSectionEnum.LocationSimple, ViewDataTyped.SelectedProjectUpdateSection)">
                <a href="@ViewDataTyped.ProjectUpdateLocationSimpleUrl">
                    Location - Simple
                    @Html.Raw(ViewDataTyped.UpdateStatus.IsLocationSimpleUpdated ? ProjectWizardComponents.SectionHasUpdatesIcon : null)
                </a>
                <span class="pull-right statusIcon">
                    @Html.Raw(ViewDataTyped.ProjectUpdateBatch.IsProjectLocationSimpleValid() ? ProjectWizardComponents.RequiredInfoOkSubmitReadyIcon : ProjectWizardComponents.RequiredInfoNotProvidedIcon)
                </span>
            </li>
            <li class="@SetSelectedSectionStyle(ProjectUpdateSectionEnum.LocationDetailed, ViewDataTyped.SelectedProjectUpdateSection)">
                <a href="@ViewDataTyped.ProjectUpdateLocationDetailedUrl">
                    Location - Detailed
                    @Html.Raw(ViewDataTyped.UpdateStatus.IsLocationDetailUpdated ? ProjectWizardComponents.SectionHasUpdatesIcon : null)
                </a>
            </li>
            <li class="@SetSelectedSectionStyle(ProjectUpdateSectionEnum.PerformanceMeasures, ViewDataTyped.SelectedProjectUpdateSection)">
                <a href="@ViewDataTyped.ProjectUpdatePerformanceMeasuresUrl">
                    @MultiTenantHelpers.GetPerformanceMeasureNamePluralized()
                    @Html.Raw(ViewDataTyped.UpdateStatus.IsPerformanceMeasuresUpdated ? ProjectWizardComponents.SectionHasUpdatesIcon : null)
                </a>
                <span class="pull-right statusIcon">
                    @Html.Raw(ViewDataTyped.ProjectUpdateBatch.ArePerformanceMeasuresValid() ? ProjectWizardComponents.RequiredInfoOkSubmitReadyIcon : ProjectWizardComponents.RequiredInfoNotProvidedIcon)
                </span>
            </li>
            <li class="@SetSelectedSectionStyle(ProjectUpdateSectionEnum.Expenditures, ViewDataTyped.SelectedProjectUpdateSection)">
                <a href="@ViewDataTyped.ProjectUpdateExpendituresUrl">
                    Expenditures
                    @Html.Raw(ViewDataTyped.UpdateStatus.IsExpendituresUpdated ? ProjectWizardComponents.SectionHasUpdatesIcon : null)
                </a>
                <span class="pull-right" style="padding: 5px">
                    @Html.Raw(ViewDataTyped.ProjectUpdateBatch.AreExpendituresValid() ? ProjectWizardComponents.RequiredInfoOkSubmitReadyIcon : ProjectWizardComponents.RequiredInfoNotProvidedIcon)
                </span>
            </li>
            <li class="@SetSelectedSectionStyle(ProjectUpdateSectionEnum.Budgets, ViewDataTyped.SelectedProjectUpdateSection)">
                <a href="@ViewDataTyped.ProjectUpdateBudgetsUrl">
                    Budgets
                    @Html.Raw(ViewDataTyped.UpdateStatus.IsBudgetsUpdated ? ProjectWizardComponents.SectionHasUpdatesIcon : null)
                </a>
                <span class="pull-right statusIcon">
                    @Html.Raw(ViewDataTyped.ProjectUpdateBatch.AreBudgetsValid() ? ProjectWizardComponents.RequiredInfoOkSubmitReadyIcon : ProjectWizardComponents.RequiredInfoNotProvidedIcon)
                </span>
            </li>
            <li class="@SetSelectedSectionStyle(ProjectUpdateSectionEnum.Photos, ViewDataTyped.SelectedProjectUpdateSection)">
                <a href="@ViewDataTyped.ProjectUpdatePhotosUrl">
                    Photos
                    @Html.Raw(ViewDataTyped.UpdateStatus.IsPhotosUpdated ? ProjectWizardComponents.SectionHasUpdatesIcon : null)
                </a>
            </li>
            <li class="@SetSelectedSectionStyle(ProjectUpdateSectionEnum.ExternalLinks, ViewDataTyped.SelectedProjectUpdateSection)">
                <a href="@ViewDataTyped.ProjectUpdateExternalLinksUrl">
                    External Links
                    @Html.Raw(ViewDataTyped.UpdateStatus.IsExternalLinksUpdated ? ProjectWizardComponents.SectionHasUpdatesIcon : null)
                </a>
            </li>
            <li class="@SetSelectedSectionStyle(ProjectUpdateSectionEnum.Notes, ViewDataTyped.SelectedProjectUpdateSection)">
                <a href="@ViewDataTyped.ProjectUpdateNotesUrl">
                    Notes
                    @Html.Raw(ViewDataTyped.UpdateStatus.IsNotesUpdated ? ProjectWizardComponents.SectionHasUpdatesIcon : null)
                </a>
            </li>
            <li style="list-style-type: none">
                <hr class="navMenu" />
            </li>
            <li style="list-style-type: none" class="@SetSelectedSectionStyle(ProjectUpdateSectionEnum.History, ViewDataTyped.SelectedProjectUpdateSection)">
                <a href="@ViewDataTyped.ProjectUpdateHistoryUrl">History</a>
            </li>
        </ol>

    </div>
    <div id="main-container" class="col-sm-8 col-md-9">
        @RenderBody()
        @if (ViewDataTyped.SelectedProjectUpdateSection != ProjectUpdateSectionEnum.Instructions)
        {
            <span><sup>@Html.Raw(BootstrapHtmlHelpers.RequiredIcon)</sup> Required Field</span>
        }
    </div>
</div>

<div class="row">
    <div class="col-sm-8 col-sm-offset-4 col-md-9 col-md-offset-3">
        <div class="pull-right">
            @if (ViewDataTyped.ProjectUpdateBatch.IsReadyToSubmit)
            {
                @ModalDialogFormHelper.ModalDialogFormLink("Submit", ViewDataTyped.SubmitUrl, string.Format("Submit Project {0} for review", ViewDataTyped.Project.DisplayName), 500, "Continue", "Cancel", new List<string> { "submitProject btn btn-xs btn-firma" }, null, null)
            }
            else if (ViewDataTyped.ShowApproveAndReturnButton)
            {
                @ModalDialogFormHelper.ModalDialogFormLink("Return", ViewDataTyped.ReturnUrl, string.Format("Return Project Updates for Project {0}", ViewDataTyped.Project.DisplayName), 500, "Continue", "Cancel", new List<string> { "submitProject btn btn-xs btn-firma" }, null, null)
                <span style="padding: 2px"></span>
                if (ViewDataTyped.IsReadyToApprove)
                {

                    @ModalDialogFormHelper.ModalDialogFormLink("Approve", ViewDataTyped.ApproveUrl, string.Format("Approve Project Updates for Project {0}", ViewDataTyped.Project.DisplayName), 500, "Continue", "Cancel", new List<string> { "submitProject btn btn-xs btn-firma" }, null, null)
                }
                else
                {
                    <button class="btn btn-xs btn-firma" disabled="disabled">Approve</button>
                }
            }
            else if (ViewDataTyped.IsEditable)
            {
                <button class="btn btn-xs btn-firma" disabled="disabled">Submit</button>
            }
        </div>
        <div>
            @if (ViewDataTyped.ProjectUpdateBatch.IsSubmitted)
            {
                <span>Submitted by @ViewDataTyped.ProjectUpdateBatch.LatestProjectUpdateHistorySubmitted.UpdatePerson.FullNameFirstLastAndOrg on @ViewDataTyped.ProjectUpdateBatch.LatestProjectUpdateHistorySubmitted.TransitionDate.ToStringDateTime()</span>
            }
            else if (ViewDataTyped.ProjectUpdateBatch.IsReturned)
            {
                <span>Returned by @ViewDataTyped.ProjectUpdateBatch.LatestProjectUpdateHistoryReturned.UpdatePerson.FullNameFirstLastAndOrg on @ViewDataTyped.ProjectUpdateBatch.LatestProjectUpdateHistoryReturned.TransitionDate.ToStringDateTime()</span>
            }
            <div>
                <a href="@ViewDataTyped.Project.GetDetailUrl()" target="_blank">Back to  Project Details</a> 
            </div>

        </div>
    </div>
</div>

<div style="padding: 5px; vertical-align: bottom; font-size: 11px">
    @if (ViewDataTyped.ProjectUpdateBatch.IsCreated && ModelObjectHelpers.IsRealPrimaryKeyValue(ViewDataTyped.ProjectUpdateBatch.ProjectUpdateBatchID))
    {
        @ModalDialogFormHelper.MakeDeleteLink("Delete this Update", ViewDataTyped.DeleteProjectUpdateUrl, true)
    }
</div>

