@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.ProjectUpdate
@using ProjectFirma.Web.Views.Shared.ExpenditureAndBudgetControls
@using LtInfo.Common
@using LtInfo.Common.HtmlHelperExtensions
@using LtInfo.Common.ModalDialog
@using Newtonsoft.Json.Linq
@inherits Expenditures

@section JavascriptAndStylesContent
{
    @if (ViewDataTyped.IsEditable && ViewDataTyped.AreProjectBasicsValid)
    {
        <script src="@Url.Content("~/Areas/EIP/Views/ProjectUpdate/ExpendituresController.js")" type="text/javascript"></script>
        <script type="text/javascript">
            // <![CDATA[
            angular.module("ProjectFirmaApp").factory("angularModelAndViewData", function()
            {
                return {
                    AngularModel: @Html.Raw(JObject.FromObject(Model)),
                    AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped.ViewDataForAngular))
                };
            });
            jQuery(document).ready(function() { HookupCheckIfFormIsDirty(undefined, ".submitProject"); });
            // ]]>
        </script>
    }
}

To enter your project's annual expenditures, add the appropriate Funding Sources and then enter the amount contributed by each for the duration defined by your project's Planning / Design Start and Completion Years
(or, if Completion Year isn't set, through the current year). If your project had no expenditures for a given year, enter zero "0" for that year for at least one of its funding sources.
<hr />
<div style="margin: 10px 0">
<p>
    Other financial information for this project that might be helpful:
</p>

@if (ViewDataTyped.Project.FundingType == FundingType.Capital)
{
    <div style="width: 300px">Estimated Total Cost: <span style="float: right; font-weight: bold">@ViewDataTyped.ProjectUpdateBatch.ProjectUpdate.EstimatedTotalCost.ToStringCurrency()</span></div>
    <div style="width: 300px">Secured Funding: <span style="float: right; font-weight: bold">@ViewDataTyped.ProjectUpdateBatch.ProjectUpdate.SecuredFunding.ToStringCurrency()</span></div>
    <div style="width: 300px">Unfunded Need: <span style="float: right; font-weight: bold">@ViewDataTyped.ProjectUpdateBatch.ProjectUpdate.UnfundedNeed.ToStringCurrency()</span></div>
}
else if (ViewDataTyped.Project.FundingType == FundingType.OperationsAndMaintenance)
{
    <table>
        <tr>
            <td style="width: 200px">
                Estimated Annual Operating Cost:
            </td>
            <td>
                <span style="font-weight: bold">@ViewDataTyped.ProjectUpdateBatch.ProjectUpdate.EstimatedAnnualOperatingCost.ToStringCurrency()</span>
            </td>
        </tr>
        <tr>
            <td>
                Estimated Total Operating Cost:
            </td>
            @if (TransportationCostParameterSet.CanCalculateTotalRemainingOperatingCostInYearOfExpenditure(ViewDataTyped.ProjectUpdateBatch.ProjectUpdate))
            {
                <td>
                    <span style="font-weight: bold">@ViewDataTyped.TotalOperatingCostInYearOfExpenditure.ToStringCurrency()</span> (For years @ViewDataTyped.StartYearForTotalOperatingCostCalculation-@ViewDataTyped.ProjectUpdateBatch.ProjectUpdate.CompletionYear using @ViewDataTyped.InflationRate.ToStringPercent() annual inflation)
                </td>
            }
        </tr>
    </table>
}
</div>

@if (!ViewDataTyped.IsEditable)
{
    ProjectExpendituresSummary.RenderPartialView(Html, ViewDataTyped.ProjectExpendituresSummaryViewData);
}
else if (!ViewDataTyped.AreProjectBasicsValid)
{
    <div class="validationWarning">
        @FirmaValidationMessages.UpdateSectionIsDependentUponBasicsSection
    </div>
}
else
{
    using (Html.BeginForm())
    {
        <div ng-app="ProjectFirmaApp" ng-controller="ExpendituresController" style="overflow-x: auto">
            <div style="display: inline-block; margin-right: 5px; vertical-align: top">
                Funding Source to Add:
            </div>
            <div style="display: inline-block">
                <select ng-model="FundingSourceToAdd" ng-options="fundingSource.DisplayName group by fundingSource.OrganizationName for fundingSource in filteredFundingSources()" style="width: 500px"></select>
                <button class="btn btn-xs btn-firma" type="button" ng-click="addRow()">Add</button>
                <span style="vertical-align: middle; display: inline-block; margin-left: 5px">
                    Not listed?
                    @ModalDialogFormHelper.ModalDialogFormLink("Contact support", ViewDataTyped.RequestFundingSourceUrl, "Request Support", 800, "Submit Request", "Cancel", new List<string>(), null, null)
                </span>
                <br />
                <label style="font-size: 12px"><input type="checkbox" ng-model="ShowOnlyProjectFunders" /> Show only my project's Funders</label>
            </div>
            <table class="dialogFormLayout" style="margin-top: 20px; overflow: scroll" ng-show="AngularModel.ProjectFundingSourceExpenditures.length > 0">
                <tr>
                    <th></th>
                    <th>@Html.LabelWithFieldDefinitionFor(FieldDefinition.FundingSource)</th>
                    <th ng-repeat="calendarYear in getCalendarYearRange()" style="text-align: right; vertical-align: top">
                        <span class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear - 1)" ng-show="$first && calendarYear > 2007" title="Add Previous Year '{{calendarYear - 1}}'" alt="Add Previous Year '{{calendarYear - 1}}'" style="cursor: pointer"></span>
                        <span ng-bind="calendarYear"></span>
                        <span class="glyphicon glyphicon-plus-sign blue" ng-click="addCalendarYear(calendarYear + 1)" ng-show="$last && calendarYear < AngularViewData.MaxYear" title="Add Next Year '{{calendarYear + 1}}'" alt="Add Next Year '{{calendarYear + 1}}'" style="cursor: pointer"></span>
                    </th>
                    <th style="text-align: right">Total</th>
                </tr>
                <tr ng-repeat="projectFundingSourceExpenditure in AngularModel.ProjectFundingSourceExpenditures | orderBy:[getFundingSourceName]">
                    <td>
                        <span class="glyphicon glyphicon-trash blue" title="Remove row" alt="Remove row" ng-click="deleteRow(projectFundingSourceExpenditure)" style="cursor: pointer"></span></td>
                    <td ng-bind="getFundingSourceName(projectFundingSourceExpenditure)">
                    <td style="text-align: right" ng-repeat="calendarYearExpenditure in projectFundingSourceExpenditure.CalendarYearExpenditures | orderBy:'CalendarYear'">
                        <input type="text" ng-model="calendarYearExpenditure.MonetaryAmount" class="sitkaCurrency" ng-currency/>
                    </td>
                    <th style="text-align: right" ng-bind="getExpenditureTotalForRow(projectFundingSourceExpenditure) | nfcurrency">
                    </th>
                </tr>
                <tr>
                    <th colspan="2">Total:</th>
                    <th ng-repeat="calendarYear in getCalendarYearRange()" style="text-align: right" ng-bind="getExpenditureTotalForCalendarYear(calendarYear) | nfcurrency">
                    </th>
                    <th style="text-align: right" ng-bind="getExpenditureTotalForCalendarYear() | nfcurrency">
                    </th>
                </tr>
            </table>

            <div ng-repeat="projectFundingSourceExpenditure in AngularModel.ProjectFundingSourceExpenditures | orderBy:[getFundingSourceName]">
                <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceExpenditure.ProjectID}}"/>
                <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].FundingSourceID).ToString().Replace("0", "{{$index}}")" value="{{projectFundingSourceExpenditure.FundingSourceID}}"/>
                <div ng-repeat="calendarYearExpenditure in projectFundingSourceExpenditure.CalendarYearExpenditures | orderBy:'CalendarYear'">
                    <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].CalendarYearExpenditures[1].CalendarYear).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{calendarYearExpenditure.CalendarYear}}"/>
                    <input type="hidden" name="@Html.NameFor(x => x.ProjectFundingSourceExpenditures[0].CalendarYearExpenditures[1].MonetaryAmount).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{calendarYearExpenditure.MonetaryAmount}}"/>
                </div>
            </div>

            <hr/>
            @if (ViewDataTyped.ShowApproveAndReturnButton)
            {
                <table class="formLayout">
                    <tr>
                        <th>Comments:</th>
                        <td>
                            @Html.TextAreaFor(x => x.Comments, new {@class = "sectionComments"})
                            @Html.Hidden("Section", ViewDataTyped.SelectedProjectUpdateSection)
                        </td>
                    </tr>
                </table>
                <hr/>
            }
            @{ SectionComments.RenderPartialView(Html, ViewDataTyped.SectionCommentsViewData); }
            <table class="summaryLayout" style="width: 100%">
                <tr>
                    <td>
                        @ModalDialogFormHelper.ModalDialogFormLink("Refresh", ViewDataTyped.RefreshUrl, "Refresh this section", 500, "Continue", "Cancel", new List<string> { "btn btn-xs btn-firma" }, null, null)
                        @if (ViewDataTyped.UpdateStatus.IsExpendituresUpdated)
                        {
                            @ModalDialogFormHelper.ModalDialogFormLink("diff-link-id", "Show Changes", ViewDataTyped.DiffUrl, "Changes to Project Expenditures", 800, "hidden-save-button", string.Empty, "diff-close-button", "Close", new List<string> { "btn btn-xs btn-firma" }, null, null, null, new List<string>() {"btn-firma", "btn-xs"})
                        }
                    </td>
                    <td>
                        @if (ViewDataTyped.ViewDataForAngular.ValidationWarnings.Any())
                        {
                            <table data-ng-show="AngularModel.ShowValidationWarnings" data-ng-class="AngularModel.ShowValidationWarnings ? 'validationWarning' : 'hidden'">
                                <tr data-ng-repeat="warning in AngularViewData.ValidationWarnings">
                                    <td>@Html.Raw(ProjectWizardComponents.RequiredInfoNotProvidedIcon)</td>
                                    <td data-ng-bind="warning"></td>
                                </tr>
                            </table>
                        }
                        else
                        {
                            <div ng-show="AngularModel.ShowValidationWarnings" data-ng-class="AngularModel.ShowValidationWarnings ? 'greenLight' : 'hidden'">
                                <span>This page is all set!  Nice work.  You should take the rest of the day off.</span>
                            </div>
                        }
                    </td>
                    <td style="text-align: right; white-space: nowrap">
                        @Html.CheckBoxFor(x => x.ShowValidationWarnings, new {data_ng_model = "AngularModel.ShowValidationWarnings", @class = "ignoreSerialization"})
                        @Html.LabelFor(x => x.ShowValidationWarnings)
                        <button class="btn btn-xs btn-firma" type="submit" ng-disabled="pmForm.$invalid" style="margin-left: 10px">Save</button>
                    </td>
                </tr>
            </table>
        </div>
    }
}