@*-----------------------------------------------------------------------
<copyright file="PerformanceMeasures.cshtml" company="Tahoe Regional Planning Agency">
Copyright (c) Tahoe Regional Planning Agency. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using System.Web.Mvc.Html
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Controllers
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.ProjectUpdate
@using LtInfo.Common.HtmlHelperExtensions
@using LtInfo.Common.ModalDialog
@using Microsoft.Web.Mvc
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Views.Shared.PerformanceMeasureControls
@inherits PerformanceMeasures

@section JavascriptAndStylesContent
{
    @if (ViewDataTyped.IsEditable && ViewDataTyped.AreProjectBasicsValid)
    {
        <script src="@Url.Content("~/Views/ProjectUpdate/PerformanceMeasuresController.js")" type="text/javascript"></script>
        <script type="text/javascript">
            // <![CDATA[
            angular.module("ProjectFirmaApp").factory("angularModelAndViewData", function()
            {
                return {
                    AngularModel: @Html.Raw(JObject.FromObject(Model)),
                    AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped.ViewDataForAngular))
                    };
            });

            jQuery(document).ready(function() { HookupCheckIfFormIsDirty(undefined, ".submitProject"); });
            // ]]>
        </script>
    }
}

<p>
    To enter your project's annual accomplishments:
    <ul>
        <li>Add the appropriate @MultiTenantHelpers.GetPerformanceMeasureNamePluralized() to the list below</li>
        <li>Select the appropriate Subcategory options for each @MultiTenantHelpers.GetPerformanceMeasureName()</li>
        <li>Enter the accomplishment value</li>
        <li>
            You must enter at least one @MultiTenantHelpers.GetPerformanceMeasureName() per year for the duration defined by your project's Start and Completion
            Years (or, if Completion Year isn't set, through the @Html.LinkWithFieldDefinitionFor(FieldDefinition.ReportingYear, "current reporting year", new List<string> { "fieldDefinitionLink" }).
        </li>
    </ul>
    Click the <span class="helpicon glyphicon glyphicon-question-sign blue" title="Help"></span> icon to view reporting guidance
    on a specific @MultiTenantHelpers.GetPerformanceMeasureName(). You may review and update @MultiTenantHelpers.GetPerformanceMeasureName() subcategories and accomplishment values from previous years, and may add the
    same @MultiTenantHelpers.GetPerformanceMeasureName() multiple times.
</p>
<hr />
@if (!ViewDataTyped.IsEditable)
{
    if (ViewDataTyped.PerformanceMeasureReportedValuesSummaryViewData.PerformanceMeasureSubcategoriesCalendarYearReportedValues.Any())
    {
        PerformanceMeasureReportedValuesSummary.RenderPartialView(Html, ViewDataTyped.PerformanceMeasureReportedValuesSummaryViewData);
    }
    else
    {
        <p class="alert">No annual @MultiTenantHelpers.GetPerformanceMeasureName() accomplishments entered for this project.</p>
    }
}
else if (!ViewDataTyped.AreProjectBasicsValid)
{
    <div class="alert alert-danger">
        @FirmaValidationMessages.UpdateSectionIsDependentUponBasicsSection
    </div>
}
else
{
    <div ng-app="ProjectFirmaApp" ng-controller="PerformanceMeasuresController">
        @if (Model.ProjectExemptReportingYearUpdates != null && Model.ProjectExemptReportingYearUpdates.Any())
        {
            <div style="margin-top: 5px">
                <h2 ng-class="AngularViewData.ShowExemptYears ? 'expanded' : 'collapsed'" ng-click="AngularViewData.ShowExemptYears = !AngularViewData.ShowExemptYears"> What if my project has no accomplishments to report?</h2>
                <div ng-show="AngularViewData.ShowExemptYears" style="padding: 0 0 10px 27px">
                    Select the years for which you have no accomplishments to report and provide a brief explanation.
                    <div>
                        <label ng-repeat="projectExemptYearUpdate in AngularModel.ProjectExemptReportingYearUpdates" style="padding-right: 10px">
                            <input type="checkbox" ng-model="projectExemptYearUpdate.IsExempt" ng-change="BlankOutEmptyYearsFromModel()" /> <span ng-bind="projectExemptYearUpdate.CalendarYear"></span>
                        </label>
                    </div>
                    @Html.TextAreaFor(x => x.Explanation, new Dictionary<string, object> { { "style", "width:550px" }, { "placeholder", "Explanation here" }, { "ng-model", "AngularModel.Explanation" } })
                    @Html.ValidationMessageFor(x => x.Explanation)
                </div>
            </div>
        }
        @MultiTenantHelpers.GetPerformanceMeasureName() to Add:
        <select ng-model="PerformanceMeasureToAdd" ng-options="performanceMeasure.DisplayName for performanceMeasure in filteredPerformanceMeasures()"></select>
        <button class="btn btn-xs btn-firma" type="button" ng-click="addRow()">Add</button>
        @using (Html.BeginForm<ProjectUpdateController>(x => x.PerformanceMeasures(ViewDataTyped.Project, null), FormMethod.Post, new Dictionary<string, object> { { "name", "pmForm" }, { "novalidate", "novalidate" } }))
        {
            <table class="table" ng-show="AngularModel.PerformanceMeasureActualUpdates.length > 0">
                <tr>
                    <th class="fit"></th>
                    <th class="fit">@Html.LabelWithSugarFor(FieldDefinition.PerformanceMeasure)</th>
                    <th class="fit">Year</th>
                    <th class="fit" colspan="@ViewDataTyped.ViewDataForAngular.MaxSubcategoryOptions">@Html.LabelWithSugarFor(FieldDefinition.PerformanceMeasureSubcategory, "Subcategory")</th>
                    <th>@Html.LabelWithSugarFor(FieldDefinition.ReportedValue)</th>
                </tr>
                <tr ng-repeat="performanceMeasureActualUpdate in AngularModel.PerformanceMeasureActualUpdates" ng-form="pmActualValuesForm">
                    <td class="fit" style="text-align: right">
                        <span class="glyphicon glyphicon-warning-sign red" alt="Required information has not been completely provided (you can't submit this update)" ng-show="showRowValidationWarnings(performanceMeasureActualUpdate)"></span>
                        <span class="glyphicon glyphicon-trash blue" title="Remove row'" alt="Remove row" ng-click="deleteRow(performanceMeasureActualUpdate)" style="cursor: pointer"></span>
                    </td>
                    <td class="fit">
                        <span class="helpicon glyphicon glyphicon-question-sign blue" title="Click to get help on {{getPerformanceMeasureName(performanceMeasureActualUpdate)}}" data-pmqtip="getPerformanceMeasure(performanceMeasureActualUpdate.PerformanceMeasureID)"></span> <span ng-bind="getPerformanceMeasureName(performanceMeasureActualUpdate)"></span>
                    </td>
                    <td class="fit">
                        @Html.AngularDropdownListFor(x => x.PerformanceMeasureActualUpdates[0].CalendarYear, "performanceMeasureActualUpdate.CalendarYear", "calendarYear in filteredCalendarYears()", "{{calendarYear}}", "calendarYear", "calendarYear == performanceMeasureActualUpdate.CalendarYear", "-Year-", String.Empty, new { style = "width: 55px", data_uniqueid = "{{performanceMeasureActualUpdate.PerformanceMeasureActualUpdateID}}" })
                    </td>
                    <td ng-repeat="performanceMeasureActualSubcategoryOptionUpdate in performanceMeasureActualUpdate.PerformanceMeasureActualSubcategoryOptionUpdates | orderBy:[getSubcategoryName]">
                        <select ng-model="performanceMeasureActualSubcategoryOptionUpdate.PerformanceMeasureSubcategoryOptionID" style="width: 100px" name="PerformanceMeasureSubcategoryOptionID" ng-show="getPerformanceMeasure(performanceMeasureActualUpdate.PerformanceMeasureID).HasRealSubcategories">
                            <option value="-1" style="font-weight: bold">-{{getSubcategoryName(performanceMeasureActualSubcategoryOptionUpdate)}}-</option>
                            <option ng-repeat="performanceMeasureSubcategoryOption in getSubcategoryOptionsForSubcategory(performanceMeasureActualSubcategoryOptionUpdate.PerformanceMeasureSubcategoryID)"
                                    value="{{performanceMeasureSubcategoryOption.PerformanceMeasureSubcategoryOptionID}}" ng-selected="performanceMeasureActualSubcategoryOptionUpdate.PerformanceMeasureSubcategoryOptionID == performanceMeasureSubcategoryOption.PerformanceMeasureSubcategoryOptionID"
                                    ng-bind="performanceMeasureSubcategoryOption.PerformanceMeasureSubcategoryOptionName" />
                        </select>
                    </td>
                    <td ng-repeat="extraColumn in addAdditionalColumns(performanceMeasureActualUpdate)">&nbsp;</td>
                    <td>
                        @Html.AngularTextBoxFor(x => x.PerformanceMeasureActualUpdates[0].ActualValue, "performanceMeasureActualUpdate.ActualValue", new { @class = "sitkaNumber", type = "number", step = "any", style = "text-align:right" }) {{getMeasurementUnitTypeDisplayName(performanceMeasureActualUpdate)}}
                        <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureActualUpdates[0].PerformanceMeasureActualUpdateID).ToString().Replace("0", "{{$index}}")" value="{{performanceMeasureActualUpdate.PerformanceMeasureActualUpdateID}}">
                        <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureActualUpdates[0].ProjectUpdateBatchID).ToString().Replace("0", "{{$index}}")" value="{{performanceMeasureActualUpdate.ProjectUpdateBatchID}}">
                        <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureActualUpdates[0].PerformanceMeasureID).ToString().Replace("0", "{{$index}}")" value="{{performanceMeasureActualUpdate.PerformanceMeasureID}}">
                    </td>

                </tr>
            </table>
            <div ng-repeat="performanceMeasureActualUpdate in AngularModel.PerformanceMeasureActualUpdates">
                <div ng-repeat="performanceMeasureActualSubcategoryOptionUpdate in getSubcategoryOptionsSelected(performanceMeasureActualUpdate)">
                    <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureActualUpdates[0].PerformanceMeasureActualSubcategoryOptionUpdates[1].PerformanceMeasureSubcategoryOptionID).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{performanceMeasureActualSubcategoryOptionUpdate.PerformanceMeasureSubcategoryOptionID}}">
                    <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureActualUpdates[0].PerformanceMeasureActualSubcategoryOptionUpdates[1].PerformanceMeasureSubcategoryID).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{performanceMeasureActualSubcategoryOptionUpdate.PerformanceMeasureSubcategoryID}}">
                    <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureActualUpdates[0].PerformanceMeasureActualSubcategoryOptionUpdates[1].PerformanceMeasureID).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{performanceMeasureActualSubcategoryOptionUpdate.PerformanceMeasureID}}">
                </div>
            </div>
            <div ng-repeat="projectExemptYearUpdate in AngularModel.ProjectExemptReportingYearUpdates">
                <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYearUpdates[0].CalendarYear).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYearUpdate.CalendarYear}}" />
                <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYearUpdates[0].ProjectUpdateBatchID).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYearUpdate.ProjectUpdateBatchID}}" />
                <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYearUpdates[0].ProjectExemptReportingYearUpdateID).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYearUpdate.ProjectExemptReportingYearUpdateID}}" />
                <input type="hidden" name="@Html.NameFor(x => x.ProjectExemptReportingYearUpdates[0].IsExempt).ToString().Replace("0", "{{$index}}")" value="{{projectExemptYearUpdate.IsExempt}}" />
            </div>
            <input type="hidden" name="@Html.NameFor(x => x.Explanation)" value="{{AngularModel.Explanation}}" />

            if (ViewDataTyped.ShowApproveAndReturnButton)
            {
                <hr />
                <div class="row form-group">
                    <div class="col-md-3 col-header">@Html.LabelWithSugarFor(x => x.Comments)</div>
                    <div class="col-md-9">
                        @Html.TextAreaFor(x => x.Comments, new { @class = "sectionComments" })
                        @Html.Hidden("Section", ViewDataTyped.SelectedProjectUpdateSection)
                    </div>
                </div>
            }
            <hr />
            SectionComments.RenderPartialView(Html, ViewDataTyped.SectionCommentsViewData);
            <table style="width: 100%">
                <tr style="vertical-align: top">
                    <td>
                        @ModalDialogFormHelper.ModalDialogFormLink("Refresh", ViewDataTyped.RefreshUrl, "Refresh this section", 500, "Continue", "Cancel", new List<string> { "btn btn-xs btn-firma" }, null, null)
                        @if (ViewDataTyped.UpdateStatus.IsPerformanceMeasuresUpdated)
                        {
                            @ModalDialogFormHelper.ModalDialogFormLink("diff-link-id", "Show Changes", ViewDataTyped.DiffUrl, string.Format("Changes to {0}", MultiTenantHelpers.GetPerformanceMeasureNamePluralized()), 800, "hidden-save-button", string.Empty, "diff-close-button", "Close", new List<string> { "btn btn-xs btn-firma" }, null, null, null, new List<string>() { "btn-firma", "btn-xs" })
                        }
                    </td>
                    <td>
                        @if (ViewDataTyped.ViewDataForAngular.ValidationWarnings.Any())
                        {
                            <div data-ng-show="AngularModel.ShowValidationWarnings" data-ng-class="AngularModel.ShowValidationWarnings ? 'alert alert-danger' : 'hidden'">
                                <ul>
                                    <li data-ng-repeat="warning in AngularViewData.ValidationWarnings">
                                        <span data-ng-bind="warning"></span>
                                    </li>
                                </ul>
                            </div>
                        }
                        else
                        {
                            <div ng-show="AngularModel.ShowValidationWarnings" data-ng-class="AngularModel.ShowValidationWarnings ? 'alert alert-success' : 'hidden'">
                                <span>This page is all set!  Nice work.  You should take the rest of the day off.</span>
                            </div>
                        }
                    </td>
                    <td style="text-align: right">
                        @Html.CheckBoxFor(x => x.ShowValidationWarnings, new { data_ng_model = "AngularModel.ShowValidationWarnings", @class = "ignoreSerialization" })
                        @Html.LabelWithSugarFor(x => x.ShowValidationWarnings)
                        <button class="btn btn-xs btn-firma" type="submit" ng-disabled="pmForm.$invalid" style="margin-left: 10px">Save</button>
                    </td>
                </tr>
            </table>
        }
    </div>
}
