@using ProjectFirma.Web.Controllers
@using LtInfo.Common
@using LtInfo.Common.HtmlHelperExtensions
@using LtInfo.Common.ModalDialog
@using Microsoft.Web.Mvc
@inherits ProjectFirma.Web.Views.Tag.BulkTagProjects

@if (Model.ProjectIDList == null || !Model.ProjectIDList.Any())
{
    
    <p>
        No projects selected to be tagged.
    </p>

    <script type="text/javascript">
    // <![CDATA[
    var saveButtonId = "@ModalDialogFormHelper.SaveButtonId";
    jQuery("#" + saveButtonId).hide();
    // ]]>
    </script>

}
else
{
    using (Html.BeginForm<TagController>(x => x.AddTagsToProjectModal(null)))
    {
        <table class="dialogFormLayout">
            <tr>
                <th>@Html.LabelWithFieldDefinitionFor(m => m.TagName):</th>
                <td>
                    @Html.TextBoxFor(m => m.TagName, new { id = "newBulkTagName", style = "width:522px" })
                    @Html.ValidationMessageFor(m => m.TagName)
                </td>
            </tr>
        </table>
        <div style="min-height: 150px; max-height: 350px; overflow-y: auto; overflow-x: hidden">
            <div style="margin: 5px 0">Tagging @Model.ProjectIDList.Count @ViewDataTyped.ProjectLabel:</div>
            <ul>
                @foreach (var projectName in ViewDataTyped.ProjectDisplayNames)
                {
                    <li>@projectName</li>
                }

            </ul>

        </div>
    
        foreach (var projectID in Model.ProjectIDList)
        {
            <input type="hidden" name="@Html.NameFor(x => x.ProjectIDList)" value="@projectID"/>
        }

        <script>
            jQuery(document).ready(function()
            {
                jQuery("#newBulkTagName")
                    .typeahead({
                        items: "all",
                        autoSelect: false,
                        source: function(query, process)
                        {
                            jQuery.ajax({
                                dataType: 'json',
                                type: 'post',
                                async: true,
                                url: @Html.Raw(ViewDataTyped.FindTagUrl.ToJS()),
                                data: { q: query },
                                autoSelect: false
                            }).done(function(json) { return process(json); });
                        },                        
                        displayText: function(item) { return item.text; }
                    });
            });
        </script>
    }
}