@using LtInfo.Common.HtmlHelperExtensions
@using ProjectFirma.Web.Models
@inherits ProjectFirma.Web.Views.LeadAgencyRightOfWayCoverage.Edit
<p>
    After verifying commodities, they need to be banked on the parcel. Only banked commodities can be subsequently transferred to other parcels.
</p>
@using (Html.BeginForm())
{
    <div class="row">
        <div class="col-md-5">@Html.LabelWithFieldDefinitionFor(m => m.CommodityID):</div>
        <div class="col-md-7">
            @Html.DropDownListFor(m => m.CommodityID, ViewDataTyped.Commodites, new { onchange = "toggleBaileyRating()" })
            @Html.ValidationMessageFor(m => m.CommodityID)
        </div>
    </div>
    <div class="row">
        <div class="col-md-5">@Html.LabelWithFieldDefinitionFor(m => m.BaileyRatingID):</div>
        <div class="col-md-7">
            @Html.DropDownListFor(m => m.BaileyRatingID, ViewDataTyped.BaileyRatings)
            @Html.ValidationMessageFor(m => m.BaileyRatingID)
        </div>
    </div>
    <div class="row">
        <div class="col-md-5">
            @Html.LabelWithFieldDefinitionFor(x => x.RightOfWayCoverageAmount):
        </div>
        <div class="col-md-7">
            @Html.TextBoxFor(x => x.RightOfWayCoverageAmount)
            @Html.ValidationMessageFor(m => m.RightOfWayCoverageAmount)
        </div>
    </div>
    <div class="row">
        <div class="col-md-5">@Html.LabelWithFieldDefinitionFor(m => m.RightOfWayCoverageEffectiveDate):</div>
        <div class="col-md-7">
            @Html.EditorFor(m => m.RightOfWayCoverageEffectiveDate)
            @Html.ValidationMessageFor(m => m.RightOfWayCoverageEffectiveDate)
        </div>
    </div>
    <div class="row">
        <div class="col-md-5">@Html.LabelWithFieldDefinitionFor(m => m.Notes):</div>
        <div class="col-md-7">@Html.TextAreaWithMaxLengthFor(m => m.Notes, new TextAreaForExtensions.TextAreaDimensions(null, 4), null)</div>
    </div>
}

<script type="text/javascript">
    jQuery(document).ready(function()
    {
        toggleBaileyRating();
    });

    function toggleBaileyRating()
    {
        var commoditySelected = jQuery("#@Html.IdFor(m => m.CommodityID)").val();
        var baileyRatingDropdown = jQuery("#@Html.IdFor(m => m.BaileyRatingID)");
        if (Sitka.Methods.isUndefinedNullOrEmpty(commoditySelected) || commoditySelected == @((int) CommodityEnum.RestorationCredit))
        {
            baileyRatingDropdown.prop("disabled", true);
            baileyRatingDropdown.val("");
        }
        else
        {
            baileyRatingDropdown.prop("disabled", false);
        }
    }
</script>
