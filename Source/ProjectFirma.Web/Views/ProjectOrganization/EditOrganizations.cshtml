@*-----------------------------------------------------------------------
<copyright file="EditOrganizations.cshtml" company="Tahoe Regional Planning Agency">
Copyright (c) Tahoe Regional Planning Agency. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using LtInfo.Common.HtmlHelperExtensions
@using ProjectFirma.Web.Models
@using Newtonsoft.Json.Linq
@inherits ProjectFirma.Web.Views.ProjectOrganization.EditOrganizations
<script type="text/javascript">
    // <![CDATA[    
    angular.module("EditOrganizationsAngularApp", []).controller("ProjectOrganizationController", function($scope)
    {
        $scope.AngularModel = @Html.Raw(JObject.FromObject(Model));
        $scope.AngularViewData = @Html.Raw(JObject.FromObject(ViewDataTyped));
        $scope.OrganizationToAdd = null;

        $scope.$watch(function () {
            jQuery(".selectpicker").selectpicker("refresh");
        });

        jQuery("form").submit(function() { jQuery("#@Html.IdFor(x => x.ProjectOrganizationsViewModelJson)").val(JSON.stringify($scope.AngularModel.ProjectOrganizationsViewModelJson)); });

        $scope.lookupLeadPersonForOrganization = function(organizationID) {
            
            if (organizationID == null) {
                return "";
            }
            var leadOrg = _.find($scope.AngularViewData.AllOrganizations, function (o) { return o.OrganizationID == organizationID; });
            var primaryContactForLeadImplementerOrg = _.find($scope.AngularViewData.AllPeople, function(x) { return x.PersonID == leadOrg.PrimaryContactPersonID; });
            if (primaryContactForLeadImplementerOrg != null)
            {
                return primaryContactForLeadImplementerOrg.DisplayName;
            }
            return "None";
        };

        $scope.getAvailableOrganizations = function (primarySimple) {
            var usedOrganizationIDs = _.map($scope.AngularModel.ProjectOrganizationsViewModelJson.ProjectOrganizations,
                function(f) {
                    return f.OrganizationID;
                });

            var filteredList = _.filter($scope.AngularViewData.AllOrganizations,
                function(f) {
                    return primarySimple.OrganizationID === f.OrganizationID ||
                        !_.includes(usedOrganizationIDs, f.OrganizationID);
                });

            return filteredList;
        }

        $scope.addTopTier = function()
        {
            var newPrimary = {
                OrganizationID: null,
                RelationshipTypes: []
            };
            $scope.AngularModel.ProjectOrganizationsViewModelJson.ProjectOrganizations.push(newPrimary);
            $scope.addDetailTier(newPrimary);
        };

        $scope.removeTopTier = function (primarySimple) {
            Sitka.Methods.removeFromJsonArray($scope.AngularModel.ProjectOrganizationsViewModelJson.ProjectOrganizations,
                primarySimple);
        };

        $scope.addDetailTier = function(primarySimple)
        {
            if (primarySimple.RelationshipTypes == undefined)
            {
                primarySimple.RelationshipTypes = [];
            }
            primarySimple.RelationshipTypes.push({});
        };

        $scope.removeDetailTier = function(primarySimple, detailSimple) {
            Sitka.Methods.removeFromJsonArray(primarySimple.RelationshipTypes, detailSimple);
        };

        $scope.updateModel = function(option)
        {                
            var primarySimple =
                Sitka.Methods.findElementInJsonArray($scope.AngularModel.ProjectOrganizationsViewModelJson.ProjectOrganizations,
                    "OrganizationID",
                    option.OrganizationID);

            primarySimple.OrganizationID = Number.parseInt(option.OrganizationID);
        }

        $scope.updateLeadOrgModel = function (option) {
            $scope.AngularModel.ProjectOrganizationsViewModelJson.LeadOrganizationID = Number.parseInt(option);
        }

        $scope.validRelationshipTypes = function(organizationID) {
            var organization =
                Sitka.Methods.findElementInJsonArray($scope.AngularViewData.AllOrganizations,
                    "OrganizationID",
                    organizationID);

            var valid = organization == null ? [] : organization.ValidRelationshipTypeSimples;
            return valid;
        }

    });

    angular.bootstrap(jQuery("#EditOrganizationsAngularApp"), ["EditOrganizationsAngularApp"]);

    jQuery(".modal").on("hidden.bs.modal",
        function() {
            jQuery(".bootstrap-select.open").removeClass("open");
        });

    // ]]>
</script>
<script type="text/javascript" src="/Content/Bootstrap-select/bootstrap-select.min.js"></script>
<link rel="stylesheet" href="/Content/Bootstrap-select/bootstrap-select.min.css" type="text/css" />

<style>
    .table > tbody > tr.subRelationships > td {
        border-top: none;
        padding-top: 0;
    }
</style>

<div class="validationError">
    @Html.ValidationSummary()
</div>

<div id="EditOrganizationsAngularApp" ng-controller="ProjectOrganizationController">
    <div class="row">
        <div class="col-xs-12">
            <div class="row" style="margin-bottom: 10px;">
                <div class="col-xs-3">
                    @Html.LabelWithSugarFor(FieldDefinition.LeadImplementer)
                </div>
                <div class="col-xs-9">
                    <input type="hidden" value="{{AngularModel.ProjectOrganizationsViewModelJson.LeadOrganizationID}}"
                           name="LeadOrganizationID"/>
                    <select ng-model="AngularModel.ProjectOrganizationsViewModelJson.LeadOrganizationID"
                            name="LeadOrganizationID"
                            ng-required="true" 
                            ng-change="updateLeadOrgModel(AngularModel.ProjectOrganizationsViewModelJson.LeadOrganizationID)"
                            class="selectpicker"
                            data-live-search="true"
                            data-container="body"
                            title="Select an Organization"
                            data-width="100%">
                        <option value="" disabled selected>Select an Organization</option>
                        <option ng-repeat="organization in AngularViewData.AllOrganizations"
                                value="{{organization.OrganizationID}}"
                                ng-selected="AngularModel.ProjectOrganizationsViewModelJson.LeadOrganizationID == organization.OrganizationID"
                                ng-bind="organization.OrganizationName"
                                data-tokens="{{organization.OrganizationName}}"></option>
                    </select>
                </div>                                
            </div>
            <div class="row" style="margin-bottom: 20px;">
                <div class="col-xs-3">
                    @Html.LabelWithSugarFor(FieldDefinition.PrimaryContact)
                </div>
                <div class="col-xs-9">
                    {{lookupLeadPersonForOrganization(AngularModel.ProjectOrganizationsViewModelJson.LeadOrganizationID)}}
                </div>
            </div>
            <div class="row" style="margin-bottom: 10px;">
                <div class="col-xs-12">
                    <p>Enter any other @FieldDefinition.Organization.GetFieldDefinitionLabelPluralized() associated with this @FieldDefinition.Project.GetFieldDefinitionLabel(). @FieldDefinition.Organization.GetFieldDefinitionLabelPluralized() may have more than one relationship to a @FieldDefinition.Project.GetFieldDefinitionLabel(). If the @FieldDefinition.LeadImplementer.GetFieldDefinitionLabel() has other roles on this project enter their other @FieldDefinition.ProjectRelationshipType.GetFieldDefinitionLabel() below in addition to specifying the @FieldDefinition.Organization.GetFieldDefinitionLabel() as the @FieldDefinition.LeadImplementer.GetFieldDefinitionLabel().</p>        
                </div>
            </div>
            <div class="row" style="margin-bottom: 10px;">
                <div class="col-xs-12">
                    <button type="button" class="btn btn-sm btn-firma pull-right" ng-click="addTopTier()">
                        <span class="glyphicon glyphicon-plus"></span>
                        Add Organization
                    </button>
                </div>
            </div>
            <div class="row">
                <div class="col-xs-12">                    
                    <table class="table" style="margin-bottom: 50px;" ng-show="AngularModel.ProjectOrganizationsViewModelJson.ProjectOrganizations && AngularModel.ProjectOrganizationsViewModelJson.ProjectOrganizations.length && AngularModel.ProjectOrganizationsViewModelJson.ProjectOrganizations.length > 0">
                        <thead>
                        <tr class="row">
                            <th class="col-xs-1" style="text-align: center">Remove<br/>@FieldDefinition.Organization.GetFieldDefinitionLabel()</th>
                            <th class="col-xs-5">@Html.LabelWithSugarFor(FieldDefinition.Organization)</th>
                            <th class="col-xs-1" style="text-align: center">Remove<br/>@FieldDefinition.ProjectRelationshipType.GetFieldDefinitionLabel()</th>
                            <th class="col-xs-4">@Html.LabelWithSugarFor(FieldDefinition.ProjectRelationshipType)</th>
                            <th class="col-xs-1"></th>
                        </tr>
                        </thead>
                        <tbody ng-repeat="primarySimple in AngularModel.ProjectOrganizationsViewModelJson.ProjectOrganizations">
                            <tr class="row">
                                <td class="col-xs-1" style="text-align: center">
                                    <a href="#" ng-click="removeTopTier(primarySimple); $event.preventDefault();" style="text-decoration: none">
                                        <i class="glyphicon glyphicon-trash" title="Remove Organization" alt="Remove Organization"></i>
                                    </a>
                                </td>
                                <td class="col-xs-5">
                                    <input type="hidden" value="{{primarySimple.OrganizationID}}"
                                           name="ProjectOrganizations[{{$index}}].OrganizationID" />
                                    <select style="width: 100%" ng-model="primarySimple.OrganizationID"
                                            name="ProjectOrganizations[{{$index}}].OrganizationID"
                                            ng-change="updateModel(primarySimple)"
                                            class="selectpicker"
                                            data-live-search="true"
                                            title="Select an Organization">
                                        <option ng-repeat="organization in getAvailableOrganizations(primarySimple)"
                                                value="{{organization.OrganizationID}}"
                                                ng-selected="primarySimple.OrganizationID == organization.OrganizationID"
                                                ng-bind="organization.OrganizationName"
                                                data-tokens="{{organization.OrganizationName}}"></option>
                                    </select>
                                </td>
                                <td class="col-xs-1" style="text-align: center">
                                    <a href="#" ng-click="removeDetailTier(primarySimple, primarySimple.RelationshipTypes[0]); $event.preventDefault();" ng-class="primarySimple.RelationshipTypes.length <= 1 ? 'disabled' : ''">
                                        <i class="glyphicon glyphicon-trash" title="Remove Relationship" alt="Remove Relationship"></i>
                                    </a>
                                </td>
                                <td class="col-xs-4">
                                    <input type="hidden" value="{{primarySimple.RelationshipTypes[0].RelationshipTypeID}}"
                                           name="ProjectOrganizations[{{$index}}].RelationshipTypes[0].RelationshipTypeID" />
                                    <select class="form-control" style="width: 100%" ng-model="primarySimple.RelationshipTypes[0].RelationshipTypeID" name="ProjectOrganizations[{{$index}}].RelationshipTypes[0].RelationshipTypeID" ng-required="true">
                                        <option value="" disabled selected>Select one</option>
                                        <option ng-repeat="detailType in validRelationshipTypes(primarySimple.OrganizationID)"
                                                ng-selected="primarySimple.RelationshipTypes[0].RelationshipTypeID == detailType.RelationshipTypeID"
                                                ng-bind="detailType.RelationshipTypeName"
                                                value="{{detailType.RelationshipTypeID}}"></option>
                                    </select>
                                </td>
                                <td  class="col-xs-1">
                                    <button type="button" class="btn btn-sm btn-firma" ng-click="addDetailTier(primarySimple)" ng-disabled="validRelationshipTypes(primarySimple.OrganizationID).length <= primarySimple.RelationshipTypes.length">
                                        <span class="glyphicon glyphicon-plus"></span>
                                        Add
                                    </button>
                                </td>
                            </tr>
                            <tr class="row" ng-repeat="detailSimple in primarySimple.RelationshipTypes.slice(1)" class="subRelationships">
                                <td class="col-xs-1">&nbsp;</td>
                                <td class="col-xs-5">&nbsp;</td>
                                <td class="col-xs-1" style="text-align: center">
                                    <input type="hidden" value="{{detailSimple.RelationshipTypeID}}"
                                           name="ProjectOrganizations[{{$parent.$index}}].RelationshipTypes[{{$index+1}}].RelationshipTypeID" />
                                    <a href="#" ng-click="removeDetailTier(primarySimple, detailSimple); $event.preventDefault();">
                                        <i class="glyphicon glyphicon-trash" title="Remove Relationship" alt="Remove Relationship"></i>
                                    </a>
                                </td>
                                <td  class="col-xs-4">
                                    <select class="form-control" style="width: 100%" ng-model="detailSimple.RelationshipTypeID" name="ProjectOrganizations[{{$parent.$index}}].RelationshipTypes[{{$index+1}}].RelationshipTypeID" ng-required="true">
                                        <option value="" disabled selected>Select a Relationship</option>
                                        <option ng-repeat="detailType in validRelationshipTypes(primarySimple.OrganizationID)"
                                                ng-selected="detailSimple.RelationshipTypeID == detailType.RelationshipTypeID"
                                                ng-bind="detailType.RelationshipTypeName"
                                                value="{{detailType.RelationshipTypeID}}"></option>
                                    </select>
                                </td>
                                <td  class="col-xs-1">&nbsp;</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    @using (Html.BeginForm())
    {
        @Html.HiddenFor(x => x.ProjectOrganizationsViewModelJson)
    }
</div>
