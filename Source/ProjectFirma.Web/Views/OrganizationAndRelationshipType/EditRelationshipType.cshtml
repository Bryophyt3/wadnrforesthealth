@*-----------------------------------------------------------------------
<copyright file="Edit.cshtml" company="Tahoe Regional Planning Agency">
Copyright (c) Tahoe Regional Planning Agency. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using LtInfo.Common.HtmlHelperExtensions
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@using Newtonsoft.Json.Linq
@inherits ProjectFirma.Web.Views.OrganizationAndRelationshipType.EditRelationshipType
              

<script type="text/javascript">
    // <![CDATA[
    angular.module("EditAngularApp", []).controller("EditRelationshipTypeController", function($scope)
    {
        $scope.AngularModel = @Html.Raw(JObject.FromObject(Model));
        $scope.AngularViewData = @Html.Raw(JObject.FromObject(ViewDataTyped));
        $scope.OrganizationTypeToAdd = null;       

        $scope.filteredOrganizationTypes = function()
        {
            var usedOrganizationTypeIDs = _.map($scope.AngularModel.OrganizationTypeSimples, function (p) { return p.OrganizationTypeID; });
            var filter = _.filter($scope.AngularViewData.AllOrganizationTypes, function (f) { return !_.contains(usedOrganizationTypeIDs, f.OrganizationTypeID); });
            return filter;
        };

        $scope.getOrganizationTypeName = function(relationshipOrganizationType)
        {
            var typeToFind = $scope.getOrganizationType(relationshipOrganizationType.OrganizationTypeID);
            return typeToFind.OrganizationTypeName;
        };

        $scope.getOrganizationType = function (organizationTypeID) { return _.find($scope.AngularViewData.AllOrganizationTypes, function (f) { return organizationTypeID == f.OrganizationTypeID; }); };

        $scope.addOrganizationType = function()
        {
            if ($scope.AngularModel.OrganizationTypeSimples == null) {
                $scope.AngularModel.OrganizationTypeSimples = [];
            }

            if ($scope.OrganizationTypeToAdd != null)
            {                
                var newOrganizationType = {
                    OrganizationTypeID: $scope.OrganizationTypeToAdd.OrganizationTypeID
                };
                $scope.AngularModel.OrganizationTypeSimples.push(newOrganizationType);
                $scope.OrganizationTypeToAdd = null;
            }
        };

        $scope.deleteOrganizationType = function (relationshipOrganizationType)
        {
            Sitka.Methods.removeFromJsonArray($scope.AngularModel.OrganizationTypeSimples, relationshipOrganizationType);
        };
    });
    angular.bootstrap(jQuery("#EditRelationshipTypeControllerAngularApp"), ["EditAngularApp"]);
    // ]]>
</script>

<div class="validationError">
    @Html.ValidationSummary()
</div>


<div id="EditRelationshipTypeControllerAngularApp" ng-controller="EditRelationshipTypeController">   
    @using (Html.BeginForm())
    {
        <div class="form-horizontal">
            <div class="form-group">
                <div class="col-sm-4 control-label">@Html.LabelWithSugarFor(m => m.RelationshipTypeName)</div>
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.RelationshipTypeName)
                    @Html.ValidationMessageFor(m => m.RelationshipTypeName)
                </div>
            </div>
                <div class="form-group">
                    <div class="col-sm-4 control-label">@Html.Label("Associate with an Organization Type")</div>
                    <div class="col-sm-8">
                        <select ng-model="OrganizationTypeToAdd" ng-options="organizationType.OrganizationTypeName for organizationType in filteredOrganizationTypes()">
                            <option value="">Choose One</option>
                        </select>
                        <button class="btn btn-xs btn-firma" type="button" ng-click="addOrganizationType()">Add</button>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-4 control-label">@Html.Label("Associated Organization Types")</div>
                    <div class="col-sm-8">
                        <ul style="list-style: none">
                            <li ng-repeat="relationshipOrganizationType in AngularModel.OrganizationTypeSimples | orderBy:getOrganizationTypeName">
                                <a>
                                    <span class="glyphicon glyphicon-trash blue" title="Remove '{{relationshipOrganizationType.OrganizationTypeName}}'" alt="Remove '{{relationshipOrganizationType.OrganizationTypeName}}'" ng-click="deleteOrganizationType(relationshipOrganizationType)" style="cursor: pointer"></span>
                                </a> {{getOrganizationTypeName(relationshipOrganizationType)}}
                            </li>
                        </ul>
                        <input ng-repeat="relationshipOrganizationType in AngularModel.OrganizationTypeSimples" type="hidden" name="@Html.NameFor(x => x.OrganizationTypeSimples[0].OrganizationTypeID).ToString().Replace("0", "{{$index}}")" value="{{relationshipOrganizationType.OrganizationTypeID}}">
                    </div>
                </div>
            </div>
        @Html.HiddenFor(m => m.RelationshipTypeID)
    }
    
</div>
