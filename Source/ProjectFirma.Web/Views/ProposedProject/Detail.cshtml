@*-----------------------------------------------------------------------
<copyright file="Detail.cshtml" company="Tahoe Regional Planning Agency">
Copyright (c) Tahoe Regional Planning Agency. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.Shared.ProjectControls
@using ProjectFirma.Web.Views.Shared.ProjectLocationControls
@using ProjectFirma.Web.Views
@using ProjectFirma.Web.Views.Shared
@using ProjectFirma.Web.Views.Shared.TextControls
@using LtInfo.Common
@using LtInfo.Common.BootstrapWrappers
@using LtInfo.Common.DhtmlWrappers
@using LtInfo.Common.HtmlHelperExtensions
@using LtInfo.Common.ModalDialog
@using LtInfo.Common.Views
@using MoreLinq
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Views.Shared.PerformanceMeasureControls
@inherits ProjectFirma.Web.Views.ProposedProject.Detail

@{
    SetLayout("~/Views/Shared/SiteLayout.cshtml", ViewDataTyped);
}

@section JavascriptAndStylesContent
{
    @{ DhtmlxGridIncludes.RenderPartialView(Html); }
    @{ MapJavascriptIncludes.RenderPartialView(Html); }
    <script src="@Url.Content("~/Views/Shared/PerformanceMeasureControls/PerformanceMeasureExpectedController.js")" type="text/javascript"></script>
    <script type="text/javascript" src="/Content/Bootstrap-select/bootstrap-select.min.js"></script>
    <link rel="stylesheet" href="/Content/Bootstrap-select/bootstrap-select.min.css" type="text/css" />
    <script src="@Url.Content("~/Content/bootstrap-toc/bootstrap-toc.min.js")" type="text/javascript"></script>

    <style>
        /*Hack to get scrollspy to select sections with no content*/
        footer {
            height: 600px;
        }
        @@media (min-width: 768px) { /* Bootstrap small and greater screen widths */
            .projectDescription {
                padding-left: 20px;
            }
        }
        .basicsLayout .row {
            margin-left: 0;
            margin-right: 0;
        }

        .basicsLayout .row div {
            padding-left: 0;
            padding-right: 5px;
        }

        .basicsLayout hr {
            margin-top: 5px;
            margin-bottom: 5px;
        }
    </style>
}


<div class="alert alert-info" style="margin-bottom: 10px">
    <span class="glyphicon glyphicon-info-sign blue" title="@FieldDefinition.ProposedProject.GetFieldDefinitionLabel()"></span>
    @switch (ViewDataTyped.ProposedProject.ProposedProjectState.ToEnum)
    {
        case ProposedProjectStateEnum.Draft:
            <span>
                This @FieldDefinition.ProposedProject.GetFieldDefinitionLabel() has not yet been submitted and may be incomplete.
                @if (ViewDataTyped.CurrentPersonIsSubmitter || ViewDataTyped.CurrentPersonIsApprover)
                {
                    <span>You may <a href="@ViewDataTyped.ProposedProjectBasicsUrl">finalize the Project Proposal</a> at any time.</span>
                }
            </span>
                break;
        case ProposedProjectStateEnum.Submitted:
        <span>
            This @FieldDefinition.ProposedProject.GetFieldDefinitionLabel() is awaiting review.
            @if (ViewDataTyped.CurrentPersonIsApprover)
            {
                <span>You may <a href="@ViewDataTyped.ProposedProjectBasicsUrl">review/approve/reject the Project Proposal</a> at any time.</span>
            }
            else if (ViewDataTyped.CurrentPersonIsSubmitter)
            {
                <span>You may <a href="@ViewDataTyped.ProposedProjectBasicsUrl">make changes or withdraw your proposal</a> at any time.</span>
            }
        </span>
            break;
        case ProposedProjectStateEnum.Approved:
        <span>
            This proposal was accepted by the review and is now an <a href="@ViewDataTyped.ProposedProject.Project.GetDetailUrl()">approved Project</a>.
        </span>
            break;
        case ProposedProjectStateEnum.Rejected:
        <span>
            This proposal was rejected by the reviewer. @ModalDialogFormHelper.ModalDialogFormLink(string.Format("Contact {0}", ViewDataTyped.Tenant.GetTenantAttribute().TenantDisplayName), ViewDataTyped.RequestSupportUrl, "Request Support", true) with any questions regarding this @FieldDefinition.ProposedProject.GetFieldDefinitionLabel().
        </span>
            break;
        default:
            throw new ArgumentOutOfRangeException();
    }
</div>


<div data-spy="scroll" data-target="#toc">
    <div id="contentForTOC" class="container-fluid">
        <div class="row">
            <div data-target="#tableofcontents" id="scrollSpyContent" class="col-lg-2 col-md-3 hidden-sm hidden-xs hidden-print">
                <div id="tableOfContentsAffixed" class="navpanel panelFirma">
                    <h4 data-toc-skip>Page Contents</h4>
                    <nav id="tableOfContents" class="scrollSpy"></nav>
                </div>
            </div>
            <div class="col-lg-10 col-md-9 col-sm-12">
                <div class="row">
                    <div class="col-md-12 col-lg-7" style="padding-right: 10px">
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                <h2>Basics</h2>
                            </div>
                            <div class="panel-body">
                                <div class="basicsLayout">
                                    <div class="row">
                                        <div class="col-xs-12">
                                            @Html.LabelWithSugarFor(FieldDefinition.ProjectDescription)
                                        </div>
                                        <div class="col-xs-12">
                                            <p class="projectDescription">
                                                @Html.Raw(ViewDataTyped.ProposedProject.ProjectDescription.HtmlEncodeWithBreaks())
                                            </p>
                                        </div>
                                    </div>
                                    <hr />
                                    @switch (ViewDataTyped.ProposedProject.FundingType.ToEnum)
                                    {
                                        case FundingTypeEnum.Capital:
                                            <div class="row">
                                                <div class="col-xs-12 col-sm-6">@Html.LabelWithSugarFor(FieldDefinition.EstimatedTotalCost)</div>
                                                <div class="col-xs-12 col-sm-6">
                                                    @ViewDataTyped.ProposedProject.EstimatedTotalCost.ToStringCurrency()
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-xs-12 col-sm-6">@Html.LabelWithSugarFor(FieldDefinition.SecuredFunding)</div>
                                                <div class="col-xs-12 col-sm-6">
                                                    @ViewDataTyped.ProposedProject.SecuredFunding.ToStringCurrency()
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-xs-12 col-sm-6">@Html.LabelWithSugarFor(FieldDefinition.UnfundedNeed)</div>
                                                <div class="col-xs-12 col-sm-6">
                                                    @ViewDataTyped.ProposedProject.UnfundedNeed.ToStringCurrency()
                                                </div>
                                            </div>
                                            break;
                                        case FundingTypeEnum.OperationsAndMaintenance:
                                            <div class="row">
                                                <div class="col-xs-12 col-sm-6">@Html.LabelWithSugarFor(FieldDefinition.EstimatedAnnualOperatingCost)</div>
                                                <div class="col-xs-12 col-sm-6">
                                                    @ViewDataTyped.ProposedProject.EstimatedAnnualOperatingCost.ToStringCurrency()
                                                </div>
                                            </div>
                                            break;
                                    }
                                    <hr />
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-6">@Html.LabelWithSugarFor(FieldDefinition.PlanningDesignStartYear)</div>
                                        <div class="col-xs-12 col-sm-6">
                                            @ViewDataTyped.ProposedProject.PlanningDesignStartYear
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-6">@Html.LabelWithSugarFor(FieldDefinition.ImplementationStartYear)</div>
                                        <div class="col-xs-12 col-sm-6">
                                            @ViewDataTyped.ProposedProject.ImplementationStartYear
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-6">@Html.LabelWithSugarFor(FieldDefinition.CompletionYear)</div>
                                        <div class="col-xs-12 col-sm-6">
                                            @ViewDataTyped.ProposedProject.CompletionYear
                                        </div>
                                    </div>
                                    <hr />
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-6">
                                            <label>Proposed by</label>
                                        </div>
                                        <div class="col-xs-12 col-sm-6">
                                            @ViewDataTyped.ProposedProject.ProposingPerson.GetFullNameFirstLastAsStringAndOrgAsUrl()
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-6">
                                            <label>Proposed on</label>
                                        </div>
                                        <div class="col-xs-12 col-sm-6">
                                            @ViewDataTyped.ProposedProject.ProposingDate.ToStringDate()
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-6">
                                            <label>Submitted on</label>
                                        </div>
                                        <div class="col-xs-12 col-sm-6">
                                            @ViewDataTyped.ProposedProject.SubmissionDate.ToStringDate()
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-xs-12 col-sm-6">
                                            <label>Approved on</label>
                                        </div>
                                        <div class="col-xs-12 col-sm-6">
                                            @ViewDataTyped.ProposedProject.ApprovalDate.ToStringDate()
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-12 col-lg-5">
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                <h2>Location</h2>
                            </div>
                            <div class="panel-body">
                                @{ ProjectLocationSummary.RenderPartialView(Html, ViewDataTyped.ProjectLocationSummaryViewData); }
                            </div>
                        </div>
                    </div>
                </div>

                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h2>Expected @MultiTenantHelpers.GetPerformanceMeasureNamePluralized()</h2>
                    </div>
                    <div class="panel-body">
                        @{ PerformanceMeasureExpectedSummary.RenderPartialView(Html, ViewDataTyped.PerformanceMeasureExpectedSummaryViewData); }
                    </div>
                </div>

                <h2 data-toc-skip class="sectionHeader">@FieldDefinition.ProposedProject.GetFieldDefinitionLabel() @ViewDataTyped.ClassificationDisplayName</h2>
                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h2> @Html.LabelWithSugarFor(FieldDefinition.Classification, ViewDataTyped.ClassificationDisplayNamePluralized)</h2>
                    </div>
                    <div class="panel-body">
                        @if (ViewDataTyped.ProposedProject.ProposedProjectClassifications.Any())
                        {
                            foreach (var proposedProjectClassificationBatch in ViewDataTyped.ProposedProject.ProposedProjectClassifications.OrderBy(x => x.Classification.DisplayName).Batch(3))
                            {
                                <div class="row" style="padding-top: 10px;">
                                    @foreach (var proposedProjectClassification in proposedProjectClassificationBatch)
                                    {
                                        <div class="col-md-4">
                                            <label>@proposedProjectClassification.Classification.GetDisplayNameAsUrl()</label>

                                            <div>@proposedProjectClassification.ProposedProjectClassificationNotes</div>
                                        </div>
                                    }
                                </div>
                            }

                        }
                        else
                        {
                            <p class="alert">No @ViewDataTyped.ClassificationDisplayNamePluralized set for this project.</p>
                        }
                    </div>
                </div>

                @if (ViewDataTyped.HasAssessments)
                {
                    <div class="panel panelFirma">
                        <div class="panel-heading panelTitle">
                            <h2>Assessment</h2>
                        </div>
                        <div class="panel-body">
                            @{ AssessmentTree.RenderPartialView(Html, ViewDataTyped.AssessmentTreeViewData); }
                        </div>
                    </div>
                }

                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h2>Photos</h2>
                    </div>
                    <div class="panel-body">
                        @{ ImageGallery.RenderPartialView(Html, ViewDataTyped.ImageGalleryViewData); }
                    </div>
                </div>

                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h2>Notes</h2>
                    </div>
                    <div class="panel-body">
                        @{ EntityNotes.RenderPartialView(Html, ViewDataTyped.EntityNotesViewData); }
                    </div>
                </div>

                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h2>Audit Log</h2>
                    </div>
                    <div class="panel-body">
                        @Html.DhtmlxGrid(ViewDataTyped.AuditLogsGridSpec, ViewDataTyped.AuditLogsGridName, ViewDataTyped.AuditLogsGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div style="margin-top: 20px">
    <a class="btn btn-sm btn-firma" href="@ViewDataTyped.ProposedProjectsUrl">@BootstrapHtmlHelpers.MakeGlyphIcon("glyphicon-chevron-left") Index</a>
</div>

<script type="text/javascript">
    jQuery(document)
        .ready(function () {
            Toc.init({
                $nav: jQuery('#tableOfContents'),
                $scope: jQuery('#contentForTOC')
            });

            jQuery('body').scrollspy({
                target: '#tableOfContents'
            });

            jQuery('#tableOfContentsAffixed')
                .affix({
                    offset: {
                        top: function () { return (this.top = jQuery("#tableOfContentsAffixed").offset().top); },
                        bottom: function () { return (this.bottom = jQuery('footer').outerHeight(true) + 100); }
                    }
                });
        });
</script>
