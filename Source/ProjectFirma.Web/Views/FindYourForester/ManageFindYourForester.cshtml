@*-----------------------------------------------------------------------
    <copyright file="ManageFindYourForester.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
    Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common
@using ProjectFirma.Web.Views
@using ProjectFirma.Web.Views.Shared
@using LtInfo.Common.DhtmlWrappers
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.FindYourForester
@inherits ProjectFirma.Web.Views.FindYourForester.ManageFindYourForester
@section JavascriptAndStylesContent
{
    @{ DhtmlxGridIncludes.RenderPartialView(Html); }
    @{ MapJavascriptIncludes.RenderPartialView(Html); }
}

<div>
    @{ ViewPageContent.RenderPartialView(Html, ViewDataTyped.ViewPageContentViewData); }
</div>

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">

            <div id="@ViewDataTyped.MapInitJson.MapDivID" style="height: 500px; margin: 5px 0 5px 0">
            </div>
            <p style="font-size: 10px">To zoom, hold down Shift and drag a rectangle.</p>

        </div>
        
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="panel panelFirma">
                <div class="panel-heading panelTitle">
                    <h2>Forester Work Units</h2>
                </div>
                <div class="panel-body">
                    @Html.DhtmlxGrid(ViewDataTyped.GridSpec, ViewDataTyped.GridName, ViewDataTyped.GridDataUrl, "height:500px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    jQuery(document).ready(function()
    {
        var mapInitJson = @Html.Raw(JObject.FromObject(ViewDataTyped.MapInitJson).ToString(Formatting.None));
        var sitkaMap = new ProjectFirmaMaps.Map(mapInitJson, null, true);

        var dataUrlTemplate = new Sitka.UrlTemplate(@Html.Raw(ViewDataTyped.GridDataUrlTemplate.ToJS()));
        var pageUrlTemplate = new Sitka.UrlTemplate(@Html.Raw(ViewDataTyped.PageUrlTemplate.ToJS()));
        var rootUrl = "https://localhost-wadnrforesthealth-mapserver.projectfirma.com/geoserver/WADNRForestHealth/wms"; //'http://geoserver.capecodgis.com/geoserver/capecodgis/ows';

        var myGrid = Sitka.@ViewDataTyped.GridName;
        var findYourForesterRoleID = @ViewDataTyped.DefaultForesterRoleID;
        var selectedPolygon = null;

        sitkaMap.map.on("overlayadd", function (e) {
            if (selectedPolygon) {
                selectedPolygon.removeFrom(sitkaMap.map);
            }

            var layer = Object.values(e.layer._layers)[0];
            findYourForesterRoleID = layer.ContextObjectId;

            window.history.pushState({}, '', pageUrlTemplate.ParameterReplace(findYourForesterRoleID));

            var dataUrl = dataUrlTemplate.ParameterReplace(findYourForesterRoleID);
            myGrid.grid.clearAndLoad(dataUrl, function(){}, 'json');

        });

        sitkaMap.map.on("click", function (e) {

            highlightForester(e);
        });


        var defaultWmsParameters = {
            service: 'WMS',
            version: '1.1.1',
            request: 'GetFeatureInfo',
            maxFeatures: 100,
            info_format: 'application/json',
            format_options: 'callback:getJson',
            LAYERS: 'WADNRForestHealth:FindYourForester',
            QUERY_LAYERS: 'WADNRForestHealth:FindYourForester'

        };

        var selectedStyle = {
            weight: 2,
            color: '#525252',
            fill: false,
        };

        var selectedPolygon = null;

        function highlightForester(e) {
            
            var ajaxCalls = sitkaMap.popupForWMSAndVectorLayers(sitkaMap.getWmsLayers(true), sitkaMap.getVectorLayers(true), e.latlng);
            sitkaMap.carryOutPromises(ajaxCalls).then(results => {
                results.forEach(result => {
                    var foresterWorkUnitID = result.properties.PrimaryKey;
                    var numberOfRows = myGrid.grid.getRowsNum();
                    for (var i = 0; i < numberOfRows; i++) {
                        var id = myGrid.grid.getRowId(i);
                        var columnIndex = myGrid.getColumnIndexByName('@ManageFindYourForesterGridSpec.ForesterWorkUnitIDColumnName');
                        var cell = myGrid.grid.cellById(id, columnIndex);
                        var cellValue = cell.getValue();
                        if (foresterWorkUnitID == cellValue) {
                            var row = myGrid.grid.selectRowById(id);
                        }
                    }
                });

            });

            // Check for previous selected polygon layer and possibly remove it
            if (selectedPolygon) {
                selectedPolygon.removeFrom(sitkaMap.map);
            }
            //console.log("event inside highlightForester");
            //console.log(e);
            var customWmsParams = {
                bbox: sitkaMap.map.getBounds().toBBoxString(),
                cql_filter: 'ForesterRoleID=' + findYourForesterRoleID,
                width: e.target._size.x,
                height: e.target._size.y,
                x: Math.trunc(e.containerPoint.x),
                y: Math.trunc(e.containerPoint.y)
            };

            var parametersWMS = L.Util.extend(defaultWmsParameters, customWmsParams);

            jQuery.ajax({
                url : rootUrl + L.Util.getParamString(parametersWMS),
                dataType : 'json'
            }).done(function(data) {

                console.log(data);
                // Create the newly selected polygon layer using WFS
                if (data.features.length > 0) {

                    selectedPolygon = L.geoJSON(data);
                    selectedPolygon.addTo(sitkaMap.map);

                }

            }).fail(function (data) {
                console.log(data);
            });

        }

    });
</script>
