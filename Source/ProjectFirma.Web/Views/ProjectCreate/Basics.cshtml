@*-----------------------------------------------------------------------
<copyright file="Basics.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using LtInfo.Common.HtmlHelperExtensions
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@inherits ProjectFirma.Web.Views.ProjectCreate.Basics

@section JavascriptAndStylesContent
{
    <style>
        .row {
            margin-top: 5px;
        }
    </style>
    <script type="text/javascript">
        // <![CDATA[

        jQuery(document).ready(function ()
        {
            
            HookupCheckIfFormIsDirty(undefined, ".submitProject");

            // Bypass the "Could not parse a blank value" error
            jQuery("#ProjectTypeID option.bs-title-option").val(-1);
        });
        // ]]>
    </script>
}
<p>Add your @FieldDefinition.Project.GetFieldDefinitionLabel()’s basic information here.</p>
<hr />

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <div class="form-group">
           

            <div class="col-xs-12 col-sm-4 control-label">
                @Html.LabelWithSugarFor(m => m.ProjectTypeID, 600, MultiTenantHelpers.GetProjectTypeDisplayNameForProject())
            </div>
            <div class="col-xs-12 col-sm-8">
                @Html.SearchableDropDownListFor(x => x.ProjectTypeID, ViewDataTyped.ProjectTypes, string.Format("Select a {0}", MultiTenantHelpers.GetProjectTypeDisplayNameForProject()))
                @Html.ValidationMessageFor(m => m.ProjectTypeID)
            </div>
            
            @if (ViewDataTyped.ProjectTypeHasBeenSet)
            {
                <div class="col-xs-12 col-sm-offset-4 col-sm-8"> <em>Warning: Changing the Project Type may delete previously entered data that doesn't apply to a different Project Type.</em></div>
            }
        </div>
        <div class="form-group">
            <div class="col-xs-12 col-sm-4 control-label">
                @Html.LabelWithSugarFor(m => m.ProjectName)
            </div>
            <div class="col-xs-12 col-sm-8">
                @Html.TextBoxFor(m => m.ProjectName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ProjectName)
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-12 col-sm-4 control-label">
                @Html.LabelWithSugarFor(m => m.ProjectDescription)
            </div>
            <div class="col-xs-12 col-sm-8">
                @Html.TextAreaWithMaxLengthFor(m => m.ProjectDescription, new TextAreaForExtensions.TextAreaDimensions(null, 8), null, new List<string> { "form-control" })
                @Html.ValidationMessageFor(m => m.ProjectDescription)
            </div>
        </div>
        @if (ViewDataTyped.ShowProjectStageDropDown)
        {
            <div class="form-group">
                <div class="col-xs-12 col-sm-4 control-label">
                    @Html.LabelWithSugarFor(m => m.ProjectStageID, true)
                </div>
                <div class="col-xs-12 col-sm-8">
                    @if (ViewDataTyped.IsEditable)
                    {
                        @Html.DropDownListFor(m => m.ProjectStageID, ViewDataTyped.ProjectStages, new {@class = "form-control", style = "width: auto;"})
                        @Html.ValidationMessageFor(m => m.ProjectStageID)
                    }
                    else
                    {
                        @ViewDataTyped.ProjectStage.ProjectStageDisplayName
                    }
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(m => m.ProjectStageID)
        }
        <div class="form-group">
            <div class="col-xs-12 col-sm-4 control-label">
                @Html.LabelWithSugarFor(m => m.PlannedDate)
            </div>
            <div class="col-xs-12 col-sm-8">
                @Html.EditorFor(m => m.PlannedDate, new { @class = "form-control", style = "width: auto;" })
                @Html.ValidationMessageFor(m => m.PlannedDate)
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-12 col-sm-4 control-label">
                @Html.LabelWithSugarFor(m => m.ExpirationDate)
            </div>
            <div class="col-xs-12 col-sm-8">
                @Html.EditorFor(m => m.ExpirationDate, new Dictionary<string, object>() { { "style", "width: auto" }, { "class", "form-control" } })
                @Html.ValidationMessageFor(m => m.ExpirationDate)
            </div>
        </div>
        <div class="form-group">
            <div class="col-xs-12 col-sm-4 control-label">
                @Html.LabelWithSugarFor(m => m.CompletionDate)
            </div>
            <div class="col-xs-12 col-sm-8">
                @Html.EditorFor(m => m.CompletionDate, new { @class = "form-control", style = "width: auto;" })
                @Html.ValidationMessageFor(m => m.CompletionDate)
            </div>
        </div>
        <div class="form-group">
            <div id="focusAreaDiv" class="col-xs-12 col-sm-4 control-label">
                @Html.LabelWithSugarFor(m => m.FocusAreaID)
            </div>
            <div class="col-xs-12 col-sm-8">
                @Html.DropDownListFor(m => m.FocusAreaID, ViewDataTyped.FocusAreas, new {@class = "form-control", style = "width: auto;"})
                @Html.ValidationMessageFor(m => m.FocusAreaID)
            </div>
        </div>
    </div>

    @Html.HiddenFor(m => m.ProjectID)
    @Html.HiddenFor(m => m.ImportExternalProjectStagingID)

    <hr />
    <div class="pull-right">
        <button type="submit" class="btn btn-xs btn-firma" value="false" name="@Html.NameFor(x => x.AutoAdvance)">Save</button>
        <button type="submit" class="btn btn-xs btn-firma" value="true" name="@Html.NameFor(x => x.AutoAdvance)">Save &amp; Continue<span class='glyphicon glyphicon-chevron-right'></span></button>
    </div>
}


<script type="text/javascript">
    jQuery(document)
        .ready(function() {
            // Get the invoice approval status, return true if the comment field is mandatory (when denial happens, comment is mandatory)
            var isInvoiceCommentFieldMandatory = function () {
                var selectedInvoiceApprovalStatus = jQuery("#ProjectTypeID option:selected").text();
                // Only Invoices with an InvoiceApprovalStatus of 'Denied' have mandatory comment field
                if (selectedInvoiceApprovalStatus == 'Fuels Reduction') {
                    return true;
                } else {
                    return false;
                }
            }

            var initialLoadCommentIsMandatory = isInvoiceCommentFieldMandatory();
            if (initialLoadCommentIsMandatory) {
                jQuery("#focusAreaDiv")
                    .html('@Html.LabelWithSugarFor(m => m.FocusAreaID, true)');
            } else {
                jQuery("#focusAreaDiv")
                    .html('@Html.LabelWithSugarFor(m => m.FocusAreaID, false)');
            }

            jQuery("#ProjectTypeID").on('change', function () {
                var commentIsMandatory = isInvoiceCommentFieldMandatory();
                if (commentIsMandatory) {
                    jQuery("#focusAreaDiv")
                        .html('@Html.LabelWithSugarFor(m => m.FocusAreaID, true)');
                } else {
                    jQuery("#focusAreaDiv")
                        .html('@Html.LabelWithSugarFor(m => m.FocusAreaID, false)');
                }
            });
        });
</script>
