@*-----------------------------------------------------------------------
    <copyright file="SiteLayout.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
    Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.ProjectCreate
@using LtInfo.Common.BootstrapWrappers
@using LtInfo.Common.ModalDialog
@inherits SiteLayout

@{
    SetLayout("~/Views/Shared/SiteLayout.cshtml", ViewDataTyped);
}

@section JavascriptAndStylesContent
{

    <style>
        #main-container
        {
            @if (ViewDataTyped.CurrentSection != ProjectCreateSection.Instructions)
            {
                <text>border-top-left-radius: 6px;</text>
            }
        }
    </style>

    @RenderSection("JavascriptAndStylesContent", false)
}

@if (!Html.ViewData.ModelState.IsValid)
{
    @Html.ValidationSummary("The page could not be saved because there were errors that need to be corrected:", new {@class = "validation-summary-errors"})
}

@if (!ViewDataTyped.ProjectStateIsValidInWizard && ViewDataTyped.Project != null)
{
    <div class="alert alert-info" style="margin-bottom: 10px">
        @if (ViewDataTyped.Project.ProjectApprovalStatus == ProjectApprovalStatus.Approved)
        {
            <span>This @FieldDefinition.Project.GetFieldDefinitionLabel() has been approved and can no longer be edited through this wizard.</span>
        }
        @if (ViewDataTyped.Project.ProjectApprovalStatus == ProjectApprovalStatus.Rejected)
        {
            <span>This @FieldDefinition.Project.GetFieldDefinitionLabel() has been rejected and can no longer be edited through this wizard.</span>
        }
    </div>
}

<div id="projectWizardContent" class="row">
    <div id="tab-container" class="col-sm-4 col-md-3">
        <ul>
            @foreach (var projectCreateSection in ViewDataTyped.ProjectCreateSections)
            {
                <li class="@(ViewDataTyped.CurrentSection == projectCreateSection ? "selected" : "selectable")">

                    @if (projectCreateSection == ProjectCreateSection.Instructions)
                    {
                        <a href="@(ViewDataTyped.ProposalInstructionsUrl ?? projectCreateSection.GetSectionUrl(ViewDataTyped.Project))">
                            @projectCreateSection.ProjectCreateSectionDisplayName
                        </a>
                    }
                    else if ((projectCreateSection.GetSectionUrl(ViewDataTyped.Project) != null && ViewDataTyped.ProjectStateIsValidInWizard))
                    {
                        <a href="@(projectCreateSection.GetSectionUrl(ViewDataTyped.Project))"
                           class="@(projectCreateSection.GetSectionUrl(ViewDataTyped.Project) == null ? "disabled" : "")">
                            @if (projectCreateSection.HasCompletionStatus)
                            {
                                <span class="pull-right statusIcon">
                                    @Html.Raw(projectCreateSection.IsComplete(ViewDataTyped.Project) ? ProjectWizardComponents.RequiredInfoOkSubmitReadyIcon : ProjectWizardComponents.RequiredInfoNotProvidedIcon)
                                </span>
                            }
                            @projectCreateSection.ProjectCreateSectionDisplayName
                        </a>
                    }
                    else if (!ViewDataTyped.ProjectStateIsValidInWizard)
                    {
                        @ProjectWizardComponents.MakeDisabledSectionLinkForApprovedAndRejectedProjects(projectCreateSection.ProjectCreateSectionDisplayName)
                    }
                    else
                    {
                        @ProjectWizardComponents.MakeDisabledSectionLink(projectCreateSection.ProjectCreateSectionDisplayName)
                    }
                </li>
            }
        </ul>
    </div>

    <div id="main-container" class="col-sm-8 col-md-9">
        @RenderBody()
        @if (ViewDataTyped.CurrentSection != ProjectCreateSection.Instructions)
        {
            <span><sup>@Html.Raw(BootstrapHtmlHelpers.RequiredIcon)</sup> Required Field</span>
        }
    </div>
</div>

@if (ViewDataTyped.Project != null)
{
    <div class="col-sm-8 col-sm-offset-4 col-md-9 col-md-offset-3">
        <div class="row">
            <div class="col-xs-6" style="padding-left: 0;">
                <div class="pull-left">
                    <p>
                        Created by @ViewDataTyped.Project.ProposingPerson.FullNameFirstLastAndOrgShortName on @ViewDataTyped.Project.ProposingDate
                    </p>
                </div>
            </div>
            <div class="col-xs-6">
                <div class="pull-right">
                    <span>New Project Status: <span style="font-weight: bold">@ViewDataTyped.Project.ProjectApprovalStatus.ProjectApprovalStatusDisplayName</span></span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-6" style="padding-left: 0;">
                <div class="pull-left">
                    <a class="btn btn-xs btn-firma" href="@ViewDataTyped.ProposalDetailUrl"><span class="glyphicon glyphicon-chevron-left"></span>Proposal Details</a>
                    @if (ViewDataTyped.CurrentPersonIsSubmitter && ViewDataTyped.Project != null && ViewDataTyped.Project.ProjectApprovalStatus == ProjectApprovalStatus.PendingApproval)
                    {
                        @ModalDialogFormHelper.ModalDialogFormLink("Withdraw this Proposal", ViewDataTyped.WithdrawUrl, "Withdraw Proposal", 500, "Withdraw", "Cancel", new List<string> { "btn btn-xs btn-firma" }, null, null)
                    }
                </div>
            </div>
            <div class="col-xs-6">
                <div class="pull-right">
                    @if (ViewDataTyped.Project.ProjectApprovalStatus.ToEnum == ProjectApprovalStatusEnum.Draft || ViewDataTyped.Project.ProjectApprovalStatus.ToEnum == ProjectApprovalStatusEnum.Returned)
                    {
                        if (ViewDataTyped.CanAdvanceStage)
                        {
                            <span>
                                @ModalDialogFormHelper.ModalDialogFormLink("Submit", ViewDataTyped.SubmitUrl, "Submit Proposal for review", 500, "Continue", "Cancel", new List<string> { "submitProject btn btn-xs btn-firma" }, null, null)
                            </span>
                        }
                        else
                        {
                            <button class="btn btn-xs btn-firma" disabled>Submit</button>
                        }
                    }
                    else
                    {
                        if (ViewDataTyped.Project.ProjectApprovalStatus.ToEnum == ProjectApprovalStatusEnum.PendingApproval)
                        {
                            if (ViewDataTyped.CurrentPersonIsApprover)
                            {
                                if (ViewDataTyped.CanAdvanceStage)
                                {
                                    <span>
                                        @ModalDialogFormHelper.ModalDialogFormLink(string.Format("<button class='btn btn-xs btn-firma'>{0} Approve</button>", BootstrapHtmlHelpers.MakeGlyphIcon("glyphicon-open")), ViewDataTyped.ApproveUrl, "Approve Proposal", 400, "Approve", "Cancel", null, null, null)
                                    </span>
                                }
                                else
                                {
                                    <button class="btn btn-xs btn-firma" disabled>Approve</button>
                                }
                                <span>@ModalDialogFormHelper.ModalDialogFormLink("Return", ViewDataTyped.ReturnUrl, "Return Proposal to Submitter", 500, "Return", "Cancel", new List<string> { "submitProject btn btn-xs btn-firma" }, null, null)</span>
                                <span>@ModalDialogFormHelper.ModalDialogFormLink("Reject", ViewDataTyped.RejectUrl, "Reject Proposal", 500, "Reject", "Cancel", new List<string> { "submitProject btn btn-xs btn-firma" }, null, null)</span>
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
}