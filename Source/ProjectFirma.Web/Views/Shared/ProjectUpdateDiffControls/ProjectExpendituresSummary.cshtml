@*-----------------------------------------------------------------------
<copyright file="ProjectExpendituresSummary.cshtml" company="Tahoe Regional Planning Agency and Environmental Science Associates">
Copyright (c) Tahoe Regional Planning Agency and Environmental Science Associates. All rights reserved.
<author>Environmental Science Associates</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using ProjectFirma.Web.Views.Shared
@using ProjectFirma.Web.Models
@using LtInfo.Common
@using LtInfo.Common.HtmlHelperExtensions
@inherits ProjectFirma.Web.Views.Shared.ProjectUpdateDiffControls.ProjectExpendituresSummary

@if (ViewDataTyped.GrantAllocationExpenditures.Any())
{
    <table class="summaryLayout">
        <colgroup>
            <col>
            @foreach (var calendarYear in ViewDataTyped.CalendarYears.OrderBy(x => x.CalendarYear))
            {
                switch (calendarYear.AddedDeletedOrRealElement)
                {
                    case AddedDeletedOrRealElement.AddedElement:
                        <col class="@calendarYear.DisplayCssClass" style="background-color: @HtmlDiffContainer.BackgroundColorForAddedElement">
                        break;
                    case AddedDeletedOrRealElement.DeletedElement:
                    <col class="@calendarYear.DisplayCssClass" style="background-color: @HtmlDiffContainer.BackgroundColorForDeletedElement">
                        break;
                    case AddedDeletedOrRealElement.RealElement:
                    <col>
                        break;
                    default:
                        throw new ArgumentOutOfRangeException();
                }
            }
            <col>
        </colgroup>
        <tr>
            <th>@Html.LabelWithSugarFor(FieldDefinition.GrantAllocation)</th>
            @foreach (var calendarYear in ViewDataTyped.CalendarYears.OrderBy(x => x.CalendarYear))
            {
                <th class="@calendarYear.DisplayCssClass" style="text-align: right">@calendarYear.CalendarYearDisplay</th>
            }
            <th style="text-align: right">Total</th>
        </tr>
        @foreach (var grantAllocationExpenditure in ViewDataTyped.GrantAllocationExpenditures.OrderBy(x => x.GrantAllocationName))
        {
            <tr class="@grantAllocationExpenditure.DisplayCssClass">
                <td>@grantAllocationExpenditure.GrantAllocationNameAsUrl</td>
                @foreach (var calendarYear in ViewDataTyped.CalendarYears.OrderBy(x => x.CalendarYear))
                {
                    <td class="@calendarYear.DisplayCssClass" style="text-align: right">
                        <span>@(grantAllocationExpenditure.CalendarYearExpenditure.ContainsKey(calendarYear.CalendarYear) ? grantAllocationExpenditure.CalendarYearExpenditure[calendarYear.CalendarYear].ToStringCurrency() : "0")</span>
                    </td>
                }
                <th style="text-align: right">
                    <span>@grantAllocationExpenditure.CalendarYearExpenditure.Sum(x => x.Value).ToStringCurrency()</span>
                </th>
            </tr>
        }
        <tr>
            <th>Total:</th>
            @foreach (var calendarYear in ViewDataTyped.CalendarYears.OrderBy(x => x.CalendarYear))
            {
                <th class="@calendarYear.DisplayCssClass" style="text-align: right">
                    <span>@(ViewDataTyped.GrantAllocationExpenditures.Any(x => x.CalendarYearExpenditure.ContainsKey(calendarYear.CalendarYear)) ? ViewDataTyped.GrantAllocationExpenditures.SelectMany(x => x.CalendarYearExpenditure).Where(x => x.Key == calendarYear.CalendarYear).Sum(x => x.Value).ToStringCurrency() : "0")</span>
                </th>
            }
            <th style="text-align: right">
                <span>@ViewDataTyped.GrantAllocationExpenditures.SelectMany(x => x.CalendarYearExpenditure).Sum(x => x.Value).ToStringCurrency()</span>
            </th>
        </tr>



        </table>
}
@if (!ViewDataTyped.GrantAllocationExpenditures.Any())
{
    <p class="systemText">No Expenditures have been reported for this project.</p>
}
