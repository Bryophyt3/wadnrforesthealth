@*-----------------------------------------------------------------------
<copyright file="EditProject.cshtml" company="Tahoe Regional Planning Agency">
Copyright (c) Tahoe Regional Planning Agency. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using ProjectFirma.Web.Views.Shared.ProjectControls
@using LtInfo.Common
@using LtInfo.Common.HtmlHelperExtensions
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Models
@inherits EditProject

<style>
    .row {
        margin-top: 5px;
    }

    .dropdown-menu {
        background-color: #ffffff !important;
    }
</style>




@Html.Raw(ViewDataTyped.EditProjectType.IntroductoryText)

@using (Html.BeginForm())
{
    <div class="container-fluid container-fluid-dialog-form">
        <div class="row">
            <div class="col-md-3">@Html.LabelWithSugarFor(m => m.TaxonomyTierOneID, 600, MultiTenantHelpers.GetTaxonomyTierOneDisplayNameForProject())</div>
            <div class="col-md-9">
                @Html.SearchableDropDownListFor(x => x.TaxonomyTierOneID, ViewDataTyped.TaxonomyTierOnes, string.Format("Select a {0}", MultiTenantHelpers.GetTaxonomyTierOneDisplayNameForProject()))
                @Html.ValidationMessageFor(m => m.TaxonomyTierOneID)
            </div>
        </div>        
        <div class="row">
            <div class="col-md-3">@Html.LabelWithSugarFor(m => m.ProjectName)</div>
            <div class="col-md-9">
                @Html.TextBoxFor(m => m.ProjectName, new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ProjectName)
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">@Html.LabelWithSugarFor(m => m.ProjectDescription)</div>
            <div class="col-md-9">
                @Html.TextAreaWithMaxLengthFor(m => m.ProjectDescription, new TextAreaForExtensions.TextAreaDimensions(null, 4), null, new List<string> { "form-control" })
                @Html.ValidationMessageFor(m => m.ProjectDescription)
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">@Html.LabelWithSugarFor(m => m.PrimaryContactPersonID, false)</div>
            <div class="col-md-9">
                @Html.SearchableDropDownListFor(m => m.PrimaryContactPersonID, ViewDataTyped.PrimaryContactPeople)
                <p id="primaryContactPersonHelpBlock" class="help-block">
                    Currently, this makes @(ViewDataTyped.DefaultPrimaryContactPerson.FullNameFirstLastAndOrgShortName) the @(FieldDefinition.PrimaryContact.GetFieldDefinitionLabel()).
                </p>
                @Html.ValidationMessageFor(m => m.PrimaryContactPersonID)
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">@Html.LabelWithSugarFor(m => m.ProjectStageID)</div>
            <div class="col-md-9">
                @Html.DropDownListFor(m => m.ProjectStageID, ViewDataTyped.ProjectStages.AsEnumerable(), new { @class = "form-control", style = "width: auto;" })
                @Html.ValidationMessageFor(m => m.ProjectStageID)
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">@Html.LabelWithSugarFor(m => m.FundingTypeID)</div>
            <div class="col-md-9">
                @Html.DropDownListFor(m => m.FundingTypeID, ViewDataTyped.FundingTypes, new { onchange = "displaySelectedFundingTypeFields()", @class = "form-control", style = "width: auto;" })
                @Html.ValidationMessageFor(m => m.FundingTypeID)
            </div>
        </div>
        <div class="row">
            <div class="col-md-3 cap-label">@Html.LabelWithSugarFor(m => m.EstimatedTotalCost)</div>
            <div class="col-md-9">
                @Html.TextBoxFor(m => m.EstimatedTotalCost, new { @class = "form-control", style = "width: auto;" })
                @Html.ValidationMessageFor(m => m.EstimatedTotalCost)
            </div>
        </div>
        <div class="row">
            <div class="col-md-3 cap-label">@Html.LabelWithSugarFor(m => m.SecuredFunding)</div>
            <div class="col-md-9">
                @Html.TextBoxFor(m => m.SecuredFunding, new { @class = "form-control", style = "width: auto;" })
                @if (!string.IsNullOrEmpty(ViewDataTyped.TotalExpenditures.ToStringCurrency()))
                {
                    <span style="font-size: 12px">Total Expenditures to-date: @ViewDataTyped.TotalExpenditures.ToStringCurrency()</span>
                }
                @Html.ValidationMessageFor(m => m.SecuredFunding)
            </div>
        </div>
        <div class="row">
            <div class="col-md-3 op-label">@Html.LabelWithSugarFor(m => m.EstimatedAnnualOperatingCost)</div>
            <div class="col-md-9">
                @Html.TextBoxFor(m => m.EstimatedAnnualOperatingCost, new { @class = "form-control", style = "width: auto;" })
                @Html.ValidationMessageFor(m => m.EstimatedAnnualOperatingCost)
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">@Html.LabelWithSugarFor(m => m.PlanningDesignStartYear)</div>
            <div class="col-md-9">
                @Html.DropDownListFor(m => m.PlanningDesignStartYear, ViewDataTyped.StartYearRange, new { @class = "form-control", style = "width: auto;" })
                @Html.ValidationMessageFor(m => m.PlanningDesignStartYear)
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">@Html.LabelWithSugarFor(m => m.ImplementationStartYear)</div>
            <div class="col-md-9">
                @Html.DropDownListFor(m => m.ImplementationStartYear, ViewDataTyped.StartYearRange, new { @class = "form-control", style = "width: auto;" })
                @Html.ValidationMessageFor(m => m.ImplementationStartYear)
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">@Html.LabelWithSugarFor(m => m.CompletionYear)</div>
            <div class="col-md-9">
                @Html.DropDownListFor(m => m.CompletionYear, ViewDataTyped.CompletionYearRange, new { @class = "form-control", style = "width: auto;" })
                @Html.ValidationMessageFor(m => m.CompletionYear)
            </div>
        </div>
    </div>
    @Html.HiddenFor(m => m.ProjectID)
    @Html.HiddenFor(m => m.HasExistingProjectUpdate)
    @Html.HiddenFor(m => m.OldProjectStageID)
}

<script type="text/javascript">
    // <![CDATA[
    function displaySelectedFundingTypeFields() {
        var fundingTypeDropdown = jQuery("#@Html.IdFor(x => x.FundingTypeID)");
        if (fundingTypeDropdown.val() == 1) {
            jQuery("#@Html.IdFor(x => x.EstimatedTotalCost)").prop('disabled', false);
            jQuery("#@Html.IdFor(x => x.SecuredFunding)").prop('disabled', false);
            jQuery("#@Html.IdFor(x => x.EstimatedAnnualOperatingCost)").prop('disabled', true);
            jQuery(".op-label").css("color", "#666");
            jQuery(".cap-label").css("color", "");
        }
        else if (fundingTypeDropdown.val() == 2) {
            jQuery("#@Html.IdFor(x => x.EstimatedTotalCost)").prop('disabled', true);
            jQuery("#@Html.IdFor(x => x.SecuredFunding)").prop('disabled', true);
            jQuery("#@Html.IdFor(x => x.EstimatedAnnualOperatingCost)").prop('disabled', false);
            jQuery(".op-label").css("color", "");
            jQuery(".cap-label").css("color", "#666");
        }
    }

    jQuery(document).ready(function() {
        displaySelectedFundingTypeFields();

        var $primaryContactPersonField = jQuery("[name=\"@Html.NameFor(m => m.PrimaryContactPersonID)\"]");
        $primaryContactPersonField.change(function(event) {
            if (jQuery(event.target).val()) {
                jQuery("#primaryContactPersonHelpBlock").hide();
            } else {
                jQuery("#primaryContactPersonHelpBlock").show();
            }
        });
        $primaryContactPersonField.change();
    });
    // ]]>
</script>
