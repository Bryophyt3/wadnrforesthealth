@using Newtonsoft.Json.Linq
@inherits ProjectFirma.Web.Views.Shared.ProjectControls.TransportationAssessmentTree
@if (ViewDataTyped.TransportationGoalsAsFancyTreeNodes != null && ViewDataTyped.TransportationGoalsAsFancyTreeNodes.Any())
{
    <script type="text/javascript" src="/Content/fancytree/jquery.fancytree-all.min.js"></script>
    <link rel="stylesheet" href="/Content/fancytree/skin-bootstrap/ui.fancytree.min.css" type="text/css"/>

    <style>
        .fancytree-wrapper
        {
            background-color: transparent
        }

         .fancytree-link
         {
             text-decoration: underline;
             cursor: pointer;
        }

        .fancytree-ext-filter span.fancytree-childcounter
        {
            height: auto;
            top: 0;
            font-size: 12px;
            margin-right: 3px;
            border-radius: 10px;
            line-height: initial;
        }

        .fancytree-match td
        {
            background-color: rgba(243, 243, 21, 0.4) !important;
        }

        table.transportationAssessmentTree > tbody > tr.fancytree-active > td 
        {
            background-color: transparent !important;
            color: initial !important;
        }
        
        table.transportationAssessmentTree > tbody > tr.fancytree-active > td span.fancytree-title
        {
            background-color: transparent !important;
            color: initial !important;
            position: relative;
        }

        table.transportationAssessmentTree
        {
            border: 2px solid;
            border-radius: 2px;
        }

        table.transportationAssessmentTree thead
        {
            display: none;
        }

        table.transportationAssessmentTree > tbody > tr > td
        {
            padding: 1px 5px 1px 5px;
        }

        table.fancytree-ext-table
        {
            border-collapse: separate;
        }

        table.transportationAssessmentTree tbody tr:first-child td
        {
            border-top: 0 none;
        }

        table.transportationAssessmentTree tbody tr td
        {
            border-top: 1px dotted;
        }

        table.transportationAssessmentTree tbody tr td:last-child
        {
            text-align: center;
        }
    </style>

    <div class="fancytreeWrapper">
        <div class="panel-heading">
            <button id="btnExpandLevel" class="btn btn-sm btn-primary">Expand Level</button>
            <button id="btnCollapseLevel" class="btn btn-sm btn-primary">Collapse Level</button>
            <input name="search" placeholder="Search..." autocomplete="on">
            <button id="btnResetSearch" class="btn btn-xs btn-primary">&times;</button>
            <span id="matches"></span>
        </div>
        <div style="padding: 0 15px;">
            <div class="pull-left" style="font-weight: bold">
                Goal <span class='glyphicon glyphicon-chevron-right'></span>
                Metric <span class='glyphicon glyphicon-chevron-right'></span>
                Question
            </div>
            <div class="pull-right" style="font-weight: bold; margin-right: 50px">
                Answer
            </div>
            <div style="clear: both">
                @foreach (var transportationGoal in ViewDataTyped.TransportationGoalsAsFancyTreeNodes)
                {
                    <table id="@(string.Format("transportationAssessmentTree{0}", transportationGoal.Key))" class="table table-hover table-condensed transportationAssessmentTree" style="margin-bottom: 10px; border-color: #ababab">
                        <colgroup>
                            <col />
                            <col style="width: 150px;" />
                        </colgroup>
                        <thead>
                            <tr>
                                <th></th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                }
            </div>
        </div>
    </div>

    <script>
        jQuery(document)
            .ready(function()
            {
                var glyph_opts = {
                    map: {
                        //doc: "glyphicon glyphicon-file",
                        //docOpen: "glyphicon glyphicon-file",
                        checkbox: "glyphicon glyphicon-unchecked",
                        checkboxSelected: "glyphicon glyphicon-check",
                        checkboxUnknown: "glyphicon glyphicon-share",
                        dragHelper: "glyphicon glyphicon-play",
                        dropMarker: "glyphicon glyphicon-arrow-right",
                        error: "glyphicon glyphicon-warning-sign",
                        expanderClosed: "glyphicon glyphicon-plus",
                        expanderLazy: "glyphicon glyphicon-plus-sign", // glyphicon-expand
                        expanderOpen: "glyphicon glyphicon-minus", // glyphicon-collapse-down
                        folder: "glyphicon glyphicon-folder-close",
                        folderOpen: "glyphicon glyphicon-folder-open",
                        loading: "glyphicon glyphicon-refresh"
                    }
                };
                // Initialize Fancytree for each focus area
                var treeSources = @Html.Raw(JArray.FromObject(ViewDataTyped.TransportationGoalsAsFancyTreeNodes));
                for (var i = 0; i < treeSources.length; ++i)
                {
                    var currentTreeSource = treeSources[i];
                    var currentTreeDiv = jQuery("#transportationAssessmentTree" + currentTreeSource.key);
                    currentTreeDiv.fancytree({
                        extensions: ["glyph", "table", "filter"],
                        quicksearch: true,
                        glyph: glyph_opts,
                        table: {
                            nodeColumnIdx: 0,
                            indentation: 30
                        },
                        filter: {
                            autoExpand: false,
                            counter: true, // Show a badge with number of matching child nodes near parent icon
                            fuzzy: false, // Match single characters in order, e.g. 'fb' will match 'FooBar'
                            hideExpandedCounter: true, // Hide counter badge, when parent is expanded
                            highlight: true, // Highlight matches by wrapping inside <mark> tags
                            mode: "dimm" // "dimm": Grayout unmatched nodes, "hide": remove unmatched nodes
                        },
                        renderColumns: function(event, data) { renderFancyTreeColumns(event, data) },
                        source: [currentTreeSource]
                    });
                }

                var expandLevelButton = jQuery('#btnExpandLevel');
                var collapseLevelButton = jQuery('#btnCollapseLevel');
                var searchButton = jQuery("input[name=search]");
                var resetButton = jQuery("button#btnResetSearch");

                expandLevelButton.click(function()
                {
                    var maximumExpansion = 1;
                    for (var i = 0; i < treeSources.length; ++i)
                    {
                        var currentTreeSource = treeSources[i];
                        var tree = jQuery("#transportationAssessmentTree" + currentTreeSource.key).fancytree("getTree");
                        tree.visit(function(node)
                        {
                            if (node.isVisible())
                            {
                                maximumExpansion = Math.max(maximumExpansion, node.getLevel());
                            }
                        });
                    }
                    for (var i = 0; i < treeSources.length; ++i)
                    {
                        var currentTreeSource = treeSources[i];
                        var tree = jQuery("#transportationAssessmentTree" + currentTreeSource.key).fancytree("getTree");
                        tree.visit(function(node)
                        {
                            if (node.getLevel() <= maximumExpansion)
                            {
                                node.setExpanded(true);
                            }
                        });
                    }
                });

                collapseLevelButton.click(function()
                {
                    var maximumExpansion = 1;

                    for (var i = 0; i < treeSources.length; ++i)
                    {
                        var currentTreeSource = treeSources[i];
                        var tree = jQuery("#transportationAssessmentTree" + currentTreeSource.key).fancytree("getTree");
                        tree.visit(function(node)
                        {
                            if (node.isExpanded())
                            {
                                maximumExpansion = Math.max(maximumExpansion, node.getLevel());
                            }
                        });
                    }

                    for (var i = 0; i < treeSources.length; ++i)
                    {
                        var currentTreeSource = treeSources[i];
                        var tree = jQuery("#transportationAssessmentTree" + currentTreeSource.key).fancytree("getTree");
                        tree.visit(function(node)
                        {
                            if (node.getLevel() == maximumExpansion)
                            {
                                node.setExpanded(false);
                            }
                        });
                    }
                });

                searchButton.keyup(function(e)
                    {
                        var match = jQuery(this).val();

                        if (e && e.which === $.ui.keyCode.ESCAPE || jQuery.trim(match) === "")
                        {
                            resetButton.click();
                            return;
                        }
                        var n = 0;
                        for (var i = 0; i < treeSources.length; ++i)
                        {
                            var currentTreeSource = treeSources[i];
                            var tree = jQuery("#transportationAssessmentTree" + currentTreeSource.key)
                                .fancytree("getTree");
                            n += tree.filterNodes(function(node) { return new RegExp(match, "i").test(node.title); });
                        }
                        resetButton.attr("disabled", false);
                        jQuery("span#matches").text("(" + n + " matches)");
                    });

                resetButton.click(function(e)
                    {
                        searchButton.val("");
                        jQuery("span#matches").text("");
                        for (var i = 0; i < treeSources.length; ++i)
                        {
                            var currentTreeSource = treeSources[i];
                            var tree = jQuery("#transportationAssessmentTree" + currentTreeSource.key)
                                .fancytree("getTree");
                            tree.clearFilter();
                        }
                    })
                    .attr("disabled", true);

                searchButton.keyup();
            });

        function renderFancyTreeColumns(event, data)
        {
            var node = data.node;
            var tr = jQuery(node.tr);
            var $tdList = tr.find(">td");

            var titleColumn = $tdList.eq(0);
            var answersColumn = $tdList.eq(1);
            if (node.data.Answer != null)
            {
                answersColumn.text(node.data.Answer);
            }
            titleColumn.css("border-top-color", "#ababab");
            answersColumn.css("border-top-color", "#ababab");
        }
    </script>
}
else
{
    <p class="systemText">Transporation Assessment not relevant for this project!</p>
}