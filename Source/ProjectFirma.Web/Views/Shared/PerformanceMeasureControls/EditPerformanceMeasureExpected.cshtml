@*-----------------------------------------------------------------------
<copyright file="EditPerformanceMeasureExpected.cshtml" company="Tahoe Regional Planning Agency">
Copyright (c) Tahoe Regional Planning Agency. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using ProjectFirma.Web.Models
@using LtInfo.Common.HtmlHelperExtensions
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@inherits ProjectFirma.Web.Views.Shared.PerformanceMeasureControls.EditPerformanceMeasureExpected


    <style>

        .table > thead > tr > th, .table > tbody > tr > th, .table > tfoot > tr > th, .table > thead > tr > td, .table > tbody > tr > td, .table > tfoot > tr > td {
            border-bottom: 0 !important;
            border-top: 0 !important;
        }
        .table > tbody {
            border-top: 0 !important;
        }
            .table > thead > tr > th, .table > tbody > tr > th, .table > tfoot > tr > th, .table > thead > tr > td, .table > tbody > tr > td, .table > tfoot > tr > td {
                padding-top: 4px;
                padding-bottom: 0;
            }

    </style>


<script type="text/javascript">
    // <![CDATA[
    jQuery(document).ready(function()
    {
        angular.module("ProjectFirmaApp").factory("angularModelAndViewData", function()
        {
            return {
                AngularModel: @Html.Raw(JObject.FromObject(Model)),
                AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped))
            };
        });
        angular.bootstrap(jQuery("#EditPerformanceMeasureExpectedsApp"), ["ProjectFirmaApp"]);
       
        jQuery(".selectpicker").selectpicker("refresh");
    });
    
    // ]]>
</script>

<div class="row">
    <div class="col-xs-12">
        <div class="validationError">
            @Html.ValidationSummary()
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xs-12">
        <div id="EditPerformanceMeasureExpectedsApp" ng-controller="PerformanceMeasureExpectedController">
            <div class="form-group">
                <label class="control-label">@MultiTenantHelpers.GetPerformanceMeasureName() to Add:</label>
                <div class="input-group">
                    <select data-ng-model="PerformanceMeasureToAdd"                            
                            class="selectpicker"
                            data-live-search="true"
                            title="Select a @MultiTenantHelpers.GetPerformanceMeasureName()"
                            data-width="100%">
                        <option ng-repeat="performanceMeasure in filteredPerformanceMeasures()"
                                value="{{performanceMeasure.PerformanceMeasureID}}"
                                ng-bind="performanceMeasure.DisplayName"
                                data-tokens="{{performanceMeasure.DisplayName}}"></option>
                    </select>
                    <span class="input-group-btn">
                        <button class="btn btn-firma" type="button" ng-click="addRow()">
                            <span class="glyphicon glyphicon-plus"></span> Add
                        </button>
                    </span>
                </div>
            </div>   
            <br/>
            <div ng-hide="AngularModel.PerformanceMeasureExpecteds.length > 0">
                <p style="font-style: italic">Use the list above to select your project's anticipated accomplishments. Performance measures will appear here when added.</p>
            </div>
            
            <table class="table" ng-show="AngularModel.PerformanceMeasureExpecteds.length > 0" ng-repeat="performanceMeasureGroup in groupedPerformanceMeasures()">
                <thead>
                <tr>
                    <th colspan="{{numberOfSubcategoryOptions(performanceMeasureGroup) + 3}}">
                        <span class="helpicon glyphicon glyphicon-question-sign" title="Click to get help on {{getPerformanceMeasureName(performanceMeasureGroup)}}"></span>
                        <span ng-bind="getPerformanceMeasureName(performanceMeasureGroup)" style="font-weight: bold"></span>
                    </th>
                </tr>
                <tr>
                    <th></th>
                    <th ng-show="getPerformanceMeasure(performanceMeasureGroup.PerformanceMeasureID).HasRealSubcategories" ng-repeat="performanceMeasureExpectedSubcategoryOption in performanceMeasureGroup.PerformanceMeasureExpectedSubcategoryOptions | orderBy:[getSubcategoryName]">{{getSubcategoryName(performanceMeasureExpectedSubcategoryOption)}}</th>
                    <th>Value</th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                <tr ng-repeat="performanceMeasureExpected in getGroupPerformanceMeasureExpecteds(performanceMeasureGroup)">
                    <td style="width: 50px">
                        <span class="glyphicon glyphicon-trash" title="Remove row" alt="Remove row" ng-click="deleteRow(performanceMeasureExpected)" style="cursor: pointer"></span>
                    </td>
                    <td ng-show="getPerformanceMeasure(performanceMeasureExpected.PerformanceMeasureID).HasRealSubcategories" ng-repeat="performanceMeasureExpectedSubcategoryOption in performanceMeasureExpected.PerformanceMeasureExpectedSubcategoryOptions | orderBy:[getSubcategoryName]">
                        <select class="form-control"
                                ng-model="performanceMeasureExpectedSubcategoryOption.PerformanceMeasureSubcategoryOptionID"> 
                            <option ng-repeat="performanceMeasureSubcategoryOption in getSubcategoryOptionsForSubcategory(performanceMeasureExpectedSubcategoryOption.PerformanceMeasureSubcategoryID)" 
                                    value="{{performanceMeasureSubcategoryOption.PerformanceMeasureSubcategoryOptionID}}" 
                                    ng-selected="performanceMeasureExpectedSubcategoryOption.PerformanceMeasureSubcategoryOptionID == performanceMeasureSubcategoryOption.PerformanceMeasureSubcategoryOptionID">{{performanceMeasureSubcategoryOption.PerformanceMeasureSubcategoryOptionName}}</option>
                        </select>
                    </td>
                    <td style="width: 100px">
                        <input class="form-control" style="text-align: right"
                                   ng-model="performanceMeasureExpected.ExpectedValue" />                 
                    </td>
                    <td style="vertical-align: middle; padding-left: 0">
                        {{getMeasurementUnitTypeDisplayName(performanceMeasureExpected)}}
                    </td>
                </tr>
                <tr>
                    <td colspan="{{numberOfSubcategoryOptions(performanceMeasureGroup) + 3}}" class="text-right">
                        <button class="btn btn-xs btn-firma" type="button" ng-click="addPerformanceMeasureToGroup(performanceMeasureGroup)">
                            <span class="glyphicon glyphicon-plus"></span> Add Expected Value
                        </button>
                    </td>
                </tr>
                </tbody>
            </table>            
            <hr/>           
            @using (Html.BeginForm())
            {
                <div ng-repeat="performanceMeasureExpected in AngularModel.PerformanceMeasureExpecteds | orderBy:'PerformanceMeasureID'">
                    <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureExpecteds[0].PerformanceMeasureID).ToString().Replace("0", "{{$index}}")" value="{{performanceMeasureExpected.PerformanceMeasureID}}">
                    <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureExpecteds[0].ExpectedValue).ToString().Replace("0", "{{$index}}")" value="{{performanceMeasureExpected.ExpectedValue}}">
                    <div ng-repeat="performanceMeasureExpectedSubcategoryOption in getPerformanceMeasureExpectedSubcategoryOptionsWithValues(performanceMeasureExpected)">
                        <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureExpecteds[0].PerformanceMeasureExpectedSubcategoryOptions[1].PerformanceMeasureSubcategoryOptionID).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{performanceMeasureExpectedSubcategoryOption.PerformanceMeasureSubcategoryOptionID}}">
                        <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureExpecteds[0].PerformanceMeasureExpectedSubcategoryOptions[1].PerformanceMeasureSubcategoryID).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{performanceMeasureExpectedSubcategoryOption.PerformanceMeasureSubcategoryID}}">
                        <input type="hidden" name="@Html.NameFor(x => x.PerformanceMeasureExpecteds[0].PerformanceMeasureExpectedSubcategoryOptions[1].PerformanceMeasureID).ToString().Replace("0", "{{$parent.$index}}").Replace("1", "{{$index}}")" value="{{performanceMeasureExpectedSubcategoryOption.PerformanceMeasureID}}">
                    </div>
                </div>
            }
        </div>

    </div>
</div>
