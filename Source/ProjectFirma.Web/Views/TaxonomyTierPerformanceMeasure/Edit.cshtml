@*-----------------------------------------------------------------------
<copyright file="Edit.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
<author>Sitka Technology Group</author>
</copyright>

<license>
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

Source code is available upon request via <support@sitkatech.com>.
</license>
-----------------------------------------------------------------------*@
@using LtInfo.Common.HtmlHelperExtensions
@using ProjectFirma.Web.Models
@using Newtonsoft.Json.Linq
@using ProjectFirma.Web.Common
@inherits ProjectFirma.Web.Views.TaxonomyTierPerformanceMeasure.Edit
<script type="text/javascript">
    // <![CDATA[    
    angular.module("EditAngularApp", []).controller("TaxonomyTierPerformanceMeasureController", function($scope)
    {
        $scope.AngularModel = @Html.Raw(JObject.FromObject(Model));
        $scope.AngularViewData = @Html.Raw(JObject.FromObject(ViewDataTyped));
        $scope.TaxonomyTierToAdd = null;

        $scope.filteredTaxonomyTiers = function()
        {
            var usedTaxonomyTierIDs = _.map($scope.AngularModel.TaxonomyTierPerformanceMeasures, function(p) { return p.TaxonomyTierID; });
            var filter = _.filter($scope.AngularViewData.AllTaxonomyTiers, function(f) { return !_.contains(usedTaxonomyTierIDs, f.TaxonomyTierID); });
            return filter;
        };

        $scope.setPrimaryTaxonomyTier = function(program)
        {
            $scope.AngularModel.PrimaryTaxonomyTierID = program.TaxonomyTierID;
        };

        $scope.getTaxonomyTierName = function(taxonomyTierPerformanceMeasure)
        {
            var programToFind = $scope.getTaxonomyTier(taxonomyTierPerformanceMeasure.TaxonomyTierID);
            return programToFind.DisplayName;
        };

        $scope.getTaxonomyTier = function(programId) { return _.find($scope.AngularViewData.AllTaxonomyTiers, function(f) { return programId == f.TaxonomyTierID; }); };

        $scope.addTaxonomyTier = function()
        {
            if ($scope.TaxonomyTierToAdd != null)
            {
                if ($scope.AngularModel.TaxonomyTierPerformanceMeasures.length == 0)
                {
                    $scope.setPrimaryTaxonomyTier($scope.TaxonomyTierToAdd);
                }
                var newTaxonomyTierPerformanceMeasureJson = {
                    TaxonomyTierID: $scope.TaxonomyTierToAdd.TaxonomyTierID,
                    PerformanceMeasureID: $scope.AngularViewData.PerformanceMeasure.PerformanceMeasureID,
                    IsPrimaryTaxonomyTier: false
                };
                $scope.AngularModel.TaxonomyTierPerformanceMeasures.push(newTaxonomyTierPerformanceMeasureJson);
                $scope.TaxonomyTierToAdd = null;
            }
        };

        $scope.deleteTaxonomyTier = function(program)
        {
            var isTaxonomyTierTheCurrentPrimary = program.TaxonomyTierID == $scope.AngularModel.PrimaryTaxonomyTierID;
            Sitka.Methods.removeFromJsonArray($scope.AngularModel.TaxonomyTierPerformanceMeasures, program);

            if (isTaxonomyTierTheCurrentPrimary && $scope.AngularModel.TaxonomyTierPerformanceMeasures.length > 0)
            {
                $scope.setPrimaryTaxonomyTier($scope.AngularModel.TaxonomyTierPerformanceMeasures[0]);
            }
        };
    });
    angular.bootstrap(jQuery("#EditTaxonomyTiersAngularApp"), ["EditAngularApp"]);
    // ]]>
</script>

<div class="validationError">
    @Html.ValidationSummary()
</div>

<div style="font-weight: bold; margin-bottom: 20px">@ViewDataTyped.TaxonomyTierDisplayNamePluralized Associated with @MultiTenantHelpers.GetPerformanceMeasureName()</div>
<div id="EditTaxonomyTiersAngularApp" ng-controller="TaxonomyTierPerformanceMeasureController">
    @ViewDataTyped.TaxonomyTierDisplayName to Add: <select ng-model="TaxonomyTierToAdd" ng-options="program.DisplayName for program in filteredTaxonomyTiers()">
    <option value="">Choose One</option>
</select>
    <button class="btn btn-xs btn-firma" type="button" ng-click="addTaxonomyTier()">Add</button>
    <table class="dialogFormLayout">
        <tr>
            <th></th>
            <th>@Html.LabelWithSugarFor(ViewDataTyped.FieldDefinitionForTaxonomyTier, LabelWithSugarForExtensions.DisplayStyle.HelpIconWithLabel)</th>
            <th>@Html.LabelWithSugarFor(FieldDefinition.IsPrimaryTaxonomyBranch, LabelWithSugarForExtensions.DisplayStyle.HelpIconWithLabel, string.Format("Is Primary {0}", ViewDataTyped.TaxonomyTierDisplayName))</th>
        </tr>
        <tr ng-repeat="programPerformanceMeasure in AngularModel.TaxonomyTierPerformanceMeasures | orderBy:getTaxonomyTierName">
            <td>
                <span class="glyphicon glyphicon-trash blue" title="Remove '{{programPerformanceMeasure.DisplayName}}'" alt="Remove '{{programPerformanceMeasure.DisplayName}}'" ng-click="deleteTaxonomyTier(programPerformanceMeasure)" style="cursor: pointer"></span>
            </td>
            <td>{{getTaxonomyTierName(programPerformanceMeasure)}}</td>
            <td>
                <input type="radio" ng-model="AngularModel.PrimaryTaxonomyTierID" ng-value="programPerformanceMeasure.TaxonomyTierID" />
            </td>

        </tr>
    </table>
    @using (Html.BeginForm())
    {
        <input ng-repeat="programPerformanceMeasure in AngularModel.TaxonomyTierPerformanceMeasures" type="hidden" name="@Html.NameFor(x => x.TaxonomyTierPerformanceMeasures[0].TaxonomyTierID).ToString().Replace("0", "{{$index}}")" value="{{programPerformanceMeasure.TaxonomyTierID}}">
        <input ng-repeat="programPerformanceMeasure in AngularModel.TaxonomyTierPerformanceMeasures" type="hidden" name="@Html.NameFor(x => x.TaxonomyTierPerformanceMeasures[0].PerformanceMeasureID).ToString().Replace("0", "{{$index}}")" value="{{programPerformanceMeasure.PerformanceMeasureID}}">
        <input type="hidden" name="@Html.NameFor(x => x.PrimaryTaxonomyTierID)" value="{{AngularModel.PrimaryTaxonomyTierID}}">
    }
</div>
