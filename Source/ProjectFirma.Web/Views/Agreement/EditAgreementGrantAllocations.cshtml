@*-----------------------------------------------------------------------
    <copyright file="EditProject.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
    Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common.HtmlHelperExtensions
@inherits ProjectFirma.Web.Views.Agreement.EditAgreementGrantAllocations

@*@Html.Raw(ViewDataTyped.EditAgreementType.IntroductoryText)*@

@Html.ValidationSummary()

@using (Html.BeginForm())
{
    //TODO
    <div class="col-xs-11">
        <div class="form-horizontal">

            <div class="form-group">
                <div class="form-group">
                    <div class="col-xs-2 control-label">
                        @*@Html.LabelWithSugarFor(m => m.GrantAllocationId)*@
                        Grant Allocation:
                    </div>
                    <div class="col-xs-10">
                        @*WRONG WRONG WRONG*@
                        @*
                        @Html.DropDownListFor(m => m.GrantAllocationId, ViewDataTyped.GrantAllocationSelectListItems, new {@class = "form-control"})
                        @Html.ValidationMessageFor(m => m.AgreementId)
                        *@
                        
                        <span style="display: inline;">
                            <span class="col-xs-11">
                                <select class="form-control" id="SelectedGrantAllocationId" name="SelectedGrantAllocationId">
                                    @foreach (var currentSelectItem in ViewDataTyped.GrantAllocationSelectListItems)
                                    {
                                        <option value="@currentSelectItem.Value">@currentSelectItem.Text</option>
                                    }
                                </select>
                            </span>
                            <button id="btnCollapseLevel" class="btn btn-sm btn-primary">Add</button>

                        </span>


                             
</div>
                </div>
                @*<div class="form-group">
                    <div class="col-xs-4 control-label">
                        @Html.LabelWithSugarFor(m => m.AgreementNumber)
                    </div>
                    <div class="col-xs-8">
                        @Html.TextBoxFor(m => m.AgreementNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.AgreementNumber)
                    </div>
                </div>*@
            </div>
        </div>
    </div>
    //WRONG WRONG 
    @Html.HiddenFor(m => m.AgreementId)
}



<script type="text/javascript">
                @*jQuery(document)
                    .ready(function () {
                        var mouAgreementTypeId = @ViewDataTyped.MOUAgreementTypeID;
                        var mouAgreementTypeIdHasValue = '@ViewDataTyped.MOUAgreementTypeID.HasValue';



                        function updateDisabledFieldsIfMouIsSelected(mouAgreementTypeIdVar)
                        {
                            var selectionIsMou = jQuery("#@Html.IdFor(m => m.AgreementTypeID)").val().toString() === mouAgreementTypeIdVar.toString();
                            var agreementAmountInput =
                                jQuery("#@Html.IdFor(m => m.AgreementAmount)" + ".sitkaCurrency");
                            var grantIdInput = jQuery("#@Html.IdFor(m => m.GrantID)");
                            if (selectionIsMou) {
                                grantIdInput.attr('disabled', 'disabled');
                                grantIdInput.val("");
                                agreementAmountInput.attr('disabled', 'disabled');
                                agreementAmountInput.val("");
                            } else {
                                grantIdInput.removeAttr('disabled');
                                agreementAmountInput.removeAttr('disabled');
                            }
                        }


                        if (mouAgreementTypeIdHasValue == 'True' || mouAgreementTypeIdHasValue == 'true') {
                            updateDisabledFieldsIfMouIsSelected(mouAgreementTypeId);
                            jQuery("#@Html.IdFor(m => m.AgreementTypeID)").change(function() {
                                updateDisabledFieldsIfMouIsSelected(mouAgreementTypeId);
                            });
                        }
                    });*@
</script>
