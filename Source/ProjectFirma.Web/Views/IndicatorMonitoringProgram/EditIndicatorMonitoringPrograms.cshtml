@using ProjectFirma.Web.Models
@using LtInfo.Common.HtmlHelperExtensions
@using Newtonsoft.Json.Linq
@inherits ProjectFirma.Web.Views.IndicatorMonitoringProgram.EditIndicatorMonitoringPrograms
<script type="text/javascript">
    // <![CDATA[
    angular.module("ProjectFirmaApp").factory("angularModelAndViewData", function()
    {
        return {
            AngularModel: @Html.Raw(JObject.FromObject(Model)),
            AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped))
        };
    });
    angular.bootstrap(jQuery("#EditIndicatorMonitoringProgramsApp"), ["ProjectFirmaApp"]);
    // ]]>
</script>

<div class="validationError">
    @Html.ValidationSummary()
</div>

<div id="EditIndicatorMonitoringProgramsApp" ng-controller="MonitoringProgramController">
    Monitoring Program to Add:
    <select ng-model="MonitoringProgramToAdd" ng-options="monitoringProgram.MonitoringProgramName for monitoringProgram in filteredMonitoringPrograms()" style="width: 700px"></select>
    <button class="btn btn-xs btn-firma" type="button" ng-click="addRow()">Add</button>
    <table class="dialogFormLayout">
        <tr>
            <th></th>
            <th style="white-space: nowrap">@Html.LabelWithFieldDefinitionFor(FieldDefinition.MonitoringProgram)</th>
        </tr>
        <tr ng-repeat="IndicatorMonitoringProgram in AngularModel.IndicatorMonitoringPrograms | orderBy:[getMonitoringProgramName]">
            <td>
                <span class="glyphicon glyphicon-trash blue" title="Remove row'" alt="Remove row" ng-click="deleteRow(IndicatorMonitoringProgram)" style="cursor: pointer"></span>
            </td>
            <td ng-bind="getMonitoringProgramName(IndicatorMonitoringProgram)"></td>
        </tr>
    </table>
    @using (Html.BeginForm())
    {
        <input ng-repeat="IndicatorMonitoringProgram in AngularModel.IndicatorMonitoringPrograms" type="hidden" name="@Html.NameFor(x => x.IndicatorMonitoringPrograms[0].IndicatorID).ToString().Replace("0", "{{$index}}")" value="{{IndicatorMonitoringProgram.IndicatorID}}">
        <input ng-repeat="IndicatorMonitoringProgram in AngularModel.IndicatorMonitoringPrograms" type="hidden" name="@Html.NameFor(x => x.IndicatorMonitoringPrograms[0].MonitoringProgramID).ToString().Replace("0", "{{$index}}")" value="{{IndicatorMonitoringProgram.MonitoringProgramID}}">
    }
</div>