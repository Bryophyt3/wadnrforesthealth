@using LtInfo.Common.HtmlHelperExtensions
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Security
@using ProjectFirma.Web.Views.Shared.ExpenditureAndBudgetControls
@using ProjectFirma.Web.Views.Shared.ProjectControls
@using ProjectFirma.Web.Views.Shared.ProjectLocationControls
@using ProjectFirma.Web.Views
@using ProjectFirma.Web.Views.Shared
@using ProjectFirma.Web.Views.Shared.TextControls
@using LtInfo.Common
@using LtInfo.Common.BootstrapWrappers
@using LtInfo.Common.DhtmlWrappers
@using LtInfo.Common.ModalDialog
@using MoreLinq
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Views.Shared.PerformanceMeasureControls
@inherits ProjectFirma.Web.Views.Project.Detail

@section JavascriptAndStylesContent
{
    @{ DhtmlxGridIncludes.RenderPartialView(Html); }
    @{ MapJavascriptIncludes.RenderPartialView(Html); }
    <script src="@Url.Content("~/Views/Shared/PerformanceMeasureControls/PerformanceMeasureExpectedController.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Views/PerformanceMeasureActual/PerformanceMeasureActualController.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Views/ProjectFundingSourceExpenditure/ProjectFundingSourceExpenditureController.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Views/ProjectBudget/ProjectBudgetController.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Views/ProjectWatershed/ProjectWatershedController.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Views/ProjectExternalLink/ProjectExternalLinkController.js")" type="text/javascript"></script>
    <script type="text/javascript" src="/Content/Bootstrap-select/bootstrap-select.min.js"></script>
    <link href="~/Content/bootstrap-tags/bootstrap-tags.min.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="/Content/Bootstrap-select/bootstrap-select.min.css" type="text/css" />
    <script src="@Url.Content("~/Content/bootstrap-toc/bootstrap-toc.min.js")" type="text/javascript"></script>
}

<style type="text/css">
    .stage h3 {
        color: white;
        font-size: 16px;
        margin-bottom: 0;
        margin-top: 5px;
    }

    td.stage {
        vertical-align: top;
    }

    .stagebody {
        padding: 2px;
        padding-left: 7px;
    }

    .stage.default {
        background-color: rgb(118, 118, 118);
    }

    .stage.current {
        background-color: rgb(43, 105, 145);
    }

    #projectTags .tag-input {
        color: black;
        font-size: smaller;
    }

    #projectTags .glyphicon-remove, #projectTags .glyphicon-plus {
        margin-left: 5px;
    }

        #projectTags .glyphicon-remove:hover, #projectTags .glyphicon-plus:hover {
            color: #265d87;
        }

    /*Hack to get scrollspy to select sections with no content*/
    footer {
        height: 600px;
    }
</style>

@section RightOfPageTitle
{
    @if (ViewDataTyped.Project.IsUpdateAllowed && ViewDataTyped.UserHasProjectUpdatePermissions)
    {
        if (ViewDataTyped.Project.IsUpdateMandatory)
        {
            <a class="btn btn-firma" href="@ViewDataTyped.Project.GetProjectUpdateUrl()" title="Update Project">@DhtmlxGridHtmlHelpers.EditIconBootstrap Update Project</a>
        }
        else
        {
            @ModalDialogFormHelper.ModalDialogFormLink(string.Format("{0}Update Project", "<span class='glyphicon glyphicon-edit blue' style='margin-right:3px'></span>"), ViewDataTyped.ConfirmNonMandatoryUpdateUrl, "Update this project?", 400, "Continue", "Cancel", null, null, null)
        }
    }
    <a class="btn btn-firma" href="@ViewDataTyped.Project.GetFactSheetUrl()" title="View Fact Sheet">@FirmaDhtmlxGridHtmlHelpers.FactSheetIcon View Fact Sheet</a>
}

<div>
    <a class="btn backButton" href="@ViewDataTyped.FullProjectListUrl">@BootstrapHtmlHelpers.MakeGlyphIcon("glyphicon-chevron-left") Back to all Projects</a>
</div>

@if (ViewDataTyped.LatestUpdateState == ProjectUpdateState.Submitted || ViewDataTyped.LatestUpdateState == ProjectUpdateState.Returned)
{
    <div class="alert alert-warning" style="margin-bottom: 10px">
        <span>
            Updates to this project have been submitted but not yet approved. Check back later for more current information on this project.
            @if (ViewDataTyped.UserHasProjectUpdatePermissions)
            {
                <span>View its <a href="@ViewDataTyped.Project.GetProjectUpdateUrl()"> project update </a></span>
            }
        </span>
    </div>
}

<div style="padding-right: 20px; margin-bottom: 20px;">
    <table style="border-collapse: collapse; border-spacing: 0; margin: 0; padding: 0; width: 100%;">
        <tr style="padding-bottom: 0;">
            @for (var i = 0; i < ViewDataTyped.ProjectStages.Count; i++)
            {
                var stage = ViewDataTyped.ProjectStages[i];
                var nextStage = (i < ViewDataTyped.ProjectStages.Count - 1) ? ViewDataTyped.ProjectStages[i + 1] : null;

                var isCurrentStage = stage == ViewDataTyped.Project.ProjectStage;

                var stateName = "default";
                if (isCurrentStage)
                {
                    stateName = "current";
                }

                var nextStateName = "default";
                if (nextStage != null && nextStage == ViewDataTyped.Project.ProjectStage)
                {
                    nextStateName = "current";
                }

                <td class="stagebody stage @Html.Raw(stateName)">
                    <h3>
                        @stage.ProjectStageDisplayName
                    </h3>
                </td>

                var imgPath = "/Content/img/project_stage_arrow_" + stateName + ".png";

                if (nextStage != null)
                {
                    <td class="stage @Html.Raw(nextStateName)" style="width: 15px;">
                        <img src="@imgPath" style="height: 31px" />
                    </td>
                }
            }
        </tr>
    </table>
</div>

<div data-spy="scroll" data-target="#toc">
    <div id="contentForTOC" class="container-fluid">
        <div class="row">
            <div data-target="#tableofcontents" id="scrollSpyContent" class="col-lg-2 col-md-3 hidden-sm hidden-xs hidden-print">
                <div id="tableOfContentsAffixed" class="navpanel panelFirma">
                    <h4 data-toc-skip style="margin-top: 0">Contents</h4>
                    <nav id="tableOfContents" class="scrollSpy"></nav>
                </div>
            </div>
            <div class="col-sm-12 col-md-9 col-lg-10">
                <h2 class="sectionHeader">Project Overview</h2>
                <div class="row">
                    <div class="col-md-12 col-lg-8">
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                <h3>@ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditProjectUrl, string.Format("Edit {0}", ViewDataTyped.Project.DisplayName), 950, ViewDataTyped.UserHasEditProjectPermissions) Basics</h3>
                            </div>
                            <div class="panel-body">
                                @{ ProjectBasics.RenderPartialView(Html, ViewDataTyped.ProjectBasicsViewData); }
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12 col-lg-4">
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                <h3>Location</h3>
                            </div>
                            <div class="panel-body">
                                @if (ViewDataTyped.UserHasMapManagePermissions)
                                {
                                    <ul style="list-style-type: none; padding-left: 0;">
                                        <li style="display: inline-block; margin-right: 5px"> @ModalDialogFormHelper.ModalDialogFormLink(string.Format("{0}Simple", "<span class='glyphicon glyphicon-edit blue' style='margin-right:3px'></span>"), ViewDataTyped.EditSimpleProjectLocationUrl, "Edit Project Location - Simple", 1000, ViewDataTyped.UserHasMapManagePermissions, ViewDataTyped.MapFormID)</li>
                                        <li style="display: inline-block"> @ModalDialogFormHelper.ModalDialogFormLink(string.Format("{0}Detailed", "<span class='glyphicon glyphicon-edit blue' style='margin-right:3px'></span>"), ViewDataTyped.EditDetailedProjectLocationUrl, "Edit Project Location - Detail", 1000, ViewDataTyped.UserHasMapManagePermissions, ViewDataTyped.MapFormID)</li>
                                    </ul>
                                }
                                @{ ProjectLocationSummary.RenderPartialView(Html, ViewDataTyped.ProjectLocationSummaryViewData); }
                            </div>
                        </div>
                        @if (ViewDataTyped.UserHasTaggingPermissions)
                        {
                            <div class="panel panelFirma">
                                <div class="panel-heading panelTitle">
                                    <h3>Tags</h3>
                                </div>
                                <div class="panel-body">
                                    @{ ProjectBasicsTags.RenderPartialView(Html, ViewDataTyped.ProjectBasicsTagsViewData); }
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h3>@ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditProjectOrganizationsUrl, "Edit Organizations", ViewDataTyped.UserHasProjectOrganizationManagePermissions) Organizations</h3>
                    </div>
                    <div class="panel-body">
                        @if (ViewDataTyped.AllProjectOrganizations.Any())
                        {
                            <table class="summaryLayout">
                                <tr>
                                    <th style="white-space: nowrap">@Html.LabelWithFieldDefinitionFor(FieldDefinition.Organization)</th>
                                    <th style="white-space: nowrap">@Html.LabelWithFieldDefinitionFor(FieldDefinition.LeadImplementer)</th>
                                    <th style="white-space: nowrap">@Html.LabelWithFieldDefinitionFor(FieldDefinition.Implementer)</th>
                                    <th style="white-space: nowrap">@Html.LabelWithFieldDefinitionFor(FieldDefinition.Funder)</th>
                                    <th style="white-space: nowrap">@Html.LabelWithFieldDefinitionFor(FieldDefinition.PrimaryContact)</th>
                                </tr>
                                @foreach (var projectOrganization in ViewDataTyped.AllProjectOrganizations)
                                {
                                    <tr>
                                        <td>@projectOrganization.Organization.GetDisplayNameAsUrl()</td>
                                        <td style="text-align: center">@projectOrganization.IsLeadOrganization.ToCheckboxImageOrEmpty()</td>
                                        <td style="text-align: center">@((projectOrganization.IsImplementingOrganization && !projectOrganization.IsLeadOrganization).ToCheckboxImageOrEmpty())</td>
                                        <td style="text-align: center">@projectOrganization.IsFundingOrganization.ToCheckboxImageOrEmpty()</td>
                                        @if (new UserViewFeature().HasPermissionByPerson(ViewDataTyped.CurrentPerson))
                                        {
                                            <td>@projectOrganization.Organization.PrimaryContactPersonWithOrgAsUrl</td>
                                        }
                                        else
                                        {
                                            <td>@projectOrganization.Organization.PrimaryContactPersonAsStringAndOrgAsUrl</td>
                                        }
                                    </tr>
                                }
                            </table>
                        }
                        else
                        {
                            <p>No organizations set for this project.</p>
                        }
                    </div>
                </div>
                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h2>@ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditProjectBudgetUrl, "Edit Estimated Budget", 1000, ViewDataTyped.UserHasProjectBudgetManagePermissions) Estimated Budgets</h2>
                    </div>
                    <div class="panel-body">
                        @{ ProjectBudgetDetail.RenderPartialView(Html, ViewDataTyped.ProjectBudgetDetailViewData); }
                    </div>
                </div>

                <h2 class="sectionHeader">@MultiTenantHelpers.GetPerformanceMeasureNamePluralized()</h2>
                @if (ViewDataTyped.UserHasPerformanceMeasureExpectedViewPermissions)
                {
                    <div class="panel panelFirma">
                        <div class="panel-heading panelTitle">
                            <h3>@ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditPerformanceMeasureExpectedsUrl, "Edit Expected " + @MultiTenantHelpers.GetPerformanceMeasureNamePluralized(), 1000, ViewDataTyped.UserHasPerformanceMeasureExpectedManagePermissions) Expected @MultiTenantHelpers.GetPerformanceMeasureNamePluralized()</h3>
                        </div>
                        <div class="panel-body">
                            @{ PerformanceMeasureExpectedSummary.RenderPartialView(Html, ViewDataTyped.PerformanceMeasureExpectedSummaryViewData); }
                        </div>
                    </div>
                }

                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h3>@ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditPerformanceMeasureActualsUrl, "Edit Reported " + @MultiTenantHelpers.GetPerformanceMeasureNamePluralized(), 1000, ViewDataTyped.UserHasPerformanceMeasureActualManagePermissions) Reported @MultiTenantHelpers.GetPerformanceMeasureNamePluralized()</h3>
                    </div>
                    <div class="panel-body">
                        @{ PerformanceMeasureReportedValuesGrouped.RenderPartialView(Html, ViewDataTyped.PerformanceMeasureReportedValuesGroupedViewData); }
                    </div>
                </div>

                <h2 data-toc-skip class="sectionHeader">Reported Expenditures</h2>
                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h2>@ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditReportedExpendituresUrl, "Edit Reported Expenditures", 1000, ViewDataTyped.UserHasProjectFundingSourceExpenditureManagePermissions) Reported Expenditures</h2>
                    </div>
                    <div class="panel-body">
                        @{ ProjectExpendituresDetail.RenderPartialView(Html, ViewDataTyped.ProjectExpendituresDetailViewData); }
                    </div>
                </div>

                <h2 data-toc-skip class="sectionHeader">Project Classification</h2>
                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h2>@ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditClassificationsUrl, string.Format("Edit {0}", MultiTenantHelpers.GetClassificationDisplayNamePluralized()), ViewDataTyped.UserHasProjectClassificationManagePermissions) @Html.LabelWithFieldDefinitionFor(FieldDefinition.Classification, MultiTenantHelpers.GetClassificationDisplayNamePluralized())</h2>
                    </div>
                    <div class="panel-body">
                        @if (ViewDataTyped.Project.ProjectClassifications.Any())
                        {
                            <div class="row">
                                @foreach (var classificationsBatch in ViewDataTyped.Project.ProjectClassifications.OrderBy(x => x.Classification.DisplayName).Batch(3))
                                {
                                    <div class="col-md-4">
                                        <ul class="noListStyle">
                                            @foreach (var classification in classificationsBatch.OrderBy(x => x.Classification.DisplayName))
                                            {
                                                <li>@classification.Classification.GetDisplayNameAsUrl(): @classification.ProjectClassificationNotes</li>
                                            }
                                        </ul>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <p class="alert">No @MultiTenantHelpers.GetClassificationDisplayNamePluralized().ToLower() set for this project.</p>
                        }
                    </div>
                </div>

                <h2 class="sectionHeader">Project Details</h2>
                @if (ViewDataTyped.UserHasProjectBudgetManagePermissions && ViewDataTyped.HasAssessment)
                {
                    <div class="panel panelFirma">
                        <div class="panel-heading panelTitle">
                            <h3>@ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditAssessmentUrl, "Edit Assessment", 800, ViewDataTyped.UserHasProjectBudgetManagePermissions) Assessment</h3>
                        </div>
                        <div class="panel-body">
                            @{ AssessmentTree.RenderPartialView(Html, ViewDataTyped.AssessmentTreeViewData);}
                        </div>
                    </div>
                }
                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h3>@ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditWatershedsUrl, "Edit Watersheds", ViewDataTyped.UserHasProjectWatershedManagePermissions) @Html.LabelWithFieldDefinitionFor(FieldDefinition.Watershed, "Watersheds")</h3>
                    </div>
                    <div class="panel-body">
                        @if (ViewDataTyped.Project.ProjectWatersheds.Any())
                        {
                            <ul class="noListStyle">
                                @foreach (var projectWatershed in ViewDataTyped.Project.ProjectWatersheds.OrderBy(x => x.Watershed.DisplayName))
                                {
                                    <li>
                                        <a href="@projectWatershed.Watershed.GetSummaryUrl()">@projectWatershed.Watershed.DisplayName</a>
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p class="alert">No watersheds set for this project.</p>
                        }
                    </div>
                </div>
                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h3>@ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditExternalLinksUrl, "Edit External Links", ViewDataTyped.UserHasProjectExternalLinkManagePermissions) @Html.LabelWithFieldDefinitionFor(FieldDefinition.ExternalLinks)</h3>
                    </div>
                    <div class="panel-body">
                        @{ EntityExternalLinks.RenderPartialView(Html, ViewDataTyped.EntityExternalLinksViewData); }
                    </div>
                </div>
                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h3>Notes</h3>
                    </div>
                    <div class="panel-body">
                        @{ EntityNotes.RenderPartialView(Html, ViewDataTyped.EntityNotesViewData); }
                    </div>
                </div>

                <h2 data-toc-skip class="sectionHeader">Photos</h2>
                <div class="panel panelFirma">
                    <div class="panel-heading panelTitle">
                        <h2>Photos</h2>
                    </div>
                    <div class="panel-body">
                        @{
                            ImageGallery.RenderPartialView(Html, ViewDataTyped.ImageGalleryViewData);
                        }
                    </div>
                </div>

                @if (ViewDataTyped.UserHasProjectViewEverythingPermissions)
                {
                    <h2 class="sectionHeader">Administrative</h2>
                    <div class="panel panelFirma">
                        <div class="panel-heading panelTitle">
                            <h3>Project Update History</h3>
                        </div>
                        <div class="panel-body">
                            @Html.DhtmlxGrid(ViewDataTyped.ProjectUpdateBatchGridSpec, ViewDataTyped.ProjectUpdateBatchGridName, ViewDataTyped.ProjectUpdateBatchGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
                        </div>
                    </div>
                    <div class="panel panelFirma">
                        <div class="panel-heading panelTitle">
                            <h3>System Communications</h3>
                        </div>
                        <div class="panel-body">
                            @Html.DhtmlxGrid(ViewDataTyped.ProjectNotificationGridSpec, ViewDataTyped.ProjectNotificationGridName, ViewDataTyped.ProjectNotificationGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
                        </div>
                    </div>
                    <div class="panel panelFirma">
                        <div class="panel-heading panelTitle">
                            <h3>Audit Log</h3>
                        </div>
                        <div class="panel-body">
                            @Html.DhtmlxGrid(ViewDataTyped.AuditLogsGridSpec, ViewDataTyped.AuditLogsGridName, ViewDataTyped.AuditLogsGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    jQuery(document)
        .ready(function () {
            Toc.init({
                $nav: jQuery('#tableOfContents'),
                $scope: jQuery('#contentForTOC')
            });

            jQuery('body').scrollspy({
                target: '#tableOfContents'
            });

            jQuery('#tableOfContentsAffixed')
                .affix({
                    offset: {
                        top: function () { return (this.top = jQuery("#tableOfContentsAffixed").offset().top); },
                        bottom: function () { return (this.bottom = jQuery('footer').outerHeight(true) + 100); }
                    }
                });
        });
</script>
