@*-----------------------------------------------------------------------
    <copyright file="Detail.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
    Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common
@using LtInfo.Common.HtmlHelperExtensions
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.Shared.ExpenditureAndBudgetControls
@using ProjectFirma.Web.Views.Shared.ProjectControls
@using ProjectFirma.Web.Views.Shared.ProjectLocationControls
@using ProjectFirma.Web.Views
@using ProjectFirma.Web.Views.Shared
@using ProjectFirma.Web.Views.Shared.TextControls
@using LtInfo.Common.BootstrapWrappers
@using LtInfo.Common.DhtmlWrappers
@using LtInfo.Common.ModalDialog
@using MoreLinq
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Views.ProjectFunding
@using ProjectFirma.Web.Views.Shared.PerformanceMeasureControls
@inherits ProjectFirma.Web.Views.Project.Detail

@section JavascriptAndStylesContent
{
    @{ DhtmlxGridIncludes.RenderPartialView(Html); }
    @{ MapJavascriptIncludes.RenderPartialView(Html); }
    <script src="@Url.Content("~/Views/Shared/PerformanceMeasureControls/PerformanceMeasureExpectedController.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Views/PerformanceMeasureActual/PerformanceMeasureActualController.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Views/ProjectFundingSourceExpenditure/ProjectFundingSourceExpenditureController.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Views/ProjectFundingSourceRequest/ProjectFundingSourceRequestController.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Views/ProjectExternalLink/ProjectExternalLinkController.js")" type="text/javascript"></script>
    <script type="text/javascript" src="/Content/Bootstrap-select/bootstrap-select.min.js"></script>
    <link href="~/Content/bootstrap-tags/bootstrap-tags.min.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="/Content/Bootstrap-select/bootstrap-select.min.css" type="text/css" />
    <script src="@Url.Content("~/Content/bootstrap-toc/bootstrap-toc.min.js")" type="text/javascript"></script>
}

<style type="text/css">
    /*Hack to get scrollspy to select sections with no content*/
    footer {
        height: 600px;
    }
</style>

@section RightOfPageTitle
{
    @if (ViewDataTyped.CanLaunchProjectOrProposalWizard)
    {
        <a class="btn btn-firma" href="@ViewDataTyped.ProjectWizardUrl" title="@ViewDataTyped.ProjectUpdateButtonText">@DhtmlxGridHtmlHelpers.EditIconBootstrap @ViewDataTyped.ProjectUpdateButtonText</a>        
    }
    <a class="btn btn-firma" href="@ViewDataTyped.Project.GetFactSheetUrl()" title="View Fact Sheet">@FirmaDhtmlxGridHtmlHelpers.FactSheetIcon View Fact Sheet</a>
}


<div>
    <a class="btn backButton" href="@ViewDataTyped.ProjectListUrl">@BootstrapHtmlHelpers.MakeGlyphIcon("glyphicon-chevron-left") @ViewDataTyped.BackToProjectsText</a>
</div>

<div class="row" style="margin: 20px 0;">
    <div class="col-xs-12">
        @for (var i = 0; i < ViewDataTyped.ProjectStages.Count; i++)
        {
            var stage = ViewDataTyped.ProjectStages[i];

            var isCurrentStage = stage == ViewDataTyped.Project.ProjectStage;

            var stateName = "default";
            if (isCurrentStage)
            {
                stateName = "current";
            }

            var arrowClass = "middleArrow";
            if (i == 0)
            {
                arrowClass = "firstArrow";
            }
            else if (i == ViewDataTyped.ProjectStages.Count - 1)
            {
                arrowClass = "lastArrow";
            }
            else if (i == 0 && ViewDataTyped.ProjectStages.Count == 0)
            {
                arrowClass = "singleArrow";
            }

            <div class="breadcrumbTitle arrow @Html.Raw(stateName) @Html.Raw(arrowClass)">@stage.ProjectStageDisplayName</div>
        }
    </div>    
</div>
        <div data-spy="scroll" data-target="#toc">
            <div id="contentForTOC" class="container-fluid">
                <div class="row">
                    <div data-target="#tableofcontents" id="scrollSpyContent" class="col-lg-2 col-md-3 hidden-sm hidden-xs hidden-print">
                        <div id="tableOfContentsAffixed" class="navpanel panelFirma">
                            <h4 data-toc-skip style="margin-top: 0">Contents</h4>
                            <nav id="tableOfContents" class="scrollSpy"></nav>
                        </div>
                    </div>
                    <div class="col-sm-12 col-md-9 col-lg-10">
                        <h2 class="sectionHeader">@FieldDefinition.Project.GetFieldDefinitionLabel() Overview</h2>
                    <div class="row">
                        <div class="col-md-12 col-lg-7">
                            <div class="panel panelFirma">
                                <div class="panel-heading panelTitle">
                                    <h3>
                                        @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditProjectUrl, string.Format("Edit {0}", ViewDataTyped.Project.DisplayName), 950, ViewDataTyped.UserHasEditProjectPermissions)
                                        Basics
                                    </h3>
                                </div>
                                <div class="panel-body">
                                    @{ ProjectBasics.RenderPartialView(Html, ViewDataTyped.ProjectBasicsViewData); }
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12 col-lg-5">
                            <div class="panel panelFirma">
                                <div class="panel-heading panelTitle">
                                    <h3>Location</h3>
                                </div>
                                <div class="panel-body">
                                    @if (ViewDataTyped.UserHasEditProjectPermissions)
                                    {
                                        <ul style="list-style-type: none; padding-left: 0;">
                                            <li style="display: inline-block; margin-right: 5px"> @ModalDialogFormHelper.ModalDialogFormLink(string.Format("{0}Simple", "<span class='glyphicon glyphicon-edit blue' style='margin-right:3px'></span>"), ViewDataTyped.EditSimpleProjectLocationUrl, string.Format("Edit {0} - Simple", FieldDefinition.ProjectLocation.GetFieldDefinitionLabel()), 1000, ViewDataTyped.UserHasEditProjectPermissions, ViewDataTyped.MapFormID)</li>
                                            <li style="display: inline-block; margin-right: 5px"> @ModalDialogFormHelper.ModalDialogFormLink(string.Format("{0}Detailed", "<span class='glyphicon glyphicon-edit blue' style='margin-right:3px'></span>"), ViewDataTyped.EditDetailedProjectLocationUrl, string.Format("Edit {0} - Detail", FieldDefinition.ProjectLocation.GetFieldDefinitionLabel()), 1000, ViewDataTyped.UserHasEditProjectPermissions, ViewDataTyped.MapFormID)</li>
                                            <li style="display: inline-block"> @ModalDialogFormHelper.ModalDialogFormLink(string.Format("{0}{1}", "<span class='glyphicon glyphicon-edit blue' style='margin-right:3px'></span>", FieldDefinition.Watershed.GetFieldDefinitionLabelPluralized()), ViewDataTyped.EditWatershedsUrl, string.Format("Edit {0}", FieldDefinition.Watershed.GetFieldDefinitionLabel()), 1000, ViewDataTyped.UserHasEditProjectPermissions, ViewDataTyped.EditProjectWatershedFormID)</li>
                                        </ul>
                                    }
                                    @{ ProjectLocationSummary.RenderPartialView(Html, ViewDataTyped.ProjectLocationSummaryViewData); }
                                </div>
                            </div>
                            @if (ViewDataTyped.UserHasProjectAdminPermissions)
                            {
                                <div class="panel panelFirma">
                                    <div class="panel-heading panelTitle">
                                        <h3>Tags</h3>
                                    </div>
                                    <div class="panel-body">
                                        @{ ProjectBasicsTags.RenderPartialView(Html, ViewDataTyped.ProjectBasicsTagsViewData); }
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                <h3>
                                    @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditProjectOrganizationsUrl, "Edit Organizations", ViewDataTyped.UserHasEditProjectPermissions)
                                    @FieldDefinition.Organization.GetFieldDefinitionLabelPluralized()
                                </h3>
                            </div>
                            <div class="panel-body">
                                @if (ViewDataTyped.AllProjectOrganizations.Any())
                                {
                                    <table class="summaryLayout">
                                        <tr>
                                            <th>@Html.LabelWithSugarFor(FieldDefinition.Organization)</th>
                                            <th>@Html.LabelWithSugarFor(FieldDefinition.ProjectRelationshipType)</th>
                                        </tr>
                                        @foreach (var projectOrganization in ViewDataTyped.AllProjectOrganizations.GroupBy(x => x.Organization).OrderBy(x => x.Key.DisplayName))
                                        {
                                            <tr >
                                                <td>@projectOrganization.Key.GetDisplayNameAsUrl()</td>
                                                <td>@string.Join(", ", projectOrganization.Select(x => x.RelationshipType.RelationshipTypeName).OrderBy(x => x))</td>
                                            </tr>
                                        }
                                    </table>
                                }
                                else
                                {
                                    <p>No other organizations set for this project.</p>
                                }
                            </div>
                        </div>

                    <h2 class="sectionHeader">@MultiTenantHelpers.GetPerformanceMeasureNamePluralized()</h2>
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                <h3>
                                    @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditPerformanceMeasureExpectedsUrl, "Edit Expected " + MultiTenantHelpers.GetPerformanceMeasureNamePluralized(), 1000, ViewDataTyped.UserHasEditProjectPermissions)
                                    Expected @MultiTenantHelpers.GetPerformanceMeasureNamePluralized()
                                </h3>
                            </div>
                            <div class="panel-body">
                                @{ PerformanceMeasureExpectedSummary.RenderPartialView(Html, ViewDataTyped.PerformanceMeasureExpectedSummaryViewData); }
                            </div>
                        </div>
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                <h3>
                                    @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditPerformanceMeasureActualsUrl, "Edit Reported " + MultiTenantHelpers.GetPerformanceMeasureNamePluralized(), 1000, ViewDataTyped.UserHasPerformanceMeasureActualManagePermissions)
                                    Reported @MultiTenantHelpers.GetPerformanceMeasureNamePluralized()
                                </h3>
                            </div>
                            <div class="panel-body">
                                @if (ViewDataTyped.Project.IsProposal())
                                {
                                    <p class="systemText">Reported @MultiTenantHelpers.GetPerformanceMeasureNamePluralized() are not relevant for projects in the Proposal stage.</p>
                                }
                                else if (ViewDataTyped.Project.ProjectStage == ProjectStage.PlanningDesign)
                                {
                                    <p class="systemText">Reported @MultiTenantHelpers.GetPerformanceMeasureNamePluralized() are not relevant for projects in the Planning/Design stage.</p>
                                }
                                else
                                {
                                    PerformanceMeasureReportedValuesGrouped.RenderPartialView(Html, ViewDataTyped.PerformanceMeasureReportedValuesGroupedViewData);
                                }
                            </div>
                        </div>
                        
                        <h2 class="sectionHeader">Funding</h2>
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                <h3>
                                    @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditExpectedFundingUrl, "Edit Expected Funding", 1000, ViewDataTyped.UserHasEditProjectPermissions)
                                    Expected Funding
                                </h3>
                            </div>
                            <div class="panel-body">
                                <div class="row">
                                    <label class="col-xs-6 col-sm-3 text-right">@Html.LabelWithSugarFor(FieldDefinition.EstimatedTotalCost)</label>
                                    <div class="col-xs-6 col-sm-2 text-right">@ViewDataTyped.Project.EstimatedTotalCost.ToStringCurrency()</div>
                                </div>
                                <div class="row">
                                    <label class="col-xs-6 col-sm-3 text-right">@Html.LabelWithSugarFor(FieldDefinition.SecuredFunding)</label>
                                    <div class="col-xs-6 col-sm-2 text-right">@ViewDataTyped.Project.GetSecuredFunding().ToStringCurrency()</div>
                                </div>
                                <div class="row">
                                    <label class="col-xs-6 col-sm-3 text-right">@Html.LabelWithSugarFor(FieldDefinition.UnfundedNeed)</label>
                                    <div class="col-xs-6 col-sm-2 text-right">@ViewDataTyped.Project.UnfundedNeed().ToStringCurrency()</div>
                                    @if (ViewDataTyped.Project.GetUnsecuredFunding() > 0)
                                    {
                                        <div class="col-sm-6">(@ViewDataTyped.Project.GetUnsecuredFunding().ToStringCurrency() identified as @Html.LabelWithSugarFor(FieldDefinition.UnsecuredFunding))</div>
                                    }
                                </div>
                                <hr />
                                @{
                                    ProjectFundingDetail.RenderPartialView(Html, ViewDataTyped.ProjectFundingDetailViewData);
                                }
                            </div>
                        </div>

                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                <h3>
                                    @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditReportedExpendituresUrl, string.Format("Edit {0}", FieldDefinition.ReportedExpenditure.GetFieldDefinitionLabelPluralized()), 1000, ViewDataTyped.UserHasEditProjectPermissions)
                                    @FieldDefinition.ReportedExpenditure.GetFieldDefinitionLabelPluralized()
                                </h3>
                            </div>
                            <div class="panel-body">
                                @if (ViewDataTyped.Project.IsProposal())
                                {
                                    <p>Reported Expenditures are not relevant for projects in the Proposal stage.</p>
                                }
                                else
                                {
                                    ProjectExpendituresDetail.RenderPartialView(Html, ViewDataTyped.ProjectExpendituresDetailViewData);
                                }
                            </div>
                        </div>

                        <h2 data-toc-skip class="sectionHeader">@FieldDefinition.Project.GetFieldDefinitionLabel() @ViewDataTyped.ClassificationDisplayName</h2>
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                <h2>
                                    @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditClassificationsUrl, string.Format("Edit {0}", ViewDataTyped.ClassificationDisplayNamePluralized), ViewDataTyped.UserHasEditProjectPermissions)
                                    @Html.LabelWithSugarFor(FieldDefinition.Classification, ViewDataTyped.ClassificationDisplayNamePluralized)
                                </h2>
                            </div>
                            <div class="panel-body">
                                @if (ViewDataTyped.Project.ProjectClassifications.Any())
                                {
                                    foreach (var projectClassificationBatch in ViewDataTyped.Project.ProjectClassifications.OrderBy(x => x.Classification.DisplayName).Batch(3))
                                    {
                                        <div class="row" style="padding-top: 10px;">
                                            @foreach (var projectClassification in projectClassificationBatch)
                                            {
                                                <div class="col-md-4">
                                                    <label>@projectClassification.Classification.GetDisplayNameAsUrl()</label>

                                                    <div>@projectClassification.ProjectClassificationNotes</div>
                                                </div>
                                            }
                                        </div>
                                    }
                                }
                                else
                                {
                                    <p class="systemText">No @ViewDataTyped.ClassificationDisplayNamePluralized set for this project.</p>
                                }
                            </div>
                        </div>

                        <h2 class="sectionHeader">@FieldDefinition.Project.GetFieldDefinitionLabel() Details</h2>                   
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                <h3>
                                    @ModalDialogFormHelper.MakeEditIconLink(ViewDataTyped.EditExternalLinksUrl, string.Format("Edit {0}", FieldDefinition.ExternalLinks.GetFieldDefinitionLabelPluralized()), ViewDataTyped.UserHasEditProjectPermissions)
                                    @Html.LabelWithSugarFor(FieldDefinition.ExternalLinks)
                                </h3>
                            </div>
                            <div class="panel-body">
                                @{ EntityExternalLinks.RenderPartialView(Html, ViewDataTyped.EntityExternalLinksViewData); }
                            </div>
                        </div>
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                <h3>Notes</h3>
                            </div>
                            <div class="panel-body">
                                @{ EntityNotes.RenderPartialView(Html, ViewDataTyped.EntityNotesViewData); }
                            </div>
                        </div>

                        <h2 data-toc-skip class="sectionHeader">Photos</h2>
                        <div class="panel panelFirma">
                            <div class="panel-heading panelTitle">
                                <h2>Photos</h2>
                            </div>
                            <div class="panel-body">
                                @{
                                    ImageGallery.RenderPartialView(Html, ViewDataTyped.ImageGalleryViewData);
                                }
                            </div>
                        </div>

                        @if (ViewDataTyped.UserHasProjectAdminPermissions)
                        {
                            <h2 class="sectionHeader">Administrative</h2>
                            <div class="panel panelFirma">
                                <div class="panel-heading panelTitle">
                                    <h3>@FieldDefinition.Project.GetFieldDefinitionLabel() Update History</h3>
                                </div>
                                <div class="panel-body">
                                    @Html.DhtmlxGrid(ViewDataTyped.ProjectUpdateBatchGridSpec, ViewDataTyped.ProjectUpdateBatchGridName, ViewDataTyped.ProjectUpdateBatchGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
                                </div>
                            </div>
                            <div class="panel panelFirma">
                                <div class="panel-heading panelTitle">
                                    <h3>System Communications</h3>
                                </div>
                                <div class="panel-body">
                                    @Html.DhtmlxGrid(ViewDataTyped.ProjectNotificationGridSpec, ViewDataTyped.ProjectNotificationGridName, ViewDataTyped.ProjectNotificationGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
                                </div>
                            </div>
                            <div class="panel panelFirma">
                                <div class="panel-heading panelTitle">
                                    <h3>Audit Log</h3>
                                </div>
                                <div class="panel-body">
                                    @Html.DhtmlxGrid(ViewDataTyped.AuditLogsGridSpec, ViewDataTyped.AuditLogsGridName, ViewDataTyped.AuditLogsGridDataUrl, "height:300px", DhtmlxGridResizeType.VerticalResizableHorizontalAutoFit)
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

<script type="text/javascript">
    jQuery(document)
        .ready(function () {
            Toc.init({
                $nav: jQuery('#tableOfContents'),
                $scope: jQuery('#contentForTOC')
            });

            jQuery('body').scrollspy({
                target: '#tableOfContents'
            });

            jQuery('#tableOfContentsAffixed')
                .affix({
                    offset: {
                        top: function () { return (this.top = jQuery("#tableOfContentsAffixed").offset().top); },
                        bottom: function () { return (this.bottom = jQuery('footer').outerHeight(true) + 100); }
                    }
                });          
        });
</script>

