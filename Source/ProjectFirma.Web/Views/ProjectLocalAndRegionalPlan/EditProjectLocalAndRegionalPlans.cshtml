@using LtInfo.Common.HtmlHelperExtensions
@using ProjectFirma.Web.Models
@using Newtonsoft.Json.Linq
@inherits ProjectFirma.Web.Views.ProjectLocalAndRegionalPlan.EditProjectLocalAndRegionalPlans
<script type="text/javascript">
    // <![CDATA[
    angular.module("ProjectFirmaApp").factory("angularModelAndViewData", function()
    {
        return {
            AngularModel: @Html.Raw(JObject.FromObject(Model)),
            AngularViewData: @Html.Raw(JObject.FromObject(ViewDataTyped))
        };
    });
    angular.bootstrap(jQuery("#EditProjectLocalAndRegionalPlansApp"), ["ProjectFirmaApp"]);
    // ]]>
</script>

<style>
    #EditProjectLocalAndRegionalPlansApp option
    {
        width: 680px;
    }
</style>

<div class="validationError">
    @Html.ValidationSummary()
</div>

<div id="EditProjectLocalAndRegionalPlansApp" ng-controller="ProjectLocalAndRegionalPlanController">
    Local and Regional Plan to Add:
    <select ng-model="LocalAndRegionalPlanToAdd" ng-options="localAndRegionalPlan.DisplayName for localAndRegionalPlan in filteredLocalAndRegionalPlans()" style="width: 700px"></select>
    <button class="btn btn-xs btn-trpa" type="button" ng-click="addRow()">Add</button>

    <p class="stylizeLikeTH" style="white-space: nowrap">@Html.LabelWithFieldDefinitionFor(FieldDefinition.LocalAndRegionalPlan):</p>

    <div style="max-height: 500px; overflow-y: auto; overflow-x:hidden">
        <div ng-repeat="projectLocalAndRegionalPlan in AngularModel.ProjectLocalAndRegionalPlans | orderBy:[getLocalAndRegionalPlanName]">
            <span class="glyphicon glyphicon-trash blue" title="Remove row'" alt="Remove row" ng-click="deleteRow(projectLocalAndRegionalPlan)" style="cursor: pointer"></span>
            <span ng-bind="getLocalAndRegionalPlanName(projectLocalAndRegionalPlan)"></span>
        </div>
    </div>
    @using (Html.BeginForm())
    {
        <input ng-repeat="projectLocalAndRegionalPlan in AngularModel.ProjectLocalAndRegionalPlans" type="hidden" name="@Html.NameFor(x => x.ProjectLocalAndRegionalPlans[0].ProjectID).ToString().Replace("0", "{{$index}}")" value="{{projectLocalAndRegionalPlan.ProjectID}}">
        <input ng-repeat="projectLocalAndRegionalPlan in AngularModel.ProjectLocalAndRegionalPlans" type="hidden" name="@Html.NameFor(x => x.ProjectLocalAndRegionalPlans[0].LocalAndRegionalPlanID).ToString().Replace("0", "{{$index}}")" value="{{projectLocalAndRegionalPlan.LocalAndRegionalPlanID}}">
    }
</div>