@*-----------------------------------------------------------------------
    <copyright file="EditProject.cshtml" company="Tahoe Regional Planning Agency and Sitka Technology Group">
    Copyright (c) Tahoe Regional Planning Agency and Sitka Technology Group. All rights reserved.
    <author>Sitka Technology Group</author>
    </copyright>

    <license>
    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Affero General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Affero General Public License <http://www.gnu.org/licenses/> for more details.

    Source code is available upon request via <support@sitkatech.com>.
    </license>
    -----------------------------------------------------------------------*@
@using LtInfo.Common.HtmlHelperExtensions
@using LtInfo.Common.Models
@using ProjectFirma.Web.Common
@using ProjectFirma.Web.Controllers
@using ProjectFirma.Web.Models
@using ProjectFirma.Web.Views.ProgramIndex
@using ProjectFirma.Web.Views.ProjectCode
@inherits ProjectFirma.Web.Views.GrantAllocation.EditGrantAllocation

@Html.Raw(ViewDataTyped.EditGrantAllocationType.IntroductoryText)

@Html.ValidationSummary()

<script type="text/javascript" src="/Content/Bootstrap-select/bootstrap-select.min.js"></script>
<link rel="stylesheet" href="/Content/Bootstrap-select/bootstrap-select.min.css" type="text/css" />
<script type="text/javascript">
    // <![CDATA[

    jQuery(document).ready(function () {
        jQuery("#@Html.IdFor(m => m.DivisionID)").on("change", function () {
            if (jQuery(this).val() > 0) {
                jQuery("#@Html.IdFor(m => m.RegionID)").prop("disabled", true);
                console.log("divisionID is greater than 0:" + jQuery(this).val());
            } else {
                jQuery("#@Html.IdFor(m => m.RegionID)").prop("disabled", false);
                console.log("divisionID is NOT greater than 0:" + jQuery(this).val());
            }
        });

        jQuery("#@Html.IdFor(m => m.RegionID)").on("change", function() {
            if (jQuery(this).val() > 0) {
                jQuery("#@Html.IdFor(m => m.DivisionID)").prop("disabled", true);
                console.log("regionID is greater than 0:" + jQuery(this).val());
            } else {
                jQuery("#@Html.IdFor(m => m.DivisionID)").prop("disabled", false);
                console.log("regionID is NOT greater than 0:" + jQuery(this).val());
            }
        });

        jQuery("#@Html.IdFor(m => m.RegionID)").change();
        jQuery("#@Html.IdFor(m => m.DivisionID)").change();
    });
    // ]]>
</script>

<p>If you do not see the contact listed for @FieldDefinition.GrantManager.GetFieldDefinitionLabel(), you can <a href="@ViewDataTyped.AddContactUrl" target="_blank">Add a @FieldDefinition.Contact.GetFieldDefinitionLabel()</a></p>

@using (Html.BeginForm())
{
<div class="form-horizontal">
    <div class="form-group">
        <div class="col-xs-3 control-label">
            @Html.LabelWithSugarFor(m => m.GrantID)
        </div>
        <div class="col-xs-6">
            @Html.DropDownListFor(m => m.GrantID, ViewDataTyped.GrantNumbers, new { style = "width: auto;", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.GrantID)
        </div>
    </div>

    <div class="form-group">
        <div class="col-xs-3 control-label">
            @Html.LabelWithSugarFor(m => m.GrantAllocationName)
        </div>
        <div class="col-xs-4">
            @Html.TextBoxFor(m => m.GrantAllocationName, new { style = "width: 100%;", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.GrantAllocationName)
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-3 control-label">
            @Html.LabelWithSugarFor(m => m.OrganizationID)
        </div>
        <div class="col-xs-6">
            @Html.DropDownListFor(m => m.OrganizationID, ViewDataTyped.Organizations, new { style = "width: auto;", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.OrganizationID)
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-3 control-label">
            @Html.LabelWithSugarFor(m => m.GrantManagerID)
        </div>
        <div class="col-xs-6">
            @Html.SearchableDropDownListFor(m => m.GrantManagerID, ViewDataTyped.GrantManagers, new { style = "width: auto;", @class = "form-control selectpicker" })
            @Html.ValidationMessageFor(m => m.GrantManagerID)
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-3 control-label">
            @Html.LabelWithSugarFor(m => m.ProgramManagerPersonIDs)
        </div>
        <div class="col-xs-6">
            @Html.SearchableMultiSelectDropDownListFor(m => m.ProgramManagerPersonIDs, ViewDataTyped.ProgramManagersSelectList, new { style = "width: auto;", @class = "form-control selectpicker" })
            @Html.ValidationMessageFor(m => m.ProgramManagerPersonIDs)
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-3 control-label">
            @Html.LabelWithSugarFor(m => m.ProgramIndexIDProjectCodeIDPairs)
        </div>
        <div class="col-xs-3">
            <input id="@ProgramIndexSearchResults.ProgramIndexSearchInputTextboxID" type="text" class="form-control"
                   name="@ProgramIndexSearchResults.ProgramIndexSearchInputTextboxID" 
                   placeholder="Search @FieldDefinition.ProgramIndex.GetFieldDefinitionLabel()"
                   style="margin-right: -5px; margin-left: auto;" />
        </div>
        <div class="col-xs-3">
            <input id="@ProjectCodeSearchResults.ProjectCodeSearchInputTextboxID" type="text" class="form-control"
                   name="@ProjectCodeSearchResults.ProjectCodeSearchInputTextboxID"
                   placeholder="Search @FieldDefinition.ProjectCode.GetFieldDefinitionLabel()"
                   style="margin-right: -5px; margin-left: auto;" />
            @Html.HiddenFor(x => x.ProgramIndexIDProjectCodeIDPairs)
            @Html.ValidationMessageFor(m => m.ProgramIndexIDProjectCodeIDPairs)
        </div>
        <script type="text/javascript">
            // <![CDATA[
            @*function checkForDeleteOfProjectCodeMultiSelect(myField)
            {
                if (!myField.value)
                {
                    jQuery("#@ProjectCodeSearchResults.ProjectCodeSearchInputTextboxID").val("");
                    jQuery("#@Html.IdFor(x => x.ProjectCodesString)").val("");
                    return true;
                } else
                {
                    jQuery("#@Html.IdFor(x => x.ProjectCodesString)").val(myField.value);
                }
                return false;
            }*@

            jQuery(document).ready(function ()
            {
                jQuery("#@ProjectCodeSearchResults.ProjectCodeSearchInputTextboxID")
                    .autocomplete({
                        source: "@Html.Raw(SitkaRoute<ProjectCodeController>.BuildUrlFromExpression(x => x.FindProjectCode(string.Empty)))",
                        minLength: 1,
                        position: { my: "right top", at: "right bottom" },
                        select: function (event, ui) {
                            //set ProjectCodeID value and display text in input
                            jQuery("#@ProjectCodeSearchResults.ProjectCodeSearchInputTextboxID").val(ui.item.label);
                            @*jQuery("#@Html.IdFor(x => x.ProjectCodeID)").val(ui.item.actualValue);*@
                            event.preventDefault();
                        },
                        html: true
                    });

                jQuery("#@ProgramIndexSearchResults.ProgramIndexSearchInputTextboxID")
                    .autocomplete({
                        source: "@Html.Raw(SitkaRoute<ProgramIndexController>.BuildUrlFromExpression(x => x.FindProgramIndex(string.Empty)))",
                        minLength: 1,
                        position: { my: "right top", at: "right bottom" },
                        select: function (event, ui) {
                            //set ProgramIndexID value and display text in input
                            jQuery("#@ProgramIndexSearchResults.ProgramIndexSearchInputTextboxID").val(ui.item.label);
                            @*jQuery("#@Html.IdFor(x => x.ProgramIndexID)").val(ui.item.actualValue);*@
                            //console.log('ui.item.actualValue: ' + ui.item.actualValue);
                            event.preventDefault();
                        },
                        html: true
                    });
            });
            // ]]>
        </script>
    </div>
    <div class="form-group">
        <div class="col-xs-3 control-label">
            @Html.LabelWithSugarFor(m => m.FederalFundCodeID)
        </div>
        <div class="col-xs-6">
            @Html.DropDownListFor(m => m.FederalFundCodeID, ViewDataTyped.FederalFundCodes, new { style = "width: auto;", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.FederalFundCodeID)
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-3 control-label">
            @Html.LabelWithSugarFor(m => m.RegionID)
        </div>
        <div class="col-xs-3">
            @Html.DropDownListFor(m => m.RegionID, ViewDataTyped.Regions, new { style = "width: 100%;", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.RegionID)
        </div>
        <div class="col-xs-2 control-label">
            @Html.LabelWithSugarFor(m => m.DivisionID)
        </div>
        <div class="col-xs-3">
            @Html.DropDownListFor(m => m.DivisionID, ViewDataTyped.Divisions, new { style = "width: 100%;", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.DivisionID)
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-3 control-label">
            @Html.LabelWithSugarFor(m => m.AllocationAmount)
        </div>
        <div class="col-xs-3">
            @Html.EditorFor(m => m.AllocationAmount, new { style = "width: auto;", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.AllocationAmount)
        </div>
    </div>
    <div class="form-group">
        <div class="col-xs-3 control-label">
            @Html.LabelWithSugarFor(m => m.StartDate)
        </div>
        <div class="col-xs-3">
            @Html.EditorFor(m => m.StartDate, new { style = "width: 100%;", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.StartDate)
        </div>
        <div class="col-xs-2 control-label">
            @Html.LabelWithSugarFor(m => m.EndDate)
        </div>
        <div class="col-xs-3">
            @Html.EditorFor(m => m.EndDate, new { style = "width: 100%;", @class = "form-control" })
            @Html.ValidationMessageFor(m => m.EndDate)
        </div>
    </div>
    <div class="form-group form-group-tight">
        <div class="col-xs-3 control-label">
            @Html.LabelWithSugarFor(x => x.GrantAllocationFileResourceData)
        </div>
        <div class="col-xs-8">
            @Html.EditorFor(x => x.GrantAllocationFileResourceData)
            @*<span class="smallExplanationText">
                            Allowed Extensions: @Model.GetFileExtensions(x => x.LogoFileResourceData)
                        </span>*@
            @Html.ValidationMessageFor(x => x.GrantAllocationFileResourceData)
        </div>
    </div>
</div>
    @Html.HiddenFor(m => m.GrantAllocationID)
}
