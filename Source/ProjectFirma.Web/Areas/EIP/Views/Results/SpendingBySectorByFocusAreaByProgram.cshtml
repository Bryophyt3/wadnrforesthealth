@using ProjectFirma.Web.Areas.EIP.Views.Results
@using LtInfo.Common
@inherits SpendingBySectorByFocusAreaByProgram

@section JavascriptAndStylesContent
{
    <script type="text/javascript">
        // <![CDATA[
        function reloadWithNewCalendarYear()
        {
            var urlTemplate = new Sitka.UrlTemplate(@Html.Raw(ViewDataTyped.SpendingBySectorByFocusAreaByProgramUrl.ToJS()));
            var newUrl = urlTemplate.ParameterReplace(jQuery("#@Html.IdFor(x => x.CalendarYear)").val());
            document.location = newUrl;
        }
        // ]]>
    </script>
}

<div style="margin-top: 10px">
    @Html.LabelFor(x => x.CalendarYear):
    @Html.DropDownListFor(x => x.CalendarYear, ViewDataTyped.CalendarYears, new {onchange = "reloadWithNewCalendarYear()"})
</div>

<div>
    @ViewDataTyped.ProjectFirmaPage.ProjectFirmaPageContentHtmlString
</div>

<div class="summarySection">
    <h2>@(ViewDataTyped.SelectedCalendarYear.HasValue ? ViewDataTyped.SelectedCalendarYear.ToString() : "All") EIP Investments</h2>
    <div class="contentWrapper">
        <table class="gridLayout" style="width: 1050px">
            <tr>
                <th style="text-align: left">EIP Programs</th>
                @foreach (var sector in ViewDataTyped.Sectors)
                {
                    <th style="white-space: nowrap">
                        <div style="display: inline-block; margin-right: 4px; width: 16px; height: 10px; background-color: @sector.LegendColor"></div>@sector.SectorDisplayName</th>
                }
                <th>Total</th>
            </tr>
            @foreach (var groupedByFocusArea in ViewDataTyped.ProgramSectorExpenditures.GroupBy(x => x.FocusAreaName.ToString()).OrderBy(x => x.Key))
            {
                <tr style="border: solid black; border-width: 1px 0 1px 1px; background-color: #cecece">
                    <td style="text-align: left" colspan="@(ViewDataTyped.Sectors.Count + 1)">@Html.Raw(groupedByFocusArea.Key)</td>
                    <td>@groupedByFocusArea.Sum(x => x.ExpenditureAmount).ToStringCurrency()</td>
                </tr>
                foreach (var groupedByProgram in groupedByFocusArea.GroupBy(x => x.ProgramName.ToString()).OrderBy(x => x.Key))
                {
                    <tr>
                        <td style="text-align: left; padding-left: 20px;">@Html.Raw(groupedByProgram.Key)</td>
                        @foreach (var sector in ViewDataTyped.Sectors)
                        {
                            <td>@groupedByProgram.Where(x => x.Sector == sector).Sum(x => x.ExpenditureAmount).ToStringCurrency()</td>
                        }
                        <td>@groupedByProgram.Sum(x => x.ExpenditureAmount).ToStringCurrency()</td>
                    </tr>
                }
            }
            <tr>
                <th style="text-align: left">Grand Total</th>
                @foreach (var sector in ViewDataTyped.Sectors)
                {
                    <th>@ViewDataTyped.ProgramSectorExpenditures.Where(x => x.Sector == sector).Sum(x => x.ExpenditureAmount).ToStringCurrency()</th>
                }
                <th>@ViewDataTyped.ProgramSectorExpenditures.Sum(x => x.ExpenditureAmount).ToStringCurrency()</th>
            </tr>
        </table>
    </div>
</div>