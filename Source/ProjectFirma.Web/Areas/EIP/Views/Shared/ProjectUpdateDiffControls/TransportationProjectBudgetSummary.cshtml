@using ProjectFirma.Web.Areas.EIP.Views.Shared
@using ProjectFirma.Web.Models
@using LtInfo.Common
@using LtInfo.Common.HtmlHelperExtensions
@inherits ProjectFirma.Web.Areas.EIP.Views.Shared.ProjectUpdateDiffControls.TransportationProjectBudgetSummary

@if (ViewDataTyped.TransportationProjectBudgetAmounts.Any())
{ 
    <table class="summaryLayout" style="width: 100%">
        <colgroup>
            <col />
            @foreach (var calendarYear in ViewDataTyped.CalendarYears.OrderBy(x => x.CalendarYear))
            {
                switch (calendarYear.AddedDeletedOrRealElement)
                {
                    case AddedDeletedOrRealElement.AddedElement:
                        <col class="@calendarYear.DisplayCssClass" style="background-color: @HtmlDiffContainer.BackgroundColorForAddedElement">
                        break;
                    case AddedDeletedOrRealElement.DeletedElement:
                    <col class="@calendarYear.DisplayCssClass" style="background-color: @HtmlDiffContainer.BackgroundColorForDeletedElement">
                        break;
                    case AddedDeletedOrRealElement.RealElement:
                    <col>
                        break;
                    default:
                        throw new ArgumentOutOfRangeException();
                }
            }
            <col />
        </colgroup>
        <tr>
            <th>@Html.LabelWithFieldDefinitionFor(FieldDefinition.FundingSource)</th>
            @foreach (var calendarYear in ViewDataTyped.CalendarYears.OrderBy(x => x.CalendarYear))
            {
                <th class="@calendarYear.DisplayCssClass" style="text-align: right">@calendarYear.CalendarYear</th>
            }
            <th>Total</th>
        </tr>
        @foreach (var transportationProjectBudgetAmount2 in ViewDataTyped.TransportationProjectBudgetAmounts.OrderBy(x => x.FundingSourceName))
        {
            <tr class="@transportationProjectBudgetAmount2.DisplayCssClass">
                <td colspan="@(ViewDataTyped.CalendarYears.Count + 1)">@transportationProjectBudgetAmount2.FundingSourceName</td>
                <th>
                    <span class="normalDollars">@transportationProjectBudgetAmount2.TransportationProjectCostTypeCalendarYearBudgets.Sum(x => x.CalendarYearBudget.Values.Sum()).ToIntString()</span>
                </th>
            </tr>
            foreach (var transportationProjectCostType in ViewDataTyped.TransportationProjectCostTypes.OrderBy(x => x.SortOrder))
            {
                var current = transportationProjectBudgetAmount2.TransportationProjectCostTypeCalendarYearBudgets.Single(x => x.TransportationProjectCostType == transportationProjectCostType);
                <tr class="@transportationProjectBudgetAmount2.DisplayCssClass">
                    <td>@transportationProjectCostType.TransportationProjectCostTypeDisplayName</td>
                    @foreach (var calendarYear in ViewDataTyped.CalendarYears.OrderBy(x => x.CalendarYear))
                    {
                        <td class="@calendarYear.DisplayCssClass">
                            <span class="normalDollars @calendarYear.DisplayCssClass">@(current.CalendarYearBudget.ContainsKey(calendarYear.CalendarYear) ? current.CalendarYearBudget[calendarYear.CalendarYear].ToIntString() : string.Empty)</span>
                        </td>
                    }
                    <th>
                        <span class="normalDollars">@current.CalendarYearBudget.Sum(x => x.Value).ToIntString()</span>
                    </th>
                </tr>
            }
        }
        <tr>
            <th>Grand Total</th>
            @foreach (var calendarYear in ViewDataTyped.CalendarYears.OrderBy(x => x.CalendarYear))
            {
                <th class="@calendarYear.DisplayCssClass">
                    <span class="normalDollars">@(calendarYear.IsRealEntry ? ViewDataTyped.TransportationProjectBudgetAmounts.SelectMany(x => x.TransportationProjectCostTypeCalendarYearBudgets.SelectMany(y => y.CalendarYearBudget)).Where(x => x.Key == calendarYear.CalendarYear).Sum(x => x.Value).ToIntString() : string.Empty)</span>
                </th>
            }
            <th>
                <span class="normalDollars">@ViewDataTyped.TransportationProjectBudgetAmounts.SelectMany(x => x.TransportationProjectCostTypeCalendarYearBudgets.SelectMany(y => y.CalendarYearBudget)).Sum(x => x.Value).ToIntString()</span>
            </th>
        </tr>
    </table>
}
