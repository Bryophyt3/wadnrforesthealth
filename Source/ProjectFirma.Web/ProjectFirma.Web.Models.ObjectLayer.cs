//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_AccomplishmentsDashboardFundingDisplayType_AccomplishmentsDashboardFundingDisplayTypeID", "AccomplishmentsDashboardFundingDisplayType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.AccomplishmentsDashboardFundingDisplayType), "TenantAttribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TenantAttribute), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_AssessmentGoal_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "AssessmentGoal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.AssessmentGoal), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_AssessmentSubGoal_AssessmentGoal_AssessmentGoalID", "AssessmentGoal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.AssessmentGoal), "AssessmentSubGoal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.AssessmentSubGoal), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_AssessmentQuestion_AssessmentSubGoal_AssessmentSubGoalID", "AssessmentSubGoal", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.AssessmentSubGoal), "AssessmentQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.AssessmentQuestion), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_AssessmentQuestion_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "AssessmentQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.AssessmentQuestion), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectAssessmentQuestion_AssessmentQuestion_AssessmentQuestionID", "AssessmentQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.AssessmentQuestion), "ProjectAssessmentQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectAssessmentQuestion), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_AssessmentSubGoal_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "AssessmentSubGoal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.AssessmentSubGoal), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_AuditLog_AuditLogEventType_AuditLogEventTypeID", "AuditLogEventType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.AuditLogEventType), "AuditLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.AuditLog), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_AuditLog_Person_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Person), "AuditLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.AuditLog), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_AuditLog_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "AuditLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.AuditLog), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Classification_ClassificationSystem_ClassificationSystemID", "ClassificationSystem", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ClassificationSystem), "Classification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Classification), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Classification_FileResource_KeyImageFileResourceID_FileResourceID", "FileResource", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.FileResource), "Classification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Classification), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Classification_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "Classification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Classification), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ClassificationPerformanceMeasure_Classification_ClassificationID", "Classification", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Classification), "ClassificationPerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ClassificationPerformanceMeasure), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectClassification_Classification_ClassificationID", "Classification", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Classification), "ProjectClassification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectClassification), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ClassificationPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasure), "ClassificationPerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ClassificationPerformanceMeasure), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ClassificationPerformanceMeasure_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ClassificationPerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ClassificationPerformanceMeasure), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ClassificationSystem_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ClassificationSystem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ClassificationSystem), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ContractorTimeActivity_FundingSource_FundingSourceID", "FundingSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FundingSource), "ContractorTimeActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ContractorTimeActivity), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ContractorTimeActivity_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "ContractorTimeActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ContractorTimeActivity), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ContractorTimeActivity_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ContractorTimeActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ContractorTimeActivity), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_CostParameterSet_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "CostParameterSet", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.CostParameterSet), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_County_StateProvince_StateProvinceID", "StateProvince", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.StateProvince), "County", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.County), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_County_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "County", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.County), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_CustomPage_CustomPageDisplayType_CustomPageDisplayTypeID", "CustomPageDisplayType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.CustomPageDisplayType), "CustomPage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.CustomPage), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_CustomPage_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "CustomPage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.CustomPage), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_CustomPageImage_CustomPage_CustomPageID", "CustomPage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.CustomPage), "CustomPageImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.CustomPageImage), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_CustomPageImage_FileResource_FileResourceID", "FileResource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FileResource), "CustomPageImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.CustomPageImage), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_CustomPageImage_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "CustomPageImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.CustomPageImage), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_FieldDefinitionData_FieldDefinition_FieldDefinitionID", "FieldDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FieldDefinition), "FieldDefinitionData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.FieldDefinitionData), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectPersonRelationshipType_ProjectPersonRelationshipType", "FieldDefinition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FieldDefinition), "ProjectPersonRelationshipType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectPersonRelationshipType), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_FieldDefinitionData_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "FieldDefinitionData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.FieldDefinitionData), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_FieldDefinitionDataImage_FieldDefinitionData_FieldDefinitionDataID", "FieldDefinitionData", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FieldDefinitionData), "FieldDefinitionDataImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.FieldDefinitionDataImage), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_FieldDefinitionDataImage_FileResource_FileResourceID", "FileResource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FileResource), "FieldDefinitionDataImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.FieldDefinitionDataImage), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_FieldDefinitionDataImage_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "FieldDefinitionDataImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.FieldDefinitionDataImage), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_FileResource_FileResourceMimeType_FileResourceMimeTypeID", "FileResourceMimeType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FileResourceMimeType), "FileResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.FileResource), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_FileResource_Person_CreatePersonID_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Person), "FileResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.FileResource), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_FileResource_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "FileResource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.FileResource), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_FirmaHomePageImage_FileResource_FileResourceID", "FileResource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FileResource), "FirmaHomePageImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.FirmaHomePageImage), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_FirmaPageImage_FileResource_FileResourceID", "FileResource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FileResource), "FirmaPageImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.FirmaPageImage), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_MonitoringProgramDocument_FileResource_FileResourceID", "FileResource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FileResource), "MonitoringProgramDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.MonitoringProgramDocument), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Organization_FileResource_LogoFileResourceID_FileResourceID", "FileResource", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.FileResource), "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Organization), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectDocument_FileResource_FileResourceID", "FileResource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FileResource), "ProjectDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectDocument), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectDocumentUpdate_FileResource_FileResourceID", "FileResource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FileResource), "ProjectDocumentUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectDocumentUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectImage_FileResource_FileResourceID", "FileResource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FileResource), "ProjectImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectImage), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectImageUpdate_FileResource_FileResourceID", "FileResource", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.FileResource), "ProjectImageUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectImageUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_FileResource_TenantBannerLogoFileResourceID_FileResourceID", "FileResource", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.FileResource), "TenantAttribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TenantAttribute), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_FileResource_TenantSquareLogoFileResourceID_FileResourceID", "FileResource", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.FileResource), "TenantAttribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TenantAttribute), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_FileResource_TenantStyleSheetFileResourceID_FileResourceID", "FileResource", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.FileResource), "TenantAttribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TenantAttribute), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_FirmaHomePageImage_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "FirmaHomePageImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.FirmaHomePageImage), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_FirmaPage_FirmaPageType_FirmaPageTypeID", "FirmaPageType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FirmaPageType), "FirmaPage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.FirmaPage), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_FirmaPage_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "FirmaPage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.FirmaPage), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_FirmaPageImage_FirmaPage_FirmaPageID", "FirmaPage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FirmaPage), "FirmaPageImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.FirmaPageImage), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_FirmaPageImage_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "FirmaPageImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.FirmaPageImage), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_FirmaPageType_FirmaPageRenderType_FirmaPageRenderTypeID", "FirmaPageRenderType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FirmaPageRenderType), "FirmaPageType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.FirmaPageType), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_FundingSource_Organization_OrganizationID", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Organization), "FundingSource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.FundingSource), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_FundingSource_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "FundingSource", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.FundingSource), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectBudget_FundingSource_FundingSourceID", "FundingSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FundingSource), "ProjectBudget", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectBudget), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectBudgetUpdate_FundingSource_FundingSourceID", "FundingSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FundingSource), "ProjectBudgetUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectBudgetUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceExpenditure_FundingSource_FundingSourceID", "FundingSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FundingSource), "ProjectFundingSourceExpenditure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectFundingSourceExpenditure), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceExpenditureUpdate_FundingSource_FundingSourceID", "FundingSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FundingSource), "ProjectFundingSourceExpenditureUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectFundingSourceExpenditureUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceRequest_FundingSource_FundingSourceID", "FundingSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FundingSource), "ProjectFundingSourceRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectFundingSourceRequest), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceRequestUpdate_FundingSource_FundingSourceID", "FundingSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FundingSource), "ProjectFundingSourceRequestUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectFundingSourceRequestUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TreatmentActivity_FundingSource_FundingSourceID", "FundingSource", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.FundingSource), "TreatmentActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TreatmentActivity), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_GeospatialArea_GeospatialAreaType_GeospatialAreaTypeID", "GeospatialAreaType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.GeospatialAreaType), "GeospatialArea", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.GeospatialArea), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_GeospatialArea_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "GeospatialArea", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.GeospatialArea), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PersonStewardGeospatialArea_GeospatialArea_GeospatialAreaID", "GeospatialArea", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.GeospatialArea), "PersonStewardGeospatialArea", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PersonStewardGeospatialArea), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialArea_GeospatialArea_GeospatialAreaID", "GeospatialArea", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.GeospatialArea), "ProjectGeospatialArea", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectGeospatialArea), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaUpdate_GeospatialArea_GeospatialAreaID", "GeospatialArea", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.GeospatialArea), "ProjectGeospatialAreaUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectGeospatialAreaUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_GeospatialAreaType_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "GeospatialAreaType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.GeospatialAreaType), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaTypeNote_GeospatialAreaType_GeospatialAreaTypeID", "GeospatialAreaType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.GeospatialAreaType), "ProjectGeospatialAreaTypeNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectGeospatialAreaTypeNote), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaTypeNoteUpdate_GeospatialAreaType_GeospatialAreaTypeID", "GeospatialAreaType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.GeospatialAreaType), "ProjectGeospatialAreaTypeNoteUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectGeospatialAreaTypeNoteUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureSubcategory_GoogleChartType_GoogleChartTypeID", "GoogleChartType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.GoogleChartType), "PerformanceMeasureSubcategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureSubcategory), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Grant_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "Grant", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Grant), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_GrantAllocation_Grant_GrantID", "Grant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Grant), "GrantAllocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.GrantAllocation), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_GrantAllocation_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "GrantAllocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.GrantAllocation), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ImportExternalProjectStaging_Person_CreatePersonID_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Person), "ImportExternalProjectStaging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ImportExternalProjectStaging), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ImportExternalProjectStaging_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ImportExternalProjectStaging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ImportExternalProjectStaging), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_MappedRegion_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "MappedRegion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.MappedRegion), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasure_MeasurementUnitType_MeasurementUnitTypeID", "MeasurementUnitType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.MeasurementUnitType), "PerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasure), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeType_MeasurementUnitType_MeasurementUnitTypeID", "MeasurementUnitType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.MeasurementUnitType), "ProjectCustomAttributeType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectCustomAttributeType), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_MonitoringProgram_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "MonitoringProgram", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.MonitoringProgram), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_MonitoringProgramDocument_MonitoringProgram_MonitoringProgramID", "MonitoringProgram", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.MonitoringProgram), "MonitoringProgramDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.MonitoringProgramDocument), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_MonitoringProgramPartner_MonitoringProgram_MonitoringProgramID", "MonitoringProgram", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.MonitoringProgram), "MonitoringProgramPartner", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.MonitoringProgramPartner), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureMonitoringProgram_MonitoringProgram_MonitoringProgramID", "MonitoringProgram", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.MonitoringProgram), "PerformanceMeasureMonitoringProgram", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureMonitoringProgram), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_MonitoringProgramDocument_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "MonitoringProgramDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.MonitoringProgramDocument), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_MonitoringProgramPartner_Organization_OrganizationID", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Organization), "MonitoringProgramPartner", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.MonitoringProgramPartner), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_MonitoringProgramPartner_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "MonitoringProgramPartner", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.MonitoringProgramPartner), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Notification_NotificationType_NotificationTypeID", "NotificationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.NotificationType), "Notification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Notification), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Notification_Person_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Person), "Notification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Notification), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Notification_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "Notification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Notification), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_NotificationProject_Notification_NotificationID", "Notification", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Notification), "NotificationProject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.NotificationProject), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_NotificationProject_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "NotificationProject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.NotificationProject), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_NotificationProject_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "NotificationProject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.NotificationProject), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Organization_OrganizationType_OrganizationTypeID", "OrganizationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.OrganizationType), "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Organization), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Organization_Person_PrimaryContactPersonID_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.Person), "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Organization), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Organization_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Organization), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_OrganizationBoundaryStaging_Organization_OrganizationID", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Organization), "OrganizationBoundaryStaging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.OrganizationBoundaryStaging), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Person_Organization_OrganizationID", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.Organization), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Person), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PersonStewardOrganization_Organization_OrganizationID", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Organization), "PersonStewardOrganization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PersonStewardOrganization), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganization_Organization_OrganizationID", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Organization), "ProjectOrganization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectOrganization), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganizationUpdate_Organization_OrganizationID", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Organization), "ProjectOrganizationUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectOrganizationUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_OrganizationBoundaryStaging_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "OrganizationBoundaryStaging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.OrganizationBoundaryStaging), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_OrganizationType_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "OrganizationType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.OrganizationType), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_OrganizationTypeRelationshipType_OrganizationType_OrganizationTypeID", "OrganizationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.OrganizationType), "OrganizationTypeRelationshipType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.OrganizationTypeRelationshipType), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_SnapshotOrganizationTypeExpenditure_OrganizationType_OrganizationTypeID", "OrganizationType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.OrganizationType), "SnapshotOrganizationTypeExpenditure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.SnapshotOrganizationTypeExpenditure), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_OrganizationTypeRelationshipType_RelationshipType_RelationshipTypeID", "RelationshipType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.RelationshipType), "OrganizationTypeRelationshipType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.OrganizationTypeRelationshipType), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_OrganizationTypeRelationshipType_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "OrganizationTypeRelationshipType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.OrganizationTypeRelationshipType), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasure_PerformanceMeasureDataSourceType_PerformanceMeasureDataSourceTypeID", "PerformanceMeasureDataSourceType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasureDataSourceType), "PerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasure), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasure_PerformanceMeasureType_PerformanceMeasureTypeID", "PerformanceMeasureType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasureType), "PerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasure), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasure_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "PerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasure), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActual_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasure), "PerformanceMeasureActual", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureActual), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasure), "PerformanceMeasureActualSubcategoryOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureActualSubcategoryOption), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasure), "PerformanceMeasureActualSubcategoryOptionUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureActualSubcategoryOptionUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualUpdate_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasure), "PerformanceMeasureActualUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureActualUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpected_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasure), "PerformanceMeasureExpected", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureExpected), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasure), "PerformanceMeasureExpectedSubcategoryOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureExpectedSubcategoryOption), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureMonitoringProgram_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasure), "PerformanceMeasureMonitoringProgram", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureMonitoringProgram), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureNote_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasure), "PerformanceMeasureNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureNote), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureSubcategory_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasure), "PerformanceMeasureSubcategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureSubcategory), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasure), "SnapshotPerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.SnapshotPerformanceMeasure), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasure), "SnapshotPerformanceMeasureSubcategoryOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.SnapshotPerformanceMeasureSubcategoryOption), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TaxonomyLeafPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasure), "TaxonomyLeafPerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TaxonomyLeafPerformanceMeasure), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActual_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "PerformanceMeasureActual", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureActual), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActual_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "PerformanceMeasureActual", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureActual), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureActual_PerformanceMeasureActualID", "PerformanceMeasureActual", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasureActual), "PerformanceMeasureActualSubcategoryOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureActualSubcategoryOption), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasureSubcategory), "PerformanceMeasureActualSubcategoryOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureActualSubcategoryOption), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasureSubcategoryOption), "PerformanceMeasureActualSubcategoryOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureActualSubcategoryOption), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOption_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "PerformanceMeasureActualSubcategoryOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureActualSubcategoryOption), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureActualUpdate_PerformanceMeasureActualUpdateID", "PerformanceMeasureActualUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasureActualUpdate), "PerformanceMeasureActualSubcategoryOptionUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureActualSubcategoryOptionUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasureSubcategory), "PerformanceMeasureActualSubcategoryOptionUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureActualSubcategoryOptionUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasureSubcategoryOption), "PerformanceMeasureActualSubcategoryOptionUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureActualSubcategoryOptionUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOptionUpdate_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "PerformanceMeasureActualSubcategoryOptionUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureActualSubcategoryOptionUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), "PerformanceMeasureActualUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureActualUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualUpdate_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "PerformanceMeasureActualUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureActualUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpected_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "PerformanceMeasureExpected", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureExpected), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpected_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "PerformanceMeasureExpected", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureExpected), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureExpected_PerformanceMeasureExpectedID", "PerformanceMeasureExpected", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasureExpected), "PerformanceMeasureExpectedSubcategoryOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureExpectedSubcategoryOption), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasureSubcategory), "PerformanceMeasureExpectedSubcategoryOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureExpectedSubcategoryOption), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasureSubcategoryOption), "PerformanceMeasureExpectedSubcategoryOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureExpectedSubcategoryOption), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpectedSubcategoryOption_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "PerformanceMeasureExpectedSubcategoryOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureExpectedSubcategoryOption), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureMonitoringProgram_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "PerformanceMeasureMonitoringProgram", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureMonitoringProgram), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureNote_Person_CreatePersonID_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.Person), "PerformanceMeasureNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureNote), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureNote_Person_UpdatePersonID_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.Person), "PerformanceMeasureNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureNote), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureNote_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "PerformanceMeasureNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureNote), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureSubcategory_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "PerformanceMeasureSubcategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureSubcategory), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasureSubcategory), "PerformanceMeasureSubcategoryOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureSubcategoryOption), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasureSubcategory), "SnapshotPerformanceMeasureSubcategoryOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.SnapshotPerformanceMeasureSubcategoryOption), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureSubcategoryOption_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "PerformanceMeasureSubcategoryOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PerformanceMeasureSubcategoryOption), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.PerformanceMeasureSubcategoryOption), "SnapshotPerformanceMeasureSubcategoryOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.SnapshotPerformanceMeasureSubcategoryOption), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Person_Person_AddedByPersonID_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.Person), "Person1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Person), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Person_Role_RoleID", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Role), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Person), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Person_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Person), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PersonStewardGeospatialArea_Person_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Person), "PersonStewardGeospatialArea", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PersonStewardGeospatialArea), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PersonStewardOrganization_Person_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Person), "PersonStewardOrganization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PersonStewardOrganization), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PersonStewardTaxonomyBranch_Person_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Person), "PersonStewardTaxonomyBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PersonStewardTaxonomyBranch), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Project_Person_PrimaryContactPersonID_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.Person), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Project), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Project_Person_ProposingPersonID_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.Person), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Project), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Project_Person_ReviewedByPersonID_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.Person), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Project), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectInternalNote_Person_CreatePersonID_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.Person), "ProjectInternalNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectInternalNote), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectInternalNote_Person_UpdatePersonID_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.Person), "ProjectInternalNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectInternalNote), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationStaging_Person_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Person), "ProjectLocationStaging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectLocationStaging), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationStagingUpdate_Person_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Person), "ProjectLocationStagingUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectLocationStagingUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectNote_Person_CreatePersonID_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.Person), "ProjectNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectNote), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectNote_Person_UpdatePersonID_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.Person), "ProjectNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectNote), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectNoteUpdate_Person_CreatePersonID_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.Person), "ProjectNoteUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectNoteUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectNoteUpdate_Person_UpdatePersonID_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.Person), "ProjectNoteUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectNoteUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectPerson_Person_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Person), "ProjectPerson", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectPerson), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectPersonUpdate_Person_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Person), "ProjectPersonUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectPersonUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdate_Person_PrimaryContactPersonID_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.Person), "ProjectUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateBatch_Person_LastUpdatePersonID_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Person), "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateHistory_Person_UpdatePersonID_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Person), "ProjectUpdateHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectUpdateHistory), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_SupportRequestLog_Person_RequestPersonID_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.Person), "SupportRequestLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.SupportRequestLog), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_Person_PrimaryContactPersonID_PersonID", "Person", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.Person), "TenantAttribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TenantAttribute), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PersonStewardGeospatialArea_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "PersonStewardGeospatialArea", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PersonStewardGeospatialArea), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PersonStewardOrganization_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "PersonStewardOrganization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PersonStewardOrganization), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PersonStewardTaxonomyBranch_TaxonomyBranch_TaxonomyBranchID", "TaxonomyBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.TaxonomyBranch), "PersonStewardTaxonomyBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PersonStewardTaxonomyBranch), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_PersonStewardTaxonomyBranch_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "PersonStewardTaxonomyBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.PersonStewardTaxonomyBranch), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Project_ProjectApprovalStatus_ProjectApprovalStatusID", "ProjectApprovalStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectApprovalStatus), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Project), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Project_ProjectLocationSimpleType_ProjectLocationSimpleTypeID", "ProjectLocationSimpleType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectLocationSimpleType), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Project), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Project_ProjectStage_ProjectStageID", "ProjectStage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectStage), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Project), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Project_TaxonomyLeaf_TaxonomyLeafID", "TaxonomyLeaf", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.TaxonomyLeaf), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Project), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Project_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Project), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectAssessmentQuestion_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "ProjectAssessmentQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectAssessmentQuestion), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectBudget_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "ProjectBudget", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectBudget), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectClassification_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "ProjectClassification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectClassification), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttribute_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "ProjectCustomAttribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectCustomAttribute), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectDocument_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "ProjectDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectDocument), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectExemptReportingYear_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "ProjectExemptReportingYear", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectExemptReportingYear), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectExternalLink_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "ProjectExternalLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectExternalLink), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceExpenditure_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "ProjectFundingSourceExpenditure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectFundingSourceExpenditure), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceRequest_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "ProjectFundingSourceRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectFundingSourceRequest), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialArea_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "ProjectGeospatialArea", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectGeospatialArea), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaTypeNote_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "ProjectGeospatialAreaTypeNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectGeospatialAreaTypeNote), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectImage_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "ProjectImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectImage), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectInternalNote_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "ProjectInternalNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectInternalNote), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectLocation_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "ProjectLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectLocation), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationStaging_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "ProjectLocationStaging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectLocationStaging), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectNote_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "ProjectNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectNote), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganization_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "ProjectOrganization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectOrganization), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectPerson_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "ProjectPerson", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectPerson), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectTag_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "ProjectTag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectTag), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateBatch_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_SnapshotProject_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "SnapshotProject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.SnapshotProject), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TreatmentActivity_Project_ProjectID", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Project), "TreatmentActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TreatmentActivity), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectAssessmentQuestion_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectAssessmentQuestion", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectAssessmentQuestion), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectBudget_ProjectCostType_ProjectCostTypeID", "ProjectCostType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectCostType), "ProjectBudget", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectBudget), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectBudget_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectBudget", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectBudget), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectBudgetUpdate_ProjectCostType_ProjectCostTypeID", "ProjectCostType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectCostType), "ProjectBudgetUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectBudgetUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectBudgetUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), "ProjectBudgetUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectBudgetUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectBudgetUpdate_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectBudgetUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectBudgetUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectClassification_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectClassification", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectClassification), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectCreateSection_ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID", "ProjectWorkflowSectionGrouping", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectWorkflowSectionGrouping), "ProjectCreateSection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectCreateSection), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttribute_ProjectCustomAttributeType_ProjectCustomAttributeTypeID", "ProjectCustomAttributeType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectCustomAttributeType), "ProjectCustomAttribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectCustomAttribute), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttribute_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectCustomAttribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectCustomAttribute), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeValue_ProjectCustomAttribute_ProjectCustomAttributeID", "ProjectCustomAttribute", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectCustomAttribute), "ProjectCustomAttributeValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectCustomAttributeValue), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeType_ProjectCustomAttributeDataType_ProjectCustomAttributeDataTypeID", "ProjectCustomAttributeDataType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectCustomAttributeDataType), "ProjectCustomAttributeType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectCustomAttributeType), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeType_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectCustomAttributeType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectCustomAttributeType), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeUpdate_ProjectCustomAttributeType_ProjectCustomAttributeTypeID", "ProjectCustomAttributeType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectCustomAttributeType), "ProjectCustomAttributeUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectCustomAttributeUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), "ProjectCustomAttributeUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectCustomAttributeUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeUpdate_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectCustomAttributeUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectCustomAttributeUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeUpdateValue_ProjectCustomAttributeUpdate_ProjectCustomAttributeUpdateID", "ProjectCustomAttributeUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectCustomAttributeUpdate), "ProjectCustomAttributeUpdateValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectCustomAttributeUpdateValue), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeUpdateValue_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectCustomAttributeUpdateValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectCustomAttributeUpdateValue), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeValue_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectCustomAttributeValue", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectCustomAttributeValue), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectDocument_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectDocument", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectDocument), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectDocumentUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), "ProjectDocumentUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectDocumentUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectDocumentUpdate_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectDocumentUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectDocumentUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectExemptReportingYear_ProjectExemptReportingType_ProjectExemptReportingTypeID", "ProjectExemptReportingType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectExemptReportingType), "ProjectExemptReportingYear", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectExemptReportingYear), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectExemptReportingYearUpdate_ProjectExemptReportingType_ProjectExemptReportingTypeID", "ProjectExemptReportingType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectExemptReportingType), "ProjectExemptReportingYearUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectExemptReportingYearUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectExemptReportingYear_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectExemptReportingYear", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectExemptReportingYear), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectExemptReportingYearUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), "ProjectExemptReportingYearUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectExemptReportingYearUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectExemptReportingYearUpdate_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectExemptReportingYearUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectExemptReportingYearUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectExternalLink_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectExternalLink", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectExternalLink), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectExternalLinkUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), "ProjectExternalLinkUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectExternalLinkUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectExternalLinkUpdate_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectExternalLinkUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectExternalLinkUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceExpenditure_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectFundingSourceExpenditure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectFundingSourceExpenditure), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceExpenditureUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), "ProjectFundingSourceExpenditureUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectFundingSourceExpenditureUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceExpenditureUpdate_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectFundingSourceExpenditureUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectFundingSourceExpenditureUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceRequest_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectFundingSourceRequest", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectFundingSourceRequest), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceRequestUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), "ProjectFundingSourceRequestUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectFundingSourceRequestUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceRequestUpdate_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectFundingSourceRequestUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectFundingSourceRequestUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialArea_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectGeospatialArea", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectGeospatialArea), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaTypeNote_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectGeospatialAreaTypeNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectGeospatialAreaTypeNote), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaTypeNoteUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), "ProjectGeospatialAreaTypeNoteUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectGeospatialAreaTypeNoteUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaTypeNoteUpdate_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectGeospatialAreaTypeNoteUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectGeospatialAreaTypeNoteUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), "ProjectGeospatialAreaUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectGeospatialAreaUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaUpdate_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectGeospatialAreaUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectGeospatialAreaUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectImage_ProjectImageTiming_ProjectImageTimingID", "ProjectImageTiming", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectImageTiming), "ProjectImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectImage), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectImage_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectImage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectImage), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectImageUpdate_ProjectImage_ProjectImageID", "ProjectImage", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.ProjectImage), "ProjectImageUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectImageUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectImageUpdate_ProjectImageTiming_ProjectImageTimingID", "ProjectImageTiming", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectImageTiming), "ProjectImageUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectImageUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectImageUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), "ProjectImageUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectImageUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectImageUpdate_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectImageUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectImageUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectInternalNote_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectInternalNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectInternalNote), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectLocation_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectLocation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectLocation), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdate_ProjectLocationSimpleType_ProjectLocationSimpleTypeID", "ProjectLocationSimpleType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectLocationSimpleType), "ProjectUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationStaging_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectLocationStaging", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectLocationStaging), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationStagingUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), "ProjectLocationStagingUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectLocationStagingUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationStagingUpdate_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectLocationStagingUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectLocationStagingUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), "ProjectLocationUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectLocationUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationUpdate_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectLocationUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectLocationUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectNote_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectNote", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectNote), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectNoteUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), "ProjectNoteUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectNoteUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectNoteUpdate_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectNoteUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectNoteUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganization_RelationshipType_RelationshipTypeID", "RelationshipType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.RelationshipType), "ProjectOrganization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectOrganization), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganization_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectOrganization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectOrganization), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganizationUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), "ProjectOrganizationUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectOrganizationUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganizationUpdate_RelationshipType_RelationshipTypeID", "RelationshipType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.RelationshipType), "ProjectOrganizationUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectOrganizationUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganizationUpdate_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectOrganizationUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectOrganizationUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectPerson_ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID", "ProjectPersonRelationshipType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectPersonRelationshipType), "ProjectPerson", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectPerson), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectPerson_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectPerson", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectPerson), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectPersonUpdate_ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID", "ProjectPersonRelationshipType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectPersonRelationshipType), "ProjectPersonUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectPersonUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectPersonUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), "ProjectPersonUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectPersonUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectPersonUpdate_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectPersonUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectPersonUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdate_ProjectStage_ProjectStageID", "ProjectStage", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectStage), "ProjectUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_ProjectStewardshipAreaType_ProjectStewardshipAreaTypeID", "ProjectStewardshipAreaType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(ProjectFirma.Web.Models.ProjectStewardshipAreaType), "TenantAttribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TenantAttribute), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectTag_Tag_TagID", "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tag), "ProjectTag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectTag), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectTag_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectTag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectTag), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), "ProjectUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdate_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectUpdate", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectUpdate), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateBatch_ProjectUpdateState_ProjectUpdateStateID", "ProjectUpdateState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectUpdateState), "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateBatch_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateHistory_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectUpdateBatch), "ProjectUpdateHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectUpdateHistory), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateConfiguration_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectUpdateConfiguration", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectUpdateConfiguration), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateHistory_ProjectUpdateState_ProjectUpdateStateID", "ProjectUpdateState", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectUpdateState), "ProjectUpdateHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectUpdateHistory), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateHistory_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "ProjectUpdateHistory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectUpdateHistory), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateSection_ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID", "ProjectWorkflowSectionGrouping", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.ProjectWorkflowSectionGrouping), "ProjectUpdateSection", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.ProjectUpdateSection), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_RelationshipType_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "RelationshipType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.RelationshipType), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Snapshot_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "Snapshot", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Snapshot), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_SnapshotOrganizationTypeExpenditure_Snapshot_SnapshotID", "Snapshot", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Snapshot), "SnapshotOrganizationTypeExpenditure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.SnapshotOrganizationTypeExpenditure), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasure_Snapshot_SnapshotID", "Snapshot", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Snapshot), "SnapshotPerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.SnapshotPerformanceMeasure), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_SnapshotProject_Snapshot_SnapshotID", "Snapshot", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Snapshot), "SnapshotProject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.SnapshotProject), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_SnapshotOrganizationTypeExpenditure_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "SnapshotOrganizationTypeExpenditure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.SnapshotOrganizationTypeExpenditure), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasure_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "SnapshotPerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.SnapshotPerformanceMeasure), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasureSubcategoryOption_SnapshotPerformanceMeasure_SnapshotPerformanceMeasureID", "SnapshotPerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.SnapshotPerformanceMeasure), "SnapshotPerformanceMeasureSubcategoryOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.SnapshotPerformanceMeasureSubcategoryOption), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasureSubcategoryOption_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "SnapshotPerformanceMeasureSubcategoryOption", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.SnapshotPerformanceMeasureSubcategoryOption), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_SnapshotProject_SnapshotProjectType_SnapshotProjectTypeID", "SnapshotProjectType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.SnapshotProjectType), "SnapshotProject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.SnapshotProject), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_SnapshotProject_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "SnapshotProject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.SnapshotProject), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_StateProvince_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "StateProvince", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.StateProvince), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_SupportRequestLog_SupportRequestType_SupportRequestTypeID", "SupportRequestType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.SupportRequestType), "SupportRequestLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.SupportRequestLog), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_SupportRequestLog_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "SupportRequestLog", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.SupportRequestLog), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_Tag_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.Tag), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TaxonomyBranch_TaxonomyTrunk_TaxonomyTrunkID", "TaxonomyTrunk", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.TaxonomyTrunk), "TaxonomyBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TaxonomyBranch), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TaxonomyBranch_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "TaxonomyBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TaxonomyBranch), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TaxonomyLeaf_TaxonomyBranch_TaxonomyBranchID", "TaxonomyBranch", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.TaxonomyBranch), "TaxonomyLeaf", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TaxonomyLeaf), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TaxonomyLeaf_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "TaxonomyLeaf", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TaxonomyLeaf), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TaxonomyLeafPerformanceMeasure_TaxonomyLeaf_TaxonomyLeafID", "TaxonomyLeaf", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.TaxonomyLeaf), "TaxonomyLeafPerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TaxonomyLeafPerformanceMeasure), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TaxonomyLeafPerformanceMeasure_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "TaxonomyLeafPerformanceMeasure", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TaxonomyLeafPerformanceMeasure), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_TaxonomyLevel_AssociatePerfomanceMeasureTaxonomyLevelID_TaxonomyLevelID", "TaxonomyLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.TaxonomyLevel), "TenantAttribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TenantAttribute), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_TaxonomyLevel_TaxonomyLevelID", "TaxonomyLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.TaxonomyLevel), "TenantAttribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TenantAttribute), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TaxonomyTrunk_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "TaxonomyTrunk", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TaxonomyTrunk), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TechnicalAssistanceParameter_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "TechnicalAssistanceParameter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TechnicalAssistanceParameter), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "TenantAttribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TenantAttribute), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TrainingVideo_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "TrainingVideo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TrainingVideo), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_TreatmentActivity_Tenant_TenantID", "Tenant", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Tenant), "TreatmentActivity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.TreatmentActivity), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_JobParameter_Job_JobId_Id", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Job), "JobParameter", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.JobParameter), true)]
[assembly: EdmRelationshipAttribute("ProjectFirma.Web.Models", "FK_State_Job_JobId_Id", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ProjectFirma.Web.Models.Job), "State", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ProjectFirma.Web.Models.State), true)]

#endregion

namespace ProjectFirma.Web.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DatabaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DatabaseEntities object using the connection string found in the 'DatabaseEntities' section of the application configuration file.
        /// </summary>
        public DatabaseEntities() : base("name=DatabaseEntities", "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseEntities object.
        /// </summary>
        public DatabaseEntities(string connectionString) : base(connectionString, "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DatabaseEntities object.
        /// </summary>
        public DatabaseEntities(EntityConnection connection) : base(connection, "DatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccomplishmentsDashboardFundingDisplayType> AccomplishmentsDashboardFundingDisplayType
        {
            get
            {
                if ((_AccomplishmentsDashboardFundingDisplayType == null))
                {
                    _AccomplishmentsDashboardFundingDisplayType = base.CreateObjectSet<AccomplishmentsDashboardFundingDisplayType>("AccomplishmentsDashboardFundingDisplayType");
                }
                return _AccomplishmentsDashboardFundingDisplayType;
            }
        }
        private ObjectSet<AccomplishmentsDashboardFundingDisplayType> _AccomplishmentsDashboardFundingDisplayType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ActivityType> ActivityType
        {
            get
            {
                if ((_ActivityType == null))
                {
                    _ActivityType = base.CreateObjectSet<ActivityType>("ActivityType");
                }
                return _ActivityType;
            }
        }
        private ObjectSet<ActivityType> _ActivityType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssessmentGoal> AssessmentGoal
        {
            get
            {
                if ((_AssessmentGoal == null))
                {
                    _AssessmentGoal = base.CreateObjectSet<AssessmentGoal>("AssessmentGoal");
                }
                return _AssessmentGoal;
            }
        }
        private ObjectSet<AssessmentGoal> _AssessmentGoal;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssessmentQuestion> AssessmentQuestion
        {
            get
            {
                if ((_AssessmentQuestion == null))
                {
                    _AssessmentQuestion = base.CreateObjectSet<AssessmentQuestion>("AssessmentQuestion");
                }
                return _AssessmentQuestion;
            }
        }
        private ObjectSet<AssessmentQuestion> _AssessmentQuestion;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AssessmentSubGoal> AssessmentSubGoal
        {
            get
            {
                if ((_AssessmentSubGoal == null))
                {
                    _AssessmentSubGoal = base.CreateObjectSet<AssessmentSubGoal>("AssessmentSubGoal");
                }
                return _AssessmentSubGoal;
            }
        }
        private ObjectSet<AssessmentSubGoal> _AssessmentSubGoal;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuditLog> AuditLog
        {
            get
            {
                if ((_AuditLog == null))
                {
                    _AuditLog = base.CreateObjectSet<AuditLog>("AuditLog");
                }
                return _AuditLog;
            }
        }
        private ObjectSet<AuditLog> _AuditLog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuditLogEventType> AuditLogEventType
        {
            get
            {
                if ((_AuditLogEventType == null))
                {
                    _AuditLogEventType = base.CreateObjectSet<AuditLogEventType>("AuditLogEventType");
                }
                return _AuditLogEventType;
            }
        }
        private ObjectSet<AuditLogEventType> _AuditLogEventType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Classification> Classification
        {
            get
            {
                if ((_Classification == null))
                {
                    _Classification = base.CreateObjectSet<Classification>("Classification");
                }
                return _Classification;
            }
        }
        private ObjectSet<Classification> _Classification;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClassificationPerformanceMeasure> ClassificationPerformanceMeasure
        {
            get
            {
                if ((_ClassificationPerformanceMeasure == null))
                {
                    _ClassificationPerformanceMeasure = base.CreateObjectSet<ClassificationPerformanceMeasure>("ClassificationPerformanceMeasure");
                }
                return _ClassificationPerformanceMeasure;
            }
        }
        private ObjectSet<ClassificationPerformanceMeasure> _ClassificationPerformanceMeasure;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClassificationSystem> ClassificationSystem
        {
            get
            {
                if ((_ClassificationSystem == null))
                {
                    _ClassificationSystem = base.CreateObjectSet<ClassificationSystem>("ClassificationSystem");
                }
                return _ClassificationSystem;
            }
        }
        private ObjectSet<ClassificationSystem> _ClassificationSystem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ContractorTimeActivity> ContractorTimeActivity
        {
            get
            {
                if ((_ContractorTimeActivity == null))
                {
                    _ContractorTimeActivity = base.CreateObjectSet<ContractorTimeActivity>("ContractorTimeActivity");
                }
                return _ContractorTimeActivity;
            }
        }
        private ObjectSet<ContractorTimeActivity> _ContractorTimeActivity;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CostParameterSet> CostParameterSet
        {
            get
            {
                if ((_CostParameterSet == null))
                {
                    _CostParameterSet = base.CreateObjectSet<CostParameterSet>("CostParameterSet");
                }
                return _CostParameterSet;
            }
        }
        private ObjectSet<CostParameterSet> _CostParameterSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<County> County
        {
            get
            {
                if ((_County == null))
                {
                    _County = base.CreateObjectSet<County>("County");
                }
                return _County;
            }
        }
        private ObjectSet<County> _County;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomPage> CustomPage
        {
            get
            {
                if ((_CustomPage == null))
                {
                    _CustomPage = base.CreateObjectSet<CustomPage>("CustomPage");
                }
                return _CustomPage;
            }
        }
        private ObjectSet<CustomPage> _CustomPage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomPageDisplayType> CustomPageDisplayType
        {
            get
            {
                if ((_CustomPageDisplayType == null))
                {
                    _CustomPageDisplayType = base.CreateObjectSet<CustomPageDisplayType>("CustomPageDisplayType");
                }
                return _CustomPageDisplayType;
            }
        }
        private ObjectSet<CustomPageDisplayType> _CustomPageDisplayType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CustomPageImage> CustomPageImage
        {
            get
            {
                if ((_CustomPageImage == null))
                {
                    _CustomPageImage = base.CreateObjectSet<CustomPageImage>("CustomPageImage");
                }
                return _CustomPageImage;
            }
        }
        private ObjectSet<CustomPageImage> _CustomPageImage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DatabaseMigration> DatabaseMigration
        {
            get
            {
                if ((_DatabaseMigration == null))
                {
                    _DatabaseMigration = base.CreateObjectSet<DatabaseMigration>("DatabaseMigration");
                }
                return _DatabaseMigration;
            }
        }
        private ObjectSet<DatabaseMigration> _DatabaseMigration;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Deployment> Deployment
        {
            get
            {
                if ((_Deployment == null))
                {
                    _Deployment = base.CreateObjectSet<Deployment>("Deployment");
                }
                return _Deployment;
            }
        }
        private ObjectSet<Deployment> _Deployment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FieldDefinition> FieldDefinition
        {
            get
            {
                if ((_FieldDefinition == null))
                {
                    _FieldDefinition = base.CreateObjectSet<FieldDefinition>("FieldDefinition");
                }
                return _FieldDefinition;
            }
        }
        private ObjectSet<FieldDefinition> _FieldDefinition;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FieldDefinitionData> FieldDefinitionData
        {
            get
            {
                if ((_FieldDefinitionData == null))
                {
                    _FieldDefinitionData = base.CreateObjectSet<FieldDefinitionData>("FieldDefinitionData");
                }
                return _FieldDefinitionData;
            }
        }
        private ObjectSet<FieldDefinitionData> _FieldDefinitionData;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FieldDefinitionDataImage> FieldDefinitionDataImage
        {
            get
            {
                if ((_FieldDefinitionDataImage == null))
                {
                    _FieldDefinitionDataImage = base.CreateObjectSet<FieldDefinitionDataImage>("FieldDefinitionDataImage");
                }
                return _FieldDefinitionDataImage;
            }
        }
        private ObjectSet<FieldDefinitionDataImage> _FieldDefinitionDataImage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FileResource> FileResource
        {
            get
            {
                if ((_FileResource == null))
                {
                    _FileResource = base.CreateObjectSet<FileResource>("FileResource");
                }
                return _FileResource;
            }
        }
        private ObjectSet<FileResource> _FileResource;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FileResourceMimeType> FileResourceMimeType
        {
            get
            {
                if ((_FileResourceMimeType == null))
                {
                    _FileResourceMimeType = base.CreateObjectSet<FileResourceMimeType>("FileResourceMimeType");
                }
                return _FileResourceMimeType;
            }
        }
        private ObjectSet<FileResourceMimeType> _FileResourceMimeType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FirmaHomePageImage> FirmaHomePageImage
        {
            get
            {
                if ((_FirmaHomePageImage == null))
                {
                    _FirmaHomePageImage = base.CreateObjectSet<FirmaHomePageImage>("FirmaHomePageImage");
                }
                return _FirmaHomePageImage;
            }
        }
        private ObjectSet<FirmaHomePageImage> _FirmaHomePageImage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FirmaPage> FirmaPage
        {
            get
            {
                if ((_FirmaPage == null))
                {
                    _FirmaPage = base.CreateObjectSet<FirmaPage>("FirmaPage");
                }
                return _FirmaPage;
            }
        }
        private ObjectSet<FirmaPage> _FirmaPage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FirmaPageImage> FirmaPageImage
        {
            get
            {
                if ((_FirmaPageImage == null))
                {
                    _FirmaPageImage = base.CreateObjectSet<FirmaPageImage>("FirmaPageImage");
                }
                return _FirmaPageImage;
            }
        }
        private ObjectSet<FirmaPageImage> _FirmaPageImage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FirmaPageRenderType> FirmaPageRenderType
        {
            get
            {
                if ((_FirmaPageRenderType == null))
                {
                    _FirmaPageRenderType = base.CreateObjectSet<FirmaPageRenderType>("FirmaPageRenderType");
                }
                return _FirmaPageRenderType;
            }
        }
        private ObjectSet<FirmaPageRenderType> _FirmaPageRenderType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FirmaPageType> FirmaPageType
        {
            get
            {
                if ((_FirmaPageType == null))
                {
                    _FirmaPageType = base.CreateObjectSet<FirmaPageType>("FirmaPageType");
                }
                return _FirmaPageType;
            }
        }
        private ObjectSet<FirmaPageType> _FirmaPageType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FundingSource> FundingSource
        {
            get
            {
                if ((_FundingSource == null))
                {
                    _FundingSource = base.CreateObjectSet<FundingSource>("FundingSource");
                }
                return _FundingSource;
            }
        }
        private ObjectSet<FundingSource> _FundingSource;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<geometry_columns> geometry_columns
        {
            get
            {
                if ((_geometry_columns == null))
                {
                    _geometry_columns = base.CreateObjectSet<geometry_columns>("geometry_columns");
                }
                return _geometry_columns;
            }
        }
        private ObjectSet<geometry_columns> _geometry_columns;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GeospatialArea> GeospatialArea
        {
            get
            {
                if ((_GeospatialArea == null))
                {
                    _GeospatialArea = base.CreateObjectSet<GeospatialArea>("GeospatialArea");
                }
                return _GeospatialArea;
            }
        }
        private ObjectSet<GeospatialArea> _GeospatialArea;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GeospatialAreaType> GeospatialAreaType
        {
            get
            {
                if ((_GeospatialAreaType == null))
                {
                    _GeospatialAreaType = base.CreateObjectSet<GeospatialAreaType>("GeospatialAreaType");
                }
                return _GeospatialAreaType;
            }
        }
        private ObjectSet<GeospatialAreaType> _GeospatialAreaType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GoogleChartType> GoogleChartType
        {
            get
            {
                if ((_GoogleChartType == null))
                {
                    _GoogleChartType = base.CreateObjectSet<GoogleChartType>("GoogleChartType");
                }
                return _GoogleChartType;
            }
        }
        private ObjectSet<GoogleChartType> _GoogleChartType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Grant> Grant
        {
            get
            {
                if ((_Grant == null))
                {
                    _Grant = base.CreateObjectSet<Grant>("Grant");
                }
                return _Grant;
            }
        }
        private ObjectSet<Grant> _Grant;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GrantAllocation> GrantAllocation
        {
            get
            {
                if ((_GrantAllocation == null))
                {
                    _GrantAllocation = base.CreateObjectSet<GrantAllocation>("GrantAllocation");
                }
                return _GrantAllocation;
            }
        }
        private ObjectSet<GrantAllocation> _GrantAllocation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ImportExternalProjectStaging> ImportExternalProjectStaging
        {
            get
            {
                if ((_ImportExternalProjectStaging == null))
                {
                    _ImportExternalProjectStaging = base.CreateObjectSet<ImportExternalProjectStaging>("ImportExternalProjectStaging");
                }
                return _ImportExternalProjectStaging;
            }
        }
        private ObjectSet<ImportExternalProjectStaging> _ImportExternalProjectStaging;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MappedRegion> MappedRegion
        {
            get
            {
                if ((_MappedRegion == null))
                {
                    _MappedRegion = base.CreateObjectSet<MappedRegion>("MappedRegion");
                }
                return _MappedRegion;
            }
        }
        private ObjectSet<MappedRegion> _MappedRegion;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MeasurementUnitType> MeasurementUnitType
        {
            get
            {
                if ((_MeasurementUnitType == null))
                {
                    _MeasurementUnitType = base.CreateObjectSet<MeasurementUnitType>("MeasurementUnitType");
                }
                return _MeasurementUnitType;
            }
        }
        private ObjectSet<MeasurementUnitType> _MeasurementUnitType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MonitoringProgram> MonitoringProgram
        {
            get
            {
                if ((_MonitoringProgram == null))
                {
                    _MonitoringProgram = base.CreateObjectSet<MonitoringProgram>("MonitoringProgram");
                }
                return _MonitoringProgram;
            }
        }
        private ObjectSet<MonitoringProgram> _MonitoringProgram;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MonitoringProgramDocument> MonitoringProgramDocument
        {
            get
            {
                if ((_MonitoringProgramDocument == null))
                {
                    _MonitoringProgramDocument = base.CreateObjectSet<MonitoringProgramDocument>("MonitoringProgramDocument");
                }
                return _MonitoringProgramDocument;
            }
        }
        private ObjectSet<MonitoringProgramDocument> _MonitoringProgramDocument;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MonitoringProgramPartner> MonitoringProgramPartner
        {
            get
            {
                if ((_MonitoringProgramPartner == null))
                {
                    _MonitoringProgramPartner = base.CreateObjectSet<MonitoringProgramPartner>("MonitoringProgramPartner");
                }
                return _MonitoringProgramPartner;
            }
        }
        private ObjectSet<MonitoringProgramPartner> _MonitoringProgramPartner;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Notification> Notification
        {
            get
            {
                if ((_Notification == null))
                {
                    _Notification = base.CreateObjectSet<Notification>("Notification");
                }
                return _Notification;
            }
        }
        private ObjectSet<Notification> _Notification;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NotificationProject> NotificationProject
        {
            get
            {
                if ((_NotificationProject == null))
                {
                    _NotificationProject = base.CreateObjectSet<NotificationProject>("NotificationProject");
                }
                return _NotificationProject;
            }
        }
        private ObjectSet<NotificationProject> _NotificationProject;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<NotificationType> NotificationType
        {
            get
            {
                if ((_NotificationType == null))
                {
                    _NotificationType = base.CreateObjectSet<NotificationType>("NotificationType");
                }
                return _NotificationType;
            }
        }
        private ObjectSet<NotificationType> _NotificationType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Organization> Organization
        {
            get
            {
                if ((_Organization == null))
                {
                    _Organization = base.CreateObjectSet<Organization>("Organization");
                }
                return _Organization;
            }
        }
        private ObjectSet<Organization> _Organization;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrganizationBoundaryStaging> OrganizationBoundaryStaging
        {
            get
            {
                if ((_OrganizationBoundaryStaging == null))
                {
                    _OrganizationBoundaryStaging = base.CreateObjectSet<OrganizationBoundaryStaging>("OrganizationBoundaryStaging");
                }
                return _OrganizationBoundaryStaging;
            }
        }
        private ObjectSet<OrganizationBoundaryStaging> _OrganizationBoundaryStaging;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrganizationType> OrganizationType
        {
            get
            {
                if ((_OrganizationType == null))
                {
                    _OrganizationType = base.CreateObjectSet<OrganizationType>("OrganizationType");
                }
                return _OrganizationType;
            }
        }
        private ObjectSet<OrganizationType> _OrganizationType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrganizationTypeRelationshipType> OrganizationTypeRelationshipType
        {
            get
            {
                if ((_OrganizationTypeRelationshipType == null))
                {
                    _OrganizationTypeRelationshipType = base.CreateObjectSet<OrganizationTypeRelationshipType>("OrganizationTypeRelationshipType");
                }
                return _OrganizationTypeRelationshipType;
            }
        }
        private ObjectSet<OrganizationTypeRelationshipType> _OrganizationTypeRelationshipType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PerformanceMeasure> PerformanceMeasure
        {
            get
            {
                if ((_PerformanceMeasure == null))
                {
                    _PerformanceMeasure = base.CreateObjectSet<PerformanceMeasure>("PerformanceMeasure");
                }
                return _PerformanceMeasure;
            }
        }
        private ObjectSet<PerformanceMeasure> _PerformanceMeasure;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PerformanceMeasureActual> PerformanceMeasureActual
        {
            get
            {
                if ((_PerformanceMeasureActual == null))
                {
                    _PerformanceMeasureActual = base.CreateObjectSet<PerformanceMeasureActual>("PerformanceMeasureActual");
                }
                return _PerformanceMeasureActual;
            }
        }
        private ObjectSet<PerformanceMeasureActual> _PerformanceMeasureActual;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PerformanceMeasureActualSubcategoryOption> PerformanceMeasureActualSubcategoryOption
        {
            get
            {
                if ((_PerformanceMeasureActualSubcategoryOption == null))
                {
                    _PerformanceMeasureActualSubcategoryOption = base.CreateObjectSet<PerformanceMeasureActualSubcategoryOption>("PerformanceMeasureActualSubcategoryOption");
                }
                return _PerformanceMeasureActualSubcategoryOption;
            }
        }
        private ObjectSet<PerformanceMeasureActualSubcategoryOption> _PerformanceMeasureActualSubcategoryOption;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PerformanceMeasureActualSubcategoryOptionUpdate> PerformanceMeasureActualSubcategoryOptionUpdate
        {
            get
            {
                if ((_PerformanceMeasureActualSubcategoryOptionUpdate == null))
                {
                    _PerformanceMeasureActualSubcategoryOptionUpdate = base.CreateObjectSet<PerformanceMeasureActualSubcategoryOptionUpdate>("PerformanceMeasureActualSubcategoryOptionUpdate");
                }
                return _PerformanceMeasureActualSubcategoryOptionUpdate;
            }
        }
        private ObjectSet<PerformanceMeasureActualSubcategoryOptionUpdate> _PerformanceMeasureActualSubcategoryOptionUpdate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PerformanceMeasureActualUpdate> PerformanceMeasureActualUpdate
        {
            get
            {
                if ((_PerformanceMeasureActualUpdate == null))
                {
                    _PerformanceMeasureActualUpdate = base.CreateObjectSet<PerformanceMeasureActualUpdate>("PerformanceMeasureActualUpdate");
                }
                return _PerformanceMeasureActualUpdate;
            }
        }
        private ObjectSet<PerformanceMeasureActualUpdate> _PerformanceMeasureActualUpdate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PerformanceMeasureDataSourceType> PerformanceMeasureDataSourceType
        {
            get
            {
                if ((_PerformanceMeasureDataSourceType == null))
                {
                    _PerformanceMeasureDataSourceType = base.CreateObjectSet<PerformanceMeasureDataSourceType>("PerformanceMeasureDataSourceType");
                }
                return _PerformanceMeasureDataSourceType;
            }
        }
        private ObjectSet<PerformanceMeasureDataSourceType> _PerformanceMeasureDataSourceType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PerformanceMeasureExpected> PerformanceMeasureExpected
        {
            get
            {
                if ((_PerformanceMeasureExpected == null))
                {
                    _PerformanceMeasureExpected = base.CreateObjectSet<PerformanceMeasureExpected>("PerformanceMeasureExpected");
                }
                return _PerformanceMeasureExpected;
            }
        }
        private ObjectSet<PerformanceMeasureExpected> _PerformanceMeasureExpected;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PerformanceMeasureExpectedSubcategoryOption> PerformanceMeasureExpectedSubcategoryOption
        {
            get
            {
                if ((_PerformanceMeasureExpectedSubcategoryOption == null))
                {
                    _PerformanceMeasureExpectedSubcategoryOption = base.CreateObjectSet<PerformanceMeasureExpectedSubcategoryOption>("PerformanceMeasureExpectedSubcategoryOption");
                }
                return _PerformanceMeasureExpectedSubcategoryOption;
            }
        }
        private ObjectSet<PerformanceMeasureExpectedSubcategoryOption> _PerformanceMeasureExpectedSubcategoryOption;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PerformanceMeasureMonitoringProgram> PerformanceMeasureMonitoringProgram
        {
            get
            {
                if ((_PerformanceMeasureMonitoringProgram == null))
                {
                    _PerformanceMeasureMonitoringProgram = base.CreateObjectSet<PerformanceMeasureMonitoringProgram>("PerformanceMeasureMonitoringProgram");
                }
                return _PerformanceMeasureMonitoringProgram;
            }
        }
        private ObjectSet<PerformanceMeasureMonitoringProgram> _PerformanceMeasureMonitoringProgram;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PerformanceMeasureNote> PerformanceMeasureNote
        {
            get
            {
                if ((_PerformanceMeasureNote == null))
                {
                    _PerformanceMeasureNote = base.CreateObjectSet<PerformanceMeasureNote>("PerformanceMeasureNote");
                }
                return _PerformanceMeasureNote;
            }
        }
        private ObjectSet<PerformanceMeasureNote> _PerformanceMeasureNote;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PerformanceMeasureSubcategory> PerformanceMeasureSubcategory
        {
            get
            {
                if ((_PerformanceMeasureSubcategory == null))
                {
                    _PerformanceMeasureSubcategory = base.CreateObjectSet<PerformanceMeasureSubcategory>("PerformanceMeasureSubcategory");
                }
                return _PerformanceMeasureSubcategory;
            }
        }
        private ObjectSet<PerformanceMeasureSubcategory> _PerformanceMeasureSubcategory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PerformanceMeasureSubcategoryOption> PerformanceMeasureSubcategoryOption
        {
            get
            {
                if ((_PerformanceMeasureSubcategoryOption == null))
                {
                    _PerformanceMeasureSubcategoryOption = base.CreateObjectSet<PerformanceMeasureSubcategoryOption>("PerformanceMeasureSubcategoryOption");
                }
                return _PerformanceMeasureSubcategoryOption;
            }
        }
        private ObjectSet<PerformanceMeasureSubcategoryOption> _PerformanceMeasureSubcategoryOption;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PerformanceMeasureTargetValueType> PerformanceMeasureTargetValueType
        {
            get
            {
                if ((_PerformanceMeasureTargetValueType == null))
                {
                    _PerformanceMeasureTargetValueType = base.CreateObjectSet<PerformanceMeasureTargetValueType>("PerformanceMeasureTargetValueType");
                }
                return _PerformanceMeasureTargetValueType;
            }
        }
        private ObjectSet<PerformanceMeasureTargetValueType> _PerformanceMeasureTargetValueType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PerformanceMeasureType> PerformanceMeasureType
        {
            get
            {
                if ((_PerformanceMeasureType == null))
                {
                    _PerformanceMeasureType = base.CreateObjectSet<PerformanceMeasureType>("PerformanceMeasureType");
                }
                return _PerformanceMeasureType;
            }
        }
        private ObjectSet<PerformanceMeasureType> _PerformanceMeasureType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Person> Person
        {
            get
            {
                if ((_Person == null))
                {
                    _Person = base.CreateObjectSet<Person>("Person");
                }
                return _Person;
            }
        }
        private ObjectSet<Person> _Person;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonStewardGeospatialArea> PersonStewardGeospatialArea
        {
            get
            {
                if ((_PersonStewardGeospatialArea == null))
                {
                    _PersonStewardGeospatialArea = base.CreateObjectSet<PersonStewardGeospatialArea>("PersonStewardGeospatialArea");
                }
                return _PersonStewardGeospatialArea;
            }
        }
        private ObjectSet<PersonStewardGeospatialArea> _PersonStewardGeospatialArea;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonStewardOrganization> PersonStewardOrganization
        {
            get
            {
                if ((_PersonStewardOrganization == null))
                {
                    _PersonStewardOrganization = base.CreateObjectSet<PersonStewardOrganization>("PersonStewardOrganization");
                }
                return _PersonStewardOrganization;
            }
        }
        private ObjectSet<PersonStewardOrganization> _PersonStewardOrganization;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PersonStewardTaxonomyBranch> PersonStewardTaxonomyBranch
        {
            get
            {
                if ((_PersonStewardTaxonomyBranch == null))
                {
                    _PersonStewardTaxonomyBranch = base.CreateObjectSet<PersonStewardTaxonomyBranch>("PersonStewardTaxonomyBranch");
                }
                return _PersonStewardTaxonomyBranch;
            }
        }
        private ObjectSet<PersonStewardTaxonomyBranch> _PersonStewardTaxonomyBranch;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Project
        {
            get
            {
                if ((_Project == null))
                {
                    _Project = base.CreateObjectSet<Project>("Project");
                }
                return _Project;
            }
        }
        private ObjectSet<Project> _Project;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectApprovalStatus> ProjectApprovalStatus
        {
            get
            {
                if ((_ProjectApprovalStatus == null))
                {
                    _ProjectApprovalStatus = base.CreateObjectSet<ProjectApprovalStatus>("ProjectApprovalStatus");
                }
                return _ProjectApprovalStatus;
            }
        }
        private ObjectSet<ProjectApprovalStatus> _ProjectApprovalStatus;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectAssessmentQuestion> ProjectAssessmentQuestion
        {
            get
            {
                if ((_ProjectAssessmentQuestion == null))
                {
                    _ProjectAssessmentQuestion = base.CreateObjectSet<ProjectAssessmentQuestion>("ProjectAssessmentQuestion");
                }
                return _ProjectAssessmentQuestion;
            }
        }
        private ObjectSet<ProjectAssessmentQuestion> _ProjectAssessmentQuestion;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectBudget> ProjectBudget
        {
            get
            {
                if ((_ProjectBudget == null))
                {
                    _ProjectBudget = base.CreateObjectSet<ProjectBudget>("ProjectBudget");
                }
                return _ProjectBudget;
            }
        }
        private ObjectSet<ProjectBudget> _ProjectBudget;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectBudgetUpdate> ProjectBudgetUpdate
        {
            get
            {
                if ((_ProjectBudgetUpdate == null))
                {
                    _ProjectBudgetUpdate = base.CreateObjectSet<ProjectBudgetUpdate>("ProjectBudgetUpdate");
                }
                return _ProjectBudgetUpdate;
            }
        }
        private ObjectSet<ProjectBudgetUpdate> _ProjectBudgetUpdate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectClassification> ProjectClassification
        {
            get
            {
                if ((_ProjectClassification == null))
                {
                    _ProjectClassification = base.CreateObjectSet<ProjectClassification>("ProjectClassification");
                }
                return _ProjectClassification;
            }
        }
        private ObjectSet<ProjectClassification> _ProjectClassification;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectColorByType> ProjectColorByType
        {
            get
            {
                if ((_ProjectColorByType == null))
                {
                    _ProjectColorByType = base.CreateObjectSet<ProjectColorByType>("ProjectColorByType");
                }
                return _ProjectColorByType;
            }
        }
        private ObjectSet<ProjectColorByType> _ProjectColorByType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectCostType> ProjectCostType
        {
            get
            {
                if ((_ProjectCostType == null))
                {
                    _ProjectCostType = base.CreateObjectSet<ProjectCostType>("ProjectCostType");
                }
                return _ProjectCostType;
            }
        }
        private ObjectSet<ProjectCostType> _ProjectCostType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectCreateSection> ProjectCreateSection
        {
            get
            {
                if ((_ProjectCreateSection == null))
                {
                    _ProjectCreateSection = base.CreateObjectSet<ProjectCreateSection>("ProjectCreateSection");
                }
                return _ProjectCreateSection;
            }
        }
        private ObjectSet<ProjectCreateSection> _ProjectCreateSection;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectCustomAttribute> ProjectCustomAttribute
        {
            get
            {
                if ((_ProjectCustomAttribute == null))
                {
                    _ProjectCustomAttribute = base.CreateObjectSet<ProjectCustomAttribute>("ProjectCustomAttribute");
                }
                return _ProjectCustomAttribute;
            }
        }
        private ObjectSet<ProjectCustomAttribute> _ProjectCustomAttribute;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectCustomAttributeDataType> ProjectCustomAttributeDataType
        {
            get
            {
                if ((_ProjectCustomAttributeDataType == null))
                {
                    _ProjectCustomAttributeDataType = base.CreateObjectSet<ProjectCustomAttributeDataType>("ProjectCustomAttributeDataType");
                }
                return _ProjectCustomAttributeDataType;
            }
        }
        private ObjectSet<ProjectCustomAttributeDataType> _ProjectCustomAttributeDataType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectCustomAttributeType> ProjectCustomAttributeType
        {
            get
            {
                if ((_ProjectCustomAttributeType == null))
                {
                    _ProjectCustomAttributeType = base.CreateObjectSet<ProjectCustomAttributeType>("ProjectCustomAttributeType");
                }
                return _ProjectCustomAttributeType;
            }
        }
        private ObjectSet<ProjectCustomAttributeType> _ProjectCustomAttributeType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectCustomAttributeUpdate> ProjectCustomAttributeUpdate
        {
            get
            {
                if ((_ProjectCustomAttributeUpdate == null))
                {
                    _ProjectCustomAttributeUpdate = base.CreateObjectSet<ProjectCustomAttributeUpdate>("ProjectCustomAttributeUpdate");
                }
                return _ProjectCustomAttributeUpdate;
            }
        }
        private ObjectSet<ProjectCustomAttributeUpdate> _ProjectCustomAttributeUpdate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectCustomAttributeUpdateValue> ProjectCustomAttributeUpdateValue
        {
            get
            {
                if ((_ProjectCustomAttributeUpdateValue == null))
                {
                    _ProjectCustomAttributeUpdateValue = base.CreateObjectSet<ProjectCustomAttributeUpdateValue>("ProjectCustomAttributeUpdateValue");
                }
                return _ProjectCustomAttributeUpdateValue;
            }
        }
        private ObjectSet<ProjectCustomAttributeUpdateValue> _ProjectCustomAttributeUpdateValue;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectCustomAttributeValue> ProjectCustomAttributeValue
        {
            get
            {
                if ((_ProjectCustomAttributeValue == null))
                {
                    _ProjectCustomAttributeValue = base.CreateObjectSet<ProjectCustomAttributeValue>("ProjectCustomAttributeValue");
                }
                return _ProjectCustomAttributeValue;
            }
        }
        private ObjectSet<ProjectCustomAttributeValue> _ProjectCustomAttributeValue;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectDocument> ProjectDocument
        {
            get
            {
                if ((_ProjectDocument == null))
                {
                    _ProjectDocument = base.CreateObjectSet<ProjectDocument>("ProjectDocument");
                }
                return _ProjectDocument;
            }
        }
        private ObjectSet<ProjectDocument> _ProjectDocument;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectDocumentUpdate> ProjectDocumentUpdate
        {
            get
            {
                if ((_ProjectDocumentUpdate == null))
                {
                    _ProjectDocumentUpdate = base.CreateObjectSet<ProjectDocumentUpdate>("ProjectDocumentUpdate");
                }
                return _ProjectDocumentUpdate;
            }
        }
        private ObjectSet<ProjectDocumentUpdate> _ProjectDocumentUpdate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectExemptReportingType> ProjectExemptReportingType
        {
            get
            {
                if ((_ProjectExemptReportingType == null))
                {
                    _ProjectExemptReportingType = base.CreateObjectSet<ProjectExemptReportingType>("ProjectExemptReportingType");
                }
                return _ProjectExemptReportingType;
            }
        }
        private ObjectSet<ProjectExemptReportingType> _ProjectExemptReportingType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectExemptReportingYear> ProjectExemptReportingYear
        {
            get
            {
                if ((_ProjectExemptReportingYear == null))
                {
                    _ProjectExemptReportingYear = base.CreateObjectSet<ProjectExemptReportingYear>("ProjectExemptReportingYear");
                }
                return _ProjectExemptReportingYear;
            }
        }
        private ObjectSet<ProjectExemptReportingYear> _ProjectExemptReportingYear;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectExemptReportingYearUpdate> ProjectExemptReportingYearUpdate
        {
            get
            {
                if ((_ProjectExemptReportingYearUpdate == null))
                {
                    _ProjectExemptReportingYearUpdate = base.CreateObjectSet<ProjectExemptReportingYearUpdate>("ProjectExemptReportingYearUpdate");
                }
                return _ProjectExemptReportingYearUpdate;
            }
        }
        private ObjectSet<ProjectExemptReportingYearUpdate> _ProjectExemptReportingYearUpdate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectExternalLink> ProjectExternalLink
        {
            get
            {
                if ((_ProjectExternalLink == null))
                {
                    _ProjectExternalLink = base.CreateObjectSet<ProjectExternalLink>("ProjectExternalLink");
                }
                return _ProjectExternalLink;
            }
        }
        private ObjectSet<ProjectExternalLink> _ProjectExternalLink;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectExternalLinkUpdate> ProjectExternalLinkUpdate
        {
            get
            {
                if ((_ProjectExternalLinkUpdate == null))
                {
                    _ProjectExternalLinkUpdate = base.CreateObjectSet<ProjectExternalLinkUpdate>("ProjectExternalLinkUpdate");
                }
                return _ProjectExternalLinkUpdate;
            }
        }
        private ObjectSet<ProjectExternalLinkUpdate> _ProjectExternalLinkUpdate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectFundingSourceExpenditure> ProjectFundingSourceExpenditure
        {
            get
            {
                if ((_ProjectFundingSourceExpenditure == null))
                {
                    _ProjectFundingSourceExpenditure = base.CreateObjectSet<ProjectFundingSourceExpenditure>("ProjectFundingSourceExpenditure");
                }
                return _ProjectFundingSourceExpenditure;
            }
        }
        private ObjectSet<ProjectFundingSourceExpenditure> _ProjectFundingSourceExpenditure;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectFundingSourceExpenditureUpdate> ProjectFundingSourceExpenditureUpdate
        {
            get
            {
                if ((_ProjectFundingSourceExpenditureUpdate == null))
                {
                    _ProjectFundingSourceExpenditureUpdate = base.CreateObjectSet<ProjectFundingSourceExpenditureUpdate>("ProjectFundingSourceExpenditureUpdate");
                }
                return _ProjectFundingSourceExpenditureUpdate;
            }
        }
        private ObjectSet<ProjectFundingSourceExpenditureUpdate> _ProjectFundingSourceExpenditureUpdate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectFundingSourceRequest> ProjectFundingSourceRequest
        {
            get
            {
                if ((_ProjectFundingSourceRequest == null))
                {
                    _ProjectFundingSourceRequest = base.CreateObjectSet<ProjectFundingSourceRequest>("ProjectFundingSourceRequest");
                }
                return _ProjectFundingSourceRequest;
            }
        }
        private ObjectSet<ProjectFundingSourceRequest> _ProjectFundingSourceRequest;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectFundingSourceRequestUpdate> ProjectFundingSourceRequestUpdate
        {
            get
            {
                if ((_ProjectFundingSourceRequestUpdate == null))
                {
                    _ProjectFundingSourceRequestUpdate = base.CreateObjectSet<ProjectFundingSourceRequestUpdate>("ProjectFundingSourceRequestUpdate");
                }
                return _ProjectFundingSourceRequestUpdate;
            }
        }
        private ObjectSet<ProjectFundingSourceRequestUpdate> _ProjectFundingSourceRequestUpdate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectGeospatialArea> ProjectGeospatialArea
        {
            get
            {
                if ((_ProjectGeospatialArea == null))
                {
                    _ProjectGeospatialArea = base.CreateObjectSet<ProjectGeospatialArea>("ProjectGeospatialArea");
                }
                return _ProjectGeospatialArea;
            }
        }
        private ObjectSet<ProjectGeospatialArea> _ProjectGeospatialArea;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectGeospatialAreaTypeNote> ProjectGeospatialAreaTypeNote
        {
            get
            {
                if ((_ProjectGeospatialAreaTypeNote == null))
                {
                    _ProjectGeospatialAreaTypeNote = base.CreateObjectSet<ProjectGeospatialAreaTypeNote>("ProjectGeospatialAreaTypeNote");
                }
                return _ProjectGeospatialAreaTypeNote;
            }
        }
        private ObjectSet<ProjectGeospatialAreaTypeNote> _ProjectGeospatialAreaTypeNote;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectGeospatialAreaTypeNoteUpdate> ProjectGeospatialAreaTypeNoteUpdate
        {
            get
            {
                if ((_ProjectGeospatialAreaTypeNoteUpdate == null))
                {
                    _ProjectGeospatialAreaTypeNoteUpdate = base.CreateObjectSet<ProjectGeospatialAreaTypeNoteUpdate>("ProjectGeospatialAreaTypeNoteUpdate");
                }
                return _ProjectGeospatialAreaTypeNoteUpdate;
            }
        }
        private ObjectSet<ProjectGeospatialAreaTypeNoteUpdate> _ProjectGeospatialAreaTypeNoteUpdate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectGeospatialAreaUpdate> ProjectGeospatialAreaUpdate
        {
            get
            {
                if ((_ProjectGeospatialAreaUpdate == null))
                {
                    _ProjectGeospatialAreaUpdate = base.CreateObjectSet<ProjectGeospatialAreaUpdate>("ProjectGeospatialAreaUpdate");
                }
                return _ProjectGeospatialAreaUpdate;
            }
        }
        private ObjectSet<ProjectGeospatialAreaUpdate> _ProjectGeospatialAreaUpdate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectImage> ProjectImage
        {
            get
            {
                if ((_ProjectImage == null))
                {
                    _ProjectImage = base.CreateObjectSet<ProjectImage>("ProjectImage");
                }
                return _ProjectImage;
            }
        }
        private ObjectSet<ProjectImage> _ProjectImage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectImageTiming> ProjectImageTiming
        {
            get
            {
                if ((_ProjectImageTiming == null))
                {
                    _ProjectImageTiming = base.CreateObjectSet<ProjectImageTiming>("ProjectImageTiming");
                }
                return _ProjectImageTiming;
            }
        }
        private ObjectSet<ProjectImageTiming> _ProjectImageTiming;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectImageUpdate> ProjectImageUpdate
        {
            get
            {
                if ((_ProjectImageUpdate == null))
                {
                    _ProjectImageUpdate = base.CreateObjectSet<ProjectImageUpdate>("ProjectImageUpdate");
                }
                return _ProjectImageUpdate;
            }
        }
        private ObjectSet<ProjectImageUpdate> _ProjectImageUpdate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectInternalNote> ProjectInternalNote
        {
            get
            {
                if ((_ProjectInternalNote == null))
                {
                    _ProjectInternalNote = base.CreateObjectSet<ProjectInternalNote>("ProjectInternalNote");
                }
                return _ProjectInternalNote;
            }
        }
        private ObjectSet<ProjectInternalNote> _ProjectInternalNote;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectLocation> ProjectLocation
        {
            get
            {
                if ((_ProjectLocation == null))
                {
                    _ProjectLocation = base.CreateObjectSet<ProjectLocation>("ProjectLocation");
                }
                return _ProjectLocation;
            }
        }
        private ObjectSet<ProjectLocation> _ProjectLocation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectLocationFilterType> ProjectLocationFilterType
        {
            get
            {
                if ((_ProjectLocationFilterType == null))
                {
                    _ProjectLocationFilterType = base.CreateObjectSet<ProjectLocationFilterType>("ProjectLocationFilterType");
                }
                return _ProjectLocationFilterType;
            }
        }
        private ObjectSet<ProjectLocationFilterType> _ProjectLocationFilterType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectLocationSimpleType> ProjectLocationSimpleType
        {
            get
            {
                if ((_ProjectLocationSimpleType == null))
                {
                    _ProjectLocationSimpleType = base.CreateObjectSet<ProjectLocationSimpleType>("ProjectLocationSimpleType");
                }
                return _ProjectLocationSimpleType;
            }
        }
        private ObjectSet<ProjectLocationSimpleType> _ProjectLocationSimpleType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectLocationStaging> ProjectLocationStaging
        {
            get
            {
                if ((_ProjectLocationStaging == null))
                {
                    _ProjectLocationStaging = base.CreateObjectSet<ProjectLocationStaging>("ProjectLocationStaging");
                }
                return _ProjectLocationStaging;
            }
        }
        private ObjectSet<ProjectLocationStaging> _ProjectLocationStaging;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectLocationStagingUpdate> ProjectLocationStagingUpdate
        {
            get
            {
                if ((_ProjectLocationStagingUpdate == null))
                {
                    _ProjectLocationStagingUpdate = base.CreateObjectSet<ProjectLocationStagingUpdate>("ProjectLocationStagingUpdate");
                }
                return _ProjectLocationStagingUpdate;
            }
        }
        private ObjectSet<ProjectLocationStagingUpdate> _ProjectLocationStagingUpdate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectLocationUpdate> ProjectLocationUpdate
        {
            get
            {
                if ((_ProjectLocationUpdate == null))
                {
                    _ProjectLocationUpdate = base.CreateObjectSet<ProjectLocationUpdate>("ProjectLocationUpdate");
                }
                return _ProjectLocationUpdate;
            }
        }
        private ObjectSet<ProjectLocationUpdate> _ProjectLocationUpdate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectNote> ProjectNote
        {
            get
            {
                if ((_ProjectNote == null))
                {
                    _ProjectNote = base.CreateObjectSet<ProjectNote>("ProjectNote");
                }
                return _ProjectNote;
            }
        }
        private ObjectSet<ProjectNote> _ProjectNote;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectNoteUpdate> ProjectNoteUpdate
        {
            get
            {
                if ((_ProjectNoteUpdate == null))
                {
                    _ProjectNoteUpdate = base.CreateObjectSet<ProjectNoteUpdate>("ProjectNoteUpdate");
                }
                return _ProjectNoteUpdate;
            }
        }
        private ObjectSet<ProjectNoteUpdate> _ProjectNoteUpdate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectOrganization> ProjectOrganization
        {
            get
            {
                if ((_ProjectOrganization == null))
                {
                    _ProjectOrganization = base.CreateObjectSet<ProjectOrganization>("ProjectOrganization");
                }
                return _ProjectOrganization;
            }
        }
        private ObjectSet<ProjectOrganization> _ProjectOrganization;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectOrganizationUpdate> ProjectOrganizationUpdate
        {
            get
            {
                if ((_ProjectOrganizationUpdate == null))
                {
                    _ProjectOrganizationUpdate = base.CreateObjectSet<ProjectOrganizationUpdate>("ProjectOrganizationUpdate");
                }
                return _ProjectOrganizationUpdate;
            }
        }
        private ObjectSet<ProjectOrganizationUpdate> _ProjectOrganizationUpdate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectPerson> ProjectPerson
        {
            get
            {
                if ((_ProjectPerson == null))
                {
                    _ProjectPerson = base.CreateObjectSet<ProjectPerson>("ProjectPerson");
                }
                return _ProjectPerson;
            }
        }
        private ObjectSet<ProjectPerson> _ProjectPerson;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectPersonRelationshipType> ProjectPersonRelationshipType
        {
            get
            {
                if ((_ProjectPersonRelationshipType == null))
                {
                    _ProjectPersonRelationshipType = base.CreateObjectSet<ProjectPersonRelationshipType>("ProjectPersonRelationshipType");
                }
                return _ProjectPersonRelationshipType;
            }
        }
        private ObjectSet<ProjectPersonRelationshipType> _ProjectPersonRelationshipType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectPersonUpdate> ProjectPersonUpdate
        {
            get
            {
                if ((_ProjectPersonUpdate == null))
                {
                    _ProjectPersonUpdate = base.CreateObjectSet<ProjectPersonUpdate>("ProjectPersonUpdate");
                }
                return _ProjectPersonUpdate;
            }
        }
        private ObjectSet<ProjectPersonUpdate> _ProjectPersonUpdate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectStage> ProjectStage
        {
            get
            {
                if ((_ProjectStage == null))
                {
                    _ProjectStage = base.CreateObjectSet<ProjectStage>("ProjectStage");
                }
                return _ProjectStage;
            }
        }
        private ObjectSet<ProjectStage> _ProjectStage;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectStewardshipAreaType> ProjectStewardshipAreaType
        {
            get
            {
                if ((_ProjectStewardshipAreaType == null))
                {
                    _ProjectStewardshipAreaType = base.CreateObjectSet<ProjectStewardshipAreaType>("ProjectStewardshipAreaType");
                }
                return _ProjectStewardshipAreaType;
            }
        }
        private ObjectSet<ProjectStewardshipAreaType> _ProjectStewardshipAreaType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectTag> ProjectTag
        {
            get
            {
                if ((_ProjectTag == null))
                {
                    _ProjectTag = base.CreateObjectSet<ProjectTag>("ProjectTag");
                }
                return _ProjectTag;
            }
        }
        private ObjectSet<ProjectTag> _ProjectTag;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectUpdate> ProjectUpdate
        {
            get
            {
                if ((_ProjectUpdate == null))
                {
                    _ProjectUpdate = base.CreateObjectSet<ProjectUpdate>("ProjectUpdate");
                }
                return _ProjectUpdate;
            }
        }
        private ObjectSet<ProjectUpdate> _ProjectUpdate;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectUpdateBatch> ProjectUpdateBatch
        {
            get
            {
                if ((_ProjectUpdateBatch == null))
                {
                    _ProjectUpdateBatch = base.CreateObjectSet<ProjectUpdateBatch>("ProjectUpdateBatch");
                }
                return _ProjectUpdateBatch;
            }
        }
        private ObjectSet<ProjectUpdateBatch> _ProjectUpdateBatch;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectUpdateConfiguration> ProjectUpdateConfiguration
        {
            get
            {
                if ((_ProjectUpdateConfiguration == null))
                {
                    _ProjectUpdateConfiguration = base.CreateObjectSet<ProjectUpdateConfiguration>("ProjectUpdateConfiguration");
                }
                return _ProjectUpdateConfiguration;
            }
        }
        private ObjectSet<ProjectUpdateConfiguration> _ProjectUpdateConfiguration;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectUpdateHistory> ProjectUpdateHistory
        {
            get
            {
                if ((_ProjectUpdateHistory == null))
                {
                    _ProjectUpdateHistory = base.CreateObjectSet<ProjectUpdateHistory>("ProjectUpdateHistory");
                }
                return _ProjectUpdateHistory;
            }
        }
        private ObjectSet<ProjectUpdateHistory> _ProjectUpdateHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectUpdateSection> ProjectUpdateSection
        {
            get
            {
                if ((_ProjectUpdateSection == null))
                {
                    _ProjectUpdateSection = base.CreateObjectSet<ProjectUpdateSection>("ProjectUpdateSection");
                }
                return _ProjectUpdateSection;
            }
        }
        private ObjectSet<ProjectUpdateSection> _ProjectUpdateSection;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectUpdateState> ProjectUpdateState
        {
            get
            {
                if ((_ProjectUpdateState == null))
                {
                    _ProjectUpdateState = base.CreateObjectSet<ProjectUpdateState>("ProjectUpdateState");
                }
                return _ProjectUpdateState;
            }
        }
        private ObjectSet<ProjectUpdateState> _ProjectUpdateState;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectWorkflowSectionGrouping> ProjectWorkflowSectionGrouping
        {
            get
            {
                if ((_ProjectWorkflowSectionGrouping == null))
                {
                    _ProjectWorkflowSectionGrouping = base.CreateObjectSet<ProjectWorkflowSectionGrouping>("ProjectWorkflowSectionGrouping");
                }
                return _ProjectWorkflowSectionGrouping;
            }
        }
        private ObjectSet<ProjectWorkflowSectionGrouping> _ProjectWorkflowSectionGrouping;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RelationshipType> RelationshipType
        {
            get
            {
                if ((_RelationshipType == null))
                {
                    _RelationshipType = base.CreateObjectSet<RelationshipType>("RelationshipType");
                }
                return _RelationshipType;
            }
        }
        private ObjectSet<RelationshipType> _RelationshipType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Role
        {
            get
            {
                if ((_Role == null))
                {
                    _Role = base.CreateObjectSet<Role>("Role");
                }
                return _Role;
            }
        }
        private ObjectSet<Role> _Role;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Snapshot> Snapshot
        {
            get
            {
                if ((_Snapshot == null))
                {
                    _Snapshot = base.CreateObjectSet<Snapshot>("Snapshot");
                }
                return _Snapshot;
            }
        }
        private ObjectSet<Snapshot> _Snapshot;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SnapshotOrganizationTypeExpenditure> SnapshotOrganizationTypeExpenditure
        {
            get
            {
                if ((_SnapshotOrganizationTypeExpenditure == null))
                {
                    _SnapshotOrganizationTypeExpenditure = base.CreateObjectSet<SnapshotOrganizationTypeExpenditure>("SnapshotOrganizationTypeExpenditure");
                }
                return _SnapshotOrganizationTypeExpenditure;
            }
        }
        private ObjectSet<SnapshotOrganizationTypeExpenditure> _SnapshotOrganizationTypeExpenditure;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SnapshotPerformanceMeasure> SnapshotPerformanceMeasure
        {
            get
            {
                if ((_SnapshotPerformanceMeasure == null))
                {
                    _SnapshotPerformanceMeasure = base.CreateObjectSet<SnapshotPerformanceMeasure>("SnapshotPerformanceMeasure");
                }
                return _SnapshotPerformanceMeasure;
            }
        }
        private ObjectSet<SnapshotPerformanceMeasure> _SnapshotPerformanceMeasure;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SnapshotPerformanceMeasureSubcategoryOption> SnapshotPerformanceMeasureSubcategoryOption
        {
            get
            {
                if ((_SnapshotPerformanceMeasureSubcategoryOption == null))
                {
                    _SnapshotPerformanceMeasureSubcategoryOption = base.CreateObjectSet<SnapshotPerformanceMeasureSubcategoryOption>("SnapshotPerformanceMeasureSubcategoryOption");
                }
                return _SnapshotPerformanceMeasureSubcategoryOption;
            }
        }
        private ObjectSet<SnapshotPerformanceMeasureSubcategoryOption> _SnapshotPerformanceMeasureSubcategoryOption;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SnapshotProject> SnapshotProject
        {
            get
            {
                if ((_SnapshotProject == null))
                {
                    _SnapshotProject = base.CreateObjectSet<SnapshotProject>("SnapshotProject");
                }
                return _SnapshotProject;
            }
        }
        private ObjectSet<SnapshotProject> _SnapshotProject;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SnapshotProjectType> SnapshotProjectType
        {
            get
            {
                if ((_SnapshotProjectType == null))
                {
                    _SnapshotProjectType = base.CreateObjectSet<SnapshotProjectType>("SnapshotProjectType");
                }
                return _SnapshotProjectType;
            }
        }
        private ObjectSet<SnapshotProjectType> _SnapshotProjectType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<spatial_ref_sys> spatial_ref_sys
        {
            get
            {
                if ((_spatial_ref_sys == null))
                {
                    _spatial_ref_sys = base.CreateObjectSet<spatial_ref_sys>("spatial_ref_sys");
                }
                return _spatial_ref_sys;
            }
        }
        private ObjectSet<spatial_ref_sys> _spatial_ref_sys;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StateProvince> StateProvince
        {
            get
            {
                if ((_StateProvince == null))
                {
                    _StateProvince = base.CreateObjectSet<StateProvince>("StateProvince");
                }
                return _StateProvince;
            }
        }
        private ObjectSet<StateProvince> _StateProvince;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupportRequestLog> SupportRequestLog
        {
            get
            {
                if ((_SupportRequestLog == null))
                {
                    _SupportRequestLog = base.CreateObjectSet<SupportRequestLog>("SupportRequestLog");
                }
                return _SupportRequestLog;
            }
        }
        private ObjectSet<SupportRequestLog> _SupportRequestLog;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SupportRequestType> SupportRequestType
        {
            get
            {
                if ((_SupportRequestType == null))
                {
                    _SupportRequestType = base.CreateObjectSet<SupportRequestType>("SupportRequestType");
                }
                return _SupportRequestType;
            }
        }
        private ObjectSet<SupportRequestType> _SupportRequestType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag> Tag
        {
            get
            {
                if ((_Tag == null))
                {
                    _Tag = base.CreateObjectSet<Tag>("Tag");
                }
                return _Tag;
            }
        }
        private ObjectSet<Tag> _Tag;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaxonomyBranch> TaxonomyBranch
        {
            get
            {
                if ((_TaxonomyBranch == null))
                {
                    _TaxonomyBranch = base.CreateObjectSet<TaxonomyBranch>("TaxonomyBranch");
                }
                return _TaxonomyBranch;
            }
        }
        private ObjectSet<TaxonomyBranch> _TaxonomyBranch;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaxonomyLeaf> TaxonomyLeaf
        {
            get
            {
                if ((_TaxonomyLeaf == null))
                {
                    _TaxonomyLeaf = base.CreateObjectSet<TaxonomyLeaf>("TaxonomyLeaf");
                }
                return _TaxonomyLeaf;
            }
        }
        private ObjectSet<TaxonomyLeaf> _TaxonomyLeaf;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaxonomyLeafPerformanceMeasure> TaxonomyLeafPerformanceMeasure
        {
            get
            {
                if ((_TaxonomyLeafPerformanceMeasure == null))
                {
                    _TaxonomyLeafPerformanceMeasure = base.CreateObjectSet<TaxonomyLeafPerformanceMeasure>("TaxonomyLeafPerformanceMeasure");
                }
                return _TaxonomyLeafPerformanceMeasure;
            }
        }
        private ObjectSet<TaxonomyLeafPerformanceMeasure> _TaxonomyLeafPerformanceMeasure;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaxonomyLevel> TaxonomyLevel
        {
            get
            {
                if ((_TaxonomyLevel == null))
                {
                    _TaxonomyLevel = base.CreateObjectSet<TaxonomyLevel>("TaxonomyLevel");
                }
                return _TaxonomyLevel;
            }
        }
        private ObjectSet<TaxonomyLevel> _TaxonomyLevel;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TaxonomyTrunk> TaxonomyTrunk
        {
            get
            {
                if ((_TaxonomyTrunk == null))
                {
                    _TaxonomyTrunk = base.CreateObjectSet<TaxonomyTrunk>("TaxonomyTrunk");
                }
                return _TaxonomyTrunk;
            }
        }
        private ObjectSet<TaxonomyTrunk> _TaxonomyTrunk;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TechnicalAssistanceParameter> TechnicalAssistanceParameter
        {
            get
            {
                if ((_TechnicalAssistanceParameter == null))
                {
                    _TechnicalAssistanceParameter = base.CreateObjectSet<TechnicalAssistanceParameter>("TechnicalAssistanceParameter");
                }
                return _TechnicalAssistanceParameter;
            }
        }
        private ObjectSet<TechnicalAssistanceParameter> _TechnicalAssistanceParameter;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tenant> Tenant
        {
            get
            {
                if ((_Tenant == null))
                {
                    _Tenant = base.CreateObjectSet<Tenant>("Tenant");
                }
                return _Tenant;
            }
        }
        private ObjectSet<Tenant> _Tenant;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TenantAttribute> TenantAttribute
        {
            get
            {
                if ((_TenantAttribute == null))
                {
                    _TenantAttribute = base.CreateObjectSet<TenantAttribute>("TenantAttribute");
                }
                return _TenantAttribute;
            }
        }
        private ObjectSet<TenantAttribute> _TenantAttribute;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<tmpGrantsFlatFile> tmpGrantsFlatFile
        {
            get
            {
                if ((_tmpGrantsFlatFile == null))
                {
                    _tmpGrantsFlatFile = base.CreateObjectSet<tmpGrantsFlatFile>("tmpGrantsFlatFile");
                }
                return _tmpGrantsFlatFile;
            }
        }
        private ObjectSet<tmpGrantsFlatFile> _tmpGrantsFlatFile;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TrainingVideo> TrainingVideo
        {
            get
            {
                if ((_TrainingVideo == null))
                {
                    _TrainingVideo = base.CreateObjectSet<TrainingVideo>("TrainingVideo");
                }
                return _TrainingVideo;
            }
        }
        private ObjectSet<TrainingVideo> _TrainingVideo;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TreatmentActivity> TreatmentActivity
        {
            get
            {
                if ((_TreatmentActivity == null))
                {
                    _TreatmentActivity = base.CreateObjectSet<TreatmentActivity>("TreatmentActivity");
                }
                return _TreatmentActivity;
            }
        }
        private ObjectSet<TreatmentActivity> _TreatmentActivity;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TreatmentType> TreatmentType
        {
            get
            {
                if ((_TreatmentType == null))
                {
                    _TreatmentType = base.CreateObjectSet<TreatmentType>("TreatmentType");
                }
                return _TreatmentType;
            }
        }
        private ObjectSet<TreatmentType> _TreatmentType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AggregatedCounter> AggregatedCounter
        {
            get
            {
                if ((_AggregatedCounter == null))
                {
                    _AggregatedCounter = base.CreateObjectSet<AggregatedCounter>("AggregatedCounter");
                }
                return _AggregatedCounter;
            }
        }
        private ObjectSet<AggregatedCounter> _AggregatedCounter;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Counter> Counter
        {
            get
            {
                if ((_Counter == null))
                {
                    _Counter = base.CreateObjectSet<Counter>("Counter");
                }
                return _Counter;
            }
        }
        private ObjectSet<Counter> _Counter;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Hash> Hash
        {
            get
            {
                if ((_Hash == null))
                {
                    _Hash = base.CreateObjectSet<Hash>("Hash");
                }
                return _Hash;
            }
        }
        private ObjectSet<Hash> _Hash;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Job> Job
        {
            get
            {
                if ((_Job == null))
                {
                    _Job = base.CreateObjectSet<Job>("Job");
                }
                return _Job;
            }
        }
        private ObjectSet<Job> _Job;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobParameter> JobParameter
        {
            get
            {
                if ((_JobParameter == null))
                {
                    _JobParameter = base.CreateObjectSet<JobParameter>("JobParameter");
                }
                return _JobParameter;
            }
        }
        private ObjectSet<JobParameter> _JobParameter;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobQueue> JobQueue
        {
            get
            {
                if ((_JobQueue == null))
                {
                    _JobQueue = base.CreateObjectSet<JobQueue>("JobQueue");
                }
                return _JobQueue;
            }
        }
        private ObjectSet<JobQueue> _JobQueue;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<List> List
        {
            get
            {
                if ((_List == null))
                {
                    _List = base.CreateObjectSet<List>("List");
                }
                return _List;
            }
        }
        private ObjectSet<List> _List;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Schema> Schema
        {
            get
            {
                if ((_Schema == null))
                {
                    _Schema = base.CreateObjectSet<Schema>("Schema");
                }
                return _Schema;
            }
        }
        private ObjectSet<Schema> _Schema;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Server> Server
        {
            get
            {
                if ((_Server == null))
                {
                    _Server = base.CreateObjectSet<Server>("Server");
                }
                return _Server;
            }
        }
        private ObjectSet<Server> _Server;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Set> Set
        {
            get
            {
                if ((_Set == null))
                {
                    _Set = base.CreateObjectSet<Set>("Set");
                }
                return _Set;
            }
        }
        private ObjectSet<Set> _Set;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<State> State
        {
            get
            {
                if ((_State == null))
                {
                    _State = base.CreateObjectSet<State>("State");
                }
                return _State;
            }
        }
        private ObjectSet<State> _State;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<vGeoServerGeospatialArea> vGeoServerGeospatialArea
        {
            get
            {
                if ((_vGeoServerGeospatialArea == null))
                {
                    _vGeoServerGeospatialArea = base.CreateObjectSet<vGeoServerGeospatialArea>("vGeoServerGeospatialArea");
                }
                return _vGeoServerGeospatialArea;
            }
        }
        private ObjectSet<vGeoServerGeospatialArea> _vGeoServerGeospatialArea;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccomplishmentsDashboardFundingDisplayType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccomplishmentsDashboardFundingDisplayType(AccomplishmentsDashboardFundingDisplayType accomplishmentsDashboardFundingDisplayType)
        {
            base.AddObject("AccomplishmentsDashboardFundingDisplayType", accomplishmentsDashboardFundingDisplayType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ActivityType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActivityType(ActivityType activityType)
        {
            base.AddObject("ActivityType", activityType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssessmentGoal EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssessmentGoal(AssessmentGoal assessmentGoal)
        {
            base.AddObject("AssessmentGoal", assessmentGoal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssessmentQuestion EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssessmentQuestion(AssessmentQuestion assessmentQuestion)
        {
            base.AddObject("AssessmentQuestion", assessmentQuestion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AssessmentSubGoal EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssessmentSubGoal(AssessmentSubGoal assessmentSubGoal)
        {
            base.AddObject("AssessmentSubGoal", assessmentSubGoal);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuditLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuditLog(AuditLog auditLog)
        {
            base.AddObject("AuditLog", auditLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuditLogEventType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuditLogEventType(AuditLogEventType auditLogEventType)
        {
            base.AddObject("AuditLogEventType", auditLogEventType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Classification EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClassification(Classification classification)
        {
            base.AddObject("Classification", classification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClassificationPerformanceMeasure EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClassificationPerformanceMeasure(ClassificationPerformanceMeasure classificationPerformanceMeasure)
        {
            base.AddObject("ClassificationPerformanceMeasure", classificationPerformanceMeasure);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClassificationSystem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClassificationSystem(ClassificationSystem classificationSystem)
        {
            base.AddObject("ClassificationSystem", classificationSystem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ContractorTimeActivity EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContractorTimeActivity(ContractorTimeActivity contractorTimeActivity)
        {
            base.AddObject("ContractorTimeActivity", contractorTimeActivity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CostParameterSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCostParameterSet(CostParameterSet costParameterSet)
        {
            base.AddObject("CostParameterSet", costParameterSet);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the County EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCounty(County county)
        {
            base.AddObject("County", county);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomPage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomPage(CustomPage customPage)
        {
            base.AddObject("CustomPage", customPage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomPageDisplayType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomPageDisplayType(CustomPageDisplayType customPageDisplayType)
        {
            base.AddObject("CustomPageDisplayType", customPageDisplayType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomPageImage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomPageImage(CustomPageImage customPageImage)
        {
            base.AddObject("CustomPageImage", customPageImage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DatabaseMigration EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDatabaseMigration(DatabaseMigration databaseMigration)
        {
            base.AddObject("DatabaseMigration", databaseMigration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Deployment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeployment(Deployment deployment)
        {
            base.AddObject("Deployment", deployment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FieldDefinition EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFieldDefinition(FieldDefinition fieldDefinition)
        {
            base.AddObject("FieldDefinition", fieldDefinition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FieldDefinitionData EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFieldDefinitionData(FieldDefinitionData fieldDefinitionData)
        {
            base.AddObject("FieldDefinitionData", fieldDefinitionData);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FieldDefinitionDataImage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFieldDefinitionDataImage(FieldDefinitionDataImage fieldDefinitionDataImage)
        {
            base.AddObject("FieldDefinitionDataImage", fieldDefinitionDataImage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FileResource EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFileResource(FileResource fileResource)
        {
            base.AddObject("FileResource", fileResource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FileResourceMimeType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFileResourceMimeType(FileResourceMimeType fileResourceMimeType)
        {
            base.AddObject("FileResourceMimeType", fileResourceMimeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FirmaHomePageImage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFirmaHomePageImage(FirmaHomePageImage firmaHomePageImage)
        {
            base.AddObject("FirmaHomePageImage", firmaHomePageImage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FirmaPage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFirmaPage(FirmaPage firmaPage)
        {
            base.AddObject("FirmaPage", firmaPage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FirmaPageImage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFirmaPageImage(FirmaPageImage firmaPageImage)
        {
            base.AddObject("FirmaPageImage", firmaPageImage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FirmaPageRenderType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFirmaPageRenderType(FirmaPageRenderType firmaPageRenderType)
        {
            base.AddObject("FirmaPageRenderType", firmaPageRenderType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FirmaPageType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFirmaPageType(FirmaPageType firmaPageType)
        {
            base.AddObject("FirmaPageType", firmaPageType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FundingSource EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFundingSource(FundingSource fundingSource)
        {
            base.AddObject("FundingSource", fundingSource);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the geometry_columns EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTogeometry_columns(geometry_columns geometry_columns)
        {
            base.AddObject("geometry_columns", geometry_columns);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GeospatialArea EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGeospatialArea(GeospatialArea geospatialArea)
        {
            base.AddObject("GeospatialArea", geospatialArea);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GeospatialAreaType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGeospatialAreaType(GeospatialAreaType geospatialAreaType)
        {
            base.AddObject("GeospatialAreaType", geospatialAreaType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GoogleChartType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGoogleChartType(GoogleChartType googleChartType)
        {
            base.AddObject("GoogleChartType", googleChartType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Grant EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGrant(Grant grant)
        {
            base.AddObject("Grant", grant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GrantAllocation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGrantAllocation(GrantAllocation grantAllocation)
        {
            base.AddObject("GrantAllocation", grantAllocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ImportExternalProjectStaging EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToImportExternalProjectStaging(ImportExternalProjectStaging importExternalProjectStaging)
        {
            base.AddObject("ImportExternalProjectStaging", importExternalProjectStaging);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MappedRegion EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMappedRegion(MappedRegion mappedRegion)
        {
            base.AddObject("MappedRegion", mappedRegion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MeasurementUnitType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMeasurementUnitType(MeasurementUnitType measurementUnitType)
        {
            base.AddObject("MeasurementUnitType", measurementUnitType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MonitoringProgram EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMonitoringProgram(MonitoringProgram monitoringProgram)
        {
            base.AddObject("MonitoringProgram", monitoringProgram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MonitoringProgramDocument EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMonitoringProgramDocument(MonitoringProgramDocument monitoringProgramDocument)
        {
            base.AddObject("MonitoringProgramDocument", monitoringProgramDocument);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MonitoringProgramPartner EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMonitoringProgramPartner(MonitoringProgramPartner monitoringProgramPartner)
        {
            base.AddObject("MonitoringProgramPartner", monitoringProgramPartner);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Notification EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotification(Notification notification)
        {
            base.AddObject("Notification", notification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NotificationProject EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotificationProject(NotificationProject notificationProject)
        {
            base.AddObject("NotificationProject", notificationProject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the NotificationType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNotificationType(NotificationType notificationType)
        {
            base.AddObject("NotificationType", notificationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Organization EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganization(Organization organization)
        {
            base.AddObject("Organization", organization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrganizationBoundaryStaging EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganizationBoundaryStaging(OrganizationBoundaryStaging organizationBoundaryStaging)
        {
            base.AddObject("OrganizationBoundaryStaging", organizationBoundaryStaging);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrganizationType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganizationType(OrganizationType organizationType)
        {
            base.AddObject("OrganizationType", organizationType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrganizationTypeRelationshipType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganizationTypeRelationshipType(OrganizationTypeRelationshipType organizationTypeRelationshipType)
        {
            base.AddObject("OrganizationTypeRelationshipType", organizationTypeRelationshipType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PerformanceMeasure EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerformanceMeasure(PerformanceMeasure performanceMeasure)
        {
            base.AddObject("PerformanceMeasure", performanceMeasure);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PerformanceMeasureActual EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerformanceMeasureActual(PerformanceMeasureActual performanceMeasureActual)
        {
            base.AddObject("PerformanceMeasureActual", performanceMeasureActual);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PerformanceMeasureActualSubcategoryOption EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerformanceMeasureActualSubcategoryOption(PerformanceMeasureActualSubcategoryOption performanceMeasureActualSubcategoryOption)
        {
            base.AddObject("PerformanceMeasureActualSubcategoryOption", performanceMeasureActualSubcategoryOption);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PerformanceMeasureActualSubcategoryOptionUpdate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerformanceMeasureActualSubcategoryOptionUpdate(PerformanceMeasureActualSubcategoryOptionUpdate performanceMeasureActualSubcategoryOptionUpdate)
        {
            base.AddObject("PerformanceMeasureActualSubcategoryOptionUpdate", performanceMeasureActualSubcategoryOptionUpdate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PerformanceMeasureActualUpdate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerformanceMeasureActualUpdate(PerformanceMeasureActualUpdate performanceMeasureActualUpdate)
        {
            base.AddObject("PerformanceMeasureActualUpdate", performanceMeasureActualUpdate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PerformanceMeasureDataSourceType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerformanceMeasureDataSourceType(PerformanceMeasureDataSourceType performanceMeasureDataSourceType)
        {
            base.AddObject("PerformanceMeasureDataSourceType", performanceMeasureDataSourceType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PerformanceMeasureExpected EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerformanceMeasureExpected(PerformanceMeasureExpected performanceMeasureExpected)
        {
            base.AddObject("PerformanceMeasureExpected", performanceMeasureExpected);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PerformanceMeasureExpectedSubcategoryOption EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerformanceMeasureExpectedSubcategoryOption(PerformanceMeasureExpectedSubcategoryOption performanceMeasureExpectedSubcategoryOption)
        {
            base.AddObject("PerformanceMeasureExpectedSubcategoryOption", performanceMeasureExpectedSubcategoryOption);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PerformanceMeasureMonitoringProgram EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerformanceMeasureMonitoringProgram(PerformanceMeasureMonitoringProgram performanceMeasureMonitoringProgram)
        {
            base.AddObject("PerformanceMeasureMonitoringProgram", performanceMeasureMonitoringProgram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PerformanceMeasureNote EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerformanceMeasureNote(PerformanceMeasureNote performanceMeasureNote)
        {
            base.AddObject("PerformanceMeasureNote", performanceMeasureNote);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PerformanceMeasureSubcategory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerformanceMeasureSubcategory(PerformanceMeasureSubcategory performanceMeasureSubcategory)
        {
            base.AddObject("PerformanceMeasureSubcategory", performanceMeasureSubcategory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PerformanceMeasureSubcategoryOption EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerformanceMeasureSubcategoryOption(PerformanceMeasureSubcategoryOption performanceMeasureSubcategoryOption)
        {
            base.AddObject("PerformanceMeasureSubcategoryOption", performanceMeasureSubcategoryOption);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PerformanceMeasureTargetValueType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerformanceMeasureTargetValueType(PerformanceMeasureTargetValueType performanceMeasureTargetValueType)
        {
            base.AddObject("PerformanceMeasureTargetValueType", performanceMeasureTargetValueType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PerformanceMeasureType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerformanceMeasureType(PerformanceMeasureType performanceMeasureType)
        {
            base.AddObject("PerformanceMeasureType", performanceMeasureType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Person EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPerson(Person person)
        {
            base.AddObject("Person", person);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonStewardGeospatialArea EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonStewardGeospatialArea(PersonStewardGeospatialArea personStewardGeospatialArea)
        {
            base.AddObject("PersonStewardGeospatialArea", personStewardGeospatialArea);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonStewardOrganization EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonStewardOrganization(PersonStewardOrganization personStewardOrganization)
        {
            base.AddObject("PersonStewardOrganization", personStewardOrganization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PersonStewardTaxonomyBranch EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPersonStewardTaxonomyBranch(PersonStewardTaxonomyBranch personStewardTaxonomyBranch)
        {
            base.AddObject("PersonStewardTaxonomyBranch", personStewardTaxonomyBranch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Project EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProject(Project project)
        {
            base.AddObject("Project", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectApprovalStatus EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectApprovalStatus(ProjectApprovalStatus projectApprovalStatus)
        {
            base.AddObject("ProjectApprovalStatus", projectApprovalStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectAssessmentQuestion EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectAssessmentQuestion(ProjectAssessmentQuestion projectAssessmentQuestion)
        {
            base.AddObject("ProjectAssessmentQuestion", projectAssessmentQuestion);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectBudget EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectBudget(ProjectBudget projectBudget)
        {
            base.AddObject("ProjectBudget", projectBudget);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectBudgetUpdate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectBudgetUpdate(ProjectBudgetUpdate projectBudgetUpdate)
        {
            base.AddObject("ProjectBudgetUpdate", projectBudgetUpdate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectClassification EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectClassification(ProjectClassification projectClassification)
        {
            base.AddObject("ProjectClassification", projectClassification);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectColorByType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectColorByType(ProjectColorByType projectColorByType)
        {
            base.AddObject("ProjectColorByType", projectColorByType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectCostType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectCostType(ProjectCostType projectCostType)
        {
            base.AddObject("ProjectCostType", projectCostType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectCreateSection EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectCreateSection(ProjectCreateSection projectCreateSection)
        {
            base.AddObject("ProjectCreateSection", projectCreateSection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectCustomAttribute EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectCustomAttribute(ProjectCustomAttribute projectCustomAttribute)
        {
            base.AddObject("ProjectCustomAttribute", projectCustomAttribute);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectCustomAttributeDataType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectCustomAttributeDataType(ProjectCustomAttributeDataType projectCustomAttributeDataType)
        {
            base.AddObject("ProjectCustomAttributeDataType", projectCustomAttributeDataType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectCustomAttributeType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectCustomAttributeType(ProjectCustomAttributeType projectCustomAttributeType)
        {
            base.AddObject("ProjectCustomAttributeType", projectCustomAttributeType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectCustomAttributeUpdate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectCustomAttributeUpdate(ProjectCustomAttributeUpdate projectCustomAttributeUpdate)
        {
            base.AddObject("ProjectCustomAttributeUpdate", projectCustomAttributeUpdate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectCustomAttributeUpdateValue EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectCustomAttributeUpdateValue(ProjectCustomAttributeUpdateValue projectCustomAttributeUpdateValue)
        {
            base.AddObject("ProjectCustomAttributeUpdateValue", projectCustomAttributeUpdateValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectCustomAttributeValue EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectCustomAttributeValue(ProjectCustomAttributeValue projectCustomAttributeValue)
        {
            base.AddObject("ProjectCustomAttributeValue", projectCustomAttributeValue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectDocument EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectDocument(ProjectDocument projectDocument)
        {
            base.AddObject("ProjectDocument", projectDocument);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectDocumentUpdate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectDocumentUpdate(ProjectDocumentUpdate projectDocumentUpdate)
        {
            base.AddObject("ProjectDocumentUpdate", projectDocumentUpdate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectExemptReportingType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectExemptReportingType(ProjectExemptReportingType projectExemptReportingType)
        {
            base.AddObject("ProjectExemptReportingType", projectExemptReportingType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectExemptReportingYear EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectExemptReportingYear(ProjectExemptReportingYear projectExemptReportingYear)
        {
            base.AddObject("ProjectExemptReportingYear", projectExemptReportingYear);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectExemptReportingYearUpdate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectExemptReportingYearUpdate(ProjectExemptReportingYearUpdate projectExemptReportingYearUpdate)
        {
            base.AddObject("ProjectExemptReportingYearUpdate", projectExemptReportingYearUpdate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectExternalLink EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectExternalLink(ProjectExternalLink projectExternalLink)
        {
            base.AddObject("ProjectExternalLink", projectExternalLink);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectExternalLinkUpdate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectExternalLinkUpdate(ProjectExternalLinkUpdate projectExternalLinkUpdate)
        {
            base.AddObject("ProjectExternalLinkUpdate", projectExternalLinkUpdate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectFundingSourceExpenditure EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectFundingSourceExpenditure(ProjectFundingSourceExpenditure projectFundingSourceExpenditure)
        {
            base.AddObject("ProjectFundingSourceExpenditure", projectFundingSourceExpenditure);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectFundingSourceExpenditureUpdate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectFundingSourceExpenditureUpdate(ProjectFundingSourceExpenditureUpdate projectFundingSourceExpenditureUpdate)
        {
            base.AddObject("ProjectFundingSourceExpenditureUpdate", projectFundingSourceExpenditureUpdate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectFundingSourceRequest EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectFundingSourceRequest(ProjectFundingSourceRequest projectFundingSourceRequest)
        {
            base.AddObject("ProjectFundingSourceRequest", projectFundingSourceRequest);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectFundingSourceRequestUpdate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectFundingSourceRequestUpdate(ProjectFundingSourceRequestUpdate projectFundingSourceRequestUpdate)
        {
            base.AddObject("ProjectFundingSourceRequestUpdate", projectFundingSourceRequestUpdate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectGeospatialArea EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectGeospatialArea(ProjectGeospatialArea projectGeospatialArea)
        {
            base.AddObject("ProjectGeospatialArea", projectGeospatialArea);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectGeospatialAreaTypeNote EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectGeospatialAreaTypeNote(ProjectGeospatialAreaTypeNote projectGeospatialAreaTypeNote)
        {
            base.AddObject("ProjectGeospatialAreaTypeNote", projectGeospatialAreaTypeNote);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectGeospatialAreaTypeNoteUpdate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectGeospatialAreaTypeNoteUpdate(ProjectGeospatialAreaTypeNoteUpdate projectGeospatialAreaTypeNoteUpdate)
        {
            base.AddObject("ProjectGeospatialAreaTypeNoteUpdate", projectGeospatialAreaTypeNoteUpdate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectGeospatialAreaUpdate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectGeospatialAreaUpdate(ProjectGeospatialAreaUpdate projectGeospatialAreaUpdate)
        {
            base.AddObject("ProjectGeospatialAreaUpdate", projectGeospatialAreaUpdate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectImage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectImage(ProjectImage projectImage)
        {
            base.AddObject("ProjectImage", projectImage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectImageTiming EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectImageTiming(ProjectImageTiming projectImageTiming)
        {
            base.AddObject("ProjectImageTiming", projectImageTiming);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectImageUpdate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectImageUpdate(ProjectImageUpdate projectImageUpdate)
        {
            base.AddObject("ProjectImageUpdate", projectImageUpdate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectInternalNote EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectInternalNote(ProjectInternalNote projectInternalNote)
        {
            base.AddObject("ProjectInternalNote", projectInternalNote);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectLocation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectLocation(ProjectLocation projectLocation)
        {
            base.AddObject("ProjectLocation", projectLocation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectLocationFilterType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectLocationFilterType(ProjectLocationFilterType projectLocationFilterType)
        {
            base.AddObject("ProjectLocationFilterType", projectLocationFilterType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectLocationSimpleType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectLocationSimpleType(ProjectLocationSimpleType projectLocationSimpleType)
        {
            base.AddObject("ProjectLocationSimpleType", projectLocationSimpleType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectLocationStaging EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectLocationStaging(ProjectLocationStaging projectLocationStaging)
        {
            base.AddObject("ProjectLocationStaging", projectLocationStaging);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectLocationStagingUpdate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectLocationStagingUpdate(ProjectLocationStagingUpdate projectLocationStagingUpdate)
        {
            base.AddObject("ProjectLocationStagingUpdate", projectLocationStagingUpdate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectLocationUpdate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectLocationUpdate(ProjectLocationUpdate projectLocationUpdate)
        {
            base.AddObject("ProjectLocationUpdate", projectLocationUpdate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectNote EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectNote(ProjectNote projectNote)
        {
            base.AddObject("ProjectNote", projectNote);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectNoteUpdate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectNoteUpdate(ProjectNoteUpdate projectNoteUpdate)
        {
            base.AddObject("ProjectNoteUpdate", projectNoteUpdate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectOrganization EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectOrganization(ProjectOrganization projectOrganization)
        {
            base.AddObject("ProjectOrganization", projectOrganization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectOrganizationUpdate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectOrganizationUpdate(ProjectOrganizationUpdate projectOrganizationUpdate)
        {
            base.AddObject("ProjectOrganizationUpdate", projectOrganizationUpdate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectPerson EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectPerson(ProjectPerson projectPerson)
        {
            base.AddObject("ProjectPerson", projectPerson);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectPersonRelationshipType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectPersonRelationshipType(ProjectPersonRelationshipType projectPersonRelationshipType)
        {
            base.AddObject("ProjectPersonRelationshipType", projectPersonRelationshipType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectPersonUpdate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectPersonUpdate(ProjectPersonUpdate projectPersonUpdate)
        {
            base.AddObject("ProjectPersonUpdate", projectPersonUpdate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectStage EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectStage(ProjectStage projectStage)
        {
            base.AddObject("ProjectStage", projectStage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectStewardshipAreaType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectStewardshipAreaType(ProjectStewardshipAreaType projectStewardshipAreaType)
        {
            base.AddObject("ProjectStewardshipAreaType", projectStewardshipAreaType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectTag EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectTag(ProjectTag projectTag)
        {
            base.AddObject("ProjectTag", projectTag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectUpdate EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectUpdate(ProjectUpdate projectUpdate)
        {
            base.AddObject("ProjectUpdate", projectUpdate);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectUpdateBatch EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectUpdateBatch(ProjectUpdateBatch projectUpdateBatch)
        {
            base.AddObject("ProjectUpdateBatch", projectUpdateBatch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectUpdateConfiguration EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectUpdateConfiguration(ProjectUpdateConfiguration projectUpdateConfiguration)
        {
            base.AddObject("ProjectUpdateConfiguration", projectUpdateConfiguration);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectUpdateHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectUpdateHistory(ProjectUpdateHistory projectUpdateHistory)
        {
            base.AddObject("ProjectUpdateHistory", projectUpdateHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectUpdateSection EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectUpdateSection(ProjectUpdateSection projectUpdateSection)
        {
            base.AddObject("ProjectUpdateSection", projectUpdateSection);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectUpdateState EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectUpdateState(ProjectUpdateState projectUpdateState)
        {
            base.AddObject("ProjectUpdateState", projectUpdateState);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectWorkflowSectionGrouping EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectWorkflowSectionGrouping(ProjectWorkflowSectionGrouping projectWorkflowSectionGrouping)
        {
            base.AddObject("ProjectWorkflowSectionGrouping", projectWorkflowSectionGrouping);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RelationshipType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRelationshipType(RelationshipType relationshipType)
        {
            base.AddObject("RelationshipType", relationshipType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Role EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRole(Role role)
        {
            base.AddObject("Role", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Snapshot EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSnapshot(Snapshot snapshot)
        {
            base.AddObject("Snapshot", snapshot);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SnapshotOrganizationTypeExpenditure EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSnapshotOrganizationTypeExpenditure(SnapshotOrganizationTypeExpenditure snapshotOrganizationTypeExpenditure)
        {
            base.AddObject("SnapshotOrganizationTypeExpenditure", snapshotOrganizationTypeExpenditure);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SnapshotPerformanceMeasure EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSnapshotPerformanceMeasure(SnapshotPerformanceMeasure snapshotPerformanceMeasure)
        {
            base.AddObject("SnapshotPerformanceMeasure", snapshotPerformanceMeasure);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SnapshotPerformanceMeasureSubcategoryOption EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSnapshotPerformanceMeasureSubcategoryOption(SnapshotPerformanceMeasureSubcategoryOption snapshotPerformanceMeasureSubcategoryOption)
        {
            base.AddObject("SnapshotPerformanceMeasureSubcategoryOption", snapshotPerformanceMeasureSubcategoryOption);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SnapshotProject EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSnapshotProject(SnapshotProject snapshotProject)
        {
            base.AddObject("SnapshotProject", snapshotProject);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SnapshotProjectType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSnapshotProjectType(SnapshotProjectType snapshotProjectType)
        {
            base.AddObject("SnapshotProjectType", snapshotProjectType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the spatial_ref_sys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTospatial_ref_sys(spatial_ref_sys spatial_ref_sys)
        {
            base.AddObject("spatial_ref_sys", spatial_ref_sys);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StateProvince EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStateProvince(StateProvince stateProvince)
        {
            base.AddObject("StateProvince", stateProvince);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SupportRequestLog EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSupportRequestLog(SupportRequestLog supportRequestLog)
        {
            base.AddObject("SupportRequestLog", supportRequestLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SupportRequestType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSupportRequestType(SupportRequestType supportRequestType)
        {
            base.AddObject("SupportRequestType", supportRequestType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tag EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTag(Tag tag)
        {
            base.AddObject("Tag", tag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaxonomyBranch EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaxonomyBranch(TaxonomyBranch taxonomyBranch)
        {
            base.AddObject("TaxonomyBranch", taxonomyBranch);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaxonomyLeaf EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaxonomyLeaf(TaxonomyLeaf taxonomyLeaf)
        {
            base.AddObject("TaxonomyLeaf", taxonomyLeaf);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaxonomyLeafPerformanceMeasure EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaxonomyLeafPerformanceMeasure(TaxonomyLeafPerformanceMeasure taxonomyLeafPerformanceMeasure)
        {
            base.AddObject("TaxonomyLeafPerformanceMeasure", taxonomyLeafPerformanceMeasure);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaxonomyLevel EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaxonomyLevel(TaxonomyLevel taxonomyLevel)
        {
            base.AddObject("TaxonomyLevel", taxonomyLevel);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TaxonomyTrunk EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaxonomyTrunk(TaxonomyTrunk taxonomyTrunk)
        {
            base.AddObject("TaxonomyTrunk", taxonomyTrunk);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TechnicalAssistanceParameter EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTechnicalAssistanceParameter(TechnicalAssistanceParameter technicalAssistanceParameter)
        {
            base.AddObject("TechnicalAssistanceParameter", technicalAssistanceParameter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tenant EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTenant(Tenant tenant)
        {
            base.AddObject("Tenant", tenant);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TenantAttribute EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTenantAttribute(TenantAttribute tenantAttribute)
        {
            base.AddObject("TenantAttribute", tenantAttribute);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the tmpGrantsFlatFile EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTotmpGrantsFlatFile(tmpGrantsFlatFile tmpGrantsFlatFile)
        {
            base.AddObject("tmpGrantsFlatFile", tmpGrantsFlatFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TrainingVideo EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTrainingVideo(TrainingVideo trainingVideo)
        {
            base.AddObject("TrainingVideo", trainingVideo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TreatmentActivity EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTreatmentActivity(TreatmentActivity treatmentActivity)
        {
            base.AddObject("TreatmentActivity", treatmentActivity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TreatmentType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTreatmentType(TreatmentType treatmentType)
        {
            base.AddObject("TreatmentType", treatmentType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AggregatedCounter EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAggregatedCounter(AggregatedCounter aggregatedCounter)
        {
            base.AddObject("AggregatedCounter", aggregatedCounter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Counter EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCounter(Counter counter)
        {
            base.AddObject("Counter", counter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Hash EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHash(Hash hash)
        {
            base.AddObject("Hash", hash);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Job EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJob(Job job)
        {
            base.AddObject("Job", job);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobParameter EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobParameter(JobParameter jobParameter)
        {
            base.AddObject("JobParameter", jobParameter);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobQueue EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobQueue(JobQueue jobQueue)
        {
            base.AddObject("JobQueue", jobQueue);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the List EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToList(List list)
        {
            base.AddObject("List", list);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Schema EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSchema(Schema schema)
        {
            base.AddObject("Schema", schema);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Server EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServer(Server server)
        {
            base.AddObject("Server", server);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Set EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSet(Set set)
        {
            base.AddObject("Set", set);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the State EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToState(State state)
        {
            base.AddObject("State", state);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the vGeoServerGeospatialArea EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTovGeoServerGeospatialArea(vGeoServerGeospatialArea vGeoServerGeospatialArea)
        {
            base.AddObject("vGeoServerGeospatialArea", vGeoServerGeospatialArea);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="AccomplishmentsDashboardFundingDisplayType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccomplishmentsDashboardFundingDisplayType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccomplishmentsDashboardFundingDisplayType object.
        /// </summary>
        /// <param name="accomplishmentsDashboardFundingDisplayTypeID">Initial value of the AccomplishmentsDashboardFundingDisplayTypeID property.</param>
        /// <param name="accomplishmentsDashboardFundingDisplayTypeName">Initial value of the AccomplishmentsDashboardFundingDisplayTypeName property.</param>
        /// <param name="accomplishmentsDashboardFundingDisplayTypeDisplayName">Initial value of the AccomplishmentsDashboardFundingDisplayTypeDisplayName property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static AccomplishmentsDashboardFundingDisplayType CreateAccomplishmentsDashboardFundingDisplayType(global::System.Int32 accomplishmentsDashboardFundingDisplayTypeID, global::System.String accomplishmentsDashboardFundingDisplayTypeName, global::System.String accomplishmentsDashboardFundingDisplayTypeDisplayName, global::System.Int32 sortOrder)
        {
            AccomplishmentsDashboardFundingDisplayType accomplishmentsDashboardFundingDisplayType = new AccomplishmentsDashboardFundingDisplayType();
            accomplishmentsDashboardFundingDisplayType.AccomplishmentsDashboardFundingDisplayTypeID = accomplishmentsDashboardFundingDisplayTypeID;
            accomplishmentsDashboardFundingDisplayType.AccomplishmentsDashboardFundingDisplayTypeName = accomplishmentsDashboardFundingDisplayTypeName;
            accomplishmentsDashboardFundingDisplayType.AccomplishmentsDashboardFundingDisplayTypeDisplayName = accomplishmentsDashboardFundingDisplayTypeDisplayName;
            accomplishmentsDashboardFundingDisplayType.SortOrder = sortOrder;
            return accomplishmentsDashboardFundingDisplayType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccomplishmentsDashboardFundingDisplayTypeID
        {
            get
            {
                return _AccomplishmentsDashboardFundingDisplayTypeID;
            }
            set
            {
                if (_AccomplishmentsDashboardFundingDisplayTypeID != value)
                {
                    OnAccomplishmentsDashboardFundingDisplayTypeIDChanging(value);
                    ReportPropertyChanging("AccomplishmentsDashboardFundingDisplayTypeID");
                    _AccomplishmentsDashboardFundingDisplayTypeID = StructuralObject.SetValidValue(value, "AccomplishmentsDashboardFundingDisplayTypeID");
                    ReportPropertyChanged("AccomplishmentsDashboardFundingDisplayTypeID");
                    OnAccomplishmentsDashboardFundingDisplayTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _AccomplishmentsDashboardFundingDisplayTypeID;
        partial void OnAccomplishmentsDashboardFundingDisplayTypeIDChanging(global::System.Int32 value);
        partial void OnAccomplishmentsDashboardFundingDisplayTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccomplishmentsDashboardFundingDisplayTypeName
        {
            get
            {
                return _AccomplishmentsDashboardFundingDisplayTypeName;
            }
            set
            {
                OnAccomplishmentsDashboardFundingDisplayTypeNameChanging(value);
                ReportPropertyChanging("AccomplishmentsDashboardFundingDisplayTypeName");
                _AccomplishmentsDashboardFundingDisplayTypeName = StructuralObject.SetValidValue(value, false, "AccomplishmentsDashboardFundingDisplayTypeName");
                ReportPropertyChanged("AccomplishmentsDashboardFundingDisplayTypeName");
                OnAccomplishmentsDashboardFundingDisplayTypeNameChanged();
            }
        }
        private global::System.String _AccomplishmentsDashboardFundingDisplayTypeName;
        partial void OnAccomplishmentsDashboardFundingDisplayTypeNameChanging(global::System.String value);
        partial void OnAccomplishmentsDashboardFundingDisplayTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AccomplishmentsDashboardFundingDisplayTypeDisplayName
        {
            get
            {
                return _AccomplishmentsDashboardFundingDisplayTypeDisplayName;
            }
            set
            {
                OnAccomplishmentsDashboardFundingDisplayTypeDisplayNameChanging(value);
                ReportPropertyChanging("AccomplishmentsDashboardFundingDisplayTypeDisplayName");
                _AccomplishmentsDashboardFundingDisplayTypeDisplayName = StructuralObject.SetValidValue(value, false, "AccomplishmentsDashboardFundingDisplayTypeDisplayName");
                ReportPropertyChanged("AccomplishmentsDashboardFundingDisplayTypeDisplayName");
                OnAccomplishmentsDashboardFundingDisplayTypeDisplayNameChanged();
            }
        }
        private global::System.String _AccomplishmentsDashboardFundingDisplayTypeDisplayName;
        partial void OnAccomplishmentsDashboardFundingDisplayTypeDisplayNameChanging(global::System.String value);
        partial void OnAccomplishmentsDashboardFundingDisplayTypeDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value, "SortOrder");
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_AccomplishmentsDashboardFundingDisplayType_AccomplishmentsDashboardFundingDisplayTypeID", "TenantAttribute")]
        public EntityCollection<TenantAttribute> TenantAttribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TenantAttribute>("ProjectFirma.Web.Models.FK_TenantAttribute_AccomplishmentsDashboardFundingDisplayType_AccomplishmentsDashboardFundingDisplayTypeID", "TenantAttribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TenantAttribute>("ProjectFirma.Web.Models.FK_TenantAttribute_AccomplishmentsDashboardFundingDisplayType_AccomplishmentsDashboardFundingDisplayTypeID", "TenantAttribute", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ActivityType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ActivityType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ActivityType object.
        /// </summary>
        /// <param name="activityTypeID">Initial value of the ActivityTypeID property.</param>
        /// <param name="activityTypeName">Initial value of the ActivityTypeName property.</param>
        /// <param name="activityTypeDisplayName">Initial value of the ActivityTypeDisplayName property.</param>
        public static ActivityType CreateActivityType(global::System.Int32 activityTypeID, global::System.String activityTypeName, global::System.String activityTypeDisplayName)
        {
            ActivityType activityType = new ActivityType();
            activityType.ActivityTypeID = activityTypeID;
            activityType.ActivityTypeName = activityTypeName;
            activityType.ActivityTypeDisplayName = activityTypeDisplayName;
            return activityType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ActivityTypeID
        {
            get
            {
                return _ActivityTypeID;
            }
            set
            {
                if (_ActivityTypeID != value)
                {
                    OnActivityTypeIDChanging(value);
                    ReportPropertyChanging("ActivityTypeID");
                    _ActivityTypeID = StructuralObject.SetValidValue(value, "ActivityTypeID");
                    ReportPropertyChanged("ActivityTypeID");
                    OnActivityTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ActivityTypeID;
        partial void OnActivityTypeIDChanging(global::System.Int32 value);
        partial void OnActivityTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActivityTypeName
        {
            get
            {
                return _ActivityTypeName;
            }
            set
            {
                OnActivityTypeNameChanging(value);
                ReportPropertyChanging("ActivityTypeName");
                _ActivityTypeName = StructuralObject.SetValidValue(value, false, "ActivityTypeName");
                ReportPropertyChanged("ActivityTypeName");
                OnActivityTypeNameChanged();
            }
        }
        private global::System.String _ActivityTypeName;
        partial void OnActivityTypeNameChanging(global::System.String value);
        partial void OnActivityTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActivityTypeDisplayName
        {
            get
            {
                return _ActivityTypeDisplayName;
            }
            set
            {
                OnActivityTypeDisplayNameChanging(value);
                ReportPropertyChanging("ActivityTypeDisplayName");
                _ActivityTypeDisplayName = StructuralObject.SetValidValue(value, false, "ActivityTypeDisplayName");
                ReportPropertyChanged("ActivityTypeDisplayName");
                OnActivityTypeDisplayNameChanged();
            }
        }
        private global::System.String _ActivityTypeDisplayName;
        partial void OnActivityTypeDisplayNameChanging(global::System.String value);
        partial void OnActivityTypeDisplayNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="AggregatedCounter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AggregatedCounter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AggregatedCounter object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static AggregatedCounter CreateAggregatedCounter(global::System.Int32 id, global::System.String key, global::System.Int64 value)
        {
            AggregatedCounter aggregatedCounter = new AggregatedCounter();
            aggregatedCounter.Id = id;
            aggregatedCounter.Key = key;
            aggregatedCounter.Value = value;
            return aggregatedCounter;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false, "Key");
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Int64 _Value;
        partial void OnValueChanging(global::System.Int64 value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpireAt
        {
            get
            {
                return _ExpireAt;
            }
            set
            {
                OnExpireAtChanging(value);
                ReportPropertyChanging("ExpireAt");
                _ExpireAt = StructuralObject.SetValidValue(value, "ExpireAt");
                ReportPropertyChanged("ExpireAt");
                OnExpireAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpireAt;
        partial void OnExpireAtChanging(Nullable<global::System.DateTime> value);
        partial void OnExpireAtChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="AssessmentGoal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssessmentGoal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssessmentGoal object.
        /// </summary>
        /// <param name="assessmentGoalID">Initial value of the AssessmentGoalID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="assessmentGoalNumber">Initial value of the AssessmentGoalNumber property.</param>
        public static AssessmentGoal CreateAssessmentGoal(global::System.Int32 assessmentGoalID, global::System.Int32 tenantID, global::System.Int32 assessmentGoalNumber)
        {
            AssessmentGoal assessmentGoal = new AssessmentGoal();
            assessmentGoal.AssessmentGoalID = assessmentGoalID;
            assessmentGoal.TenantID = tenantID;
            assessmentGoal.AssessmentGoalNumber = assessmentGoalNumber;
            return assessmentGoal;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssessmentGoalID
        {
            get
            {
                return _AssessmentGoalID;
            }
            set
            {
                if (_AssessmentGoalID != value)
                {
                    OnAssessmentGoalIDChanging(value);
                    ReportPropertyChanging("AssessmentGoalID");
                    _AssessmentGoalID = StructuralObject.SetValidValue(value, "AssessmentGoalID");
                    ReportPropertyChanged("AssessmentGoalID");
                    OnAssessmentGoalIDChanged();
                }
            }
        }
        private global::System.Int32 _AssessmentGoalID;
        partial void OnAssessmentGoalIDChanging(global::System.Int32 value);
        partial void OnAssessmentGoalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssessmentGoalNumber
        {
            get
            {
                return _AssessmentGoalNumber;
            }
            set
            {
                OnAssessmentGoalNumberChanging(value);
                ReportPropertyChanging("AssessmentGoalNumber");
                _AssessmentGoalNumber = StructuralObject.SetValidValue(value, "AssessmentGoalNumber");
                ReportPropertyChanged("AssessmentGoalNumber");
                OnAssessmentGoalNumberChanged();
            }
        }
        private global::System.Int32 _AssessmentGoalNumber;
        partial void OnAssessmentGoalNumberChanging(global::System.Int32 value);
        partial void OnAssessmentGoalNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssessmentGoalTitle
        {
            get
            {
                return _AssessmentGoalTitle;
            }
            set
            {
                OnAssessmentGoalTitleChanging(value);
                ReportPropertyChanging("AssessmentGoalTitle");
                _AssessmentGoalTitle = StructuralObject.SetValidValue(value, true, "AssessmentGoalTitle");
                ReportPropertyChanged("AssessmentGoalTitle");
                OnAssessmentGoalTitleChanged();
            }
        }
        private global::System.String _AssessmentGoalTitle;
        partial void OnAssessmentGoalTitleChanging(global::System.String value);
        partial void OnAssessmentGoalTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssessmentGoalDescription
        {
            get
            {
                return _AssessmentGoalDescription;
            }
            set
            {
                OnAssessmentGoalDescriptionChanging(value);
                ReportPropertyChanging("AssessmentGoalDescription");
                _AssessmentGoalDescription = StructuralObject.SetValidValue(value, true, "AssessmentGoalDescription");
                ReportPropertyChanged("AssessmentGoalDescription");
                OnAssessmentGoalDescriptionChanged();
            }
        }
        private global::System.String _AssessmentGoalDescription;
        partial void OnAssessmentGoalDescriptionChanging(global::System.String value);
        partial void OnAssessmentGoalDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_AssessmentGoal_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_AssessmentGoal_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_AssessmentGoal_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_AssessmentGoal_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_AssessmentGoal_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_AssessmentSubGoal_AssessmentGoal_AssessmentGoalID", "AssessmentSubGoal")]
        public EntityCollection<AssessmentSubGoal> AssessmentSubGoal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssessmentSubGoal>("ProjectFirma.Web.Models.FK_AssessmentSubGoal_AssessmentGoal_AssessmentGoalID", "AssessmentSubGoal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssessmentSubGoal>("ProjectFirma.Web.Models.FK_AssessmentSubGoal_AssessmentGoal_AssessmentGoalID", "AssessmentSubGoal", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="AssessmentQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssessmentQuestion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssessmentQuestion object.
        /// </summary>
        /// <param name="assessmentQuestionID">Initial value of the AssessmentQuestionID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="assessmentSubGoalID">Initial value of the AssessmentSubGoalID property.</param>
        /// <param name="assessmentQuestionText">Initial value of the AssessmentQuestionText property.</param>
        public static AssessmentQuestion CreateAssessmentQuestion(global::System.Int32 assessmentQuestionID, global::System.Int32 tenantID, global::System.Int32 assessmentSubGoalID, global::System.String assessmentQuestionText)
        {
            AssessmentQuestion assessmentQuestion = new AssessmentQuestion();
            assessmentQuestion.AssessmentQuestionID = assessmentQuestionID;
            assessmentQuestion.TenantID = tenantID;
            assessmentQuestion.AssessmentSubGoalID = assessmentSubGoalID;
            assessmentQuestion.AssessmentQuestionText = assessmentQuestionText;
            return assessmentQuestion;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssessmentQuestionID
        {
            get
            {
                return _AssessmentQuestionID;
            }
            set
            {
                if (_AssessmentQuestionID != value)
                {
                    OnAssessmentQuestionIDChanging(value);
                    ReportPropertyChanging("AssessmentQuestionID");
                    _AssessmentQuestionID = StructuralObject.SetValidValue(value, "AssessmentQuestionID");
                    ReportPropertyChanged("AssessmentQuestionID");
                    OnAssessmentQuestionIDChanged();
                }
            }
        }
        private global::System.Int32 _AssessmentQuestionID;
        partial void OnAssessmentQuestionIDChanging(global::System.Int32 value);
        partial void OnAssessmentQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssessmentSubGoalID
        {
            get
            {
                return _AssessmentSubGoalID;
            }
            set
            {
                OnAssessmentSubGoalIDChanging(value);
                ReportPropertyChanging("AssessmentSubGoalID");
                _AssessmentSubGoalID = StructuralObject.SetValidValue(value, "AssessmentSubGoalID");
                ReportPropertyChanged("AssessmentSubGoalID");
                OnAssessmentSubGoalIDChanged();
            }
        }
        private global::System.Int32 _AssessmentSubGoalID;
        partial void OnAssessmentSubGoalIDChanging(global::System.Int32 value);
        partial void OnAssessmentSubGoalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AssessmentQuestionText
        {
            get
            {
                return _AssessmentQuestionText;
            }
            set
            {
                OnAssessmentQuestionTextChanging(value);
                ReportPropertyChanging("AssessmentQuestionText");
                _AssessmentQuestionText = StructuralObject.SetValidValue(value, false, "AssessmentQuestionText");
                ReportPropertyChanged("AssessmentQuestionText");
                OnAssessmentQuestionTextChanged();
            }
        }
        private global::System.String _AssessmentQuestionText;
        partial void OnAssessmentQuestionTextChanging(global::System.String value);
        partial void OnAssessmentQuestionTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ArchiveDate
        {
            get
            {
                return _ArchiveDate;
            }
            set
            {
                OnArchiveDateChanging(value);
                ReportPropertyChanging("ArchiveDate");
                _ArchiveDate = StructuralObject.SetValidValue(value, "ArchiveDate");
                ReportPropertyChanged("ArchiveDate");
                OnArchiveDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ArchiveDate;
        partial void OnArchiveDateChanging(Nullable<global::System.DateTime> value);
        partial void OnArchiveDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_AssessmentQuestion_AssessmentSubGoal_AssessmentSubGoalID", "AssessmentSubGoal")]
        public AssessmentSubGoal AssessmentSubGoal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssessmentSubGoal>("ProjectFirma.Web.Models.FK_AssessmentQuestion_AssessmentSubGoal_AssessmentSubGoalID", "AssessmentSubGoal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssessmentSubGoal>("ProjectFirma.Web.Models.FK_AssessmentQuestion_AssessmentSubGoal_AssessmentSubGoalID", "AssessmentSubGoal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AssessmentSubGoal> AssessmentSubGoalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssessmentSubGoal>("ProjectFirma.Web.Models.FK_AssessmentQuestion_AssessmentSubGoal_AssessmentSubGoalID", "AssessmentSubGoal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AssessmentSubGoal>("ProjectFirma.Web.Models.FK_AssessmentQuestion_AssessmentSubGoal_AssessmentSubGoalID", "AssessmentSubGoal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_AssessmentQuestion_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_AssessmentQuestion_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_AssessmentQuestion_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_AssessmentQuestion_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_AssessmentQuestion_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectAssessmentQuestion_AssessmentQuestion_AssessmentQuestionID", "ProjectAssessmentQuestion")]
        public EntityCollection<ProjectAssessmentQuestion> ProjectAssessmentQuestion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectAssessmentQuestion>("ProjectFirma.Web.Models.FK_ProjectAssessmentQuestion_AssessmentQuestion_AssessmentQuestionID", "ProjectAssessmentQuestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectAssessmentQuestion>("ProjectFirma.Web.Models.FK_ProjectAssessmentQuestion_AssessmentQuestion_AssessmentQuestionID", "ProjectAssessmentQuestion", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="AssessmentSubGoal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AssessmentSubGoal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AssessmentSubGoal object.
        /// </summary>
        /// <param name="assessmentSubGoalID">Initial value of the AssessmentSubGoalID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="assessmentGoalID">Initial value of the AssessmentGoalID property.</param>
        /// <param name="assessmentSubGoalNumber">Initial value of the AssessmentSubGoalNumber property.</param>
        public static AssessmentSubGoal CreateAssessmentSubGoal(global::System.Int32 assessmentSubGoalID, global::System.Int32 tenantID, global::System.Int32 assessmentGoalID, global::System.Int32 assessmentSubGoalNumber)
        {
            AssessmentSubGoal assessmentSubGoal = new AssessmentSubGoal();
            assessmentSubGoal.AssessmentSubGoalID = assessmentSubGoalID;
            assessmentSubGoal.TenantID = tenantID;
            assessmentSubGoal.AssessmentGoalID = assessmentGoalID;
            assessmentSubGoal.AssessmentSubGoalNumber = assessmentSubGoalNumber;
            return assessmentSubGoal;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssessmentSubGoalID
        {
            get
            {
                return _AssessmentSubGoalID;
            }
            set
            {
                if (_AssessmentSubGoalID != value)
                {
                    OnAssessmentSubGoalIDChanging(value);
                    ReportPropertyChanging("AssessmentSubGoalID");
                    _AssessmentSubGoalID = StructuralObject.SetValidValue(value, "AssessmentSubGoalID");
                    ReportPropertyChanged("AssessmentSubGoalID");
                    OnAssessmentSubGoalIDChanged();
                }
            }
        }
        private global::System.Int32 _AssessmentSubGoalID;
        partial void OnAssessmentSubGoalIDChanging(global::System.Int32 value);
        partial void OnAssessmentSubGoalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssessmentGoalID
        {
            get
            {
                return _AssessmentGoalID;
            }
            set
            {
                OnAssessmentGoalIDChanging(value);
                ReportPropertyChanging("AssessmentGoalID");
                _AssessmentGoalID = StructuralObject.SetValidValue(value, "AssessmentGoalID");
                ReportPropertyChanged("AssessmentGoalID");
                OnAssessmentGoalIDChanged();
            }
        }
        private global::System.Int32 _AssessmentGoalID;
        partial void OnAssessmentGoalIDChanging(global::System.Int32 value);
        partial void OnAssessmentGoalIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssessmentSubGoalNumber
        {
            get
            {
                return _AssessmentSubGoalNumber;
            }
            set
            {
                OnAssessmentSubGoalNumberChanging(value);
                ReportPropertyChanging("AssessmentSubGoalNumber");
                _AssessmentSubGoalNumber = StructuralObject.SetValidValue(value, "AssessmentSubGoalNumber");
                ReportPropertyChanged("AssessmentSubGoalNumber");
                OnAssessmentSubGoalNumberChanged();
            }
        }
        private global::System.Int32 _AssessmentSubGoalNumber;
        partial void OnAssessmentSubGoalNumberChanging(global::System.Int32 value);
        partial void OnAssessmentSubGoalNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssessmentSubGoalTitle
        {
            get
            {
                return _AssessmentSubGoalTitle;
            }
            set
            {
                OnAssessmentSubGoalTitleChanging(value);
                ReportPropertyChanging("AssessmentSubGoalTitle");
                _AssessmentSubGoalTitle = StructuralObject.SetValidValue(value, true, "AssessmentSubGoalTitle");
                ReportPropertyChanged("AssessmentSubGoalTitle");
                OnAssessmentSubGoalTitleChanged();
            }
        }
        private global::System.String _AssessmentSubGoalTitle;
        partial void OnAssessmentSubGoalTitleChanging(global::System.String value);
        partial void OnAssessmentSubGoalTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AssessmentSubGoalDescription
        {
            get
            {
                return _AssessmentSubGoalDescription;
            }
            set
            {
                OnAssessmentSubGoalDescriptionChanging(value);
                ReportPropertyChanging("AssessmentSubGoalDescription");
                _AssessmentSubGoalDescription = StructuralObject.SetValidValue(value, true, "AssessmentSubGoalDescription");
                ReportPropertyChanged("AssessmentSubGoalDescription");
                OnAssessmentSubGoalDescriptionChanged();
            }
        }
        private global::System.String _AssessmentSubGoalDescription;
        partial void OnAssessmentSubGoalDescriptionChanging(global::System.String value);
        partial void OnAssessmentSubGoalDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_AssessmentSubGoal_AssessmentGoal_AssessmentGoalID", "AssessmentGoal")]
        public AssessmentGoal AssessmentGoal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssessmentGoal>("ProjectFirma.Web.Models.FK_AssessmentSubGoal_AssessmentGoal_AssessmentGoalID", "AssessmentGoal").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssessmentGoal>("ProjectFirma.Web.Models.FK_AssessmentSubGoal_AssessmentGoal_AssessmentGoalID", "AssessmentGoal").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AssessmentGoal> AssessmentGoalReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssessmentGoal>("ProjectFirma.Web.Models.FK_AssessmentSubGoal_AssessmentGoal_AssessmentGoalID", "AssessmentGoal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AssessmentGoal>("ProjectFirma.Web.Models.FK_AssessmentSubGoal_AssessmentGoal_AssessmentGoalID", "AssessmentGoal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_AssessmentQuestion_AssessmentSubGoal_AssessmentSubGoalID", "AssessmentQuestion")]
        public EntityCollection<AssessmentQuestion> AssessmentQuestion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssessmentQuestion>("ProjectFirma.Web.Models.FK_AssessmentQuestion_AssessmentSubGoal_AssessmentSubGoalID", "AssessmentQuestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssessmentQuestion>("ProjectFirma.Web.Models.FK_AssessmentQuestion_AssessmentSubGoal_AssessmentSubGoalID", "AssessmentQuestion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_AssessmentSubGoal_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_AssessmentSubGoal_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_AssessmentSubGoal_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_AssessmentSubGoal_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_AssessmentSubGoal_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="AuditLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuditLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuditLog object.
        /// </summary>
        /// <param name="auditLogID">Initial value of the AuditLogID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="auditLogDate">Initial value of the AuditLogDate property.</param>
        /// <param name="auditLogEventTypeID">Initial value of the AuditLogEventTypeID property.</param>
        /// <param name="tableName">Initial value of the TableName property.</param>
        /// <param name="recordID">Initial value of the RecordID property.</param>
        /// <param name="columnName">Initial value of the ColumnName property.</param>
        /// <param name="newValue">Initial value of the NewValue property.</param>
        public static AuditLog CreateAuditLog(global::System.Int32 auditLogID, global::System.Int32 tenantID, global::System.Int32 personID, global::System.DateTime auditLogDate, global::System.Int32 auditLogEventTypeID, global::System.String tableName, global::System.Int32 recordID, global::System.String columnName, global::System.String newValue)
        {
            AuditLog auditLog = new AuditLog();
            auditLog.AuditLogID = auditLogID;
            auditLog.TenantID = tenantID;
            auditLog.PersonID = personID;
            auditLog.AuditLogDate = auditLogDate;
            auditLog.AuditLogEventTypeID = auditLogEventTypeID;
            auditLog.TableName = tableName;
            auditLog.RecordID = recordID;
            auditLog.ColumnName = columnName;
            auditLog.NewValue = newValue;
            return auditLog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuditLogID
        {
            get
            {
                return _AuditLogID;
            }
            set
            {
                if (_AuditLogID != value)
                {
                    OnAuditLogIDChanging(value);
                    ReportPropertyChanging("AuditLogID");
                    _AuditLogID = StructuralObject.SetValidValue(value, "AuditLogID");
                    ReportPropertyChanged("AuditLogID");
                    OnAuditLogIDChanged();
                }
            }
        }
        private global::System.Int32 _AuditLogID;
        partial void OnAuditLogIDChanging(global::System.Int32 value);
        partial void OnAuditLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value, "PersonID");
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime AuditLogDate
        {
            get
            {
                return _AuditLogDate;
            }
            set
            {
                OnAuditLogDateChanging(value);
                ReportPropertyChanging("AuditLogDate");
                _AuditLogDate = StructuralObject.SetValidValue(value, "AuditLogDate");
                ReportPropertyChanged("AuditLogDate");
                OnAuditLogDateChanged();
            }
        }
        private global::System.DateTime _AuditLogDate;
        partial void OnAuditLogDateChanging(global::System.DateTime value);
        partial void OnAuditLogDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuditLogEventTypeID
        {
            get
            {
                return _AuditLogEventTypeID;
            }
            set
            {
                OnAuditLogEventTypeIDChanging(value);
                ReportPropertyChanging("AuditLogEventTypeID");
                _AuditLogEventTypeID = StructuralObject.SetValidValue(value, "AuditLogEventTypeID");
                ReportPropertyChanged("AuditLogEventTypeID");
                OnAuditLogEventTypeIDChanged();
            }
        }
        private global::System.Int32 _AuditLogEventTypeID;
        partial void OnAuditLogEventTypeIDChanging(global::System.Int32 value);
        partial void OnAuditLogEventTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TableName
        {
            get
            {
                return _TableName;
            }
            set
            {
                OnTableNameChanging(value);
                ReportPropertyChanging("TableName");
                _TableName = StructuralObject.SetValidValue(value, false, "TableName");
                ReportPropertyChanged("TableName");
                OnTableNameChanged();
            }
        }
        private global::System.String _TableName;
        partial void OnTableNameChanging(global::System.String value);
        partial void OnTableNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RecordID
        {
            get
            {
                return _RecordID;
            }
            set
            {
                OnRecordIDChanging(value);
                ReportPropertyChanging("RecordID");
                _RecordID = StructuralObject.SetValidValue(value, "RecordID");
                ReportPropertyChanged("RecordID");
                OnRecordIDChanged();
            }
        }
        private global::System.Int32 _RecordID;
        partial void OnRecordIDChanging(global::System.Int32 value);
        partial void OnRecordIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ColumnName
        {
            get
            {
                return _ColumnName;
            }
            set
            {
                OnColumnNameChanging(value);
                ReportPropertyChanging("ColumnName");
                _ColumnName = StructuralObject.SetValidValue(value, false, "ColumnName");
                ReportPropertyChanged("ColumnName");
                OnColumnNameChanged();
            }
        }
        private global::System.String _ColumnName;
        partial void OnColumnNameChanging(global::System.String value);
        partial void OnColumnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OriginalValue
        {
            get
            {
                return _OriginalValue;
            }
            set
            {
                OnOriginalValueChanging(value);
                ReportPropertyChanging("OriginalValue");
                _OriginalValue = StructuralObject.SetValidValue(value, true, "OriginalValue");
                ReportPropertyChanged("OriginalValue");
                OnOriginalValueChanged();
            }
        }
        private global::System.String _OriginalValue;
        partial void OnOriginalValueChanging(global::System.String value);
        partial void OnOriginalValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NewValue
        {
            get
            {
                return _NewValue;
            }
            set
            {
                OnNewValueChanging(value);
                ReportPropertyChanging("NewValue");
                _NewValue = StructuralObject.SetValidValue(value, false, "NewValue");
                ReportPropertyChanged("NewValue");
                OnNewValueChanged();
            }
        }
        private global::System.String _NewValue;
        partial void OnNewValueChanging(global::System.String value);
        partial void OnNewValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AuditDescription
        {
            get
            {
                return _AuditDescription;
            }
            set
            {
                OnAuditDescriptionChanging(value);
                ReportPropertyChanging("AuditDescription");
                _AuditDescription = StructuralObject.SetValidValue(value, true, "AuditDescription");
                ReportPropertyChanged("AuditDescription");
                OnAuditDescriptionChanged();
            }
        }
        private global::System.String _AuditDescription;
        partial void OnAuditDescriptionChanging(global::System.String value);
        partial void OnAuditDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectID;
        partial void OnProjectIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_AuditLog_AuditLogEventType_AuditLogEventTypeID", "AuditLogEventType")]
        public AuditLogEventType AuditLogEventType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AuditLogEventType>("ProjectFirma.Web.Models.FK_AuditLog_AuditLogEventType_AuditLogEventTypeID", "AuditLogEventType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AuditLogEventType>("ProjectFirma.Web.Models.FK_AuditLog_AuditLogEventType_AuditLogEventTypeID", "AuditLogEventType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AuditLogEventType> AuditLogEventTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AuditLogEventType>("ProjectFirma.Web.Models.FK_AuditLog_AuditLogEventType_AuditLogEventTypeID", "AuditLogEventType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AuditLogEventType>("ProjectFirma.Web.Models.FK_AuditLog_AuditLogEventType_AuditLogEventTypeID", "AuditLogEventType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_AuditLog_Person_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_AuditLog_Person_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_AuditLog_Person_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_AuditLog_Person_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_AuditLog_Person_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_AuditLog_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_AuditLog_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_AuditLog_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_AuditLog_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_AuditLog_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="AuditLogEventType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuditLogEventType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuditLogEventType object.
        /// </summary>
        /// <param name="auditLogEventTypeID">Initial value of the AuditLogEventTypeID property.</param>
        /// <param name="auditLogEventTypeName">Initial value of the AuditLogEventTypeName property.</param>
        /// <param name="auditLogEventTypeDisplayName">Initial value of the AuditLogEventTypeDisplayName property.</param>
        public static AuditLogEventType CreateAuditLogEventType(global::System.Int32 auditLogEventTypeID, global::System.String auditLogEventTypeName, global::System.String auditLogEventTypeDisplayName)
        {
            AuditLogEventType auditLogEventType = new AuditLogEventType();
            auditLogEventType.AuditLogEventTypeID = auditLogEventTypeID;
            auditLogEventType.AuditLogEventTypeName = auditLogEventTypeName;
            auditLogEventType.AuditLogEventTypeDisplayName = auditLogEventTypeDisplayName;
            return auditLogEventType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AuditLogEventTypeID
        {
            get
            {
                return _AuditLogEventTypeID;
            }
            set
            {
                if (_AuditLogEventTypeID != value)
                {
                    OnAuditLogEventTypeIDChanging(value);
                    ReportPropertyChanging("AuditLogEventTypeID");
                    _AuditLogEventTypeID = StructuralObject.SetValidValue(value, "AuditLogEventTypeID");
                    ReportPropertyChanged("AuditLogEventTypeID");
                    OnAuditLogEventTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _AuditLogEventTypeID;
        partial void OnAuditLogEventTypeIDChanging(global::System.Int32 value);
        partial void OnAuditLogEventTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AuditLogEventTypeName
        {
            get
            {
                return _AuditLogEventTypeName;
            }
            set
            {
                OnAuditLogEventTypeNameChanging(value);
                ReportPropertyChanging("AuditLogEventTypeName");
                _AuditLogEventTypeName = StructuralObject.SetValidValue(value, false, "AuditLogEventTypeName");
                ReportPropertyChanged("AuditLogEventTypeName");
                OnAuditLogEventTypeNameChanged();
            }
        }
        private global::System.String _AuditLogEventTypeName;
        partial void OnAuditLogEventTypeNameChanging(global::System.String value);
        partial void OnAuditLogEventTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AuditLogEventTypeDisplayName
        {
            get
            {
                return _AuditLogEventTypeDisplayName;
            }
            set
            {
                OnAuditLogEventTypeDisplayNameChanging(value);
                ReportPropertyChanging("AuditLogEventTypeDisplayName");
                _AuditLogEventTypeDisplayName = StructuralObject.SetValidValue(value, false, "AuditLogEventTypeDisplayName");
                ReportPropertyChanged("AuditLogEventTypeDisplayName");
                OnAuditLogEventTypeDisplayNameChanged();
            }
        }
        private global::System.String _AuditLogEventTypeDisplayName;
        partial void OnAuditLogEventTypeDisplayNameChanging(global::System.String value);
        partial void OnAuditLogEventTypeDisplayNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_AuditLog_AuditLogEventType_AuditLogEventTypeID", "AuditLog")]
        public EntityCollection<AuditLog> AuditLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuditLog>("ProjectFirma.Web.Models.FK_AuditLog_AuditLogEventType_AuditLogEventTypeID", "AuditLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuditLog>("ProjectFirma.Web.Models.FK_AuditLog_AuditLogEventType_AuditLogEventTypeID", "AuditLog", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="Classification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Classification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Classification object.
        /// </summary>
        /// <param name="classificationID">Initial value of the ClassificationID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="classificationDescription">Initial value of the ClassificationDescription property.</param>
        /// <param name="themeColor">Initial value of the ThemeColor property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="classificationSystemID">Initial value of the ClassificationSystemID property.</param>
        public static Classification CreateClassification(global::System.Int32 classificationID, global::System.Int32 tenantID, global::System.String classificationDescription, global::System.String themeColor, global::System.String displayName, global::System.Int32 classificationSystemID)
        {
            Classification classification = new Classification();
            classification.ClassificationID = classificationID;
            classification.TenantID = tenantID;
            classification.ClassificationDescription = classificationDescription;
            classification.ThemeColor = themeColor;
            classification.DisplayName = displayName;
            classification.ClassificationSystemID = classificationSystemID;
            return classification;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassificationID
        {
            get
            {
                return _ClassificationID;
            }
            set
            {
                if (_ClassificationID != value)
                {
                    OnClassificationIDChanging(value);
                    ReportPropertyChanging("ClassificationID");
                    _ClassificationID = StructuralObject.SetValidValue(value, "ClassificationID");
                    ReportPropertyChanged("ClassificationID");
                    OnClassificationIDChanged();
                }
            }
        }
        private global::System.Int32 _ClassificationID;
        partial void OnClassificationIDChanging(global::System.Int32 value);
        partial void OnClassificationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClassificationDescription
        {
            get
            {
                return _ClassificationDescription;
            }
            set
            {
                OnClassificationDescriptionChanging(value);
                ReportPropertyChanging("ClassificationDescription");
                _ClassificationDescription = StructuralObject.SetValidValue(value, false, "ClassificationDescription");
                ReportPropertyChanged("ClassificationDescription");
                OnClassificationDescriptionChanged();
            }
        }
        private global::System.String _ClassificationDescription;
        partial void OnClassificationDescriptionChanging(global::System.String value);
        partial void OnClassificationDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ThemeColor
        {
            get
            {
                return _ThemeColor;
            }
            set
            {
                OnThemeColorChanging(value);
                ReportPropertyChanging("ThemeColor");
                _ThemeColor = StructuralObject.SetValidValue(value, false, "ThemeColor");
                ReportPropertyChanged("ThemeColor");
                OnThemeColorChanged();
            }
        }
        private global::System.String _ThemeColor;
        partial void OnThemeColorChanging(global::System.String value);
        partial void OnThemeColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false, "DisplayName");
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GoalStatement
        {
            get
            {
                return _GoalStatement;
            }
            set
            {
                OnGoalStatementChanging(value);
                ReportPropertyChanging("GoalStatement");
                _GoalStatement = StructuralObject.SetValidValue(value, true, "GoalStatement");
                ReportPropertyChanged("GoalStatement");
                OnGoalStatementChanged();
            }
        }
        private global::System.String _GoalStatement;
        partial void OnGoalStatementChanging(global::System.String value);
        partial void OnGoalStatementChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> KeyImageFileResourceID
        {
            get
            {
                return _KeyImageFileResourceID;
            }
            set
            {
                OnKeyImageFileResourceIDChanging(value);
                ReportPropertyChanging("KeyImageFileResourceID");
                _KeyImageFileResourceID = StructuralObject.SetValidValue(value, "KeyImageFileResourceID");
                ReportPropertyChanged("KeyImageFileResourceID");
                OnKeyImageFileResourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _KeyImageFileResourceID;
        partial void OnKeyImageFileResourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnKeyImageFileResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassificationSystemID
        {
            get
            {
                return _ClassificationSystemID;
            }
            set
            {
                OnClassificationSystemIDChanging(value);
                ReportPropertyChanging("ClassificationSystemID");
                _ClassificationSystemID = StructuralObject.SetValidValue(value, "ClassificationSystemID");
                ReportPropertyChanged("ClassificationSystemID");
                OnClassificationSystemIDChanged();
            }
        }
        private global::System.Int32 _ClassificationSystemID;
        partial void OnClassificationSystemIDChanging(global::System.Int32 value);
        partial void OnClassificationSystemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ClassificationSortOrder
        {
            get
            {
                return _ClassificationSortOrder;
            }
            set
            {
                OnClassificationSortOrderChanging(value);
                ReportPropertyChanging("ClassificationSortOrder");
                _ClassificationSortOrder = StructuralObject.SetValidValue(value, "ClassificationSortOrder");
                ReportPropertyChanged("ClassificationSortOrder");
                OnClassificationSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _ClassificationSortOrder;
        partial void OnClassificationSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnClassificationSortOrderChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Classification_ClassificationSystem_ClassificationSystemID", "ClassificationSystem")]
        public ClassificationSystem ClassificationSystem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClassificationSystem>("ProjectFirma.Web.Models.FK_Classification_ClassificationSystem_ClassificationSystemID", "ClassificationSystem").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClassificationSystem>("ProjectFirma.Web.Models.FK_Classification_ClassificationSystem_ClassificationSystemID", "ClassificationSystem").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ClassificationSystem> ClassificationSystemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ClassificationSystem>("ProjectFirma.Web.Models.FK_Classification_ClassificationSystem_ClassificationSystemID", "ClassificationSystem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ClassificationSystem>("ProjectFirma.Web.Models.FK_Classification_ClassificationSystem_ClassificationSystemID", "ClassificationSystem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Classification_FileResource_KeyImageFileResourceID_FileResourceID", "FileResource")]
        public FileResource FileResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_Classification_FileResource_KeyImageFileResourceID_FileResourceID", "FileResource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_Classification_FileResource_KeyImageFileResourceID_FileResourceID", "FileResource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileResource> FileResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_Classification_FileResource_KeyImageFileResourceID_FileResourceID", "FileResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_Classification_FileResource_KeyImageFileResourceID_FileResourceID", "FileResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Classification_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Classification_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Classification_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Classification_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Classification_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ClassificationPerformanceMeasure_Classification_ClassificationID", "ClassificationPerformanceMeasure")]
        public EntityCollection<ClassificationPerformanceMeasure> ClassificationPerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClassificationPerformanceMeasure>("ProjectFirma.Web.Models.FK_ClassificationPerformanceMeasure_Classification_ClassificationID", "ClassificationPerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClassificationPerformanceMeasure>("ProjectFirma.Web.Models.FK_ClassificationPerformanceMeasure_Classification_ClassificationID", "ClassificationPerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectClassification_Classification_ClassificationID", "ProjectClassification")]
        public EntityCollection<ProjectClassification> ProjectClassification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectClassification>("ProjectFirma.Web.Models.FK_ProjectClassification_Classification_ClassificationID", "ProjectClassification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectClassification>("ProjectFirma.Web.Models.FK_ProjectClassification_Classification_ClassificationID", "ProjectClassification", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ClassificationPerformanceMeasure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClassificationPerformanceMeasure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClassificationPerformanceMeasure object.
        /// </summary>
        /// <param name="classificationPerformanceMeasureID">Initial value of the ClassificationPerformanceMeasureID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="classificationID">Initial value of the ClassificationID property.</param>
        /// <param name="performanceMeasureID">Initial value of the PerformanceMeasureID property.</param>
        /// <param name="isPrimaryChart">Initial value of the IsPrimaryChart property.</param>
        public static ClassificationPerformanceMeasure CreateClassificationPerformanceMeasure(global::System.Int32 classificationPerformanceMeasureID, global::System.Int32 tenantID, global::System.Int32 classificationID, global::System.Int32 performanceMeasureID, global::System.Boolean isPrimaryChart)
        {
            ClassificationPerformanceMeasure classificationPerformanceMeasure = new ClassificationPerformanceMeasure();
            classificationPerformanceMeasure.ClassificationPerformanceMeasureID = classificationPerformanceMeasureID;
            classificationPerformanceMeasure.TenantID = tenantID;
            classificationPerformanceMeasure.ClassificationID = classificationID;
            classificationPerformanceMeasure.PerformanceMeasureID = performanceMeasureID;
            classificationPerformanceMeasure.IsPrimaryChart = isPrimaryChart;
            return classificationPerformanceMeasure;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassificationPerformanceMeasureID
        {
            get
            {
                return _ClassificationPerformanceMeasureID;
            }
            set
            {
                if (_ClassificationPerformanceMeasureID != value)
                {
                    OnClassificationPerformanceMeasureIDChanging(value);
                    ReportPropertyChanging("ClassificationPerformanceMeasureID");
                    _ClassificationPerformanceMeasureID = StructuralObject.SetValidValue(value, "ClassificationPerformanceMeasureID");
                    ReportPropertyChanged("ClassificationPerformanceMeasureID");
                    OnClassificationPerformanceMeasureIDChanged();
                }
            }
        }
        private global::System.Int32 _ClassificationPerformanceMeasureID;
        partial void OnClassificationPerformanceMeasureIDChanging(global::System.Int32 value);
        partial void OnClassificationPerformanceMeasureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassificationID
        {
            get
            {
                return _ClassificationID;
            }
            set
            {
                OnClassificationIDChanging(value);
                ReportPropertyChanging("ClassificationID");
                _ClassificationID = StructuralObject.SetValidValue(value, "ClassificationID");
                ReportPropertyChanged("ClassificationID");
                OnClassificationIDChanged();
            }
        }
        private global::System.Int32 _ClassificationID;
        partial void OnClassificationIDChanging(global::System.Int32 value);
        partial void OnClassificationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureID
        {
            get
            {
                return _PerformanceMeasureID;
            }
            set
            {
                OnPerformanceMeasureIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureID");
                _PerformanceMeasureID = StructuralObject.SetValidValue(value, "PerformanceMeasureID");
                ReportPropertyChanged("PerformanceMeasureID");
                OnPerformanceMeasureIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureID;
        partial void OnPerformanceMeasureIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrimaryChart
        {
            get
            {
                return _IsPrimaryChart;
            }
            set
            {
                OnIsPrimaryChartChanging(value);
                ReportPropertyChanging("IsPrimaryChart");
                _IsPrimaryChart = StructuralObject.SetValidValue(value, "IsPrimaryChart");
                ReportPropertyChanged("IsPrimaryChart");
                OnIsPrimaryChartChanged();
            }
        }
        private global::System.Boolean _IsPrimaryChart;
        partial void OnIsPrimaryChartChanging(global::System.Boolean value);
        partial void OnIsPrimaryChartChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ClassificationPerformanceMeasure_Classification_ClassificationID", "Classification")]
        public Classification Classification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Classification>("ProjectFirma.Web.Models.FK_ClassificationPerformanceMeasure_Classification_ClassificationID", "Classification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Classification>("ProjectFirma.Web.Models.FK_ClassificationPerformanceMeasure_Classification_ClassificationID", "Classification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Classification> ClassificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Classification>("ProjectFirma.Web.Models.FK_ClassificationPerformanceMeasure_Classification_ClassificationID", "Classification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Classification>("ProjectFirma.Web.Models.FK_ClassificationPerformanceMeasure_Classification_ClassificationID", "Classification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ClassificationPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure")]
        public PerformanceMeasure PerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_ClassificationPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_ClassificationPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasure> PerformanceMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_ClassificationPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_ClassificationPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ClassificationPerformanceMeasure_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ClassificationPerformanceMeasure_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ClassificationPerformanceMeasure_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ClassificationPerformanceMeasure_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ClassificationPerformanceMeasure_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ClassificationSystem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ClassificationSystem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClassificationSystem object.
        /// </summary>
        /// <param name="classificationSystemID">Initial value of the ClassificationSystemID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="classificationSystemName">Initial value of the ClassificationSystemName property.</param>
        public static ClassificationSystem CreateClassificationSystem(global::System.Int32 classificationSystemID, global::System.Int32 tenantID, global::System.String classificationSystemName)
        {
            ClassificationSystem classificationSystem = new ClassificationSystem();
            classificationSystem.ClassificationSystemID = classificationSystemID;
            classificationSystem.TenantID = tenantID;
            classificationSystem.ClassificationSystemName = classificationSystemName;
            return classificationSystem;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassificationSystemID
        {
            get
            {
                return _ClassificationSystemID;
            }
            set
            {
                if (_ClassificationSystemID != value)
                {
                    OnClassificationSystemIDChanging(value);
                    ReportPropertyChanging("ClassificationSystemID");
                    _ClassificationSystemID = StructuralObject.SetValidValue(value, "ClassificationSystemID");
                    ReportPropertyChanged("ClassificationSystemID");
                    OnClassificationSystemIDChanged();
                }
            }
        }
        private global::System.Int32 _ClassificationSystemID;
        partial void OnClassificationSystemIDChanging(global::System.Int32 value);
        partial void OnClassificationSystemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ClassificationSystemName
        {
            get
            {
                return _ClassificationSystemName;
            }
            set
            {
                OnClassificationSystemNameChanging(value);
                ReportPropertyChanging("ClassificationSystemName");
                _ClassificationSystemName = StructuralObject.SetValidValue(value, false, "ClassificationSystemName");
                ReportPropertyChanged("ClassificationSystemName");
                OnClassificationSystemNameChanged();
            }
        }
        private global::System.String _ClassificationSystemName;
        partial void OnClassificationSystemNameChanging(global::System.String value);
        partial void OnClassificationSystemNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClassificationSystemDefinition
        {
            get
            {
                return _ClassificationSystemDefinition;
            }
            set
            {
                OnClassificationSystemDefinitionChanging(value);
                ReportPropertyChanging("ClassificationSystemDefinition");
                _ClassificationSystemDefinition = StructuralObject.SetValidValue(value, true, "ClassificationSystemDefinition");
                ReportPropertyChanged("ClassificationSystemDefinition");
                OnClassificationSystemDefinitionChanged();
            }
        }
        private global::System.String _ClassificationSystemDefinition;
        partial void OnClassificationSystemDefinitionChanging(global::System.String value);
        partial void OnClassificationSystemDefinitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ClassificationSystemListPageContent
        {
            get
            {
                return _ClassificationSystemListPageContent;
            }
            set
            {
                OnClassificationSystemListPageContentChanging(value);
                ReportPropertyChanging("ClassificationSystemListPageContent");
                _ClassificationSystemListPageContent = StructuralObject.SetValidValue(value, true, "ClassificationSystemListPageContent");
                ReportPropertyChanged("ClassificationSystemListPageContent");
                OnClassificationSystemListPageContentChanged();
            }
        }
        private global::System.String _ClassificationSystemListPageContent;
        partial void OnClassificationSystemListPageContentChanging(global::System.String value);
        partial void OnClassificationSystemListPageContentChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Classification_ClassificationSystem_ClassificationSystemID", "Classification")]
        public EntityCollection<Classification> Classification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Classification>("ProjectFirma.Web.Models.FK_Classification_ClassificationSystem_ClassificationSystemID", "Classification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Classification>("ProjectFirma.Web.Models.FK_Classification_ClassificationSystem_ClassificationSystemID", "Classification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ClassificationSystem_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ClassificationSystem_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ClassificationSystem_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ClassificationSystem_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ClassificationSystem_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ContractorTimeActivity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ContractorTimeActivity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContractorTimeActivity object.
        /// </summary>
        /// <param name="contractorTimeActivityID">Initial value of the ContractorTimeActivityID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="fundingSourceID">Initial value of the FundingSourceID property.</param>
        /// <param name="contractorTimeActivityAcreage">Initial value of the ContractorTimeActivityAcreage property.</param>
        /// <param name="contractorTimeActivityHours">Initial value of the ContractorTimeActivityHours property.</param>
        /// <param name="contractorTimeActivityRate">Initial value of the ContractorTimeActivityRate property.</param>
        /// <param name="contractorTimeActivityStartDate">Initial value of the ContractorTimeActivityStartDate property.</param>
        public static ContractorTimeActivity CreateContractorTimeActivity(global::System.Int32 contractorTimeActivityID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.Int32 fundingSourceID, global::System.Decimal contractorTimeActivityAcreage, global::System.Decimal contractorTimeActivityHours, global::System.Decimal contractorTimeActivityRate, global::System.DateTime contractorTimeActivityStartDate)
        {
            ContractorTimeActivity contractorTimeActivity = new ContractorTimeActivity();
            contractorTimeActivity.ContractorTimeActivityID = contractorTimeActivityID;
            contractorTimeActivity.TenantID = tenantID;
            contractorTimeActivity.ProjectID = projectID;
            contractorTimeActivity.FundingSourceID = fundingSourceID;
            contractorTimeActivity.ContractorTimeActivityAcreage = contractorTimeActivityAcreage;
            contractorTimeActivity.ContractorTimeActivityHours = contractorTimeActivityHours;
            contractorTimeActivity.ContractorTimeActivityRate = contractorTimeActivityRate;
            contractorTimeActivity.ContractorTimeActivityStartDate = contractorTimeActivityStartDate;
            return contractorTimeActivity;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ContractorTimeActivityID
        {
            get
            {
                return _ContractorTimeActivityID;
            }
            set
            {
                if (_ContractorTimeActivityID != value)
                {
                    OnContractorTimeActivityIDChanging(value);
                    ReportPropertyChanging("ContractorTimeActivityID");
                    _ContractorTimeActivityID = StructuralObject.SetValidValue(value, "ContractorTimeActivityID");
                    ReportPropertyChanged("ContractorTimeActivityID");
                    OnContractorTimeActivityIDChanged();
                }
            }
        }
        private global::System.Int32 _ContractorTimeActivityID;
        partial void OnContractorTimeActivityIDChanging(global::System.Int32 value);
        partial void OnContractorTimeActivityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingSourceID
        {
            get
            {
                return _FundingSourceID;
            }
            set
            {
                OnFundingSourceIDChanging(value);
                ReportPropertyChanging("FundingSourceID");
                _FundingSourceID = StructuralObject.SetValidValue(value, "FundingSourceID");
                ReportPropertyChanged("FundingSourceID");
                OnFundingSourceIDChanged();
            }
        }
        private global::System.Int32 _FundingSourceID;
        partial void OnFundingSourceIDChanging(global::System.Int32 value);
        partial void OnFundingSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ContractorTimeActivityAcreage
        {
            get
            {
                return _ContractorTimeActivityAcreage;
            }
            set
            {
                OnContractorTimeActivityAcreageChanging(value);
                ReportPropertyChanging("ContractorTimeActivityAcreage");
                _ContractorTimeActivityAcreage = StructuralObject.SetValidValue(value, "ContractorTimeActivityAcreage");
                ReportPropertyChanged("ContractorTimeActivityAcreage");
                OnContractorTimeActivityAcreageChanged();
            }
        }
        private global::System.Decimal _ContractorTimeActivityAcreage;
        partial void OnContractorTimeActivityAcreageChanging(global::System.Decimal value);
        partial void OnContractorTimeActivityAcreageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ContractorTimeActivityHours
        {
            get
            {
                return _ContractorTimeActivityHours;
            }
            set
            {
                OnContractorTimeActivityHoursChanging(value);
                ReportPropertyChanging("ContractorTimeActivityHours");
                _ContractorTimeActivityHours = StructuralObject.SetValidValue(value, "ContractorTimeActivityHours");
                ReportPropertyChanged("ContractorTimeActivityHours");
                OnContractorTimeActivityHoursChanged();
            }
        }
        private global::System.Decimal _ContractorTimeActivityHours;
        partial void OnContractorTimeActivityHoursChanging(global::System.Decimal value);
        partial void OnContractorTimeActivityHoursChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ContractorTimeActivityRate
        {
            get
            {
                return _ContractorTimeActivityRate;
            }
            set
            {
                OnContractorTimeActivityRateChanging(value);
                ReportPropertyChanging("ContractorTimeActivityRate");
                _ContractorTimeActivityRate = StructuralObject.SetValidValue(value, "ContractorTimeActivityRate");
                ReportPropertyChanged("ContractorTimeActivityRate");
                OnContractorTimeActivityRateChanged();
            }
        }
        private global::System.Decimal _ContractorTimeActivityRate;
        partial void OnContractorTimeActivityRateChanging(global::System.Decimal value);
        partial void OnContractorTimeActivityRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ContractorTimeActivityStartDate
        {
            get
            {
                return _ContractorTimeActivityStartDate;
            }
            set
            {
                OnContractorTimeActivityStartDateChanging(value);
                ReportPropertyChanging("ContractorTimeActivityStartDate");
                _ContractorTimeActivityStartDate = StructuralObject.SetValidValue(value, "ContractorTimeActivityStartDate");
                ReportPropertyChanged("ContractorTimeActivityStartDate");
                OnContractorTimeActivityStartDateChanged();
            }
        }
        private global::System.DateTime _ContractorTimeActivityStartDate;
        partial void OnContractorTimeActivityStartDateChanging(global::System.DateTime value);
        partial void OnContractorTimeActivityStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ContractorTimeActivityEndDate
        {
            get
            {
                return _ContractorTimeActivityEndDate;
            }
            set
            {
                OnContractorTimeActivityEndDateChanging(value);
                ReportPropertyChanging("ContractorTimeActivityEndDate");
                _ContractorTimeActivityEndDate = StructuralObject.SetValidValue(value, "ContractorTimeActivityEndDate");
                ReportPropertyChanged("ContractorTimeActivityEndDate");
                OnContractorTimeActivityEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ContractorTimeActivityEndDate;
        partial void OnContractorTimeActivityEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnContractorTimeActivityEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContractorTimeActivityNotes
        {
            get
            {
                return _ContractorTimeActivityNotes;
            }
            set
            {
                OnContractorTimeActivityNotesChanging(value);
                ReportPropertyChanging("ContractorTimeActivityNotes");
                _ContractorTimeActivityNotes = StructuralObject.SetValidValue(value, true, "ContractorTimeActivityNotes");
                ReportPropertyChanged("ContractorTimeActivityNotes");
                OnContractorTimeActivityNotesChanged();
            }
        }
        private global::System.String _ContractorTimeActivityNotes;
        partial void OnContractorTimeActivityNotesChanging(global::System.String value);
        partial void OnContractorTimeActivityNotesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ContractorTimeActivity_FundingSource_FundingSourceID", "FundingSource")]
        public FundingSource FundingSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ContractorTimeActivity_FundingSource_FundingSourceID", "FundingSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ContractorTimeActivity_FundingSource_FundingSourceID", "FundingSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundingSource> FundingSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ContractorTimeActivity_FundingSource_FundingSourceID", "FundingSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ContractorTimeActivity_FundingSource_FundingSourceID", "FundingSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ContractorTimeActivity_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ContractorTimeActivity_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ContractorTimeActivity_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ContractorTimeActivity_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_ContractorTimeActivity_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ContractorTimeActivity_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ContractorTimeActivity_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ContractorTimeActivity_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ContractorTimeActivity_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ContractorTimeActivity_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="CostParameterSet")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CostParameterSet : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CostParameterSet object.
        /// </summary>
        /// <param name="costParameterSetID">Initial value of the CostParameterSetID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="inflationRate">Initial value of the InflationRate property.</param>
        /// <param name="currentYearForPVCalculations">Initial value of the CurrentYearForPVCalculations property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static CostParameterSet CreateCostParameterSet(global::System.Int32 costParameterSetID, global::System.Int32 tenantID, global::System.Decimal inflationRate, global::System.Int32 currentYearForPVCalculations, global::System.DateTime createDate)
        {
            CostParameterSet costParameterSet = new CostParameterSet();
            costParameterSet.CostParameterSetID = costParameterSetID;
            costParameterSet.TenantID = tenantID;
            costParameterSet.InflationRate = inflationRate;
            costParameterSet.CurrentYearForPVCalculations = currentYearForPVCalculations;
            costParameterSet.CreateDate = createDate;
            return costParameterSet;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CostParameterSetID
        {
            get
            {
                return _CostParameterSetID;
            }
            set
            {
                if (_CostParameterSetID != value)
                {
                    OnCostParameterSetIDChanging(value);
                    ReportPropertyChanging("CostParameterSetID");
                    _CostParameterSetID = StructuralObject.SetValidValue(value, "CostParameterSetID");
                    ReportPropertyChanged("CostParameterSetID");
                    OnCostParameterSetIDChanged();
                }
            }
        }
        private global::System.Int32 _CostParameterSetID;
        partial void OnCostParameterSetIDChanging(global::System.Int32 value);
        partial void OnCostParameterSetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal InflationRate
        {
            get
            {
                return _InflationRate;
            }
            set
            {
                OnInflationRateChanging(value);
                ReportPropertyChanging("InflationRate");
                _InflationRate = StructuralObject.SetValidValue(value, "InflationRate");
                ReportPropertyChanged("InflationRate");
                OnInflationRateChanged();
            }
        }
        private global::System.Decimal _InflationRate;
        partial void OnInflationRateChanging(global::System.Decimal value);
        partial void OnInflationRateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CurrentYearForPVCalculations
        {
            get
            {
                return _CurrentYearForPVCalculations;
            }
            set
            {
                OnCurrentYearForPVCalculationsChanging(value);
                ReportPropertyChanging("CurrentYearForPVCalculations");
                _CurrentYearForPVCalculations = StructuralObject.SetValidValue(value, "CurrentYearForPVCalculations");
                ReportPropertyChanged("CurrentYearForPVCalculations");
                OnCurrentYearForPVCalculationsChanged();
            }
        }
        private global::System.Int32 _CurrentYearForPVCalculations;
        partial void OnCurrentYearForPVCalculationsChanging(global::System.Int32 value);
        partial void OnCurrentYearForPVCalculationsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true, "Comment");
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, "CreateDate");
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_CostParameterSet_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_CostParameterSet_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_CostParameterSet_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_CostParameterSet_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_CostParameterSet_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="Counter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Counter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Counter object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static Counter CreateCounter(global::System.Int32 id, global::System.String key, global::System.Int16 value)
        {
            Counter counter = new Counter();
            counter.Id = id;
            counter.Key = key;
            counter.Value = value;
            return counter;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false, "Key");
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Int16 _Value;
        partial void OnValueChanging(global::System.Int16 value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpireAt
        {
            get
            {
                return _ExpireAt;
            }
            set
            {
                OnExpireAtChanging(value);
                ReportPropertyChanging("ExpireAt");
                _ExpireAt = StructuralObject.SetValidValue(value, "ExpireAt");
                ReportPropertyChanged("ExpireAt");
                OnExpireAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpireAt;
        partial void OnExpireAtChanging(Nullable<global::System.DateTime> value);
        partial void OnExpireAtChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="County")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class County : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new County object.
        /// </summary>
        /// <param name="countyID">Initial value of the CountyID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="countyName">Initial value of the CountyName property.</param>
        /// <param name="stateProvinceID">Initial value of the StateProvinceID property.</param>
        public static County CreateCounty(global::System.Int32 countyID, global::System.Int32 tenantID, global::System.String countyName, global::System.Int32 stateProvinceID)
        {
            County county = new County();
            county.CountyID = countyID;
            county.TenantID = tenantID;
            county.CountyName = countyName;
            county.StateProvinceID = stateProvinceID;
            return county;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CountyID
        {
            get
            {
                return _CountyID;
            }
            set
            {
                if (_CountyID != value)
                {
                    OnCountyIDChanging(value);
                    ReportPropertyChanging("CountyID");
                    _CountyID = StructuralObject.SetValidValue(value, "CountyID");
                    ReportPropertyChanged("CountyID");
                    OnCountyIDChanged();
                }
            }
        }
        private global::System.Int32 _CountyID;
        partial void OnCountyIDChanging(global::System.Int32 value);
        partial void OnCountyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CountyName
        {
            get
            {
                return _CountyName;
            }
            set
            {
                OnCountyNameChanging(value);
                ReportPropertyChanging("CountyName");
                _CountyName = StructuralObject.SetValidValue(value, false, "CountyName");
                ReportPropertyChanged("CountyName");
                OnCountyNameChanged();
            }
        }
        private global::System.String _CountyName;
        partial void OnCountyNameChanging(global::System.String value);
        partial void OnCountyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateProvinceID
        {
            get
            {
                return _StateProvinceID;
            }
            set
            {
                OnStateProvinceIDChanging(value);
                ReportPropertyChanging("StateProvinceID");
                _StateProvinceID = StructuralObject.SetValidValue(value, "StateProvinceID");
                ReportPropertyChanged("StateProvinceID");
                OnStateProvinceIDChanged();
            }
        }
        private global::System.Int32 _StateProvinceID;
        partial void OnStateProvinceIDChanging(global::System.Int32 value);
        partial void OnStateProvinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeometry CountyFeature
        {
            get
            {
                return _CountyFeature;
            }
            set
            {
                OnCountyFeatureChanging(value);
                ReportPropertyChanging("CountyFeature");
                _CountyFeature = StructuralObject.SetValidValue(value, true, "CountyFeature");
                ReportPropertyChanged("CountyFeature");
                OnCountyFeatureChanged();
            }
        }
        private global::System.Data.Spatial.DbGeometry _CountyFeature;
        partial void OnCountyFeatureChanging(global::System.Data.Spatial.DbGeometry value);
        partial void OnCountyFeatureChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_County_StateProvince_StateProvinceID", "StateProvince")]
        public StateProvince StateProvince
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateProvince>("ProjectFirma.Web.Models.FK_County_StateProvince_StateProvinceID", "StateProvince").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateProvince>("ProjectFirma.Web.Models.FK_County_StateProvince_StateProvinceID", "StateProvince").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<StateProvince> StateProvinceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<StateProvince>("ProjectFirma.Web.Models.FK_County_StateProvince_StateProvinceID", "StateProvince");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<StateProvince>("ProjectFirma.Web.Models.FK_County_StateProvince_StateProvinceID", "StateProvince", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_County_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_County_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_County_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_County_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_County_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="CustomPage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomPage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomPage object.
        /// </summary>
        /// <param name="customPageID">Initial value of the CustomPageID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="customPageDisplayName">Initial value of the CustomPageDisplayName property.</param>
        /// <param name="customPageVanityUrl">Initial value of the CustomPageVanityUrl property.</param>
        /// <param name="customPageDisplayTypeID">Initial value of the CustomPageDisplayTypeID property.</param>
        public static CustomPage CreateCustomPage(global::System.Int32 customPageID, global::System.Int32 tenantID, global::System.String customPageDisplayName, global::System.String customPageVanityUrl, global::System.Int32 customPageDisplayTypeID)
        {
            CustomPage customPage = new CustomPage();
            customPage.CustomPageID = customPageID;
            customPage.TenantID = tenantID;
            customPage.CustomPageDisplayName = customPageDisplayName;
            customPage.CustomPageVanityUrl = customPageVanityUrl;
            customPage.CustomPageDisplayTypeID = customPageDisplayTypeID;
            return customPage;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomPageID
        {
            get
            {
                return _CustomPageID;
            }
            set
            {
                if (_CustomPageID != value)
                {
                    OnCustomPageIDChanging(value);
                    ReportPropertyChanging("CustomPageID");
                    _CustomPageID = StructuralObject.SetValidValue(value, "CustomPageID");
                    ReportPropertyChanged("CustomPageID");
                    OnCustomPageIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomPageID;
        partial void OnCustomPageIDChanging(global::System.Int32 value);
        partial void OnCustomPageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustomPageDisplayName
        {
            get
            {
                return _CustomPageDisplayName;
            }
            set
            {
                OnCustomPageDisplayNameChanging(value);
                ReportPropertyChanging("CustomPageDisplayName");
                _CustomPageDisplayName = StructuralObject.SetValidValue(value, false, "CustomPageDisplayName");
                ReportPropertyChanged("CustomPageDisplayName");
                OnCustomPageDisplayNameChanged();
            }
        }
        private global::System.String _CustomPageDisplayName;
        partial void OnCustomPageDisplayNameChanging(global::System.String value);
        partial void OnCustomPageDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustomPageVanityUrl
        {
            get
            {
                return _CustomPageVanityUrl;
            }
            set
            {
                OnCustomPageVanityUrlChanging(value);
                ReportPropertyChanging("CustomPageVanityUrl");
                _CustomPageVanityUrl = StructuralObject.SetValidValue(value, false, "CustomPageVanityUrl");
                ReportPropertyChanged("CustomPageVanityUrl");
                OnCustomPageVanityUrlChanged();
            }
        }
        private global::System.String _CustomPageVanityUrl;
        partial void OnCustomPageVanityUrlChanging(global::System.String value);
        partial void OnCustomPageVanityUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomPageDisplayTypeID
        {
            get
            {
                return _CustomPageDisplayTypeID;
            }
            set
            {
                OnCustomPageDisplayTypeIDChanging(value);
                ReportPropertyChanging("CustomPageDisplayTypeID");
                _CustomPageDisplayTypeID = StructuralObject.SetValidValue(value, "CustomPageDisplayTypeID");
                ReportPropertyChanged("CustomPageDisplayTypeID");
                OnCustomPageDisplayTypeIDChanged();
            }
        }
        private global::System.Int32 _CustomPageDisplayTypeID;
        partial void OnCustomPageDisplayTypeIDChanging(global::System.Int32 value);
        partial void OnCustomPageDisplayTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomPageContent
        {
            get
            {
                return _CustomPageContent;
            }
            set
            {
                OnCustomPageContentChanging(value);
                ReportPropertyChanging("CustomPageContent");
                _CustomPageContent = StructuralObject.SetValidValue(value, true, "CustomPageContent");
                ReportPropertyChanged("CustomPageContent");
                OnCustomPageContentChanged();
            }
        }
        private global::System.String _CustomPageContent;
        partial void OnCustomPageContentChanging(global::System.String value);
        partial void OnCustomPageContentChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_CustomPage_CustomPageDisplayType_CustomPageDisplayTypeID", "CustomPageDisplayType")]
        public CustomPageDisplayType CustomPageDisplayType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomPageDisplayType>("ProjectFirma.Web.Models.FK_CustomPage_CustomPageDisplayType_CustomPageDisplayTypeID", "CustomPageDisplayType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomPageDisplayType>("ProjectFirma.Web.Models.FK_CustomPage_CustomPageDisplayType_CustomPageDisplayTypeID", "CustomPageDisplayType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomPageDisplayType> CustomPageDisplayTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomPageDisplayType>("ProjectFirma.Web.Models.FK_CustomPage_CustomPageDisplayType_CustomPageDisplayTypeID", "CustomPageDisplayType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CustomPageDisplayType>("ProjectFirma.Web.Models.FK_CustomPage_CustomPageDisplayType_CustomPageDisplayTypeID", "CustomPageDisplayType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_CustomPage_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_CustomPage_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_CustomPage_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_CustomPage_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_CustomPage_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_CustomPageImage_CustomPage_CustomPageID", "CustomPageImage")]
        public EntityCollection<CustomPageImage> CustomPageImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomPageImage>("ProjectFirma.Web.Models.FK_CustomPageImage_CustomPage_CustomPageID", "CustomPageImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomPageImage>("ProjectFirma.Web.Models.FK_CustomPageImage_CustomPage_CustomPageID", "CustomPageImage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="CustomPageDisplayType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomPageDisplayType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomPageDisplayType object.
        /// </summary>
        /// <param name="customPageDisplayTypeID">Initial value of the CustomPageDisplayTypeID property.</param>
        /// <param name="customPageDisplayTypeName">Initial value of the CustomPageDisplayTypeName property.</param>
        /// <param name="customPageDisplayTypeDisplayName">Initial value of the CustomPageDisplayTypeDisplayName property.</param>
        /// <param name="customPageDisplayTypeDescription">Initial value of the CustomPageDisplayTypeDescription property.</param>
        public static CustomPageDisplayType CreateCustomPageDisplayType(global::System.Int32 customPageDisplayTypeID, global::System.String customPageDisplayTypeName, global::System.String customPageDisplayTypeDisplayName, global::System.String customPageDisplayTypeDescription)
        {
            CustomPageDisplayType customPageDisplayType = new CustomPageDisplayType();
            customPageDisplayType.CustomPageDisplayTypeID = customPageDisplayTypeID;
            customPageDisplayType.CustomPageDisplayTypeName = customPageDisplayTypeName;
            customPageDisplayType.CustomPageDisplayTypeDisplayName = customPageDisplayTypeDisplayName;
            customPageDisplayType.CustomPageDisplayTypeDescription = customPageDisplayTypeDescription;
            return customPageDisplayType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomPageDisplayTypeID
        {
            get
            {
                return _CustomPageDisplayTypeID;
            }
            set
            {
                if (_CustomPageDisplayTypeID != value)
                {
                    OnCustomPageDisplayTypeIDChanging(value);
                    ReportPropertyChanging("CustomPageDisplayTypeID");
                    _CustomPageDisplayTypeID = StructuralObject.SetValidValue(value, "CustomPageDisplayTypeID");
                    ReportPropertyChanged("CustomPageDisplayTypeID");
                    OnCustomPageDisplayTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomPageDisplayTypeID;
        partial void OnCustomPageDisplayTypeIDChanging(global::System.Int32 value);
        partial void OnCustomPageDisplayTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustomPageDisplayTypeName
        {
            get
            {
                return _CustomPageDisplayTypeName;
            }
            set
            {
                OnCustomPageDisplayTypeNameChanging(value);
                ReportPropertyChanging("CustomPageDisplayTypeName");
                _CustomPageDisplayTypeName = StructuralObject.SetValidValue(value, false, "CustomPageDisplayTypeName");
                ReportPropertyChanged("CustomPageDisplayTypeName");
                OnCustomPageDisplayTypeNameChanged();
            }
        }
        private global::System.String _CustomPageDisplayTypeName;
        partial void OnCustomPageDisplayTypeNameChanging(global::System.String value);
        partial void OnCustomPageDisplayTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustomPageDisplayTypeDisplayName
        {
            get
            {
                return _CustomPageDisplayTypeDisplayName;
            }
            set
            {
                OnCustomPageDisplayTypeDisplayNameChanging(value);
                ReportPropertyChanging("CustomPageDisplayTypeDisplayName");
                _CustomPageDisplayTypeDisplayName = StructuralObject.SetValidValue(value, false, "CustomPageDisplayTypeDisplayName");
                ReportPropertyChanged("CustomPageDisplayTypeDisplayName");
                OnCustomPageDisplayTypeDisplayNameChanged();
            }
        }
        private global::System.String _CustomPageDisplayTypeDisplayName;
        partial void OnCustomPageDisplayTypeDisplayNameChanging(global::System.String value);
        partial void OnCustomPageDisplayTypeDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustomPageDisplayTypeDescription
        {
            get
            {
                return _CustomPageDisplayTypeDescription;
            }
            set
            {
                OnCustomPageDisplayTypeDescriptionChanging(value);
                ReportPropertyChanging("CustomPageDisplayTypeDescription");
                _CustomPageDisplayTypeDescription = StructuralObject.SetValidValue(value, false, "CustomPageDisplayTypeDescription");
                ReportPropertyChanged("CustomPageDisplayTypeDescription");
                OnCustomPageDisplayTypeDescriptionChanged();
            }
        }
        private global::System.String _CustomPageDisplayTypeDescription;
        partial void OnCustomPageDisplayTypeDescriptionChanging(global::System.String value);
        partial void OnCustomPageDisplayTypeDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_CustomPage_CustomPageDisplayType_CustomPageDisplayTypeID", "CustomPage")]
        public EntityCollection<CustomPage> CustomPage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomPage>("ProjectFirma.Web.Models.FK_CustomPage_CustomPageDisplayType_CustomPageDisplayTypeID", "CustomPage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomPage>("ProjectFirma.Web.Models.FK_CustomPage_CustomPageDisplayType_CustomPageDisplayTypeID", "CustomPage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="CustomPageImage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CustomPageImage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomPageImage object.
        /// </summary>
        /// <param name="customPageImageID">Initial value of the CustomPageImageID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="customPageID">Initial value of the CustomPageID property.</param>
        /// <param name="fileResourceID">Initial value of the FileResourceID property.</param>
        public static CustomPageImage CreateCustomPageImage(global::System.Int32 customPageImageID, global::System.Int32 tenantID, global::System.Int32 customPageID, global::System.Int32 fileResourceID)
        {
            CustomPageImage customPageImage = new CustomPageImage();
            customPageImage.CustomPageImageID = customPageImageID;
            customPageImage.TenantID = tenantID;
            customPageImage.CustomPageID = customPageID;
            customPageImage.FileResourceID = fileResourceID;
            return customPageImage;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomPageImageID
        {
            get
            {
                return _CustomPageImageID;
            }
            set
            {
                if (_CustomPageImageID != value)
                {
                    OnCustomPageImageIDChanging(value);
                    ReportPropertyChanging("CustomPageImageID");
                    _CustomPageImageID = StructuralObject.SetValidValue(value, "CustomPageImageID");
                    ReportPropertyChanged("CustomPageImageID");
                    OnCustomPageImageIDChanged();
                }
            }
        }
        private global::System.Int32 _CustomPageImageID;
        partial void OnCustomPageImageIDChanging(global::System.Int32 value);
        partial void OnCustomPageImageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CustomPageID
        {
            get
            {
                return _CustomPageID;
            }
            set
            {
                OnCustomPageIDChanging(value);
                ReportPropertyChanging("CustomPageID");
                _CustomPageID = StructuralObject.SetValidValue(value, "CustomPageID");
                ReportPropertyChanged("CustomPageID");
                OnCustomPageIDChanged();
            }
        }
        private global::System.Int32 _CustomPageID;
        partial void OnCustomPageIDChanging(global::System.Int32 value);
        partial void OnCustomPageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileResourceID
        {
            get
            {
                return _FileResourceID;
            }
            set
            {
                OnFileResourceIDChanging(value);
                ReportPropertyChanging("FileResourceID");
                _FileResourceID = StructuralObject.SetValidValue(value, "FileResourceID");
                ReportPropertyChanged("FileResourceID");
                OnFileResourceIDChanged();
            }
        }
        private global::System.Int32 _FileResourceID;
        partial void OnFileResourceIDChanging(global::System.Int32 value);
        partial void OnFileResourceIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_CustomPageImage_CustomPage_CustomPageID", "CustomPage")]
        public CustomPage CustomPage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomPage>("ProjectFirma.Web.Models.FK_CustomPageImage_CustomPage_CustomPageID", "CustomPage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomPage>("ProjectFirma.Web.Models.FK_CustomPageImage_CustomPage_CustomPageID", "CustomPage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CustomPage> CustomPageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CustomPage>("ProjectFirma.Web.Models.FK_CustomPageImage_CustomPage_CustomPageID", "CustomPage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CustomPage>("ProjectFirma.Web.Models.FK_CustomPageImage_CustomPage_CustomPageID", "CustomPage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_CustomPageImage_FileResource_FileResourceID", "FileResource")]
        public FileResource FileResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_CustomPageImage_FileResource_FileResourceID", "FileResource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_CustomPageImage_FileResource_FileResourceID", "FileResource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileResource> FileResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_CustomPageImage_FileResource_FileResourceID", "FileResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_CustomPageImage_FileResource_FileResourceID", "FileResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_CustomPageImage_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_CustomPageImage_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_CustomPageImage_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_CustomPageImage_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_CustomPageImage_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="DatabaseMigration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DatabaseMigration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DatabaseMigration object.
        /// </summary>
        /// <param name="databaseMigrationNumber">Initial value of the DatabaseMigrationNumber property.</param>
        public static DatabaseMigration CreateDatabaseMigration(global::System.Int32 databaseMigrationNumber)
        {
            DatabaseMigration databaseMigration = new DatabaseMigration();
            databaseMigration.DatabaseMigrationNumber = databaseMigrationNumber;
            return databaseMigration;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DatabaseMigrationNumber
        {
            get
            {
                return _DatabaseMigrationNumber;
            }
            set
            {
                if (_DatabaseMigrationNumber != value)
                {
                    OnDatabaseMigrationNumberChanging(value);
                    ReportPropertyChanging("DatabaseMigrationNumber");
                    _DatabaseMigrationNumber = StructuralObject.SetValidValue(value, "DatabaseMigrationNumber");
                    ReportPropertyChanged("DatabaseMigrationNumber");
                    OnDatabaseMigrationNumberChanged();
                }
            }
        }
        private global::System.Int32 _DatabaseMigrationNumber;
        partial void OnDatabaseMigrationNumberChanging(global::System.Int32 value);
        partial void OnDatabaseMigrationNumberChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="Deployment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Deployment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Deployment object.
        /// </summary>
        /// <param name="deploymentID">Initial value of the DeploymentID property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="deployedBy">Initial value of the DeployedBy property.</param>
        /// <param name="deployedFrom">Initial value of the DeployedFrom property.</param>
        /// <param name="source">Initial value of the Source property.</param>
        /// <param name="script">Initial value of the Script property.</param>
        public static Deployment CreateDeployment(global::System.Int32 deploymentID, global::System.String version, global::System.DateTime date, global::System.String deployedBy, global::System.String deployedFrom, global::System.String source, global::System.String script)
        {
            Deployment deployment = new Deployment();
            deployment.DeploymentID = deploymentID;
            deployment.Version = version;
            deployment.Date = date;
            deployment.DeployedBy = deployedBy;
            deployment.DeployedFrom = deployedFrom;
            deployment.Source = source;
            deployment.Script = script;
            return deployment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DeploymentID
        {
            get
            {
                return _DeploymentID;
            }
            set
            {
                if (_DeploymentID != value)
                {
                    OnDeploymentIDChanging(value);
                    ReportPropertyChanging("DeploymentID");
                    _DeploymentID = StructuralObject.SetValidValue(value, "DeploymentID");
                    ReportPropertyChanged("DeploymentID");
                    OnDeploymentIDChanged();
                }
            }
        }
        private global::System.Int32 _DeploymentID;
        partial void OnDeploymentIDChanging(global::System.Int32 value);
        partial void OnDeploymentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, false, "Version");
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeployedBy
        {
            get
            {
                return _DeployedBy;
            }
            set
            {
                OnDeployedByChanging(value);
                ReportPropertyChanging("DeployedBy");
                _DeployedBy = StructuralObject.SetValidValue(value, false, "DeployedBy");
                ReportPropertyChanged("DeployedBy");
                OnDeployedByChanged();
            }
        }
        private global::System.String _DeployedBy;
        partial void OnDeployedByChanging(global::System.String value);
        partial void OnDeployedByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeployedFrom
        {
            get
            {
                return _DeployedFrom;
            }
            set
            {
                OnDeployedFromChanging(value);
                ReportPropertyChanging("DeployedFrom");
                _DeployedFrom = StructuralObject.SetValidValue(value, false, "DeployedFrom");
                ReportPropertyChanged("DeployedFrom");
                OnDeployedFromChanged();
            }
        }
        private global::System.String _DeployedFrom;
        partial void OnDeployedFromChanging(global::System.String value);
        partial void OnDeployedFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Source
        {
            get
            {
                return _Source;
            }
            set
            {
                OnSourceChanging(value);
                ReportPropertyChanging("Source");
                _Source = StructuralObject.SetValidValue(value, false, "Source");
                ReportPropertyChanged("Source");
                OnSourceChanged();
            }
        }
        private global::System.String _Source;
        partial void OnSourceChanging(global::System.String value);
        partial void OnSourceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Script
        {
            get
            {
                return _Script;
            }
            set
            {
                OnScriptChanging(value);
                ReportPropertyChanging("Script");
                _Script = StructuralObject.SetValidValue(value, false, "Script");
                ReportPropertyChanged("Script");
                OnScriptChanged();
            }
        }
        private global::System.String _Script;
        partial void OnScriptChanging(global::System.String value);
        partial void OnScriptChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="FieldDefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FieldDefinition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FieldDefinition object.
        /// </summary>
        /// <param name="fieldDefinitionID">Initial value of the FieldDefinitionID property.</param>
        /// <param name="fieldDefinitionName">Initial value of the FieldDefinitionName property.</param>
        /// <param name="fieldDefinitionDisplayName">Initial value of the FieldDefinitionDisplayName property.</param>
        /// <param name="defaultDefinition">Initial value of the DefaultDefinition property.</param>
        public static FieldDefinition CreateFieldDefinition(global::System.Int32 fieldDefinitionID, global::System.String fieldDefinitionName, global::System.String fieldDefinitionDisplayName, global::System.String defaultDefinition)
        {
            FieldDefinition fieldDefinition = new FieldDefinition();
            fieldDefinition.FieldDefinitionID = fieldDefinitionID;
            fieldDefinition.FieldDefinitionName = fieldDefinitionName;
            fieldDefinition.FieldDefinitionDisplayName = fieldDefinitionDisplayName;
            fieldDefinition.DefaultDefinition = defaultDefinition;
            return fieldDefinition;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldDefinitionID
        {
            get
            {
                return _FieldDefinitionID;
            }
            set
            {
                if (_FieldDefinitionID != value)
                {
                    OnFieldDefinitionIDChanging(value);
                    ReportPropertyChanging("FieldDefinitionID");
                    _FieldDefinitionID = StructuralObject.SetValidValue(value, "FieldDefinitionID");
                    ReportPropertyChanged("FieldDefinitionID");
                    OnFieldDefinitionIDChanged();
                }
            }
        }
        private global::System.Int32 _FieldDefinitionID;
        partial void OnFieldDefinitionIDChanging(global::System.Int32 value);
        partial void OnFieldDefinitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldDefinitionName
        {
            get
            {
                return _FieldDefinitionName;
            }
            set
            {
                OnFieldDefinitionNameChanging(value);
                ReportPropertyChanging("FieldDefinitionName");
                _FieldDefinitionName = StructuralObject.SetValidValue(value, false, "FieldDefinitionName");
                ReportPropertyChanged("FieldDefinitionName");
                OnFieldDefinitionNameChanged();
            }
        }
        private global::System.String _FieldDefinitionName;
        partial void OnFieldDefinitionNameChanging(global::System.String value);
        partial void OnFieldDefinitionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FieldDefinitionDisplayName
        {
            get
            {
                return _FieldDefinitionDisplayName;
            }
            set
            {
                OnFieldDefinitionDisplayNameChanging(value);
                ReportPropertyChanging("FieldDefinitionDisplayName");
                _FieldDefinitionDisplayName = StructuralObject.SetValidValue(value, false, "FieldDefinitionDisplayName");
                ReportPropertyChanged("FieldDefinitionDisplayName");
                OnFieldDefinitionDisplayNameChanged();
            }
        }
        private global::System.String _FieldDefinitionDisplayName;
        partial void OnFieldDefinitionDisplayNameChanging(global::System.String value);
        partial void OnFieldDefinitionDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DefaultDefinition
        {
            get
            {
                return _DefaultDefinition;
            }
            set
            {
                OnDefaultDefinitionChanging(value);
                ReportPropertyChanging("DefaultDefinition");
                _DefaultDefinition = StructuralObject.SetValidValue(value, false, "DefaultDefinition");
                ReportPropertyChanged("DefaultDefinition");
                OnDefaultDefinitionChanged();
            }
        }
        private global::System.String _DefaultDefinition;
        partial void OnDefaultDefinitionChanging(global::System.String value);
        partial void OnDefaultDefinitionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FieldDefinitionData_FieldDefinition_FieldDefinitionID", "FieldDefinitionData")]
        public EntityCollection<FieldDefinitionData> FieldDefinitionData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FieldDefinitionData>("ProjectFirma.Web.Models.FK_FieldDefinitionData_FieldDefinition_FieldDefinitionID", "FieldDefinitionData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FieldDefinitionData>("ProjectFirma.Web.Models.FK_FieldDefinitionData_FieldDefinition_FieldDefinitionID", "FieldDefinitionData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectPersonRelationshipType_ProjectPersonRelationshipType", "ProjectPersonRelationshipType")]
        public EntityCollection<ProjectPersonRelationshipType> ProjectPersonRelationshipType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectPersonRelationshipType>("ProjectFirma.Web.Models.FK_ProjectPersonRelationshipType_ProjectPersonRelationshipType", "ProjectPersonRelationshipType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectPersonRelationshipType>("ProjectFirma.Web.Models.FK_ProjectPersonRelationshipType_ProjectPersonRelationshipType", "ProjectPersonRelationshipType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="FieldDefinitionData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FieldDefinitionData : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FieldDefinitionData object.
        /// </summary>
        /// <param name="fieldDefinitionDataID">Initial value of the FieldDefinitionDataID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="fieldDefinitionID">Initial value of the FieldDefinitionID property.</param>
        public static FieldDefinitionData CreateFieldDefinitionData(global::System.Int32 fieldDefinitionDataID, global::System.Int32 tenantID, global::System.Int32 fieldDefinitionID)
        {
            FieldDefinitionData fieldDefinitionData = new FieldDefinitionData();
            fieldDefinitionData.FieldDefinitionDataID = fieldDefinitionDataID;
            fieldDefinitionData.TenantID = tenantID;
            fieldDefinitionData.FieldDefinitionID = fieldDefinitionID;
            return fieldDefinitionData;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldDefinitionDataID
        {
            get
            {
                return _FieldDefinitionDataID;
            }
            set
            {
                if (_FieldDefinitionDataID != value)
                {
                    OnFieldDefinitionDataIDChanging(value);
                    ReportPropertyChanging("FieldDefinitionDataID");
                    _FieldDefinitionDataID = StructuralObject.SetValidValue(value, "FieldDefinitionDataID");
                    ReportPropertyChanged("FieldDefinitionDataID");
                    OnFieldDefinitionDataIDChanged();
                }
            }
        }
        private global::System.Int32 _FieldDefinitionDataID;
        partial void OnFieldDefinitionDataIDChanging(global::System.Int32 value);
        partial void OnFieldDefinitionDataIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldDefinitionID
        {
            get
            {
                return _FieldDefinitionID;
            }
            set
            {
                OnFieldDefinitionIDChanging(value);
                ReportPropertyChanging("FieldDefinitionID");
                _FieldDefinitionID = StructuralObject.SetValidValue(value, "FieldDefinitionID");
                ReportPropertyChanged("FieldDefinitionID");
                OnFieldDefinitionIDChanged();
            }
        }
        private global::System.Int32 _FieldDefinitionID;
        partial void OnFieldDefinitionIDChanging(global::System.Int32 value);
        partial void OnFieldDefinitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldDefinitionDataValue
        {
            get
            {
                return _FieldDefinitionDataValue;
            }
            set
            {
                OnFieldDefinitionDataValueChanging(value);
                ReportPropertyChanging("FieldDefinitionDataValue");
                _FieldDefinitionDataValue = StructuralObject.SetValidValue(value, true, "FieldDefinitionDataValue");
                ReportPropertyChanged("FieldDefinitionDataValue");
                OnFieldDefinitionDataValueChanged();
            }
        }
        private global::System.String _FieldDefinitionDataValue;
        partial void OnFieldDefinitionDataValueChanging(global::System.String value);
        partial void OnFieldDefinitionDataValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldDefinitionLabel
        {
            get
            {
                return _FieldDefinitionLabel;
            }
            set
            {
                OnFieldDefinitionLabelChanging(value);
                ReportPropertyChanging("FieldDefinitionLabel");
                _FieldDefinitionLabel = StructuralObject.SetValidValue(value, true, "FieldDefinitionLabel");
                ReportPropertyChanged("FieldDefinitionLabel");
                OnFieldDefinitionLabelChanged();
            }
        }
        private global::System.String _FieldDefinitionLabel;
        partial void OnFieldDefinitionLabelChanging(global::System.String value);
        partial void OnFieldDefinitionLabelChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FieldDefinitionData_FieldDefinition_FieldDefinitionID", "FieldDefinition")]
        public FieldDefinition FieldDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldDefinition>("ProjectFirma.Web.Models.FK_FieldDefinitionData_FieldDefinition_FieldDefinitionID", "FieldDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldDefinition>("ProjectFirma.Web.Models.FK_FieldDefinitionData_FieldDefinition_FieldDefinitionID", "FieldDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FieldDefinition> FieldDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldDefinition>("ProjectFirma.Web.Models.FK_FieldDefinitionData_FieldDefinition_FieldDefinitionID", "FieldDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FieldDefinition>("ProjectFirma.Web.Models.FK_FieldDefinitionData_FieldDefinition_FieldDefinitionID", "FieldDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FieldDefinitionData_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FieldDefinitionData_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FieldDefinitionData_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FieldDefinitionData_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FieldDefinitionData_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FieldDefinitionDataImage_FieldDefinitionData_FieldDefinitionDataID", "FieldDefinitionDataImage")]
        public EntityCollection<FieldDefinitionDataImage> FieldDefinitionDataImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FieldDefinitionDataImage>("ProjectFirma.Web.Models.FK_FieldDefinitionDataImage_FieldDefinitionData_FieldDefinitionDataID", "FieldDefinitionDataImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FieldDefinitionDataImage>("ProjectFirma.Web.Models.FK_FieldDefinitionDataImage_FieldDefinitionData_FieldDefinitionDataID", "FieldDefinitionDataImage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="FieldDefinitionDataImage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FieldDefinitionDataImage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FieldDefinitionDataImage object.
        /// </summary>
        /// <param name="fieldDefinitionDataImageID">Initial value of the FieldDefinitionDataImageID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="fieldDefinitionDataID">Initial value of the FieldDefinitionDataID property.</param>
        /// <param name="fileResourceID">Initial value of the FileResourceID property.</param>
        public static FieldDefinitionDataImage CreateFieldDefinitionDataImage(global::System.Int32 fieldDefinitionDataImageID, global::System.Int32 tenantID, global::System.Int32 fieldDefinitionDataID, global::System.Int32 fileResourceID)
        {
            FieldDefinitionDataImage fieldDefinitionDataImage = new FieldDefinitionDataImage();
            fieldDefinitionDataImage.FieldDefinitionDataImageID = fieldDefinitionDataImageID;
            fieldDefinitionDataImage.TenantID = tenantID;
            fieldDefinitionDataImage.FieldDefinitionDataID = fieldDefinitionDataID;
            fieldDefinitionDataImage.FileResourceID = fileResourceID;
            return fieldDefinitionDataImage;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldDefinitionDataImageID
        {
            get
            {
                return _FieldDefinitionDataImageID;
            }
            set
            {
                if (_FieldDefinitionDataImageID != value)
                {
                    OnFieldDefinitionDataImageIDChanging(value);
                    ReportPropertyChanging("FieldDefinitionDataImageID");
                    _FieldDefinitionDataImageID = StructuralObject.SetValidValue(value, "FieldDefinitionDataImageID");
                    ReportPropertyChanged("FieldDefinitionDataImageID");
                    OnFieldDefinitionDataImageIDChanged();
                }
            }
        }
        private global::System.Int32 _FieldDefinitionDataImageID;
        partial void OnFieldDefinitionDataImageIDChanging(global::System.Int32 value);
        partial void OnFieldDefinitionDataImageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldDefinitionDataID
        {
            get
            {
                return _FieldDefinitionDataID;
            }
            set
            {
                OnFieldDefinitionDataIDChanging(value);
                ReportPropertyChanging("FieldDefinitionDataID");
                _FieldDefinitionDataID = StructuralObject.SetValidValue(value, "FieldDefinitionDataID");
                ReportPropertyChanged("FieldDefinitionDataID");
                OnFieldDefinitionDataIDChanged();
            }
        }
        private global::System.Int32 _FieldDefinitionDataID;
        partial void OnFieldDefinitionDataIDChanging(global::System.Int32 value);
        partial void OnFieldDefinitionDataIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileResourceID
        {
            get
            {
                return _FileResourceID;
            }
            set
            {
                OnFileResourceIDChanging(value);
                ReportPropertyChanging("FileResourceID");
                _FileResourceID = StructuralObject.SetValidValue(value, "FileResourceID");
                ReportPropertyChanged("FileResourceID");
                OnFileResourceIDChanged();
            }
        }
        private global::System.Int32 _FileResourceID;
        partial void OnFileResourceIDChanging(global::System.Int32 value);
        partial void OnFileResourceIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FieldDefinitionDataImage_FieldDefinitionData_FieldDefinitionDataID", "FieldDefinitionData")]
        public FieldDefinitionData FieldDefinitionData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldDefinitionData>("ProjectFirma.Web.Models.FK_FieldDefinitionDataImage_FieldDefinitionData_FieldDefinitionDataID", "FieldDefinitionData").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldDefinitionData>("ProjectFirma.Web.Models.FK_FieldDefinitionDataImage_FieldDefinitionData_FieldDefinitionDataID", "FieldDefinitionData").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FieldDefinitionData> FieldDefinitionDataReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldDefinitionData>("ProjectFirma.Web.Models.FK_FieldDefinitionDataImage_FieldDefinitionData_FieldDefinitionDataID", "FieldDefinitionData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FieldDefinitionData>("ProjectFirma.Web.Models.FK_FieldDefinitionDataImage_FieldDefinitionData_FieldDefinitionDataID", "FieldDefinitionData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FieldDefinitionDataImage_FileResource_FileResourceID", "FileResource")]
        public FileResource FileResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_FieldDefinitionDataImage_FileResource_FileResourceID", "FileResource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_FieldDefinitionDataImage_FileResource_FileResourceID", "FileResource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileResource> FileResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_FieldDefinitionDataImage_FileResource_FileResourceID", "FileResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_FieldDefinitionDataImage_FileResource_FileResourceID", "FileResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FieldDefinitionDataImage_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FieldDefinitionDataImage_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FieldDefinitionDataImage_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FieldDefinitionDataImage_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FieldDefinitionDataImage_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="FileResource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileResource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FileResource object.
        /// </summary>
        /// <param name="fileResourceID">Initial value of the FileResourceID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="fileResourceMimeTypeID">Initial value of the FileResourceMimeTypeID property.</param>
        /// <param name="originalBaseFilename">Initial value of the OriginalBaseFilename property.</param>
        /// <param name="originalFileExtension">Initial value of the OriginalFileExtension property.</param>
        /// <param name="fileResourceGUID">Initial value of the FileResourceGUID property.</param>
        /// <param name="fileResourceData">Initial value of the FileResourceData property.</param>
        /// <param name="createPersonID">Initial value of the CreatePersonID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static FileResource CreateFileResource(global::System.Int32 fileResourceID, global::System.Int32 tenantID, global::System.Int32 fileResourceMimeTypeID, global::System.String originalBaseFilename, global::System.String originalFileExtension, global::System.Guid fileResourceGUID, global::System.Byte[] fileResourceData, global::System.Int32 createPersonID, global::System.DateTime createDate)
        {
            FileResource fileResource = new FileResource();
            fileResource.FileResourceID = fileResourceID;
            fileResource.TenantID = tenantID;
            fileResource.FileResourceMimeTypeID = fileResourceMimeTypeID;
            fileResource.OriginalBaseFilename = originalBaseFilename;
            fileResource.OriginalFileExtension = originalFileExtension;
            fileResource.FileResourceGUID = fileResourceGUID;
            fileResource.FileResourceData = fileResourceData;
            fileResource.CreatePersonID = createPersonID;
            fileResource.CreateDate = createDate;
            return fileResource;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileResourceID
        {
            get
            {
                return _FileResourceID;
            }
            set
            {
                if (_FileResourceID != value)
                {
                    OnFileResourceIDChanging(value);
                    ReportPropertyChanging("FileResourceID");
                    _FileResourceID = StructuralObject.SetValidValue(value, "FileResourceID");
                    ReportPropertyChanged("FileResourceID");
                    OnFileResourceIDChanged();
                }
            }
        }
        private global::System.Int32 _FileResourceID;
        partial void OnFileResourceIDChanging(global::System.Int32 value);
        partial void OnFileResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileResourceMimeTypeID
        {
            get
            {
                return _FileResourceMimeTypeID;
            }
            set
            {
                OnFileResourceMimeTypeIDChanging(value);
                ReportPropertyChanging("FileResourceMimeTypeID");
                _FileResourceMimeTypeID = StructuralObject.SetValidValue(value, "FileResourceMimeTypeID");
                ReportPropertyChanged("FileResourceMimeTypeID");
                OnFileResourceMimeTypeIDChanged();
            }
        }
        private global::System.Int32 _FileResourceMimeTypeID;
        partial void OnFileResourceMimeTypeIDChanging(global::System.Int32 value);
        partial void OnFileResourceMimeTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OriginalBaseFilename
        {
            get
            {
                return _OriginalBaseFilename;
            }
            set
            {
                OnOriginalBaseFilenameChanging(value);
                ReportPropertyChanging("OriginalBaseFilename");
                _OriginalBaseFilename = StructuralObject.SetValidValue(value, false, "OriginalBaseFilename");
                ReportPropertyChanged("OriginalBaseFilename");
                OnOriginalBaseFilenameChanged();
            }
        }
        private global::System.String _OriginalBaseFilename;
        partial void OnOriginalBaseFilenameChanging(global::System.String value);
        partial void OnOriginalBaseFilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OriginalFileExtension
        {
            get
            {
                return _OriginalFileExtension;
            }
            set
            {
                OnOriginalFileExtensionChanging(value);
                ReportPropertyChanging("OriginalFileExtension");
                _OriginalFileExtension = StructuralObject.SetValidValue(value, false, "OriginalFileExtension");
                ReportPropertyChanged("OriginalFileExtension");
                OnOriginalFileExtensionChanged();
            }
        }
        private global::System.String _OriginalFileExtension;
        partial void OnOriginalFileExtensionChanging(global::System.String value);
        partial void OnOriginalFileExtensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid FileResourceGUID
        {
            get
            {
                return _FileResourceGUID;
            }
            set
            {
                OnFileResourceGUIDChanging(value);
                ReportPropertyChanging("FileResourceGUID");
                _FileResourceGUID = StructuralObject.SetValidValue(value, "FileResourceGUID");
                ReportPropertyChanged("FileResourceGUID");
                OnFileResourceGUIDChanged();
            }
        }
        private global::System.Guid _FileResourceGUID;
        partial void OnFileResourceGUIDChanging(global::System.Guid value);
        partial void OnFileResourceGUIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] FileResourceData
        {
            get
            {
                return StructuralObject.GetValidValue(_FileResourceData);
            }
            set
            {
                OnFileResourceDataChanging(value);
                ReportPropertyChanging("FileResourceData");
                _FileResourceData = StructuralObject.SetValidValue(value, false, "FileResourceData");
                ReportPropertyChanged("FileResourceData");
                OnFileResourceDataChanged();
            }
        }
        private global::System.Byte[] _FileResourceData;
        partial void OnFileResourceDataChanging(global::System.Byte[] value);
        partial void OnFileResourceDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatePersonID
        {
            get
            {
                return _CreatePersonID;
            }
            set
            {
                OnCreatePersonIDChanging(value);
                ReportPropertyChanging("CreatePersonID");
                _CreatePersonID = StructuralObject.SetValidValue(value, "CreatePersonID");
                ReportPropertyChanged("CreatePersonID");
                OnCreatePersonIDChanged();
            }
        }
        private global::System.Int32 _CreatePersonID;
        partial void OnCreatePersonIDChanging(global::System.Int32 value);
        partial void OnCreatePersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, "CreateDate");
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Classification_FileResource_KeyImageFileResourceID_FileResourceID", "Classification")]
        public EntityCollection<Classification> Classification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Classification>("ProjectFirma.Web.Models.FK_Classification_FileResource_KeyImageFileResourceID_FileResourceID", "Classification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Classification>("ProjectFirma.Web.Models.FK_Classification_FileResource_KeyImageFileResourceID_FileResourceID", "Classification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_CustomPageImage_FileResource_FileResourceID", "CustomPageImage")]
        public EntityCollection<CustomPageImage> CustomPageImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomPageImage>("ProjectFirma.Web.Models.FK_CustomPageImage_FileResource_FileResourceID", "CustomPageImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomPageImage>("ProjectFirma.Web.Models.FK_CustomPageImage_FileResource_FileResourceID", "CustomPageImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FieldDefinitionDataImage_FileResource_FileResourceID", "FieldDefinitionDataImage")]
        public EntityCollection<FieldDefinitionDataImage> FieldDefinitionDataImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FieldDefinitionDataImage>("ProjectFirma.Web.Models.FK_FieldDefinitionDataImage_FileResource_FileResourceID", "FieldDefinitionDataImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FieldDefinitionDataImage>("ProjectFirma.Web.Models.FK_FieldDefinitionDataImage_FileResource_FileResourceID", "FieldDefinitionDataImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FileResource_FileResourceMimeType_FileResourceMimeTypeID", "FileResourceMimeType")]
        public FileResourceMimeType FileResourceMimeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResourceMimeType>("ProjectFirma.Web.Models.FK_FileResource_FileResourceMimeType_FileResourceMimeTypeID", "FileResourceMimeType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResourceMimeType>("ProjectFirma.Web.Models.FK_FileResource_FileResourceMimeType_FileResourceMimeTypeID", "FileResourceMimeType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileResourceMimeType> FileResourceMimeTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResourceMimeType>("ProjectFirma.Web.Models.FK_FileResource_FileResourceMimeType_FileResourceMimeTypeID", "FileResourceMimeType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileResourceMimeType>("ProjectFirma.Web.Models.FK_FileResource_FileResourceMimeType_FileResourceMimeTypeID", "FileResourceMimeType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FileResource_Person_CreatePersonID_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_FileResource_Person_CreatePersonID_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_FileResource_Person_CreatePersonID_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_FileResource_Person_CreatePersonID_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_FileResource_Person_CreatePersonID_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FileResource_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FileResource_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FileResource_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FileResource_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FileResource_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FirmaHomePageImage_FileResource_FileResourceID", "FirmaHomePageImage")]
        public EntityCollection<FirmaHomePageImage> FirmaHomePageImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FirmaHomePageImage>("ProjectFirma.Web.Models.FK_FirmaHomePageImage_FileResource_FileResourceID", "FirmaHomePageImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FirmaHomePageImage>("ProjectFirma.Web.Models.FK_FirmaHomePageImage_FileResource_FileResourceID", "FirmaHomePageImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FirmaPageImage_FileResource_FileResourceID", "FirmaPageImage")]
        public EntityCollection<FirmaPageImage> FirmaPageImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FirmaPageImage>("ProjectFirma.Web.Models.FK_FirmaPageImage_FileResource_FileResourceID", "FirmaPageImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FirmaPageImage>("ProjectFirma.Web.Models.FK_FirmaPageImage_FileResource_FileResourceID", "FirmaPageImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_MonitoringProgramDocument_FileResource_FileResourceID", "MonitoringProgramDocument")]
        public EntityCollection<MonitoringProgramDocument> MonitoringProgramDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MonitoringProgramDocument>("ProjectFirma.Web.Models.FK_MonitoringProgramDocument_FileResource_FileResourceID", "MonitoringProgramDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MonitoringProgramDocument>("ProjectFirma.Web.Models.FK_MonitoringProgramDocument_FileResource_FileResourceID", "MonitoringProgramDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Organization_FileResource_LogoFileResourceID_FileResourceID", "Organization")]
        public EntityCollection<Organization> Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Organization>("ProjectFirma.Web.Models.FK_Organization_FileResource_LogoFileResourceID_FileResourceID", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Organization>("ProjectFirma.Web.Models.FK_Organization_FileResource_LogoFileResourceID_FileResourceID", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectDocument_FileResource_FileResourceID", "ProjectDocument")]
        public EntityCollection<ProjectDocument> ProjectDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectDocument>("ProjectFirma.Web.Models.FK_ProjectDocument_FileResource_FileResourceID", "ProjectDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectDocument>("ProjectFirma.Web.Models.FK_ProjectDocument_FileResource_FileResourceID", "ProjectDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectDocumentUpdate_FileResource_FileResourceID", "ProjectDocumentUpdate")]
        public EntityCollection<ProjectDocumentUpdate> ProjectDocumentUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectDocumentUpdate>("ProjectFirma.Web.Models.FK_ProjectDocumentUpdate_FileResource_FileResourceID", "ProjectDocumentUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectDocumentUpdate>("ProjectFirma.Web.Models.FK_ProjectDocumentUpdate_FileResource_FileResourceID", "ProjectDocumentUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectImage_FileResource_FileResourceID", "ProjectImage")]
        public EntityCollection<ProjectImage> ProjectImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectImage>("ProjectFirma.Web.Models.FK_ProjectImage_FileResource_FileResourceID", "ProjectImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectImage>("ProjectFirma.Web.Models.FK_ProjectImage_FileResource_FileResourceID", "ProjectImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectImageUpdate_FileResource_FileResourceID", "ProjectImageUpdate")]
        public EntityCollection<ProjectImageUpdate> ProjectImageUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectImageUpdate>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_FileResource_FileResourceID", "ProjectImageUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectImageUpdate>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_FileResource_FileResourceID", "ProjectImageUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_FileResource_TenantBannerLogoFileResourceID_FileResourceID", "TenantAttribute")]
        public EntityCollection<TenantAttribute> TenantAttribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TenantAttribute>("ProjectFirma.Web.Models.FK_TenantAttribute_FileResource_TenantBannerLogoFileResourceID_FileResourceID", "TenantAttribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TenantAttribute>("ProjectFirma.Web.Models.FK_TenantAttribute_FileResource_TenantBannerLogoFileResourceID_FileResourceID", "TenantAttribute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_FileResource_TenantSquareLogoFileResourceID_FileResourceID", "TenantAttribute")]
        public EntityCollection<TenantAttribute> TenantAttribute1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TenantAttribute>("ProjectFirma.Web.Models.FK_TenantAttribute_FileResource_TenantSquareLogoFileResourceID_FileResourceID", "TenantAttribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TenantAttribute>("ProjectFirma.Web.Models.FK_TenantAttribute_FileResource_TenantSquareLogoFileResourceID_FileResourceID", "TenantAttribute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_FileResource_TenantStyleSheetFileResourceID_FileResourceID", "TenantAttribute")]
        public EntityCollection<TenantAttribute> TenantAttribute2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TenantAttribute>("ProjectFirma.Web.Models.FK_TenantAttribute_FileResource_TenantStyleSheetFileResourceID_FileResourceID", "TenantAttribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TenantAttribute>("ProjectFirma.Web.Models.FK_TenantAttribute_FileResource_TenantStyleSheetFileResourceID_FileResourceID", "TenantAttribute", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="FileResourceMimeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileResourceMimeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FileResourceMimeType object.
        /// </summary>
        /// <param name="fileResourceMimeTypeID">Initial value of the FileResourceMimeTypeID property.</param>
        /// <param name="fileResourceMimeTypeName">Initial value of the FileResourceMimeTypeName property.</param>
        /// <param name="fileResourceMimeTypeDisplayName">Initial value of the FileResourceMimeTypeDisplayName property.</param>
        /// <param name="fileResourceMimeTypeContentTypeName">Initial value of the FileResourceMimeTypeContentTypeName property.</param>
        public static FileResourceMimeType CreateFileResourceMimeType(global::System.Int32 fileResourceMimeTypeID, global::System.String fileResourceMimeTypeName, global::System.String fileResourceMimeTypeDisplayName, global::System.String fileResourceMimeTypeContentTypeName)
        {
            FileResourceMimeType fileResourceMimeType = new FileResourceMimeType();
            fileResourceMimeType.FileResourceMimeTypeID = fileResourceMimeTypeID;
            fileResourceMimeType.FileResourceMimeTypeName = fileResourceMimeTypeName;
            fileResourceMimeType.FileResourceMimeTypeDisplayName = fileResourceMimeTypeDisplayName;
            fileResourceMimeType.FileResourceMimeTypeContentTypeName = fileResourceMimeTypeContentTypeName;
            return fileResourceMimeType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileResourceMimeTypeID
        {
            get
            {
                return _FileResourceMimeTypeID;
            }
            set
            {
                if (_FileResourceMimeTypeID != value)
                {
                    OnFileResourceMimeTypeIDChanging(value);
                    ReportPropertyChanging("FileResourceMimeTypeID");
                    _FileResourceMimeTypeID = StructuralObject.SetValidValue(value, "FileResourceMimeTypeID");
                    ReportPropertyChanged("FileResourceMimeTypeID");
                    OnFileResourceMimeTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _FileResourceMimeTypeID;
        partial void OnFileResourceMimeTypeIDChanging(global::System.Int32 value);
        partial void OnFileResourceMimeTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileResourceMimeTypeName
        {
            get
            {
                return _FileResourceMimeTypeName;
            }
            set
            {
                OnFileResourceMimeTypeNameChanging(value);
                ReportPropertyChanging("FileResourceMimeTypeName");
                _FileResourceMimeTypeName = StructuralObject.SetValidValue(value, false, "FileResourceMimeTypeName");
                ReportPropertyChanged("FileResourceMimeTypeName");
                OnFileResourceMimeTypeNameChanged();
            }
        }
        private global::System.String _FileResourceMimeTypeName;
        partial void OnFileResourceMimeTypeNameChanging(global::System.String value);
        partial void OnFileResourceMimeTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileResourceMimeTypeDisplayName
        {
            get
            {
                return _FileResourceMimeTypeDisplayName;
            }
            set
            {
                OnFileResourceMimeTypeDisplayNameChanging(value);
                ReportPropertyChanging("FileResourceMimeTypeDisplayName");
                _FileResourceMimeTypeDisplayName = StructuralObject.SetValidValue(value, false, "FileResourceMimeTypeDisplayName");
                ReportPropertyChanged("FileResourceMimeTypeDisplayName");
                OnFileResourceMimeTypeDisplayNameChanged();
            }
        }
        private global::System.String _FileResourceMimeTypeDisplayName;
        partial void OnFileResourceMimeTypeDisplayNameChanging(global::System.String value);
        partial void OnFileResourceMimeTypeDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileResourceMimeTypeContentTypeName
        {
            get
            {
                return _FileResourceMimeTypeContentTypeName;
            }
            set
            {
                OnFileResourceMimeTypeContentTypeNameChanging(value);
                ReportPropertyChanging("FileResourceMimeTypeContentTypeName");
                _FileResourceMimeTypeContentTypeName = StructuralObject.SetValidValue(value, false, "FileResourceMimeTypeContentTypeName");
                ReportPropertyChanged("FileResourceMimeTypeContentTypeName");
                OnFileResourceMimeTypeContentTypeNameChanged();
            }
        }
        private global::System.String _FileResourceMimeTypeContentTypeName;
        partial void OnFileResourceMimeTypeContentTypeNameChanging(global::System.String value);
        partial void OnFileResourceMimeTypeContentTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileResourceMimeTypeIconSmallFilename
        {
            get
            {
                return _FileResourceMimeTypeIconSmallFilename;
            }
            set
            {
                OnFileResourceMimeTypeIconSmallFilenameChanging(value);
                ReportPropertyChanging("FileResourceMimeTypeIconSmallFilename");
                _FileResourceMimeTypeIconSmallFilename = StructuralObject.SetValidValue(value, true, "FileResourceMimeTypeIconSmallFilename");
                ReportPropertyChanged("FileResourceMimeTypeIconSmallFilename");
                OnFileResourceMimeTypeIconSmallFilenameChanged();
            }
        }
        private global::System.String _FileResourceMimeTypeIconSmallFilename;
        partial void OnFileResourceMimeTypeIconSmallFilenameChanging(global::System.String value);
        partial void OnFileResourceMimeTypeIconSmallFilenameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FileResourceMimeTypeIconNormalFilename
        {
            get
            {
                return _FileResourceMimeTypeIconNormalFilename;
            }
            set
            {
                OnFileResourceMimeTypeIconNormalFilenameChanging(value);
                ReportPropertyChanging("FileResourceMimeTypeIconNormalFilename");
                _FileResourceMimeTypeIconNormalFilename = StructuralObject.SetValidValue(value, true, "FileResourceMimeTypeIconNormalFilename");
                ReportPropertyChanged("FileResourceMimeTypeIconNormalFilename");
                OnFileResourceMimeTypeIconNormalFilenameChanged();
            }
        }
        private global::System.String _FileResourceMimeTypeIconNormalFilename;
        partial void OnFileResourceMimeTypeIconNormalFilenameChanging(global::System.String value);
        partial void OnFileResourceMimeTypeIconNormalFilenameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FileResource_FileResourceMimeType_FileResourceMimeTypeID", "FileResource")]
        public EntityCollection<FileResource> FileResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FileResource>("ProjectFirma.Web.Models.FK_FileResource_FileResourceMimeType_FileResourceMimeTypeID", "FileResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FileResource>("ProjectFirma.Web.Models.FK_FileResource_FileResourceMimeType_FileResourceMimeTypeID", "FileResource", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="FirmaHomePageImage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FirmaHomePageImage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FirmaHomePageImage object.
        /// </summary>
        /// <param name="firmaHomePageImageID">Initial value of the FirmaHomePageImageID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="fileResourceID">Initial value of the FileResourceID property.</param>
        /// <param name="caption">Initial value of the Caption property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static FirmaHomePageImage CreateFirmaHomePageImage(global::System.Int32 firmaHomePageImageID, global::System.Int32 tenantID, global::System.Int32 fileResourceID, global::System.String caption, global::System.Int32 sortOrder)
        {
            FirmaHomePageImage firmaHomePageImage = new FirmaHomePageImage();
            firmaHomePageImage.FirmaHomePageImageID = firmaHomePageImageID;
            firmaHomePageImage.TenantID = tenantID;
            firmaHomePageImage.FileResourceID = fileResourceID;
            firmaHomePageImage.Caption = caption;
            firmaHomePageImage.SortOrder = sortOrder;
            return firmaHomePageImage;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FirmaHomePageImageID
        {
            get
            {
                return _FirmaHomePageImageID;
            }
            set
            {
                if (_FirmaHomePageImageID != value)
                {
                    OnFirmaHomePageImageIDChanging(value);
                    ReportPropertyChanging("FirmaHomePageImageID");
                    _FirmaHomePageImageID = StructuralObject.SetValidValue(value, "FirmaHomePageImageID");
                    ReportPropertyChanged("FirmaHomePageImageID");
                    OnFirmaHomePageImageIDChanged();
                }
            }
        }
        private global::System.Int32 _FirmaHomePageImageID;
        partial void OnFirmaHomePageImageIDChanging(global::System.Int32 value);
        partial void OnFirmaHomePageImageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileResourceID
        {
            get
            {
                return _FileResourceID;
            }
            set
            {
                OnFileResourceIDChanging(value);
                ReportPropertyChanging("FileResourceID");
                _FileResourceID = StructuralObject.SetValidValue(value, "FileResourceID");
                ReportPropertyChanged("FileResourceID");
                OnFileResourceIDChanged();
            }
        }
        private global::System.Int32 _FileResourceID;
        partial void OnFileResourceIDChanging(global::System.Int32 value);
        partial void OnFileResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Caption
        {
            get
            {
                return _Caption;
            }
            set
            {
                OnCaptionChanging(value);
                ReportPropertyChanging("Caption");
                _Caption = StructuralObject.SetValidValue(value, false, "Caption");
                ReportPropertyChanged("Caption");
                OnCaptionChanged();
            }
        }
        private global::System.String _Caption;
        partial void OnCaptionChanging(global::System.String value);
        partial void OnCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value, "SortOrder");
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FirmaHomePageImage_FileResource_FileResourceID", "FileResource")]
        public FileResource FileResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_FirmaHomePageImage_FileResource_FileResourceID", "FileResource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_FirmaHomePageImage_FileResource_FileResourceID", "FileResource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileResource> FileResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_FirmaHomePageImage_FileResource_FileResourceID", "FileResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_FirmaHomePageImage_FileResource_FileResourceID", "FileResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FirmaHomePageImage_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FirmaHomePageImage_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FirmaHomePageImage_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FirmaHomePageImage_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FirmaHomePageImage_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="FirmaPage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FirmaPage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FirmaPage object.
        /// </summary>
        /// <param name="firmaPageID">Initial value of the FirmaPageID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="firmaPageTypeID">Initial value of the FirmaPageTypeID property.</param>
        public static FirmaPage CreateFirmaPage(global::System.Int32 firmaPageID, global::System.Int32 tenantID, global::System.Int32 firmaPageTypeID)
        {
            FirmaPage firmaPage = new FirmaPage();
            firmaPage.FirmaPageID = firmaPageID;
            firmaPage.TenantID = tenantID;
            firmaPage.FirmaPageTypeID = firmaPageTypeID;
            return firmaPage;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FirmaPageID
        {
            get
            {
                return _FirmaPageID;
            }
            set
            {
                if (_FirmaPageID != value)
                {
                    OnFirmaPageIDChanging(value);
                    ReportPropertyChanging("FirmaPageID");
                    _FirmaPageID = StructuralObject.SetValidValue(value, "FirmaPageID");
                    ReportPropertyChanged("FirmaPageID");
                    OnFirmaPageIDChanged();
                }
            }
        }
        private global::System.Int32 _FirmaPageID;
        partial void OnFirmaPageIDChanging(global::System.Int32 value);
        partial void OnFirmaPageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FirmaPageTypeID
        {
            get
            {
                return _FirmaPageTypeID;
            }
            set
            {
                OnFirmaPageTypeIDChanging(value);
                ReportPropertyChanging("FirmaPageTypeID");
                _FirmaPageTypeID = StructuralObject.SetValidValue(value, "FirmaPageTypeID");
                ReportPropertyChanged("FirmaPageTypeID");
                OnFirmaPageTypeIDChanged();
            }
        }
        private global::System.Int32 _FirmaPageTypeID;
        partial void OnFirmaPageTypeIDChanging(global::System.Int32 value);
        partial void OnFirmaPageTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirmaPageContent
        {
            get
            {
                return _FirmaPageContent;
            }
            set
            {
                OnFirmaPageContentChanging(value);
                ReportPropertyChanging("FirmaPageContent");
                _FirmaPageContent = StructuralObject.SetValidValue(value, true, "FirmaPageContent");
                ReportPropertyChanged("FirmaPageContent");
                OnFirmaPageContentChanged();
            }
        }
        private global::System.String _FirmaPageContent;
        partial void OnFirmaPageContentChanging(global::System.String value);
        partial void OnFirmaPageContentChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FirmaPage_FirmaPageType_FirmaPageTypeID", "FirmaPageType")]
        public FirmaPageType FirmaPageType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FirmaPageType>("ProjectFirma.Web.Models.FK_FirmaPage_FirmaPageType_FirmaPageTypeID", "FirmaPageType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FirmaPageType>("ProjectFirma.Web.Models.FK_FirmaPage_FirmaPageType_FirmaPageTypeID", "FirmaPageType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FirmaPageType> FirmaPageTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FirmaPageType>("ProjectFirma.Web.Models.FK_FirmaPage_FirmaPageType_FirmaPageTypeID", "FirmaPageType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FirmaPageType>("ProjectFirma.Web.Models.FK_FirmaPage_FirmaPageType_FirmaPageTypeID", "FirmaPageType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FirmaPage_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FirmaPage_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FirmaPage_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FirmaPage_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FirmaPage_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FirmaPageImage_FirmaPage_FirmaPageID", "FirmaPageImage")]
        public EntityCollection<FirmaPageImage> FirmaPageImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FirmaPageImage>("ProjectFirma.Web.Models.FK_FirmaPageImage_FirmaPage_FirmaPageID", "FirmaPageImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FirmaPageImage>("ProjectFirma.Web.Models.FK_FirmaPageImage_FirmaPage_FirmaPageID", "FirmaPageImage", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="FirmaPageImage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FirmaPageImage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FirmaPageImage object.
        /// </summary>
        /// <param name="firmaPageImageID">Initial value of the FirmaPageImageID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="firmaPageID">Initial value of the FirmaPageID property.</param>
        /// <param name="fileResourceID">Initial value of the FileResourceID property.</param>
        public static FirmaPageImage CreateFirmaPageImage(global::System.Int32 firmaPageImageID, global::System.Int32 tenantID, global::System.Int32 firmaPageID, global::System.Int32 fileResourceID)
        {
            FirmaPageImage firmaPageImage = new FirmaPageImage();
            firmaPageImage.FirmaPageImageID = firmaPageImageID;
            firmaPageImage.TenantID = tenantID;
            firmaPageImage.FirmaPageID = firmaPageID;
            firmaPageImage.FileResourceID = fileResourceID;
            return firmaPageImage;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FirmaPageImageID
        {
            get
            {
                return _FirmaPageImageID;
            }
            set
            {
                if (_FirmaPageImageID != value)
                {
                    OnFirmaPageImageIDChanging(value);
                    ReportPropertyChanging("FirmaPageImageID");
                    _FirmaPageImageID = StructuralObject.SetValidValue(value, "FirmaPageImageID");
                    ReportPropertyChanged("FirmaPageImageID");
                    OnFirmaPageImageIDChanged();
                }
            }
        }
        private global::System.Int32 _FirmaPageImageID;
        partial void OnFirmaPageImageIDChanging(global::System.Int32 value);
        partial void OnFirmaPageImageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FirmaPageID
        {
            get
            {
                return _FirmaPageID;
            }
            set
            {
                OnFirmaPageIDChanging(value);
                ReportPropertyChanging("FirmaPageID");
                _FirmaPageID = StructuralObject.SetValidValue(value, "FirmaPageID");
                ReportPropertyChanged("FirmaPageID");
                OnFirmaPageIDChanged();
            }
        }
        private global::System.Int32 _FirmaPageID;
        partial void OnFirmaPageIDChanging(global::System.Int32 value);
        partial void OnFirmaPageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileResourceID
        {
            get
            {
                return _FileResourceID;
            }
            set
            {
                OnFileResourceIDChanging(value);
                ReportPropertyChanging("FileResourceID");
                _FileResourceID = StructuralObject.SetValidValue(value, "FileResourceID");
                ReportPropertyChanged("FileResourceID");
                OnFileResourceIDChanged();
            }
        }
        private global::System.Int32 _FileResourceID;
        partial void OnFileResourceIDChanging(global::System.Int32 value);
        partial void OnFileResourceIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FirmaPageImage_FileResource_FileResourceID", "FileResource")]
        public FileResource FileResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_FirmaPageImage_FileResource_FileResourceID", "FileResource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_FirmaPageImage_FileResource_FileResourceID", "FileResource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileResource> FileResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_FirmaPageImage_FileResource_FileResourceID", "FileResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_FirmaPageImage_FileResource_FileResourceID", "FileResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FirmaPageImage_FirmaPage_FirmaPageID", "FirmaPage")]
        public FirmaPage FirmaPage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FirmaPage>("ProjectFirma.Web.Models.FK_FirmaPageImage_FirmaPage_FirmaPageID", "FirmaPage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FirmaPage>("ProjectFirma.Web.Models.FK_FirmaPageImage_FirmaPage_FirmaPageID", "FirmaPage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FirmaPage> FirmaPageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FirmaPage>("ProjectFirma.Web.Models.FK_FirmaPageImage_FirmaPage_FirmaPageID", "FirmaPage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FirmaPage>("ProjectFirma.Web.Models.FK_FirmaPageImage_FirmaPage_FirmaPageID", "FirmaPage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FirmaPageImage_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FirmaPageImage_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FirmaPageImage_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FirmaPageImage_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FirmaPageImage_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="FirmaPageRenderType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FirmaPageRenderType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FirmaPageRenderType object.
        /// </summary>
        /// <param name="firmaPageRenderTypeID">Initial value of the FirmaPageRenderTypeID property.</param>
        /// <param name="firmaPageRenderTypeName">Initial value of the FirmaPageRenderTypeName property.</param>
        /// <param name="firmaPageRenderTypeDisplayName">Initial value of the FirmaPageRenderTypeDisplayName property.</param>
        public static FirmaPageRenderType CreateFirmaPageRenderType(global::System.Int32 firmaPageRenderTypeID, global::System.String firmaPageRenderTypeName, global::System.String firmaPageRenderTypeDisplayName)
        {
            FirmaPageRenderType firmaPageRenderType = new FirmaPageRenderType();
            firmaPageRenderType.FirmaPageRenderTypeID = firmaPageRenderTypeID;
            firmaPageRenderType.FirmaPageRenderTypeName = firmaPageRenderTypeName;
            firmaPageRenderType.FirmaPageRenderTypeDisplayName = firmaPageRenderTypeDisplayName;
            return firmaPageRenderType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FirmaPageRenderTypeID
        {
            get
            {
                return _FirmaPageRenderTypeID;
            }
            set
            {
                if (_FirmaPageRenderTypeID != value)
                {
                    OnFirmaPageRenderTypeIDChanging(value);
                    ReportPropertyChanging("FirmaPageRenderTypeID");
                    _FirmaPageRenderTypeID = StructuralObject.SetValidValue(value, "FirmaPageRenderTypeID");
                    ReportPropertyChanged("FirmaPageRenderTypeID");
                    OnFirmaPageRenderTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _FirmaPageRenderTypeID;
        partial void OnFirmaPageRenderTypeIDChanging(global::System.Int32 value);
        partial void OnFirmaPageRenderTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirmaPageRenderTypeName
        {
            get
            {
                return _FirmaPageRenderTypeName;
            }
            set
            {
                OnFirmaPageRenderTypeNameChanging(value);
                ReportPropertyChanging("FirmaPageRenderTypeName");
                _FirmaPageRenderTypeName = StructuralObject.SetValidValue(value, false, "FirmaPageRenderTypeName");
                ReportPropertyChanged("FirmaPageRenderTypeName");
                OnFirmaPageRenderTypeNameChanged();
            }
        }
        private global::System.String _FirmaPageRenderTypeName;
        partial void OnFirmaPageRenderTypeNameChanging(global::System.String value);
        partial void OnFirmaPageRenderTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirmaPageRenderTypeDisplayName
        {
            get
            {
                return _FirmaPageRenderTypeDisplayName;
            }
            set
            {
                OnFirmaPageRenderTypeDisplayNameChanging(value);
                ReportPropertyChanging("FirmaPageRenderTypeDisplayName");
                _FirmaPageRenderTypeDisplayName = StructuralObject.SetValidValue(value, false, "FirmaPageRenderTypeDisplayName");
                ReportPropertyChanged("FirmaPageRenderTypeDisplayName");
                OnFirmaPageRenderTypeDisplayNameChanged();
            }
        }
        private global::System.String _FirmaPageRenderTypeDisplayName;
        partial void OnFirmaPageRenderTypeDisplayNameChanging(global::System.String value);
        partial void OnFirmaPageRenderTypeDisplayNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FirmaPageType_FirmaPageRenderType_FirmaPageRenderTypeID", "FirmaPageType")]
        public EntityCollection<FirmaPageType> FirmaPageType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FirmaPageType>("ProjectFirma.Web.Models.FK_FirmaPageType_FirmaPageRenderType_FirmaPageRenderTypeID", "FirmaPageType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FirmaPageType>("ProjectFirma.Web.Models.FK_FirmaPageType_FirmaPageRenderType_FirmaPageRenderTypeID", "FirmaPageType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="FirmaPageType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FirmaPageType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FirmaPageType object.
        /// </summary>
        /// <param name="firmaPageTypeID">Initial value of the FirmaPageTypeID property.</param>
        /// <param name="firmaPageTypeName">Initial value of the FirmaPageTypeName property.</param>
        /// <param name="firmaPageTypeDisplayName">Initial value of the FirmaPageTypeDisplayName property.</param>
        /// <param name="firmaPageRenderTypeID">Initial value of the FirmaPageRenderTypeID property.</param>
        public static FirmaPageType CreateFirmaPageType(global::System.Int32 firmaPageTypeID, global::System.String firmaPageTypeName, global::System.String firmaPageTypeDisplayName, global::System.Int32 firmaPageRenderTypeID)
        {
            FirmaPageType firmaPageType = new FirmaPageType();
            firmaPageType.FirmaPageTypeID = firmaPageTypeID;
            firmaPageType.FirmaPageTypeName = firmaPageTypeName;
            firmaPageType.FirmaPageTypeDisplayName = firmaPageTypeDisplayName;
            firmaPageType.FirmaPageRenderTypeID = firmaPageRenderTypeID;
            return firmaPageType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FirmaPageTypeID
        {
            get
            {
                return _FirmaPageTypeID;
            }
            set
            {
                if (_FirmaPageTypeID != value)
                {
                    OnFirmaPageTypeIDChanging(value);
                    ReportPropertyChanging("FirmaPageTypeID");
                    _FirmaPageTypeID = StructuralObject.SetValidValue(value, "FirmaPageTypeID");
                    ReportPropertyChanged("FirmaPageTypeID");
                    OnFirmaPageTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _FirmaPageTypeID;
        partial void OnFirmaPageTypeIDChanging(global::System.Int32 value);
        partial void OnFirmaPageTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirmaPageTypeName
        {
            get
            {
                return _FirmaPageTypeName;
            }
            set
            {
                OnFirmaPageTypeNameChanging(value);
                ReportPropertyChanging("FirmaPageTypeName");
                _FirmaPageTypeName = StructuralObject.SetValidValue(value, false, "FirmaPageTypeName");
                ReportPropertyChanged("FirmaPageTypeName");
                OnFirmaPageTypeNameChanged();
            }
        }
        private global::System.String _FirmaPageTypeName;
        partial void OnFirmaPageTypeNameChanging(global::System.String value);
        partial void OnFirmaPageTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirmaPageTypeDisplayName
        {
            get
            {
                return _FirmaPageTypeDisplayName;
            }
            set
            {
                OnFirmaPageTypeDisplayNameChanging(value);
                ReportPropertyChanging("FirmaPageTypeDisplayName");
                _FirmaPageTypeDisplayName = StructuralObject.SetValidValue(value, false, "FirmaPageTypeDisplayName");
                ReportPropertyChanged("FirmaPageTypeDisplayName");
                OnFirmaPageTypeDisplayNameChanged();
            }
        }
        private global::System.String _FirmaPageTypeDisplayName;
        partial void OnFirmaPageTypeDisplayNameChanging(global::System.String value);
        partial void OnFirmaPageTypeDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FirmaPageRenderTypeID
        {
            get
            {
                return _FirmaPageRenderTypeID;
            }
            set
            {
                OnFirmaPageRenderTypeIDChanging(value);
                ReportPropertyChanging("FirmaPageRenderTypeID");
                _FirmaPageRenderTypeID = StructuralObject.SetValidValue(value, "FirmaPageRenderTypeID");
                ReportPropertyChanged("FirmaPageRenderTypeID");
                OnFirmaPageRenderTypeIDChanged();
            }
        }
        private global::System.Int32 _FirmaPageRenderTypeID;
        partial void OnFirmaPageRenderTypeIDChanging(global::System.Int32 value);
        partial void OnFirmaPageRenderTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FirmaPage_FirmaPageType_FirmaPageTypeID", "FirmaPage")]
        public EntityCollection<FirmaPage> FirmaPage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FirmaPage>("ProjectFirma.Web.Models.FK_FirmaPage_FirmaPageType_FirmaPageTypeID", "FirmaPage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FirmaPage>("ProjectFirma.Web.Models.FK_FirmaPage_FirmaPageType_FirmaPageTypeID", "FirmaPage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FirmaPageType_FirmaPageRenderType_FirmaPageRenderTypeID", "FirmaPageRenderType")]
        public FirmaPageRenderType FirmaPageRenderType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FirmaPageRenderType>("ProjectFirma.Web.Models.FK_FirmaPageType_FirmaPageRenderType_FirmaPageRenderTypeID", "FirmaPageRenderType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FirmaPageRenderType>("ProjectFirma.Web.Models.FK_FirmaPageType_FirmaPageRenderType_FirmaPageRenderTypeID", "FirmaPageRenderType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FirmaPageRenderType> FirmaPageRenderTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FirmaPageRenderType>("ProjectFirma.Web.Models.FK_FirmaPageType_FirmaPageRenderType_FirmaPageRenderTypeID", "FirmaPageRenderType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FirmaPageRenderType>("ProjectFirma.Web.Models.FK_FirmaPageType_FirmaPageRenderType_FirmaPageRenderTypeID", "FirmaPageRenderType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="FundingSource")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FundingSource : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FundingSource object.
        /// </summary>
        /// <param name="fundingSourceID">Initial value of the FundingSourceID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        /// <param name="fundingSourceName">Initial value of the FundingSourceName property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static FundingSource CreateFundingSource(global::System.Int32 fundingSourceID, global::System.Int32 tenantID, global::System.Int32 organizationID, global::System.String fundingSourceName, global::System.Boolean isActive)
        {
            FundingSource fundingSource = new FundingSource();
            fundingSource.FundingSourceID = fundingSourceID;
            fundingSource.TenantID = tenantID;
            fundingSource.OrganizationID = organizationID;
            fundingSource.FundingSourceName = fundingSourceName;
            fundingSource.IsActive = isActive;
            return fundingSource;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingSourceID
        {
            get
            {
                return _FundingSourceID;
            }
            set
            {
                if (_FundingSourceID != value)
                {
                    OnFundingSourceIDChanging(value);
                    ReportPropertyChanging("FundingSourceID");
                    _FundingSourceID = StructuralObject.SetValidValue(value, "FundingSourceID");
                    ReportPropertyChanged("FundingSourceID");
                    OnFundingSourceIDChanged();
                }
            }
        }
        private global::System.Int32 _FundingSourceID;
        partial void OnFundingSourceIDChanging(global::System.Int32 value);
        partial void OnFundingSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Int32 _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Int32 value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FundingSourceName
        {
            get
            {
                return _FundingSourceName;
            }
            set
            {
                OnFundingSourceNameChanging(value);
                ReportPropertyChanging("FundingSourceName");
                _FundingSourceName = StructuralObject.SetValidValue(value, false, "FundingSourceName");
                ReportPropertyChanged("FundingSourceName");
                OnFundingSourceNameChanged();
            }
        }
        private global::System.String _FundingSourceName;
        partial void OnFundingSourceNameChanging(global::System.String value);
        partial void OnFundingSourceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FundingSourceDescription
        {
            get
            {
                return _FundingSourceDescription;
            }
            set
            {
                OnFundingSourceDescriptionChanging(value);
                ReportPropertyChanging("FundingSourceDescription");
                _FundingSourceDescription = StructuralObject.SetValidValue(value, true, "FundingSourceDescription");
                ReportPropertyChanged("FundingSourceDescription");
                OnFundingSourceDescriptionChanged();
            }
        }
        private global::System.String _FundingSourceDescription;
        partial void OnFundingSourceDescriptionChanging(global::System.String value);
        partial void OnFundingSourceDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> FundingSourceAmount
        {
            get
            {
                return _FundingSourceAmount;
            }
            set
            {
                OnFundingSourceAmountChanging(value);
                ReportPropertyChanging("FundingSourceAmount");
                _FundingSourceAmount = StructuralObject.SetValidValue(value, "FundingSourceAmount");
                ReportPropertyChanged("FundingSourceAmount");
                OnFundingSourceAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _FundingSourceAmount;
        partial void OnFundingSourceAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnFundingSourceAmountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ContractorTimeActivity_FundingSource_FundingSourceID", "ContractorTimeActivity")]
        public EntityCollection<ContractorTimeActivity> ContractorTimeActivity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContractorTimeActivity>("ProjectFirma.Web.Models.FK_ContractorTimeActivity_FundingSource_FundingSourceID", "ContractorTimeActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContractorTimeActivity>("ProjectFirma.Web.Models.FK_ContractorTimeActivity_FundingSource_FundingSourceID", "ContractorTimeActivity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FundingSource_Organization_OrganizationID", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("ProjectFirma.Web.Models.FK_FundingSource_Organization_OrganizationID", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("ProjectFirma.Web.Models.FK_FundingSource_Organization_OrganizationID", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("ProjectFirma.Web.Models.FK_FundingSource_Organization_OrganizationID", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("ProjectFirma.Web.Models.FK_FundingSource_Organization_OrganizationID", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FundingSource_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FundingSource_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FundingSource_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FundingSource_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_FundingSource_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectBudget_FundingSource_FundingSourceID", "ProjectBudget")]
        public EntityCollection<ProjectBudget> ProjectBudget
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectBudget>("ProjectFirma.Web.Models.FK_ProjectBudget_FundingSource_FundingSourceID", "ProjectBudget");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectBudget>("ProjectFirma.Web.Models.FK_ProjectBudget_FundingSource_FundingSourceID", "ProjectBudget", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectBudgetUpdate_FundingSource_FundingSourceID", "ProjectBudgetUpdate")]
        public EntityCollection<ProjectBudgetUpdate> ProjectBudgetUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectBudgetUpdate>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_FundingSource_FundingSourceID", "ProjectBudgetUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectBudgetUpdate>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_FundingSource_FundingSourceID", "ProjectBudgetUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceExpenditure_FundingSource_FundingSourceID", "ProjectFundingSourceExpenditure")]
        public EntityCollection<ProjectFundingSourceExpenditure> ProjectFundingSourceExpenditure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFundingSourceExpenditure>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditure_FundingSource_FundingSourceID", "ProjectFundingSourceExpenditure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFundingSourceExpenditure>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditure_FundingSource_FundingSourceID", "ProjectFundingSourceExpenditure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceExpenditureUpdate_FundingSource_FundingSourceID", "ProjectFundingSourceExpenditureUpdate")]
        public EntityCollection<ProjectFundingSourceExpenditureUpdate> ProjectFundingSourceExpenditureUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFundingSourceExpenditureUpdate>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditureUpdate_FundingSource_FundingSourceID", "ProjectFundingSourceExpenditureUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFundingSourceExpenditureUpdate>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditureUpdate_FundingSource_FundingSourceID", "ProjectFundingSourceExpenditureUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceRequest_FundingSource_FundingSourceID", "ProjectFundingSourceRequest")]
        public EntityCollection<ProjectFundingSourceRequest> ProjectFundingSourceRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFundingSourceRequest>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequest_FundingSource_FundingSourceID", "ProjectFundingSourceRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFundingSourceRequest>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequest_FundingSource_FundingSourceID", "ProjectFundingSourceRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceRequestUpdate_FundingSource_FundingSourceID", "ProjectFundingSourceRequestUpdate")]
        public EntityCollection<ProjectFundingSourceRequestUpdate> ProjectFundingSourceRequestUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFundingSourceRequestUpdate>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequestUpdate_FundingSource_FundingSourceID", "ProjectFundingSourceRequestUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFundingSourceRequestUpdate>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequestUpdate_FundingSource_FundingSourceID", "ProjectFundingSourceRequestUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TreatmentActivity_FundingSource_FundingSourceID", "TreatmentActivity")]
        public EntityCollection<TreatmentActivity> TreatmentActivity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TreatmentActivity>("ProjectFirma.Web.Models.FK_TreatmentActivity_FundingSource_FundingSourceID", "TreatmentActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TreatmentActivity>("ProjectFirma.Web.Models.FK_TreatmentActivity_FundingSource_FundingSourceID", "TreatmentActivity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="geometry_columns")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class geometry_columns : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new geometry_columns object.
        /// </summary>
        /// <param name="f_table_catalog">Initial value of the f_table_catalog property.</param>
        /// <param name="f_table_schema">Initial value of the f_table_schema property.</param>
        /// <param name="f_table_name">Initial value of the f_table_name property.</param>
        /// <param name="f_geometry_column">Initial value of the f_geometry_column property.</param>
        /// <param name="coord_dimension">Initial value of the coord_dimension property.</param>
        /// <param name="srid">Initial value of the srid property.</param>
        /// <param name="geometry_type">Initial value of the geometry_type property.</param>
        public static geometry_columns Creategeometry_columns(global::System.String f_table_catalog, global::System.String f_table_schema, global::System.String f_table_name, global::System.String f_geometry_column, global::System.Int32 coord_dimension, global::System.Int32 srid, global::System.String geometry_type)
        {
            geometry_columns geometry_columns = new geometry_columns();
            geometry_columns.f_table_catalog = f_table_catalog;
            geometry_columns.f_table_schema = f_table_schema;
            geometry_columns.f_table_name = f_table_name;
            geometry_columns.f_geometry_column = f_geometry_column;
            geometry_columns.coord_dimension = coord_dimension;
            geometry_columns.srid = srid;
            geometry_columns.geometry_type = geometry_type;
            return geometry_columns;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String f_table_catalog
        {
            get
            {
                return _f_table_catalog;
            }
            set
            {
                if (_f_table_catalog != value)
                {
                    Onf_table_catalogChanging(value);
                    ReportPropertyChanging("f_table_catalog");
                    _f_table_catalog = StructuralObject.SetValidValue(value, false, "f_table_catalog");
                    ReportPropertyChanged("f_table_catalog");
                    Onf_table_catalogChanged();
                }
            }
        }
        private global::System.String _f_table_catalog;
        partial void Onf_table_catalogChanging(global::System.String value);
        partial void Onf_table_catalogChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String f_table_schema
        {
            get
            {
                return _f_table_schema;
            }
            set
            {
                if (_f_table_schema != value)
                {
                    Onf_table_schemaChanging(value);
                    ReportPropertyChanging("f_table_schema");
                    _f_table_schema = StructuralObject.SetValidValue(value, false, "f_table_schema");
                    ReportPropertyChanged("f_table_schema");
                    Onf_table_schemaChanged();
                }
            }
        }
        private global::System.String _f_table_schema;
        partial void Onf_table_schemaChanging(global::System.String value);
        partial void Onf_table_schemaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String f_table_name
        {
            get
            {
                return _f_table_name;
            }
            set
            {
                if (_f_table_name != value)
                {
                    Onf_table_nameChanging(value);
                    ReportPropertyChanging("f_table_name");
                    _f_table_name = StructuralObject.SetValidValue(value, false, "f_table_name");
                    ReportPropertyChanged("f_table_name");
                    Onf_table_nameChanged();
                }
            }
        }
        private global::System.String _f_table_name;
        partial void Onf_table_nameChanging(global::System.String value);
        partial void Onf_table_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String f_geometry_column
        {
            get
            {
                return _f_geometry_column;
            }
            set
            {
                if (_f_geometry_column != value)
                {
                    Onf_geometry_columnChanging(value);
                    ReportPropertyChanging("f_geometry_column");
                    _f_geometry_column = StructuralObject.SetValidValue(value, false, "f_geometry_column");
                    ReportPropertyChanged("f_geometry_column");
                    Onf_geometry_columnChanged();
                }
            }
        }
        private global::System.String _f_geometry_column;
        partial void Onf_geometry_columnChanging(global::System.String value);
        partial void Onf_geometry_columnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 coord_dimension
        {
            get
            {
                return _coord_dimension;
            }
            set
            {
                Oncoord_dimensionChanging(value);
                ReportPropertyChanging("coord_dimension");
                _coord_dimension = StructuralObject.SetValidValue(value, "coord_dimension");
                ReportPropertyChanged("coord_dimension");
                Oncoord_dimensionChanged();
            }
        }
        private global::System.Int32 _coord_dimension;
        partial void Oncoord_dimensionChanging(global::System.Int32 value);
        partial void Oncoord_dimensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 srid
        {
            get
            {
                return _srid;
            }
            set
            {
                OnsridChanging(value);
                ReportPropertyChanging("srid");
                _srid = StructuralObject.SetValidValue(value, "srid");
                ReportPropertyChanged("srid");
                OnsridChanged();
            }
        }
        private global::System.Int32 _srid;
        partial void OnsridChanging(global::System.Int32 value);
        partial void OnsridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String geometry_type
        {
            get
            {
                return _geometry_type;
            }
            set
            {
                Ongeometry_typeChanging(value);
                ReportPropertyChanging("geometry_type");
                _geometry_type = StructuralObject.SetValidValue(value, false, "geometry_type");
                ReportPropertyChanged("geometry_type");
                Ongeometry_typeChanged();
            }
        }
        private global::System.String _geometry_type;
        partial void Ongeometry_typeChanging(global::System.String value);
        partial void Ongeometry_typeChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="GeospatialArea")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GeospatialArea : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GeospatialArea object.
        /// </summary>
        /// <param name="geospatialAreaID">Initial value of the GeospatialAreaID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="geospatialAreaName">Initial value of the GeospatialAreaName property.</param>
        /// <param name="geospatialAreaTypeID">Initial value of the GeospatialAreaTypeID property.</param>
        public static GeospatialArea CreateGeospatialArea(global::System.Int32 geospatialAreaID, global::System.Int32 tenantID, global::System.String geospatialAreaName, global::System.Int32 geospatialAreaTypeID)
        {
            GeospatialArea geospatialArea = new GeospatialArea();
            geospatialArea.GeospatialAreaID = geospatialAreaID;
            geospatialArea.TenantID = tenantID;
            geospatialArea.GeospatialAreaName = geospatialAreaName;
            geospatialArea.GeospatialAreaTypeID = geospatialAreaTypeID;
            return geospatialArea;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GeospatialAreaID
        {
            get
            {
                return _GeospatialAreaID;
            }
            set
            {
                if (_GeospatialAreaID != value)
                {
                    OnGeospatialAreaIDChanging(value);
                    ReportPropertyChanging("GeospatialAreaID");
                    _GeospatialAreaID = StructuralObject.SetValidValue(value, "GeospatialAreaID");
                    ReportPropertyChanged("GeospatialAreaID");
                    OnGeospatialAreaIDChanged();
                }
            }
        }
        private global::System.Int32 _GeospatialAreaID;
        partial void OnGeospatialAreaIDChanging(global::System.Int32 value);
        partial void OnGeospatialAreaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GeospatialAreaName
        {
            get
            {
                return _GeospatialAreaName;
            }
            set
            {
                OnGeospatialAreaNameChanging(value);
                ReportPropertyChanging("GeospatialAreaName");
                _GeospatialAreaName = StructuralObject.SetValidValue(value, false, "GeospatialAreaName");
                ReportPropertyChanged("GeospatialAreaName");
                OnGeospatialAreaNameChanged();
            }
        }
        private global::System.String _GeospatialAreaName;
        partial void OnGeospatialAreaNameChanging(global::System.String value);
        partial void OnGeospatialAreaNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeometry GeospatialAreaFeature
        {
            get
            {
                return _GeospatialAreaFeature;
            }
            set
            {
                OnGeospatialAreaFeatureChanging(value);
                ReportPropertyChanging("GeospatialAreaFeature");
                _GeospatialAreaFeature = StructuralObject.SetValidValue(value, true, "GeospatialAreaFeature");
                ReportPropertyChanged("GeospatialAreaFeature");
                OnGeospatialAreaFeatureChanged();
            }
        }
        private global::System.Data.Spatial.DbGeometry _GeospatialAreaFeature;
        partial void OnGeospatialAreaFeatureChanging(global::System.Data.Spatial.DbGeometry value);
        partial void OnGeospatialAreaFeatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GeospatialAreaTypeID
        {
            get
            {
                return _GeospatialAreaTypeID;
            }
            set
            {
                OnGeospatialAreaTypeIDChanging(value);
                ReportPropertyChanging("GeospatialAreaTypeID");
                _GeospatialAreaTypeID = StructuralObject.SetValidValue(value, "GeospatialAreaTypeID");
                ReportPropertyChanged("GeospatialAreaTypeID");
                OnGeospatialAreaTypeIDChanged();
            }
        }
        private global::System.Int32 _GeospatialAreaTypeID;
        partial void OnGeospatialAreaTypeIDChanging(global::System.Int32 value);
        partial void OnGeospatialAreaTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_GeospatialArea_GeospatialAreaType_GeospatialAreaTypeID", "GeospatialAreaType")]
        public GeospatialAreaType GeospatialAreaType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GeospatialAreaType>("ProjectFirma.Web.Models.FK_GeospatialArea_GeospatialAreaType_GeospatialAreaTypeID", "GeospatialAreaType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GeospatialAreaType>("ProjectFirma.Web.Models.FK_GeospatialArea_GeospatialAreaType_GeospatialAreaTypeID", "GeospatialAreaType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GeospatialAreaType> GeospatialAreaTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GeospatialAreaType>("ProjectFirma.Web.Models.FK_GeospatialArea_GeospatialAreaType_GeospatialAreaTypeID", "GeospatialAreaType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GeospatialAreaType>("ProjectFirma.Web.Models.FK_GeospatialArea_GeospatialAreaType_GeospatialAreaTypeID", "GeospatialAreaType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_GeospatialArea_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_GeospatialArea_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_GeospatialArea_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_GeospatialArea_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_GeospatialArea_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PersonStewardGeospatialArea_GeospatialArea_GeospatialAreaID", "PersonStewardGeospatialArea")]
        public EntityCollection<PersonStewardGeospatialArea> PersonStewardGeospatialArea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonStewardGeospatialArea>("ProjectFirma.Web.Models.FK_PersonStewardGeospatialArea_GeospatialArea_GeospatialAreaID", "PersonStewardGeospatialArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonStewardGeospatialArea>("ProjectFirma.Web.Models.FK_PersonStewardGeospatialArea_GeospatialArea_GeospatialAreaID", "PersonStewardGeospatialArea", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialArea_GeospatialArea_GeospatialAreaID", "ProjectGeospatialArea")]
        public EntityCollection<ProjectGeospatialArea> ProjectGeospatialArea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectGeospatialArea>("ProjectFirma.Web.Models.FK_ProjectGeospatialArea_GeospatialArea_GeospatialAreaID", "ProjectGeospatialArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectGeospatialArea>("ProjectFirma.Web.Models.FK_ProjectGeospatialArea_GeospatialArea_GeospatialAreaID", "ProjectGeospatialArea", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaUpdate_GeospatialArea_GeospatialAreaID", "ProjectGeospatialAreaUpdate")]
        public EntityCollection<ProjectGeospatialAreaUpdate> ProjectGeospatialAreaUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectGeospatialAreaUpdate>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaUpdate_GeospatialArea_GeospatialAreaID", "ProjectGeospatialAreaUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectGeospatialAreaUpdate>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaUpdate_GeospatialArea_GeospatialAreaID", "ProjectGeospatialAreaUpdate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="GeospatialAreaType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GeospatialAreaType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GeospatialAreaType object.
        /// </summary>
        /// <param name="geospatialAreaTypeID">Initial value of the GeospatialAreaTypeID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="geospatialAreaTypeName">Initial value of the GeospatialAreaTypeName property.</param>
        /// <param name="geospatialAreaTypeNamePluralized">Initial value of the GeospatialAreaTypeNamePluralized property.</param>
        /// <param name="mapServiceUrl">Initial value of the MapServiceUrl property.</param>
        /// <param name="geospatialAreaLayerName">Initial value of the GeospatialAreaLayerName property.</param>
        public static GeospatialAreaType CreateGeospatialAreaType(global::System.Int32 geospatialAreaTypeID, global::System.Int32 tenantID, global::System.String geospatialAreaTypeName, global::System.String geospatialAreaTypeNamePluralized, global::System.String mapServiceUrl, global::System.String geospatialAreaLayerName)
        {
            GeospatialAreaType geospatialAreaType = new GeospatialAreaType();
            geospatialAreaType.GeospatialAreaTypeID = geospatialAreaTypeID;
            geospatialAreaType.TenantID = tenantID;
            geospatialAreaType.GeospatialAreaTypeName = geospatialAreaTypeName;
            geospatialAreaType.GeospatialAreaTypeNamePluralized = geospatialAreaTypeNamePluralized;
            geospatialAreaType.MapServiceUrl = mapServiceUrl;
            geospatialAreaType.GeospatialAreaLayerName = geospatialAreaLayerName;
            return geospatialAreaType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GeospatialAreaTypeID
        {
            get
            {
                return _GeospatialAreaTypeID;
            }
            set
            {
                if (_GeospatialAreaTypeID != value)
                {
                    OnGeospatialAreaTypeIDChanging(value);
                    ReportPropertyChanging("GeospatialAreaTypeID");
                    _GeospatialAreaTypeID = StructuralObject.SetValidValue(value, "GeospatialAreaTypeID");
                    ReportPropertyChanged("GeospatialAreaTypeID");
                    OnGeospatialAreaTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _GeospatialAreaTypeID;
        partial void OnGeospatialAreaTypeIDChanging(global::System.Int32 value);
        partial void OnGeospatialAreaTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GeospatialAreaTypeName
        {
            get
            {
                return _GeospatialAreaTypeName;
            }
            set
            {
                OnGeospatialAreaTypeNameChanging(value);
                ReportPropertyChanging("GeospatialAreaTypeName");
                _GeospatialAreaTypeName = StructuralObject.SetValidValue(value, false, "GeospatialAreaTypeName");
                ReportPropertyChanged("GeospatialAreaTypeName");
                OnGeospatialAreaTypeNameChanged();
            }
        }
        private global::System.String _GeospatialAreaTypeName;
        partial void OnGeospatialAreaTypeNameChanging(global::System.String value);
        partial void OnGeospatialAreaTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GeospatialAreaTypeNamePluralized
        {
            get
            {
                return _GeospatialAreaTypeNamePluralized;
            }
            set
            {
                OnGeospatialAreaTypeNamePluralizedChanging(value);
                ReportPropertyChanging("GeospatialAreaTypeNamePluralized");
                _GeospatialAreaTypeNamePluralized = StructuralObject.SetValidValue(value, false, "GeospatialAreaTypeNamePluralized");
                ReportPropertyChanged("GeospatialAreaTypeNamePluralized");
                OnGeospatialAreaTypeNamePluralizedChanged();
            }
        }
        private global::System.String _GeospatialAreaTypeNamePluralized;
        partial void OnGeospatialAreaTypeNamePluralizedChanging(global::System.String value);
        partial void OnGeospatialAreaTypeNamePluralizedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GeospatialAreaIntroContent
        {
            get
            {
                return _GeospatialAreaIntroContent;
            }
            set
            {
                OnGeospatialAreaIntroContentChanging(value);
                ReportPropertyChanging("GeospatialAreaIntroContent");
                _GeospatialAreaIntroContent = StructuralObject.SetValidValue(value, true, "GeospatialAreaIntroContent");
                ReportPropertyChanged("GeospatialAreaIntroContent");
                OnGeospatialAreaIntroContentChanged();
            }
        }
        private global::System.String _GeospatialAreaIntroContent;
        partial void OnGeospatialAreaIntroContentChanging(global::System.String value);
        partial void OnGeospatialAreaIntroContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GeospatialAreaTypeDefinition
        {
            get
            {
                return _GeospatialAreaTypeDefinition;
            }
            set
            {
                OnGeospatialAreaTypeDefinitionChanging(value);
                ReportPropertyChanging("GeospatialAreaTypeDefinition");
                _GeospatialAreaTypeDefinition = StructuralObject.SetValidValue(value, true, "GeospatialAreaTypeDefinition");
                ReportPropertyChanged("GeospatialAreaTypeDefinition");
                OnGeospatialAreaTypeDefinitionChanged();
            }
        }
        private global::System.String _GeospatialAreaTypeDefinition;
        partial void OnGeospatialAreaTypeDefinitionChanging(global::System.String value);
        partial void OnGeospatialAreaTypeDefinitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MapServiceUrl
        {
            get
            {
                return _MapServiceUrl;
            }
            set
            {
                OnMapServiceUrlChanging(value);
                ReportPropertyChanging("MapServiceUrl");
                _MapServiceUrl = StructuralObject.SetValidValue(value, false, "MapServiceUrl");
                ReportPropertyChanged("MapServiceUrl");
                OnMapServiceUrlChanged();
            }
        }
        private global::System.String _MapServiceUrl;
        partial void OnMapServiceUrlChanging(global::System.String value);
        partial void OnMapServiceUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GeospatialAreaLayerName
        {
            get
            {
                return _GeospatialAreaLayerName;
            }
            set
            {
                OnGeospatialAreaLayerNameChanging(value);
                ReportPropertyChanging("GeospatialAreaLayerName");
                _GeospatialAreaLayerName = StructuralObject.SetValidValue(value, false, "GeospatialAreaLayerName");
                ReportPropertyChanged("GeospatialAreaLayerName");
                OnGeospatialAreaLayerNameChanged();
            }
        }
        private global::System.String _GeospatialAreaLayerName;
        partial void OnGeospatialAreaLayerNameChanging(global::System.String value);
        partial void OnGeospatialAreaLayerNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_GeospatialArea_GeospatialAreaType_GeospatialAreaTypeID", "GeospatialArea")]
        public EntityCollection<GeospatialArea> GeospatialArea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GeospatialArea>("ProjectFirma.Web.Models.FK_GeospatialArea_GeospatialAreaType_GeospatialAreaTypeID", "GeospatialArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GeospatialArea>("ProjectFirma.Web.Models.FK_GeospatialArea_GeospatialAreaType_GeospatialAreaTypeID", "GeospatialArea", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_GeospatialAreaType_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_GeospatialAreaType_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_GeospatialAreaType_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_GeospatialAreaType_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_GeospatialAreaType_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaTypeNote_GeospatialAreaType_GeospatialAreaTypeID", "ProjectGeospatialAreaTypeNote")]
        public EntityCollection<ProjectGeospatialAreaTypeNote> ProjectGeospatialAreaTypeNote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectGeospatialAreaTypeNote>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNote_GeospatialAreaType_GeospatialAreaTypeID", "ProjectGeospatialAreaTypeNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectGeospatialAreaTypeNote>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNote_GeospatialAreaType_GeospatialAreaTypeID", "ProjectGeospatialAreaTypeNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaTypeNoteUpdate_GeospatialAreaType_GeospatialAreaTypeID", "ProjectGeospatialAreaTypeNoteUpdate")]
        public EntityCollection<ProjectGeospatialAreaTypeNoteUpdate> ProjectGeospatialAreaTypeNoteUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectGeospatialAreaTypeNoteUpdate>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNoteUpdate_GeospatialAreaType_GeospatialAreaTypeID", "ProjectGeospatialAreaTypeNoteUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectGeospatialAreaTypeNoteUpdate>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNoteUpdate_GeospatialAreaType_GeospatialAreaTypeID", "ProjectGeospatialAreaTypeNoteUpdate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="GoogleChartType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GoogleChartType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GoogleChartType object.
        /// </summary>
        /// <param name="googleChartTypeID">Initial value of the GoogleChartTypeID property.</param>
        /// <param name="googleChartTypeName">Initial value of the GoogleChartTypeName property.</param>
        /// <param name="googleChartTypeDisplayName">Initial value of the GoogleChartTypeDisplayName property.</param>
        public static GoogleChartType CreateGoogleChartType(global::System.Int32 googleChartTypeID, global::System.String googleChartTypeName, global::System.String googleChartTypeDisplayName)
        {
            GoogleChartType googleChartType = new GoogleChartType();
            googleChartType.GoogleChartTypeID = googleChartTypeID;
            googleChartType.GoogleChartTypeName = googleChartTypeName;
            googleChartType.GoogleChartTypeDisplayName = googleChartTypeDisplayName;
            return googleChartType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GoogleChartTypeID
        {
            get
            {
                return _GoogleChartTypeID;
            }
            set
            {
                if (_GoogleChartTypeID != value)
                {
                    OnGoogleChartTypeIDChanging(value);
                    ReportPropertyChanging("GoogleChartTypeID");
                    _GoogleChartTypeID = StructuralObject.SetValidValue(value, "GoogleChartTypeID");
                    ReportPropertyChanged("GoogleChartTypeID");
                    OnGoogleChartTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _GoogleChartTypeID;
        partial void OnGoogleChartTypeIDChanging(global::System.Int32 value);
        partial void OnGoogleChartTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GoogleChartTypeName
        {
            get
            {
                return _GoogleChartTypeName;
            }
            set
            {
                OnGoogleChartTypeNameChanging(value);
                ReportPropertyChanging("GoogleChartTypeName");
                _GoogleChartTypeName = StructuralObject.SetValidValue(value, false, "GoogleChartTypeName");
                ReportPropertyChanged("GoogleChartTypeName");
                OnGoogleChartTypeNameChanged();
            }
        }
        private global::System.String _GoogleChartTypeName;
        partial void OnGoogleChartTypeNameChanging(global::System.String value);
        partial void OnGoogleChartTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GoogleChartTypeDisplayName
        {
            get
            {
                return _GoogleChartTypeDisplayName;
            }
            set
            {
                OnGoogleChartTypeDisplayNameChanging(value);
                ReportPropertyChanging("GoogleChartTypeDisplayName");
                _GoogleChartTypeDisplayName = StructuralObject.SetValidValue(value, false, "GoogleChartTypeDisplayName");
                ReportPropertyChanged("GoogleChartTypeDisplayName");
                OnGoogleChartTypeDisplayNameChanged();
            }
        }
        private global::System.String _GoogleChartTypeDisplayName;
        partial void OnGoogleChartTypeDisplayNameChanging(global::System.String value);
        partial void OnGoogleChartTypeDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SeriesDataDisplayType
        {
            get
            {
                return _SeriesDataDisplayType;
            }
            set
            {
                OnSeriesDataDisplayTypeChanging(value);
                ReportPropertyChanging("SeriesDataDisplayType");
                _SeriesDataDisplayType = StructuralObject.SetValidValue(value, true, "SeriesDataDisplayType");
                ReportPropertyChanged("SeriesDataDisplayType");
                OnSeriesDataDisplayTypeChanged();
            }
        }
        private global::System.String _SeriesDataDisplayType;
        partial void OnSeriesDataDisplayTypeChanging(global::System.String value);
        partial void OnSeriesDataDisplayTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureSubcategory_GoogleChartType_GoogleChartTypeID", "PerformanceMeasureSubcategory")]
        public EntityCollection<PerformanceMeasureSubcategory> PerformanceMeasureSubcategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategory_GoogleChartType_GoogleChartTypeID", "PerformanceMeasureSubcategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategory_GoogleChartType_GoogleChartTypeID", "PerformanceMeasureSubcategory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="Grant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Grant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Grant object.
        /// </summary>
        /// <param name="grantID">Initial value of the GrantID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        public static Grant CreateGrant(global::System.Int32 grantID, global::System.Int32 tenantID)
        {
            Grant grant = new Grant();
            grant.GrantID = grantID;
            grant.TenantID = tenantID;
            return grant;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GrantID
        {
            get
            {
                return _GrantID;
            }
            set
            {
                if (_GrantID != value)
                {
                    OnGrantIDChanging(value);
                    ReportPropertyChanging("GrantID");
                    _GrantID = StructuralObject.SetValidValue(value, "GrantID");
                    ReportPropertyChanged("GrantID");
                    OnGrantIDChanged();
                }
            }
        }
        private global::System.Int32 _GrantID;
        partial void OnGrantIDChanging(global::System.Int32 value);
        partial void OnGrantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GrantNumber
        {
            get
            {
                return _GrantNumber;
            }
            set
            {
                OnGrantNumberChanging(value);
                ReportPropertyChanging("GrantNumber");
                _GrantNumber = StructuralObject.SetValidValue(value, true, "GrantNumber");
                ReportPropertyChanged("GrantNumber");
                OnGrantNumberChanged();
            }
        }
        private global::System.String _GrantNumber;
        partial void OnGrantNumberChanging(global::System.String value);
        partial void OnGrantNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AwardedFunds
        {
            get
            {
                return _AwardedFunds;
            }
            set
            {
                OnAwardedFundsChanging(value);
                ReportPropertyChanging("AwardedFunds");
                _AwardedFunds = StructuralObject.SetValidValue(value, "AwardedFunds");
                ReportPropertyChanged("AwardedFunds");
                OnAwardedFundsChanged();
            }
        }
        private Nullable<global::System.Decimal> _AwardedFunds;
        partial void OnAwardedFundsChanging(Nullable<global::System.Decimal> value);
        partial void OnAwardedFundsChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Grant_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Grant_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Grant_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Grant_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Grant_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_GrantAllocation_Grant_GrantID", "GrantAllocation")]
        public EntityCollection<GrantAllocation> GrantAllocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GrantAllocation>("ProjectFirma.Web.Models.FK_GrantAllocation_Grant_GrantID", "GrantAllocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GrantAllocation>("ProjectFirma.Web.Models.FK_GrantAllocation_Grant_GrantID", "GrantAllocation", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="GrantAllocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GrantAllocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GrantAllocation object.
        /// </summary>
        /// <param name="grantAllocationID">Initial value of the GrantAllocationID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="grantID">Initial value of the GrantID property.</param>
        /// <param name="startDate">Initial value of the StartDate property.</param>
        /// <param name="endDate">Initial value of the EndDate property.</param>
        public static GrantAllocation CreateGrantAllocation(global::System.Int32 grantAllocationID, global::System.Int32 tenantID, global::System.Int32 grantID, global::System.DateTime startDate, global::System.DateTime endDate)
        {
            GrantAllocation grantAllocation = new GrantAllocation();
            grantAllocation.GrantAllocationID = grantAllocationID;
            grantAllocation.TenantID = tenantID;
            grantAllocation.GrantID = grantID;
            grantAllocation.StartDate = startDate;
            grantAllocation.EndDate = endDate;
            return grantAllocation;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GrantAllocationID
        {
            get
            {
                return _GrantAllocationID;
            }
            set
            {
                if (_GrantAllocationID != value)
                {
                    OnGrantAllocationIDChanging(value);
                    ReportPropertyChanging("GrantAllocationID");
                    _GrantAllocationID = StructuralObject.SetValidValue(value, "GrantAllocationID");
                    ReportPropertyChanged("GrantAllocationID");
                    OnGrantAllocationIDChanged();
                }
            }
        }
        private global::System.Int32 _GrantAllocationID;
        partial void OnGrantAllocationIDChanging(global::System.Int32 value);
        partial void OnGrantAllocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GrantID
        {
            get
            {
                return _GrantID;
            }
            set
            {
                OnGrantIDChanging(value);
                ReportPropertyChanging("GrantID");
                _GrantID = StructuralObject.SetValidValue(value, "GrantID");
                ReportPropertyChanged("GrantID");
                OnGrantIDChanged();
            }
        }
        private global::System.Int32 _GrantID;
        partial void OnGrantIDChanging(global::System.Int32 value);
        partial void OnGrantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                OnProjectNameChanging(value);
                ReportPropertyChanging("ProjectName");
                _ProjectName = StructuralObject.SetValidValue(value, true, "ProjectName");
                ReportPropertyChanged("ProjectName");
                OnProjectNameChanged();
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value, "StartDate");
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private global::System.DateTime _StartDate;
        partial void OnStartDateChanging(global::System.DateTime value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private global::System.DateTime _EndDate;
        partial void OnEndDateChanging(global::System.DateTime value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> AllocationAmount
        {
            get
            {
                return _AllocationAmount;
            }
            set
            {
                OnAllocationAmountChanging(value);
                ReportPropertyChanging("AllocationAmount");
                _AllocationAmount = StructuralObject.SetValidValue(value, "AllocationAmount");
                ReportPropertyChanged("AllocationAmount");
                OnAllocationAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _AllocationAmount;
        partial void OnAllocationAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAllocationAmountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_GrantAllocation_Grant_GrantID", "Grant")]
        public Grant Grant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Grant>("ProjectFirma.Web.Models.FK_GrantAllocation_Grant_GrantID", "Grant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Grant>("ProjectFirma.Web.Models.FK_GrantAllocation_Grant_GrantID", "Grant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Grant> GrantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Grant>("ProjectFirma.Web.Models.FK_GrantAllocation_Grant_GrantID", "Grant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Grant>("ProjectFirma.Web.Models.FK_GrantAllocation_Grant_GrantID", "Grant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_GrantAllocation_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_GrantAllocation_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_GrantAllocation_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_GrantAllocation_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_GrantAllocation_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="Hash")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Hash : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Hash object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="field">Initial value of the Field property.</param>
        public static Hash CreateHash(global::System.Int32 id, global::System.String key, global::System.String field)
        {
            Hash hash = new Hash();
            hash.Id = id;
            hash.Key = key;
            hash.Field = field;
            return hash;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false, "Key");
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Field
        {
            get
            {
                return _Field;
            }
            set
            {
                OnFieldChanging(value);
                ReportPropertyChanging("Field");
                _Field = StructuralObject.SetValidValue(value, false, "Field");
                ReportPropertyChanged("Field");
                OnFieldChanged();
            }
        }
        private global::System.String _Field;
        partial void OnFieldChanging(global::System.String value);
        partial void OnFieldChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpireAt
        {
            get
            {
                return _ExpireAt;
            }
            set
            {
                OnExpireAtChanging(value);
                ReportPropertyChanging("ExpireAt");
                _ExpireAt = StructuralObject.SetValidValue(value, "ExpireAt");
                ReportPropertyChanged("ExpireAt");
                OnExpireAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpireAt;
        partial void OnExpireAtChanging(Nullable<global::System.DateTime> value);
        partial void OnExpireAtChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ImportExternalProjectStaging")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ImportExternalProjectStaging : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ImportExternalProjectStaging object.
        /// </summary>
        /// <param name="importExternalProjectStagingID">Initial value of the ImportExternalProjectStagingID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="createPersonID">Initial value of the CreatePersonID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static ImportExternalProjectStaging CreateImportExternalProjectStaging(global::System.Int32 importExternalProjectStagingID, global::System.Int32 tenantID, global::System.Int32 createPersonID, global::System.DateTime createDate)
        {
            ImportExternalProjectStaging importExternalProjectStaging = new ImportExternalProjectStaging();
            importExternalProjectStaging.ImportExternalProjectStagingID = importExternalProjectStagingID;
            importExternalProjectStaging.TenantID = tenantID;
            importExternalProjectStaging.CreatePersonID = createPersonID;
            importExternalProjectStaging.CreateDate = createDate;
            return importExternalProjectStaging;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImportExternalProjectStagingID
        {
            get
            {
                return _ImportExternalProjectStagingID;
            }
            set
            {
                if (_ImportExternalProjectStagingID != value)
                {
                    OnImportExternalProjectStagingIDChanging(value);
                    ReportPropertyChanging("ImportExternalProjectStagingID");
                    _ImportExternalProjectStagingID = StructuralObject.SetValidValue(value, "ImportExternalProjectStagingID");
                    ReportPropertyChanged("ImportExternalProjectStagingID");
                    OnImportExternalProjectStagingIDChanged();
                }
            }
        }
        private global::System.Int32 _ImportExternalProjectStagingID;
        partial void OnImportExternalProjectStagingIDChanging(global::System.Int32 value);
        partial void OnImportExternalProjectStagingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CreatePersonID
        {
            get
            {
                return _CreatePersonID;
            }
            set
            {
                OnCreatePersonIDChanging(value);
                ReportPropertyChanging("CreatePersonID");
                _CreatePersonID = StructuralObject.SetValidValue(value, "CreatePersonID");
                ReportPropertyChanged("CreatePersonID");
                OnCreatePersonIDChanged();
            }
        }
        private global::System.Int32 _CreatePersonID;
        partial void OnCreatePersonIDChanging(global::System.Int32 value);
        partial void OnCreatePersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, "CreateDate");
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                OnProjectNameChanging(value);
                ReportPropertyChanging("ProjectName");
                _ProjectName = StructuralObject.SetValidValue(value, true, "ProjectName");
                ReportPropertyChanged("ProjectName");
                OnProjectNameChanged();
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PlannedDate
        {
            get
            {
                return _PlannedDate;
            }
            set
            {
                OnPlannedDateChanging(value);
                ReportPropertyChanging("PlannedDate");
                _PlannedDate = StructuralObject.SetValidValue(value, "PlannedDate");
                ReportPropertyChanged("PlannedDate");
                OnPlannedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PlannedDate;
        partial void OnPlannedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPlannedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApprovalStartDate
        {
            get
            {
                return _ApprovalStartDate;
            }
            set
            {
                OnApprovalStartDateChanging(value);
                ReportPropertyChanging("ApprovalStartDate");
                _ApprovalStartDate = StructuralObject.SetValidValue(value, "ApprovalStartDate");
                ReportPropertyChanged("ApprovalStartDate");
                OnApprovalStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApprovalStartDate;
        partial void OnApprovalStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnApprovalStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> EndDate
        {
            get
            {
                return _EndDate;
            }
            set
            {
                OnEndDateChanging(value);
                ReportPropertyChanging("EndDate");
                _EndDate = StructuralObject.SetValidValue(value, "EndDate");
                ReportPropertyChanged("EndDate");
                OnEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _EndDate;
        partial void OnEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> EstimatedCost
        {
            get
            {
                return _EstimatedCost;
            }
            set
            {
                OnEstimatedCostChanging(value);
                ReportPropertyChanging("EstimatedCost");
                _EstimatedCost = StructuralObject.SetValidValue(value, "EstimatedCost");
                ReportPropertyChanged("EstimatedCost");
                OnEstimatedCostChanged();
            }
        }
        private Nullable<global::System.Double> _EstimatedCost;
        partial void OnEstimatedCostChanging(Nullable<global::System.Double> value);
        partial void OnEstimatedCostChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ImportExternalProjectStaging_Person_CreatePersonID_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ImportExternalProjectStaging_Person_CreatePersonID_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ImportExternalProjectStaging_Person_CreatePersonID_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ImportExternalProjectStaging_Person_CreatePersonID_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_ImportExternalProjectStaging_Person_CreatePersonID_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ImportExternalProjectStaging_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ImportExternalProjectStaging_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ImportExternalProjectStaging_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ImportExternalProjectStaging_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ImportExternalProjectStaging_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="Job")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Job : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Job object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="invocationData">Initial value of the InvocationData property.</param>
        /// <param name="arguments">Initial value of the Arguments property.</param>
        /// <param name="createdAt">Initial value of the CreatedAt property.</param>
        public static Job CreateJob(global::System.Int32 id, global::System.String invocationData, global::System.String arguments, global::System.DateTime createdAt)
        {
            Job job = new Job();
            job.Id = id;
            job.InvocationData = invocationData;
            job.Arguments = arguments;
            job.CreatedAt = createdAt;
            return job;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> StateId
        {
            get
            {
                return _StateId;
            }
            set
            {
                OnStateIdChanging(value);
                ReportPropertyChanging("StateId");
                _StateId = StructuralObject.SetValidValue(value, "StateId");
                ReportPropertyChanged("StateId");
                OnStateIdChanged();
            }
        }
        private Nullable<global::System.Int32> _StateId;
        partial void OnStateIdChanging(Nullable<global::System.Int32> value);
        partial void OnStateIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StateName
        {
            get
            {
                return _StateName;
            }
            set
            {
                OnStateNameChanging(value);
                ReportPropertyChanging("StateName");
                _StateName = StructuralObject.SetValidValue(value, true, "StateName");
                ReportPropertyChanged("StateName");
                OnStateNameChanged();
            }
        }
        private global::System.String _StateName;
        partial void OnStateNameChanging(global::System.String value);
        partial void OnStateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String InvocationData
        {
            get
            {
                return _InvocationData;
            }
            set
            {
                OnInvocationDataChanging(value);
                ReportPropertyChanging("InvocationData");
                _InvocationData = StructuralObject.SetValidValue(value, false, "InvocationData");
                ReportPropertyChanged("InvocationData");
                OnInvocationDataChanged();
            }
        }
        private global::System.String _InvocationData;
        partial void OnInvocationDataChanging(global::System.String value);
        partial void OnInvocationDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Arguments
        {
            get
            {
                return _Arguments;
            }
            set
            {
                OnArgumentsChanging(value);
                ReportPropertyChanging("Arguments");
                _Arguments = StructuralObject.SetValidValue(value, false, "Arguments");
                ReportPropertyChanged("Arguments");
                OnArgumentsChanged();
            }
        }
        private global::System.String _Arguments;
        partial void OnArgumentsChanging(global::System.String value);
        partial void OnArgumentsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                OnCreatedAtChanging(value);
                ReportPropertyChanging("CreatedAt");
                _CreatedAt = StructuralObject.SetValidValue(value, "CreatedAt");
                ReportPropertyChanged("CreatedAt");
                OnCreatedAtChanged();
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnCreatedAtChanging(global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpireAt
        {
            get
            {
                return _ExpireAt;
            }
            set
            {
                OnExpireAtChanging(value);
                ReportPropertyChanging("ExpireAt");
                _ExpireAt = StructuralObject.SetValidValue(value, "ExpireAt");
                ReportPropertyChanged("ExpireAt");
                OnExpireAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpireAt;
        partial void OnExpireAtChanging(Nullable<global::System.DateTime> value);
        partial void OnExpireAtChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_JobParameter_Job_JobId_Id", "JobParameter")]
        public EntityCollection<JobParameter> JobParameter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobParameter>("ProjectFirma.Web.Models.FK_JobParameter_Job_JobId_Id", "JobParameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobParameter>("ProjectFirma.Web.Models.FK_JobParameter_Job_JobId_Id", "JobParameter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_State_Job_JobId_Id", "State")]
        public EntityCollection<State> State
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<State>("ProjectFirma.Web.Models.FK_State_Job_JobId_Id", "State");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<State>("ProjectFirma.Web.Models.FK_State_Job_JobId_Id", "State", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="JobParameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobParameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobParameter object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="jobId">Initial value of the JobId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static JobParameter CreateJobParameter(global::System.Int32 id, global::System.Int32 jobId, global::System.String name)
        {
            JobParameter jobParameter = new JobParameter();
            jobParameter.Id = id;
            jobParameter.JobId = jobId;
            jobParameter.Name = name;
            return jobParameter;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value, "JobId");
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private global::System.Int32 _JobId;
        partial void OnJobIdChanging(global::System.Int32 value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_JobParameter_Job_JobId_Id", "Job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("ProjectFirma.Web.Models.FK_JobParameter_Job_JobId_Id", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("ProjectFirma.Web.Models.FK_JobParameter_Job_JobId_Id", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("ProjectFirma.Web.Models.FK_JobParameter_Job_JobId_Id", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("ProjectFirma.Web.Models.FK_JobParameter_Job_JobId_Id", "Job", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="JobQueue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobQueue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobQueue object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="jobId">Initial value of the JobId property.</param>
        /// <param name="queue">Initial value of the Queue property.</param>
        public static JobQueue CreateJobQueue(global::System.Int32 id, global::System.Int32 jobId, global::System.String queue)
        {
            JobQueue jobQueue = new JobQueue();
            jobQueue.Id = id;
            jobQueue.JobId = jobId;
            jobQueue.Queue = queue;
            return jobQueue;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value, "JobId");
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private global::System.Int32 _JobId;
        partial void OnJobIdChanging(global::System.Int32 value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Queue
        {
            get
            {
                return _Queue;
            }
            set
            {
                OnQueueChanging(value);
                ReportPropertyChanging("Queue");
                _Queue = StructuralObject.SetValidValue(value, false, "Queue");
                ReportPropertyChanged("Queue");
                OnQueueChanged();
            }
        }
        private global::System.String _Queue;
        partial void OnQueueChanging(global::System.String value);
        partial void OnQueueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> FetchedAt
        {
            get
            {
                return _FetchedAt;
            }
            set
            {
                OnFetchedAtChanging(value);
                ReportPropertyChanging("FetchedAt");
                _FetchedAt = StructuralObject.SetValidValue(value, "FetchedAt");
                ReportPropertyChanged("FetchedAt");
                OnFetchedAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _FetchedAt;
        partial void OnFetchedAtChanging(Nullable<global::System.DateTime> value);
        partial void OnFetchedAtChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="List")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class List : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new List object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        public static List CreateList(global::System.Int32 id, global::System.String key)
        {
            List list = new List();
            list.Id = id;
            list.Key = key;
            return list;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false, "Key");
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, true, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpireAt
        {
            get
            {
                return _ExpireAt;
            }
            set
            {
                OnExpireAtChanging(value);
                ReportPropertyChanging("ExpireAt");
                _ExpireAt = StructuralObject.SetValidValue(value, "ExpireAt");
                ReportPropertyChanged("ExpireAt");
                OnExpireAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpireAt;
        partial void OnExpireAtChanging(Nullable<global::System.DateTime> value);
        partial void OnExpireAtChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="MappedRegion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MappedRegion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MappedRegion object.
        /// </summary>
        /// <param name="mappedRegionID">Initial value of the MappedRegionID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="regionName">Initial value of the RegionName property.</param>
        /// <param name="regionDisplayName">Initial value of the RegionDisplayName property.</param>
        /// <param name="regionFeature">Initial value of the RegionFeature property.</param>
        public static MappedRegion CreateMappedRegion(global::System.Int32 mappedRegionID, global::System.Int32 tenantID, global::System.String regionName, global::System.String regionDisplayName, global::System.Data.Spatial.DbGeometry regionFeature)
        {
            MappedRegion mappedRegion = new MappedRegion();
            mappedRegion.MappedRegionID = mappedRegionID;
            mappedRegion.TenantID = tenantID;
            mappedRegion.RegionName = regionName;
            mappedRegion.RegionDisplayName = regionDisplayName;
            mappedRegion.RegionFeature = regionFeature;
            return mappedRegion;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MappedRegionID
        {
            get
            {
                return _MappedRegionID;
            }
            set
            {
                if (_MappedRegionID != value)
                {
                    OnMappedRegionIDChanging(value);
                    ReportPropertyChanging("MappedRegionID");
                    _MappedRegionID = StructuralObject.SetValidValue(value, "MappedRegionID");
                    ReportPropertyChanged("MappedRegionID");
                    OnMappedRegionIDChanged();
                }
            }
        }
        private global::System.Int32 _MappedRegionID;
        partial void OnMappedRegionIDChanging(global::System.Int32 value);
        partial void OnMappedRegionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RegionName
        {
            get
            {
                return _RegionName;
            }
            set
            {
                OnRegionNameChanging(value);
                ReportPropertyChanging("RegionName");
                _RegionName = StructuralObject.SetValidValue(value, false, "RegionName");
                ReportPropertyChanged("RegionName");
                OnRegionNameChanged();
            }
        }
        private global::System.String _RegionName;
        partial void OnRegionNameChanging(global::System.String value);
        partial void OnRegionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RegionDisplayName
        {
            get
            {
                return _RegionDisplayName;
            }
            set
            {
                OnRegionDisplayNameChanging(value);
                ReportPropertyChanging("RegionDisplayName");
                _RegionDisplayName = StructuralObject.SetValidValue(value, false, "RegionDisplayName");
                ReportPropertyChanged("RegionDisplayName");
                OnRegionDisplayNameChanged();
            }
        }
        private global::System.String _RegionDisplayName;
        partial void OnRegionDisplayNameChanging(global::System.String value);
        partial void OnRegionDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeometry RegionFeature
        {
            get
            {
                return _RegionFeature;
            }
            set
            {
                OnRegionFeatureChanging(value);
                ReportPropertyChanging("RegionFeature");
                _RegionFeature = StructuralObject.SetValidValue(value, false, "RegionFeature");
                ReportPropertyChanged("RegionFeature");
                OnRegionFeatureChanged();
            }
        }
        private global::System.Data.Spatial.DbGeometry _RegionFeature;
        partial void OnRegionFeatureChanging(global::System.Data.Spatial.DbGeometry value);
        partial void OnRegionFeatureChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_MappedRegion_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_MappedRegion_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_MappedRegion_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_MappedRegion_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_MappedRegion_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="MeasurementUnitType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MeasurementUnitType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MeasurementUnitType object.
        /// </summary>
        /// <param name="measurementUnitTypeID">Initial value of the MeasurementUnitTypeID property.</param>
        /// <param name="measurementUnitTypeName">Initial value of the MeasurementUnitTypeName property.</param>
        /// <param name="measurementUnitTypeDisplayName">Initial value of the MeasurementUnitTypeDisplayName property.</param>
        /// <param name="numberOfSignificantDigits">Initial value of the NumberOfSignificantDigits property.</param>
        public static MeasurementUnitType CreateMeasurementUnitType(global::System.Int32 measurementUnitTypeID, global::System.String measurementUnitTypeName, global::System.String measurementUnitTypeDisplayName, global::System.Int32 numberOfSignificantDigits)
        {
            MeasurementUnitType measurementUnitType = new MeasurementUnitType();
            measurementUnitType.MeasurementUnitTypeID = measurementUnitTypeID;
            measurementUnitType.MeasurementUnitTypeName = measurementUnitTypeName;
            measurementUnitType.MeasurementUnitTypeDisplayName = measurementUnitTypeDisplayName;
            measurementUnitType.NumberOfSignificantDigits = numberOfSignificantDigits;
            return measurementUnitType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MeasurementUnitTypeID
        {
            get
            {
                return _MeasurementUnitTypeID;
            }
            set
            {
                if (_MeasurementUnitTypeID != value)
                {
                    OnMeasurementUnitTypeIDChanging(value);
                    ReportPropertyChanging("MeasurementUnitTypeID");
                    _MeasurementUnitTypeID = StructuralObject.SetValidValue(value, "MeasurementUnitTypeID");
                    ReportPropertyChanged("MeasurementUnitTypeID");
                    OnMeasurementUnitTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _MeasurementUnitTypeID;
        partial void OnMeasurementUnitTypeIDChanging(global::System.Int32 value);
        partial void OnMeasurementUnitTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MeasurementUnitTypeName
        {
            get
            {
                return _MeasurementUnitTypeName;
            }
            set
            {
                OnMeasurementUnitTypeNameChanging(value);
                ReportPropertyChanging("MeasurementUnitTypeName");
                _MeasurementUnitTypeName = StructuralObject.SetValidValue(value, false, "MeasurementUnitTypeName");
                ReportPropertyChanged("MeasurementUnitTypeName");
                OnMeasurementUnitTypeNameChanged();
            }
        }
        private global::System.String _MeasurementUnitTypeName;
        partial void OnMeasurementUnitTypeNameChanging(global::System.String value);
        partial void OnMeasurementUnitTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MeasurementUnitTypeDisplayName
        {
            get
            {
                return _MeasurementUnitTypeDisplayName;
            }
            set
            {
                OnMeasurementUnitTypeDisplayNameChanging(value);
                ReportPropertyChanging("MeasurementUnitTypeDisplayName");
                _MeasurementUnitTypeDisplayName = StructuralObject.SetValidValue(value, false, "MeasurementUnitTypeDisplayName");
                ReportPropertyChanged("MeasurementUnitTypeDisplayName");
                OnMeasurementUnitTypeDisplayNameChanged();
            }
        }
        private global::System.String _MeasurementUnitTypeDisplayName;
        partial void OnMeasurementUnitTypeDisplayNameChanging(global::System.String value);
        partial void OnMeasurementUnitTypeDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LegendDisplayName
        {
            get
            {
                return _LegendDisplayName;
            }
            set
            {
                OnLegendDisplayNameChanging(value);
                ReportPropertyChanging("LegendDisplayName");
                _LegendDisplayName = StructuralObject.SetValidValue(value, true, "LegendDisplayName");
                ReportPropertyChanged("LegendDisplayName");
                OnLegendDisplayNameChanged();
            }
        }
        private global::System.String _LegendDisplayName;
        partial void OnLegendDisplayNameChanging(global::System.String value);
        partial void OnLegendDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SingularDisplayName
        {
            get
            {
                return _SingularDisplayName;
            }
            set
            {
                OnSingularDisplayNameChanging(value);
                ReportPropertyChanging("SingularDisplayName");
                _SingularDisplayName = StructuralObject.SetValidValue(value, true, "SingularDisplayName");
                ReportPropertyChanged("SingularDisplayName");
                OnSingularDisplayNameChanged();
            }
        }
        private global::System.String _SingularDisplayName;
        partial void OnSingularDisplayNameChanging(global::System.String value);
        partial void OnSingularDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfSignificantDigits
        {
            get
            {
                return _NumberOfSignificantDigits;
            }
            set
            {
                OnNumberOfSignificantDigitsChanging(value);
                ReportPropertyChanging("NumberOfSignificantDigits");
                _NumberOfSignificantDigits = StructuralObject.SetValidValue(value, "NumberOfSignificantDigits");
                ReportPropertyChanged("NumberOfSignificantDigits");
                OnNumberOfSignificantDigitsChanged();
            }
        }
        private global::System.Int32 _NumberOfSignificantDigits;
        partial void OnNumberOfSignificantDigitsChanging(global::System.Int32 value);
        partial void OnNumberOfSignificantDigitsChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasure_MeasurementUnitType_MeasurementUnitTypeID", "PerformanceMeasure")]
        public EntityCollection<PerformanceMeasure> PerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasure_MeasurementUnitType_MeasurementUnitTypeID", "PerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasure_MeasurementUnitType_MeasurementUnitTypeID", "PerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeType_MeasurementUnitType_MeasurementUnitTypeID", "ProjectCustomAttributeType")]
        public EntityCollection<ProjectCustomAttributeType> ProjectCustomAttributeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectCustomAttributeType>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeType_MeasurementUnitType_MeasurementUnitTypeID", "ProjectCustomAttributeType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectCustomAttributeType>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeType_MeasurementUnitType_MeasurementUnitTypeID", "ProjectCustomAttributeType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="MonitoringProgram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MonitoringProgram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MonitoringProgram object.
        /// </summary>
        /// <param name="monitoringProgramID">Initial value of the MonitoringProgramID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="monitoringProgramName">Initial value of the MonitoringProgramName property.</param>
        public static MonitoringProgram CreateMonitoringProgram(global::System.Int32 monitoringProgramID, global::System.Int32 tenantID, global::System.String monitoringProgramName)
        {
            MonitoringProgram monitoringProgram = new MonitoringProgram();
            monitoringProgram.MonitoringProgramID = monitoringProgramID;
            monitoringProgram.TenantID = tenantID;
            monitoringProgram.MonitoringProgramName = monitoringProgramName;
            return monitoringProgram;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonitoringProgramID
        {
            get
            {
                return _MonitoringProgramID;
            }
            set
            {
                if (_MonitoringProgramID != value)
                {
                    OnMonitoringProgramIDChanging(value);
                    ReportPropertyChanging("MonitoringProgramID");
                    _MonitoringProgramID = StructuralObject.SetValidValue(value, "MonitoringProgramID");
                    ReportPropertyChanged("MonitoringProgramID");
                    OnMonitoringProgramIDChanged();
                }
            }
        }
        private global::System.Int32 _MonitoringProgramID;
        partial void OnMonitoringProgramIDChanging(global::System.Int32 value);
        partial void OnMonitoringProgramIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MonitoringProgramName
        {
            get
            {
                return _MonitoringProgramName;
            }
            set
            {
                OnMonitoringProgramNameChanging(value);
                ReportPropertyChanging("MonitoringProgramName");
                _MonitoringProgramName = StructuralObject.SetValidValue(value, false, "MonitoringProgramName");
                ReportPropertyChanged("MonitoringProgramName");
                OnMonitoringProgramNameChanged();
            }
        }
        private global::System.String _MonitoringProgramName;
        partial void OnMonitoringProgramNameChanging(global::System.String value);
        partial void OnMonitoringProgramNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MonitoringApproach
        {
            get
            {
                return _MonitoringApproach;
            }
            set
            {
                OnMonitoringApproachChanging(value);
                ReportPropertyChanging("MonitoringApproach");
                _MonitoringApproach = StructuralObject.SetValidValue(value, true, "MonitoringApproach");
                ReportPropertyChanged("MonitoringApproach");
                OnMonitoringApproachChanged();
            }
        }
        private global::System.String _MonitoringApproach;
        partial void OnMonitoringApproachChanging(global::System.String value);
        partial void OnMonitoringApproachChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MonitoringProgramUrl
        {
            get
            {
                return _MonitoringProgramUrl;
            }
            set
            {
                OnMonitoringProgramUrlChanging(value);
                ReportPropertyChanging("MonitoringProgramUrl");
                _MonitoringProgramUrl = StructuralObject.SetValidValue(value, true, "MonitoringProgramUrl");
                ReportPropertyChanged("MonitoringProgramUrl");
                OnMonitoringProgramUrlChanged();
            }
        }
        private global::System.String _MonitoringProgramUrl;
        partial void OnMonitoringProgramUrlChanging(global::System.String value);
        partial void OnMonitoringProgramUrlChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_MonitoringProgram_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_MonitoringProgram_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_MonitoringProgram_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_MonitoringProgram_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_MonitoringProgram_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_MonitoringProgramDocument_MonitoringProgram_MonitoringProgramID", "MonitoringProgramDocument")]
        public EntityCollection<MonitoringProgramDocument> MonitoringProgramDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MonitoringProgramDocument>("ProjectFirma.Web.Models.FK_MonitoringProgramDocument_MonitoringProgram_MonitoringProgramID", "MonitoringProgramDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MonitoringProgramDocument>("ProjectFirma.Web.Models.FK_MonitoringProgramDocument_MonitoringProgram_MonitoringProgramID", "MonitoringProgramDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_MonitoringProgramPartner_MonitoringProgram_MonitoringProgramID", "MonitoringProgramPartner")]
        public EntityCollection<MonitoringProgramPartner> MonitoringProgramPartner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MonitoringProgramPartner>("ProjectFirma.Web.Models.FK_MonitoringProgramPartner_MonitoringProgram_MonitoringProgramID", "MonitoringProgramPartner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MonitoringProgramPartner>("ProjectFirma.Web.Models.FK_MonitoringProgramPartner_MonitoringProgram_MonitoringProgramID", "MonitoringProgramPartner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureMonitoringProgram_MonitoringProgram_MonitoringProgramID", "PerformanceMeasureMonitoringProgram")]
        public EntityCollection<PerformanceMeasureMonitoringProgram> PerformanceMeasureMonitoringProgram
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureMonitoringProgram>("ProjectFirma.Web.Models.FK_PerformanceMeasureMonitoringProgram_MonitoringProgram_MonitoringProgramID", "PerformanceMeasureMonitoringProgram");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureMonitoringProgram>("ProjectFirma.Web.Models.FK_PerformanceMeasureMonitoringProgram_MonitoringProgram_MonitoringProgramID", "PerformanceMeasureMonitoringProgram", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="MonitoringProgramDocument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MonitoringProgramDocument : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MonitoringProgramDocument object.
        /// </summary>
        /// <param name="monitoringProgramDocumentID">Initial value of the MonitoringProgramDocumentID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="fileResourceID">Initial value of the FileResourceID property.</param>
        /// <param name="monitoringProgramID">Initial value of the MonitoringProgramID property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        /// <param name="uploadDate">Initial value of the UploadDate property.</param>
        public static MonitoringProgramDocument CreateMonitoringProgramDocument(global::System.Int32 monitoringProgramDocumentID, global::System.Int32 tenantID, global::System.Int32 fileResourceID, global::System.Int32 monitoringProgramID, global::System.String displayName, global::System.DateTime uploadDate)
        {
            MonitoringProgramDocument monitoringProgramDocument = new MonitoringProgramDocument();
            monitoringProgramDocument.MonitoringProgramDocumentID = monitoringProgramDocumentID;
            monitoringProgramDocument.TenantID = tenantID;
            monitoringProgramDocument.FileResourceID = fileResourceID;
            monitoringProgramDocument.MonitoringProgramID = monitoringProgramID;
            monitoringProgramDocument.DisplayName = displayName;
            monitoringProgramDocument.UploadDate = uploadDate;
            return monitoringProgramDocument;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonitoringProgramDocumentID
        {
            get
            {
                return _MonitoringProgramDocumentID;
            }
            set
            {
                if (_MonitoringProgramDocumentID != value)
                {
                    OnMonitoringProgramDocumentIDChanging(value);
                    ReportPropertyChanging("MonitoringProgramDocumentID");
                    _MonitoringProgramDocumentID = StructuralObject.SetValidValue(value, "MonitoringProgramDocumentID");
                    ReportPropertyChanged("MonitoringProgramDocumentID");
                    OnMonitoringProgramDocumentIDChanged();
                }
            }
        }
        private global::System.Int32 _MonitoringProgramDocumentID;
        partial void OnMonitoringProgramDocumentIDChanging(global::System.Int32 value);
        partial void OnMonitoringProgramDocumentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileResourceID
        {
            get
            {
                return _FileResourceID;
            }
            set
            {
                OnFileResourceIDChanging(value);
                ReportPropertyChanging("FileResourceID");
                _FileResourceID = StructuralObject.SetValidValue(value, "FileResourceID");
                ReportPropertyChanged("FileResourceID");
                OnFileResourceIDChanged();
            }
        }
        private global::System.Int32 _FileResourceID;
        partial void OnFileResourceIDChanging(global::System.Int32 value);
        partial void OnFileResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonitoringProgramID
        {
            get
            {
                return _MonitoringProgramID;
            }
            set
            {
                OnMonitoringProgramIDChanging(value);
                ReportPropertyChanging("MonitoringProgramID");
                _MonitoringProgramID = StructuralObject.SetValidValue(value, "MonitoringProgramID");
                ReportPropertyChanged("MonitoringProgramID");
                OnMonitoringProgramIDChanged();
            }
        }
        private global::System.Int32 _MonitoringProgramID;
        partial void OnMonitoringProgramIDChanging(global::System.Int32 value);
        partial void OnMonitoringProgramIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false, "DisplayName");
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime UploadDate
        {
            get
            {
                return _UploadDate;
            }
            set
            {
                OnUploadDateChanging(value);
                ReportPropertyChanging("UploadDate");
                _UploadDate = StructuralObject.SetValidValue(value, "UploadDate");
                ReportPropertyChanged("UploadDate");
                OnUploadDateChanged();
            }
        }
        private global::System.DateTime _UploadDate;
        partial void OnUploadDateChanging(global::System.DateTime value);
        partial void OnUploadDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_MonitoringProgramDocument_FileResource_FileResourceID", "FileResource")]
        public FileResource FileResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_MonitoringProgramDocument_FileResource_FileResourceID", "FileResource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_MonitoringProgramDocument_FileResource_FileResourceID", "FileResource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileResource> FileResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_MonitoringProgramDocument_FileResource_FileResourceID", "FileResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_MonitoringProgramDocument_FileResource_FileResourceID", "FileResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_MonitoringProgramDocument_MonitoringProgram_MonitoringProgramID", "MonitoringProgram")]
        public MonitoringProgram MonitoringProgram
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MonitoringProgram>("ProjectFirma.Web.Models.FK_MonitoringProgramDocument_MonitoringProgram_MonitoringProgramID", "MonitoringProgram").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MonitoringProgram>("ProjectFirma.Web.Models.FK_MonitoringProgramDocument_MonitoringProgram_MonitoringProgramID", "MonitoringProgram").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MonitoringProgram> MonitoringProgramReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MonitoringProgram>("ProjectFirma.Web.Models.FK_MonitoringProgramDocument_MonitoringProgram_MonitoringProgramID", "MonitoringProgram");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MonitoringProgram>("ProjectFirma.Web.Models.FK_MonitoringProgramDocument_MonitoringProgram_MonitoringProgramID", "MonitoringProgram", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_MonitoringProgramDocument_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_MonitoringProgramDocument_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_MonitoringProgramDocument_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_MonitoringProgramDocument_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_MonitoringProgramDocument_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="MonitoringProgramPartner")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MonitoringProgramPartner : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MonitoringProgramPartner object.
        /// </summary>
        /// <param name="monitoringProgramPartnerID">Initial value of the MonitoringProgramPartnerID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="monitoringProgramID">Initial value of the MonitoringProgramID property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        public static MonitoringProgramPartner CreateMonitoringProgramPartner(global::System.Int32 monitoringProgramPartnerID, global::System.Int32 tenantID, global::System.Int32 monitoringProgramID, global::System.Int32 organizationID)
        {
            MonitoringProgramPartner monitoringProgramPartner = new MonitoringProgramPartner();
            monitoringProgramPartner.MonitoringProgramPartnerID = monitoringProgramPartnerID;
            monitoringProgramPartner.TenantID = tenantID;
            monitoringProgramPartner.MonitoringProgramID = monitoringProgramID;
            monitoringProgramPartner.OrganizationID = organizationID;
            return monitoringProgramPartner;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonitoringProgramPartnerID
        {
            get
            {
                return _MonitoringProgramPartnerID;
            }
            set
            {
                if (_MonitoringProgramPartnerID != value)
                {
                    OnMonitoringProgramPartnerIDChanging(value);
                    ReportPropertyChanging("MonitoringProgramPartnerID");
                    _MonitoringProgramPartnerID = StructuralObject.SetValidValue(value, "MonitoringProgramPartnerID");
                    ReportPropertyChanged("MonitoringProgramPartnerID");
                    OnMonitoringProgramPartnerIDChanged();
                }
            }
        }
        private global::System.Int32 _MonitoringProgramPartnerID;
        partial void OnMonitoringProgramPartnerIDChanging(global::System.Int32 value);
        partial void OnMonitoringProgramPartnerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonitoringProgramID
        {
            get
            {
                return _MonitoringProgramID;
            }
            set
            {
                OnMonitoringProgramIDChanging(value);
                ReportPropertyChanging("MonitoringProgramID");
                _MonitoringProgramID = StructuralObject.SetValidValue(value, "MonitoringProgramID");
                ReportPropertyChanged("MonitoringProgramID");
                OnMonitoringProgramIDChanged();
            }
        }
        private global::System.Int32 _MonitoringProgramID;
        partial void OnMonitoringProgramIDChanging(global::System.Int32 value);
        partial void OnMonitoringProgramIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Int32 _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Int32 value);
        partial void OnOrganizationIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_MonitoringProgramPartner_MonitoringProgram_MonitoringProgramID", "MonitoringProgram")]
        public MonitoringProgram MonitoringProgram
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MonitoringProgram>("ProjectFirma.Web.Models.FK_MonitoringProgramPartner_MonitoringProgram_MonitoringProgramID", "MonitoringProgram").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MonitoringProgram>("ProjectFirma.Web.Models.FK_MonitoringProgramPartner_MonitoringProgram_MonitoringProgramID", "MonitoringProgram").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MonitoringProgram> MonitoringProgramReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MonitoringProgram>("ProjectFirma.Web.Models.FK_MonitoringProgramPartner_MonitoringProgram_MonitoringProgramID", "MonitoringProgram");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MonitoringProgram>("ProjectFirma.Web.Models.FK_MonitoringProgramPartner_MonitoringProgram_MonitoringProgramID", "MonitoringProgram", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_MonitoringProgramPartner_Organization_OrganizationID", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("ProjectFirma.Web.Models.FK_MonitoringProgramPartner_Organization_OrganizationID", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("ProjectFirma.Web.Models.FK_MonitoringProgramPartner_Organization_OrganizationID", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("ProjectFirma.Web.Models.FK_MonitoringProgramPartner_Organization_OrganizationID", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("ProjectFirma.Web.Models.FK_MonitoringProgramPartner_Organization_OrganizationID", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_MonitoringProgramPartner_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_MonitoringProgramPartner_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_MonitoringProgramPartner_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_MonitoringProgramPartner_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_MonitoringProgramPartner_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="Notification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Notification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Notification object.
        /// </summary>
        /// <param name="notificationID">Initial value of the NotificationID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="notificationTypeID">Initial value of the NotificationTypeID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="notificationDate">Initial value of the NotificationDate property.</param>
        public static Notification CreateNotification(global::System.Int32 notificationID, global::System.Int32 tenantID, global::System.Int32 notificationTypeID, global::System.Int32 personID, global::System.DateTime notificationDate)
        {
            Notification notification = new Notification();
            notification.NotificationID = notificationID;
            notification.TenantID = tenantID;
            notification.NotificationTypeID = notificationTypeID;
            notification.PersonID = personID;
            notification.NotificationDate = notificationDate;
            return notification;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NotificationID
        {
            get
            {
                return _NotificationID;
            }
            set
            {
                if (_NotificationID != value)
                {
                    OnNotificationIDChanging(value);
                    ReportPropertyChanging("NotificationID");
                    _NotificationID = StructuralObject.SetValidValue(value, "NotificationID");
                    ReportPropertyChanged("NotificationID");
                    OnNotificationIDChanged();
                }
            }
        }
        private global::System.Int32 _NotificationID;
        partial void OnNotificationIDChanging(global::System.Int32 value);
        partial void OnNotificationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NotificationTypeID
        {
            get
            {
                return _NotificationTypeID;
            }
            set
            {
                OnNotificationTypeIDChanging(value);
                ReportPropertyChanging("NotificationTypeID");
                _NotificationTypeID = StructuralObject.SetValidValue(value, "NotificationTypeID");
                ReportPropertyChanged("NotificationTypeID");
                OnNotificationTypeIDChanged();
            }
        }
        private global::System.Int32 _NotificationTypeID;
        partial void OnNotificationTypeIDChanging(global::System.Int32 value);
        partial void OnNotificationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value, "PersonID");
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime NotificationDate
        {
            get
            {
                return _NotificationDate;
            }
            set
            {
                OnNotificationDateChanging(value);
                ReportPropertyChanging("NotificationDate");
                _NotificationDate = StructuralObject.SetValidValue(value, "NotificationDate");
                ReportPropertyChanged("NotificationDate");
                OnNotificationDateChanged();
            }
        }
        private global::System.DateTime _NotificationDate;
        partial void OnNotificationDateChanging(global::System.DateTime value);
        partial void OnNotificationDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Notification_NotificationType_NotificationTypeID", "NotificationType")]
        public NotificationType NotificationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotificationType>("ProjectFirma.Web.Models.FK_Notification_NotificationType_NotificationTypeID", "NotificationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotificationType>("ProjectFirma.Web.Models.FK_Notification_NotificationType_NotificationTypeID", "NotificationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<NotificationType> NotificationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<NotificationType>("ProjectFirma.Web.Models.FK_Notification_NotificationType_NotificationTypeID", "NotificationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<NotificationType>("ProjectFirma.Web.Models.FK_Notification_NotificationType_NotificationTypeID", "NotificationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Notification_Person_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_Notification_Person_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_Notification_Person_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_Notification_Person_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_Notification_Person_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Notification_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Notification_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Notification_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Notification_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Notification_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_NotificationProject_Notification_NotificationID", "NotificationProject")]
        public EntityCollection<NotificationProject> NotificationProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotificationProject>("ProjectFirma.Web.Models.FK_NotificationProject_Notification_NotificationID", "NotificationProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotificationProject>("ProjectFirma.Web.Models.FK_NotificationProject_Notification_NotificationID", "NotificationProject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="NotificationProject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NotificationProject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NotificationProject object.
        /// </summary>
        /// <param name="notificationProjectID">Initial value of the NotificationProjectID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="notificationID">Initial value of the NotificationID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        public static NotificationProject CreateNotificationProject(global::System.Int32 notificationProjectID, global::System.Int32 tenantID, global::System.Int32 notificationID, global::System.Int32 projectID)
        {
            NotificationProject notificationProject = new NotificationProject();
            notificationProject.NotificationProjectID = notificationProjectID;
            notificationProject.TenantID = tenantID;
            notificationProject.NotificationID = notificationID;
            notificationProject.ProjectID = projectID;
            return notificationProject;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NotificationProjectID
        {
            get
            {
                return _NotificationProjectID;
            }
            set
            {
                if (_NotificationProjectID != value)
                {
                    OnNotificationProjectIDChanging(value);
                    ReportPropertyChanging("NotificationProjectID");
                    _NotificationProjectID = StructuralObject.SetValidValue(value, "NotificationProjectID");
                    ReportPropertyChanged("NotificationProjectID");
                    OnNotificationProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _NotificationProjectID;
        partial void OnNotificationProjectIDChanging(global::System.Int32 value);
        partial void OnNotificationProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NotificationID
        {
            get
            {
                return _NotificationID;
            }
            set
            {
                OnNotificationIDChanging(value);
                ReportPropertyChanging("NotificationID");
                _NotificationID = StructuralObject.SetValidValue(value, "NotificationID");
                ReportPropertyChanged("NotificationID");
                OnNotificationIDChanged();
            }
        }
        private global::System.Int32 _NotificationID;
        partial void OnNotificationIDChanging(global::System.Int32 value);
        partial void OnNotificationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_NotificationProject_Notification_NotificationID", "Notification")]
        public Notification Notification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notification>("ProjectFirma.Web.Models.FK_NotificationProject_Notification_NotificationID", "Notification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notification>("ProjectFirma.Web.Models.FK_NotificationProject_Notification_NotificationID", "Notification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Notification> NotificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Notification>("ProjectFirma.Web.Models.FK_NotificationProject_Notification_NotificationID", "Notification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Notification>("ProjectFirma.Web.Models.FK_NotificationProject_Notification_NotificationID", "Notification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_NotificationProject_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_NotificationProject_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_NotificationProject_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_NotificationProject_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_NotificationProject_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_NotificationProject_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_NotificationProject_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_NotificationProject_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_NotificationProject_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_NotificationProject_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="NotificationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class NotificationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new NotificationType object.
        /// </summary>
        /// <param name="notificationTypeID">Initial value of the NotificationTypeID property.</param>
        /// <param name="notificationTypeName">Initial value of the NotificationTypeName property.</param>
        /// <param name="notificationTypeDisplayName">Initial value of the NotificationTypeDisplayName property.</param>
        public static NotificationType CreateNotificationType(global::System.Int32 notificationTypeID, global::System.String notificationTypeName, global::System.String notificationTypeDisplayName)
        {
            NotificationType notificationType = new NotificationType();
            notificationType.NotificationTypeID = notificationTypeID;
            notificationType.NotificationTypeName = notificationTypeName;
            notificationType.NotificationTypeDisplayName = notificationTypeDisplayName;
            return notificationType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NotificationTypeID
        {
            get
            {
                return _NotificationTypeID;
            }
            set
            {
                if (_NotificationTypeID != value)
                {
                    OnNotificationTypeIDChanging(value);
                    ReportPropertyChanging("NotificationTypeID");
                    _NotificationTypeID = StructuralObject.SetValidValue(value, "NotificationTypeID");
                    ReportPropertyChanged("NotificationTypeID");
                    OnNotificationTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _NotificationTypeID;
        partial void OnNotificationTypeIDChanging(global::System.Int32 value);
        partial void OnNotificationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NotificationTypeName
        {
            get
            {
                return _NotificationTypeName;
            }
            set
            {
                OnNotificationTypeNameChanging(value);
                ReportPropertyChanging("NotificationTypeName");
                _NotificationTypeName = StructuralObject.SetValidValue(value, false, "NotificationTypeName");
                ReportPropertyChanged("NotificationTypeName");
                OnNotificationTypeNameChanged();
            }
        }
        private global::System.String _NotificationTypeName;
        partial void OnNotificationTypeNameChanging(global::System.String value);
        partial void OnNotificationTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NotificationTypeDisplayName
        {
            get
            {
                return _NotificationTypeDisplayName;
            }
            set
            {
                OnNotificationTypeDisplayNameChanging(value);
                ReportPropertyChanging("NotificationTypeDisplayName");
                _NotificationTypeDisplayName = StructuralObject.SetValidValue(value, false, "NotificationTypeDisplayName");
                ReportPropertyChanged("NotificationTypeDisplayName");
                OnNotificationTypeDisplayNameChanged();
            }
        }
        private global::System.String _NotificationTypeDisplayName;
        partial void OnNotificationTypeDisplayNameChanging(global::System.String value);
        partial void OnNotificationTypeDisplayNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Notification_NotificationType_NotificationTypeID", "Notification")]
        public EntityCollection<Notification> Notification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Notification>("ProjectFirma.Web.Models.FK_Notification_NotificationType_NotificationTypeID", "Notification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Notification>("ProjectFirma.Web.Models.FK_Notification_NotificationType_NotificationTypeID", "Notification", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="Organization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Organization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Organization object.
        /// </summary>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="organizationName">Initial value of the OrganizationName property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="organizationTypeID">Initial value of the OrganizationTypeID property.</param>
        public static Organization CreateOrganization(global::System.Int32 organizationID, global::System.Int32 tenantID, global::System.String organizationName, global::System.Boolean isActive, global::System.Int32 organizationTypeID)
        {
            Organization organization = new Organization();
            organization.OrganizationID = organizationID;
            organization.TenantID = tenantID;
            organization.OrganizationName = organizationName;
            organization.IsActive = isActive;
            organization.OrganizationTypeID = organizationTypeID;
            return organization;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                if (_OrganizationID != value)
                {
                    OnOrganizationIDChanging(value);
                    ReportPropertyChanging("OrganizationID");
                    _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                    ReportPropertyChanged("OrganizationID");
                    OnOrganizationIDChanged();
                }
            }
        }
        private global::System.Int32 _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Int32 value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> OrganizationGuid
        {
            get
            {
                return _OrganizationGuid;
            }
            set
            {
                OnOrganizationGuidChanging(value);
                ReportPropertyChanging("OrganizationGuid");
                _OrganizationGuid = StructuralObject.SetValidValue(value, "OrganizationGuid");
                ReportPropertyChanged("OrganizationGuid");
                OnOrganizationGuidChanged();
            }
        }
        private Nullable<global::System.Guid> _OrganizationGuid;
        partial void OnOrganizationGuidChanging(Nullable<global::System.Guid> value);
        partial void OnOrganizationGuidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrganizationName
        {
            get
            {
                return _OrganizationName;
            }
            set
            {
                OnOrganizationNameChanging(value);
                ReportPropertyChanging("OrganizationName");
                _OrganizationName = StructuralObject.SetValidValue(value, false, "OrganizationName");
                ReportPropertyChanged("OrganizationName");
                OnOrganizationNameChanged();
            }
        }
        private global::System.String _OrganizationName;
        partial void OnOrganizationNameChanging(global::System.String value);
        partial void OnOrganizationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrganizationShortName
        {
            get
            {
                return _OrganizationShortName;
            }
            set
            {
                OnOrganizationShortNameChanging(value);
                ReportPropertyChanging("OrganizationShortName");
                _OrganizationShortName = StructuralObject.SetValidValue(value, true, "OrganizationShortName");
                ReportPropertyChanged("OrganizationShortName");
                OnOrganizationShortNameChanged();
            }
        }
        private global::System.String _OrganizationShortName;
        partial void OnOrganizationShortNameChanging(global::System.String value);
        partial void OnOrganizationShortNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrimaryContactPersonID
        {
            get
            {
                return _PrimaryContactPersonID;
            }
            set
            {
                OnPrimaryContactPersonIDChanging(value);
                ReportPropertyChanging("PrimaryContactPersonID");
                _PrimaryContactPersonID = StructuralObject.SetValidValue(value, "PrimaryContactPersonID");
                ReportPropertyChanged("PrimaryContactPersonID");
                OnPrimaryContactPersonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PrimaryContactPersonID;
        partial void OnPrimaryContactPersonIDChanging(Nullable<global::System.Int32> value);
        partial void OnPrimaryContactPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrganizationUrl
        {
            get
            {
                return _OrganizationUrl;
            }
            set
            {
                OnOrganizationUrlChanging(value);
                ReportPropertyChanging("OrganizationUrl");
                _OrganizationUrl = StructuralObject.SetValidValue(value, true, "OrganizationUrl");
                ReportPropertyChanged("OrganizationUrl");
                OnOrganizationUrlChanged();
            }
        }
        private global::System.String _OrganizationUrl;
        partial void OnOrganizationUrlChanging(global::System.String value);
        partial void OnOrganizationUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LogoFileResourceID
        {
            get
            {
                return _LogoFileResourceID;
            }
            set
            {
                OnLogoFileResourceIDChanging(value);
                ReportPropertyChanging("LogoFileResourceID");
                _LogoFileResourceID = StructuralObject.SetValidValue(value, "LogoFileResourceID");
                ReportPropertyChanged("LogoFileResourceID");
                OnLogoFileResourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _LogoFileResourceID;
        partial void OnLogoFileResourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnLogoFileResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganizationTypeID
        {
            get
            {
                return _OrganizationTypeID;
            }
            set
            {
                OnOrganizationTypeIDChanging(value);
                ReportPropertyChanging("OrganizationTypeID");
                _OrganizationTypeID = StructuralObject.SetValidValue(value, "OrganizationTypeID");
                ReportPropertyChanged("OrganizationTypeID");
                OnOrganizationTypeIDChanged();
            }
        }
        private global::System.Int32 _OrganizationTypeID;
        partial void OnOrganizationTypeIDChanging(global::System.Int32 value);
        partial void OnOrganizationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeometry OrganizationBoundary
        {
            get
            {
                return _OrganizationBoundary;
            }
            set
            {
                OnOrganizationBoundaryChanging(value);
                ReportPropertyChanging("OrganizationBoundary");
                _OrganizationBoundary = StructuralObject.SetValidValue(value, true, "OrganizationBoundary");
                ReportPropertyChanged("OrganizationBoundary");
                OnOrganizationBoundaryChanged();
            }
        }
        private global::System.Data.Spatial.DbGeometry _OrganizationBoundary;
        partial void OnOrganizationBoundaryChanging(global::System.Data.Spatial.DbGeometry value);
        partial void OnOrganizationBoundaryChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Organization_FileResource_LogoFileResourceID_FileResourceID", "FileResource")]
        public FileResource FileResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_Organization_FileResource_LogoFileResourceID_FileResourceID", "FileResource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_Organization_FileResource_LogoFileResourceID_FileResourceID", "FileResource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileResource> FileResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_Organization_FileResource_LogoFileResourceID_FileResourceID", "FileResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_Organization_FileResource_LogoFileResourceID_FileResourceID", "FileResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FundingSource_Organization_OrganizationID", "FundingSource")]
        public EntityCollection<FundingSource> FundingSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundingSource>("ProjectFirma.Web.Models.FK_FundingSource_Organization_OrganizationID", "FundingSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundingSource>("ProjectFirma.Web.Models.FK_FundingSource_Organization_OrganizationID", "FundingSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_MonitoringProgramPartner_Organization_OrganizationID", "MonitoringProgramPartner")]
        public EntityCollection<MonitoringProgramPartner> MonitoringProgramPartner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MonitoringProgramPartner>("ProjectFirma.Web.Models.FK_MonitoringProgramPartner_Organization_OrganizationID", "MonitoringProgramPartner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MonitoringProgramPartner>("ProjectFirma.Web.Models.FK_MonitoringProgramPartner_Organization_OrganizationID", "MonitoringProgramPartner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Organization_OrganizationType_OrganizationTypeID", "OrganizationType")]
        public OrganizationType OrganizationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("ProjectFirma.Web.Models.FK_Organization_OrganizationType_OrganizationTypeID", "OrganizationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("ProjectFirma.Web.Models.FK_Organization_OrganizationType_OrganizationTypeID", "OrganizationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrganizationType> OrganizationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("ProjectFirma.Web.Models.FK_Organization_OrganizationType_OrganizationTypeID", "OrganizationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrganizationType>("ProjectFirma.Web.Models.FK_Organization_OrganizationType_OrganizationTypeID", "OrganizationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Organization_Person_PrimaryContactPersonID_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_Organization_Person_PrimaryContactPersonID_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_Organization_Person_PrimaryContactPersonID_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_Organization_Person_PrimaryContactPersonID_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_Organization_Person_PrimaryContactPersonID_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Organization_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Organization_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Organization_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Organization_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Organization_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_OrganizationBoundaryStaging_Organization_OrganizationID", "OrganizationBoundaryStaging")]
        public EntityCollection<OrganizationBoundaryStaging> OrganizationBoundaryStaging
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrganizationBoundaryStaging>("ProjectFirma.Web.Models.FK_OrganizationBoundaryStaging_Organization_OrganizationID", "OrganizationBoundaryStaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrganizationBoundaryStaging>("ProjectFirma.Web.Models.FK_OrganizationBoundaryStaging_Organization_OrganizationID", "OrganizationBoundaryStaging", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Person_Organization_OrganizationID", "Person")]
        public EntityCollection<Person> Person1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("ProjectFirma.Web.Models.FK_Person_Organization_OrganizationID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("ProjectFirma.Web.Models.FK_Person_Organization_OrganizationID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PersonStewardOrganization_Organization_OrganizationID", "PersonStewardOrganization")]
        public EntityCollection<PersonStewardOrganization> PersonStewardOrganization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonStewardOrganization>("ProjectFirma.Web.Models.FK_PersonStewardOrganization_Organization_OrganizationID", "PersonStewardOrganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonStewardOrganization>("ProjectFirma.Web.Models.FK_PersonStewardOrganization_Organization_OrganizationID", "PersonStewardOrganization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganization_Organization_OrganizationID", "ProjectOrganization")]
        public EntityCollection<ProjectOrganization> ProjectOrganization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectOrganization>("ProjectFirma.Web.Models.FK_ProjectOrganization_Organization_OrganizationID", "ProjectOrganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectOrganization>("ProjectFirma.Web.Models.FK_ProjectOrganization_Organization_OrganizationID", "ProjectOrganization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganizationUpdate_Organization_OrganizationID", "ProjectOrganizationUpdate")]
        public EntityCollection<ProjectOrganizationUpdate> ProjectOrganizationUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectOrganizationUpdate>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_Organization_OrganizationID", "ProjectOrganizationUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectOrganizationUpdate>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_Organization_OrganizationID", "ProjectOrganizationUpdate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="OrganizationBoundaryStaging")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrganizationBoundaryStaging : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrganizationBoundaryStaging object.
        /// </summary>
        /// <param name="organizationBoundaryStagingID">Initial value of the OrganizationBoundaryStagingID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        /// <param name="featureClassName">Initial value of the FeatureClassName property.</param>
        /// <param name="geoJson">Initial value of the GeoJson property.</param>
        public static OrganizationBoundaryStaging CreateOrganizationBoundaryStaging(global::System.Int32 organizationBoundaryStagingID, global::System.Int32 tenantID, global::System.Int32 organizationID, global::System.String featureClassName, global::System.String geoJson)
        {
            OrganizationBoundaryStaging organizationBoundaryStaging = new OrganizationBoundaryStaging();
            organizationBoundaryStaging.OrganizationBoundaryStagingID = organizationBoundaryStagingID;
            organizationBoundaryStaging.TenantID = tenantID;
            organizationBoundaryStaging.OrganizationID = organizationID;
            organizationBoundaryStaging.FeatureClassName = featureClassName;
            organizationBoundaryStaging.GeoJson = geoJson;
            return organizationBoundaryStaging;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganizationBoundaryStagingID
        {
            get
            {
                return _OrganizationBoundaryStagingID;
            }
            set
            {
                if (_OrganizationBoundaryStagingID != value)
                {
                    OnOrganizationBoundaryStagingIDChanging(value);
                    ReportPropertyChanging("OrganizationBoundaryStagingID");
                    _OrganizationBoundaryStagingID = StructuralObject.SetValidValue(value, "OrganizationBoundaryStagingID");
                    ReportPropertyChanged("OrganizationBoundaryStagingID");
                    OnOrganizationBoundaryStagingIDChanged();
                }
            }
        }
        private global::System.Int32 _OrganizationBoundaryStagingID;
        partial void OnOrganizationBoundaryStagingIDChanging(global::System.Int32 value);
        partial void OnOrganizationBoundaryStagingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Int32 _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Int32 value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FeatureClassName
        {
            get
            {
                return _FeatureClassName;
            }
            set
            {
                OnFeatureClassNameChanging(value);
                ReportPropertyChanging("FeatureClassName");
                _FeatureClassName = StructuralObject.SetValidValue(value, false, "FeatureClassName");
                ReportPropertyChanged("FeatureClassName");
                OnFeatureClassNameChanged();
            }
        }
        private global::System.String _FeatureClassName;
        partial void OnFeatureClassNameChanging(global::System.String value);
        partial void OnFeatureClassNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GeoJson
        {
            get
            {
                return _GeoJson;
            }
            set
            {
                OnGeoJsonChanging(value);
                ReportPropertyChanging("GeoJson");
                _GeoJson = StructuralObject.SetValidValue(value, false, "GeoJson");
                ReportPropertyChanged("GeoJson");
                OnGeoJsonChanged();
            }
        }
        private global::System.String _GeoJson;
        partial void OnGeoJsonChanging(global::System.String value);
        partial void OnGeoJsonChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_OrganizationBoundaryStaging_Organization_OrganizationID", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("ProjectFirma.Web.Models.FK_OrganizationBoundaryStaging_Organization_OrganizationID", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("ProjectFirma.Web.Models.FK_OrganizationBoundaryStaging_Organization_OrganizationID", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("ProjectFirma.Web.Models.FK_OrganizationBoundaryStaging_Organization_OrganizationID", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("ProjectFirma.Web.Models.FK_OrganizationBoundaryStaging_Organization_OrganizationID", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_OrganizationBoundaryStaging_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_OrganizationBoundaryStaging_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_OrganizationBoundaryStaging_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_OrganizationBoundaryStaging_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_OrganizationBoundaryStaging_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="OrganizationType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrganizationType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrganizationType object.
        /// </summary>
        /// <param name="organizationTypeID">Initial value of the OrganizationTypeID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="organizationTypeName">Initial value of the OrganizationTypeName property.</param>
        /// <param name="organizationTypeAbbreviation">Initial value of the OrganizationTypeAbbreviation property.</param>
        /// <param name="legendColor">Initial value of the LegendColor property.</param>
        /// <param name="showOnProjectMaps">Initial value of the ShowOnProjectMaps property.</param>
        /// <param name="isDefaultOrganizationType">Initial value of the IsDefaultOrganizationType property.</param>
        /// <param name="isFundingType">Initial value of the IsFundingType property.</param>
        public static OrganizationType CreateOrganizationType(global::System.Int32 organizationTypeID, global::System.Int32 tenantID, global::System.String organizationTypeName, global::System.String organizationTypeAbbreviation, global::System.String legendColor, global::System.Boolean showOnProjectMaps, global::System.Boolean isDefaultOrganizationType, global::System.Boolean isFundingType)
        {
            OrganizationType organizationType = new OrganizationType();
            organizationType.OrganizationTypeID = organizationTypeID;
            organizationType.TenantID = tenantID;
            organizationType.OrganizationTypeName = organizationTypeName;
            organizationType.OrganizationTypeAbbreviation = organizationTypeAbbreviation;
            organizationType.LegendColor = legendColor;
            organizationType.ShowOnProjectMaps = showOnProjectMaps;
            organizationType.IsDefaultOrganizationType = isDefaultOrganizationType;
            organizationType.IsFundingType = isFundingType;
            return organizationType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganizationTypeID
        {
            get
            {
                return _OrganizationTypeID;
            }
            set
            {
                if (_OrganizationTypeID != value)
                {
                    OnOrganizationTypeIDChanging(value);
                    ReportPropertyChanging("OrganizationTypeID");
                    _OrganizationTypeID = StructuralObject.SetValidValue(value, "OrganizationTypeID");
                    ReportPropertyChanged("OrganizationTypeID");
                    OnOrganizationTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _OrganizationTypeID;
        partial void OnOrganizationTypeIDChanging(global::System.Int32 value);
        partial void OnOrganizationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrganizationTypeName
        {
            get
            {
                return _OrganizationTypeName;
            }
            set
            {
                OnOrganizationTypeNameChanging(value);
                ReportPropertyChanging("OrganizationTypeName");
                _OrganizationTypeName = StructuralObject.SetValidValue(value, false, "OrganizationTypeName");
                ReportPropertyChanged("OrganizationTypeName");
                OnOrganizationTypeNameChanged();
            }
        }
        private global::System.String _OrganizationTypeName;
        partial void OnOrganizationTypeNameChanging(global::System.String value);
        partial void OnOrganizationTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrganizationTypeAbbreviation
        {
            get
            {
                return _OrganizationTypeAbbreviation;
            }
            set
            {
                OnOrganizationTypeAbbreviationChanging(value);
                ReportPropertyChanging("OrganizationTypeAbbreviation");
                _OrganizationTypeAbbreviation = StructuralObject.SetValidValue(value, false, "OrganizationTypeAbbreviation");
                ReportPropertyChanged("OrganizationTypeAbbreviation");
                OnOrganizationTypeAbbreviationChanged();
            }
        }
        private global::System.String _OrganizationTypeAbbreviation;
        partial void OnOrganizationTypeAbbreviationChanging(global::System.String value);
        partial void OnOrganizationTypeAbbreviationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LegendColor
        {
            get
            {
                return _LegendColor;
            }
            set
            {
                OnLegendColorChanging(value);
                ReportPropertyChanging("LegendColor");
                _LegendColor = StructuralObject.SetValidValue(value, false, "LegendColor");
                ReportPropertyChanged("LegendColor");
                OnLegendColorChanged();
            }
        }
        private global::System.String _LegendColor;
        partial void OnLegendColorChanging(global::System.String value);
        partial void OnLegendColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowOnProjectMaps
        {
            get
            {
                return _ShowOnProjectMaps;
            }
            set
            {
                OnShowOnProjectMapsChanging(value);
                ReportPropertyChanging("ShowOnProjectMaps");
                _ShowOnProjectMaps = StructuralObject.SetValidValue(value, "ShowOnProjectMaps");
                ReportPropertyChanged("ShowOnProjectMaps");
                OnShowOnProjectMapsChanged();
            }
        }
        private global::System.Boolean _ShowOnProjectMaps;
        partial void OnShowOnProjectMapsChanging(global::System.Boolean value);
        partial void OnShowOnProjectMapsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsDefaultOrganizationType
        {
            get
            {
                return _IsDefaultOrganizationType;
            }
            set
            {
                OnIsDefaultOrganizationTypeChanging(value);
                ReportPropertyChanging("IsDefaultOrganizationType");
                _IsDefaultOrganizationType = StructuralObject.SetValidValue(value, "IsDefaultOrganizationType");
                ReportPropertyChanged("IsDefaultOrganizationType");
                OnIsDefaultOrganizationTypeChanged();
            }
        }
        private global::System.Boolean _IsDefaultOrganizationType;
        partial void OnIsDefaultOrganizationTypeChanging(global::System.Boolean value);
        partial void OnIsDefaultOrganizationTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFundingType
        {
            get
            {
                return _IsFundingType;
            }
            set
            {
                OnIsFundingTypeChanging(value);
                ReportPropertyChanging("IsFundingType");
                _IsFundingType = StructuralObject.SetValidValue(value, "IsFundingType");
                ReportPropertyChanged("IsFundingType");
                OnIsFundingTypeChanged();
            }
        }
        private global::System.Boolean _IsFundingType;
        partial void OnIsFundingTypeChanging(global::System.Boolean value);
        partial void OnIsFundingTypeChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Organization_OrganizationType_OrganizationTypeID", "Organization")]
        public EntityCollection<Organization> Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Organization>("ProjectFirma.Web.Models.FK_Organization_OrganizationType_OrganizationTypeID", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Organization>("ProjectFirma.Web.Models.FK_Organization_OrganizationType_OrganizationTypeID", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_OrganizationType_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_OrganizationType_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_OrganizationType_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_OrganizationType_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_OrganizationType_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_OrganizationTypeRelationshipType_OrganizationType_OrganizationTypeID", "OrganizationTypeRelationshipType")]
        public EntityCollection<OrganizationTypeRelationshipType> OrganizationTypeRelationshipType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrganizationTypeRelationshipType>("ProjectFirma.Web.Models.FK_OrganizationTypeRelationshipType_OrganizationType_OrganizationTypeID", "OrganizationTypeRelationshipType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrganizationTypeRelationshipType>("ProjectFirma.Web.Models.FK_OrganizationTypeRelationshipType_OrganizationType_OrganizationTypeID", "OrganizationTypeRelationshipType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotOrganizationTypeExpenditure_OrganizationType_OrganizationTypeID", "SnapshotOrganizationTypeExpenditure")]
        public EntityCollection<SnapshotOrganizationTypeExpenditure> SnapshotOrganizationTypeExpenditure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SnapshotOrganizationTypeExpenditure>("ProjectFirma.Web.Models.FK_SnapshotOrganizationTypeExpenditure_OrganizationType_OrganizationTypeID", "SnapshotOrganizationTypeExpenditure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SnapshotOrganizationTypeExpenditure>("ProjectFirma.Web.Models.FK_SnapshotOrganizationTypeExpenditure_OrganizationType_OrganizationTypeID", "SnapshotOrganizationTypeExpenditure", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="OrganizationTypeRelationshipType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrganizationTypeRelationshipType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrganizationTypeRelationshipType object.
        /// </summary>
        /// <param name="organizationTypeRelationshipTypeID">Initial value of the OrganizationTypeRelationshipTypeID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="organizationTypeID">Initial value of the OrganizationTypeID property.</param>
        /// <param name="relationshipTypeID">Initial value of the RelationshipTypeID property.</param>
        public static OrganizationTypeRelationshipType CreateOrganizationTypeRelationshipType(global::System.Int32 organizationTypeRelationshipTypeID, global::System.Int32 tenantID, global::System.Int32 organizationTypeID, global::System.Int32 relationshipTypeID)
        {
            OrganizationTypeRelationshipType organizationTypeRelationshipType = new OrganizationTypeRelationshipType();
            organizationTypeRelationshipType.OrganizationTypeRelationshipTypeID = organizationTypeRelationshipTypeID;
            organizationTypeRelationshipType.TenantID = tenantID;
            organizationTypeRelationshipType.OrganizationTypeID = organizationTypeID;
            organizationTypeRelationshipType.RelationshipTypeID = relationshipTypeID;
            return organizationTypeRelationshipType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganizationTypeRelationshipTypeID
        {
            get
            {
                return _OrganizationTypeRelationshipTypeID;
            }
            set
            {
                if (_OrganizationTypeRelationshipTypeID != value)
                {
                    OnOrganizationTypeRelationshipTypeIDChanging(value);
                    ReportPropertyChanging("OrganizationTypeRelationshipTypeID");
                    _OrganizationTypeRelationshipTypeID = StructuralObject.SetValidValue(value, "OrganizationTypeRelationshipTypeID");
                    ReportPropertyChanged("OrganizationTypeRelationshipTypeID");
                    OnOrganizationTypeRelationshipTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _OrganizationTypeRelationshipTypeID;
        partial void OnOrganizationTypeRelationshipTypeIDChanging(global::System.Int32 value);
        partial void OnOrganizationTypeRelationshipTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganizationTypeID
        {
            get
            {
                return _OrganizationTypeID;
            }
            set
            {
                OnOrganizationTypeIDChanging(value);
                ReportPropertyChanging("OrganizationTypeID");
                _OrganizationTypeID = StructuralObject.SetValidValue(value, "OrganizationTypeID");
                ReportPropertyChanged("OrganizationTypeID");
                OnOrganizationTypeIDChanged();
            }
        }
        private global::System.Int32 _OrganizationTypeID;
        partial void OnOrganizationTypeIDChanging(global::System.Int32 value);
        partial void OnOrganizationTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelationshipTypeID
        {
            get
            {
                return _RelationshipTypeID;
            }
            set
            {
                OnRelationshipTypeIDChanging(value);
                ReportPropertyChanging("RelationshipTypeID");
                _RelationshipTypeID = StructuralObject.SetValidValue(value, "RelationshipTypeID");
                ReportPropertyChanged("RelationshipTypeID");
                OnRelationshipTypeIDChanged();
            }
        }
        private global::System.Int32 _RelationshipTypeID;
        partial void OnRelationshipTypeIDChanging(global::System.Int32 value);
        partial void OnRelationshipTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_OrganizationTypeRelationshipType_OrganizationType_OrganizationTypeID", "OrganizationType")]
        public OrganizationType OrganizationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("ProjectFirma.Web.Models.FK_OrganizationTypeRelationshipType_OrganizationType_OrganizationTypeID", "OrganizationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("ProjectFirma.Web.Models.FK_OrganizationTypeRelationshipType_OrganizationType_OrganizationTypeID", "OrganizationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrganizationType> OrganizationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("ProjectFirma.Web.Models.FK_OrganizationTypeRelationshipType_OrganizationType_OrganizationTypeID", "OrganizationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrganizationType>("ProjectFirma.Web.Models.FK_OrganizationTypeRelationshipType_OrganizationType_OrganizationTypeID", "OrganizationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_OrganizationTypeRelationshipType_RelationshipType_RelationshipTypeID", "RelationshipType")]
        public RelationshipType RelationshipType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationshipType>("ProjectFirma.Web.Models.FK_OrganizationTypeRelationshipType_RelationshipType_RelationshipTypeID", "RelationshipType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationshipType>("ProjectFirma.Web.Models.FK_OrganizationTypeRelationshipType_RelationshipType_RelationshipTypeID", "RelationshipType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RelationshipType> RelationshipTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationshipType>("ProjectFirma.Web.Models.FK_OrganizationTypeRelationshipType_RelationshipType_RelationshipTypeID", "RelationshipType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RelationshipType>("ProjectFirma.Web.Models.FK_OrganizationTypeRelationshipType_RelationshipType_RelationshipTypeID", "RelationshipType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_OrganizationTypeRelationshipType_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_OrganizationTypeRelationshipType_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_OrganizationTypeRelationshipType_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_OrganizationTypeRelationshipType_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_OrganizationTypeRelationshipType_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="PerformanceMeasure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PerformanceMeasure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PerformanceMeasure object.
        /// </summary>
        /// <param name="performanceMeasureID">Initial value of the PerformanceMeasureID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="performanceMeasureDisplayName">Initial value of the PerformanceMeasureDisplayName property.</param>
        /// <param name="measurementUnitTypeID">Initial value of the MeasurementUnitTypeID property.</param>
        /// <param name="performanceMeasureTypeID">Initial value of the PerformanceMeasureTypeID property.</param>
        /// <param name="swapChartAxes">Initial value of the SwapChartAxes property.</param>
        /// <param name="canCalculateTotal">Initial value of the CanCalculateTotal property.</param>
        /// <param name="isAggregatable">Initial value of the IsAggregatable property.</param>
        /// <param name="performanceMeasureDataSourceTypeID">Initial value of the PerformanceMeasureDataSourceTypeID property.</param>
        public static PerformanceMeasure CreatePerformanceMeasure(global::System.Int32 performanceMeasureID, global::System.Int32 tenantID, global::System.String performanceMeasureDisplayName, global::System.Int32 measurementUnitTypeID, global::System.Int32 performanceMeasureTypeID, global::System.Boolean swapChartAxes, global::System.Boolean canCalculateTotal, global::System.Boolean isAggregatable, global::System.Int32 performanceMeasureDataSourceTypeID)
        {
            PerformanceMeasure performanceMeasure = new PerformanceMeasure();
            performanceMeasure.PerformanceMeasureID = performanceMeasureID;
            performanceMeasure.TenantID = tenantID;
            performanceMeasure.PerformanceMeasureDisplayName = performanceMeasureDisplayName;
            performanceMeasure.MeasurementUnitTypeID = measurementUnitTypeID;
            performanceMeasure.PerformanceMeasureTypeID = performanceMeasureTypeID;
            performanceMeasure.SwapChartAxes = swapChartAxes;
            performanceMeasure.CanCalculateTotal = canCalculateTotal;
            performanceMeasure.IsAggregatable = isAggregatable;
            performanceMeasure.PerformanceMeasureDataSourceTypeID = performanceMeasureDataSourceTypeID;
            return performanceMeasure;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureID
        {
            get
            {
                return _PerformanceMeasureID;
            }
            set
            {
                if (_PerformanceMeasureID != value)
                {
                    OnPerformanceMeasureIDChanging(value);
                    ReportPropertyChanging("PerformanceMeasureID");
                    _PerformanceMeasureID = StructuralObject.SetValidValue(value, "PerformanceMeasureID");
                    ReportPropertyChanged("PerformanceMeasureID");
                    OnPerformanceMeasureIDChanged();
                }
            }
        }
        private global::System.Int32 _PerformanceMeasureID;
        partial void OnPerformanceMeasureIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CriticalDefinitions
        {
            get
            {
                return _CriticalDefinitions;
            }
            set
            {
                OnCriticalDefinitionsChanging(value);
                ReportPropertyChanging("CriticalDefinitions");
                _CriticalDefinitions = StructuralObject.SetValidValue(value, true, "CriticalDefinitions");
                ReportPropertyChanged("CriticalDefinitions");
                OnCriticalDefinitionsChanged();
            }
        }
        private global::System.String _CriticalDefinitions;
        partial void OnCriticalDefinitionsChanging(global::System.String value);
        partial void OnCriticalDefinitionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectReporting
        {
            get
            {
                return _ProjectReporting;
            }
            set
            {
                OnProjectReportingChanging(value);
                ReportPropertyChanging("ProjectReporting");
                _ProjectReporting = StructuralObject.SetValidValue(value, true, "ProjectReporting");
                ReportPropertyChanged("ProjectReporting");
                OnProjectReportingChanged();
            }
        }
        private global::System.String _ProjectReporting;
        partial void OnProjectReportingChanging(global::System.String value);
        partial void OnProjectReportingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PerformanceMeasureDisplayName
        {
            get
            {
                return _PerformanceMeasureDisplayName;
            }
            set
            {
                OnPerformanceMeasureDisplayNameChanging(value);
                ReportPropertyChanging("PerformanceMeasureDisplayName");
                _PerformanceMeasureDisplayName = StructuralObject.SetValidValue(value, false, "PerformanceMeasureDisplayName");
                ReportPropertyChanged("PerformanceMeasureDisplayName");
                OnPerformanceMeasureDisplayNameChanged();
            }
        }
        private global::System.String _PerformanceMeasureDisplayName;
        partial void OnPerformanceMeasureDisplayNameChanging(global::System.String value);
        partial void OnPerformanceMeasureDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MeasurementUnitTypeID
        {
            get
            {
                return _MeasurementUnitTypeID;
            }
            set
            {
                OnMeasurementUnitTypeIDChanging(value);
                ReportPropertyChanging("MeasurementUnitTypeID");
                _MeasurementUnitTypeID = StructuralObject.SetValidValue(value, "MeasurementUnitTypeID");
                ReportPropertyChanged("MeasurementUnitTypeID");
                OnMeasurementUnitTypeIDChanged();
            }
        }
        private global::System.Int32 _MeasurementUnitTypeID;
        partial void OnMeasurementUnitTypeIDChanging(global::System.Int32 value);
        partial void OnMeasurementUnitTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureTypeID
        {
            get
            {
                return _PerformanceMeasureTypeID;
            }
            set
            {
                OnPerformanceMeasureTypeIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureTypeID");
                _PerformanceMeasureTypeID = StructuralObject.SetValidValue(value, "PerformanceMeasureTypeID");
                ReportPropertyChanged("PerformanceMeasureTypeID");
                OnPerformanceMeasureTypeIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureTypeID;
        partial void OnPerformanceMeasureTypeIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PerformanceMeasureDefinition
        {
            get
            {
                return _PerformanceMeasureDefinition;
            }
            set
            {
                OnPerformanceMeasureDefinitionChanging(value);
                ReportPropertyChanging("PerformanceMeasureDefinition");
                _PerformanceMeasureDefinition = StructuralObject.SetValidValue(value, true, "PerformanceMeasureDefinition");
                ReportPropertyChanged("PerformanceMeasureDefinition");
                OnPerformanceMeasureDefinitionChanged();
            }
        }
        private global::System.String _PerformanceMeasureDefinition;
        partial void OnPerformanceMeasureDefinitionChanging(global::System.String value);
        partial void OnPerformanceMeasureDefinitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataSourceText
        {
            get
            {
                return _DataSourceText;
            }
            set
            {
                OnDataSourceTextChanging(value);
                ReportPropertyChanging("DataSourceText");
                _DataSourceText = StructuralObject.SetValidValue(value, true, "DataSourceText");
                ReportPropertyChanged("DataSourceText");
                OnDataSourceTextChanged();
            }
        }
        private global::System.String _DataSourceText;
        partial void OnDataSourceTextChanging(global::System.String value);
        partial void OnDataSourceTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExternalDataSourceUrl
        {
            get
            {
                return _ExternalDataSourceUrl;
            }
            set
            {
                OnExternalDataSourceUrlChanging(value);
                ReportPropertyChanging("ExternalDataSourceUrl");
                _ExternalDataSourceUrl = StructuralObject.SetValidValue(value, true, "ExternalDataSourceUrl");
                ReportPropertyChanged("ExternalDataSourceUrl");
                OnExternalDataSourceUrlChanged();
            }
        }
        private global::System.String _ExternalDataSourceUrl;
        partial void OnExternalDataSourceUrlChanging(global::System.String value);
        partial void OnExternalDataSourceUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChartCaption
        {
            get
            {
                return _ChartCaption;
            }
            set
            {
                OnChartCaptionChanging(value);
                ReportPropertyChanging("ChartCaption");
                _ChartCaption = StructuralObject.SetValidValue(value, true, "ChartCaption");
                ReportPropertyChanged("ChartCaption");
                OnChartCaptionChanged();
            }
        }
        private global::System.String _ChartCaption;
        partial void OnChartCaptionChanging(global::System.String value);
        partial void OnChartCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SwapChartAxes
        {
            get
            {
                return _SwapChartAxes;
            }
            set
            {
                OnSwapChartAxesChanging(value);
                ReportPropertyChanging("SwapChartAxes");
                _SwapChartAxes = StructuralObject.SetValidValue(value, "SwapChartAxes");
                ReportPropertyChanged("SwapChartAxes");
                OnSwapChartAxesChanged();
            }
        }
        private global::System.Boolean _SwapChartAxes;
        partial void OnSwapChartAxesChanging(global::System.Boolean value);
        partial void OnSwapChartAxesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanCalculateTotal
        {
            get
            {
                return _CanCalculateTotal;
            }
            set
            {
                OnCanCalculateTotalChanging(value);
                ReportPropertyChanging("CanCalculateTotal");
                _CanCalculateTotal = StructuralObject.SetValidValue(value, "CanCalculateTotal");
                ReportPropertyChanged("CanCalculateTotal");
                OnCanCalculateTotalChanged();
            }
        }
        private global::System.Boolean _CanCalculateTotal;
        partial void OnCanCalculateTotalChanging(global::System.Boolean value);
        partial void OnCanCalculateTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PerformanceMeasureSortOrder
        {
            get
            {
                return _PerformanceMeasureSortOrder;
            }
            set
            {
                OnPerformanceMeasureSortOrderChanging(value);
                ReportPropertyChanging("PerformanceMeasureSortOrder");
                _PerformanceMeasureSortOrder = StructuralObject.SetValidValue(value, "PerformanceMeasureSortOrder");
                ReportPropertyChanged("PerformanceMeasureSortOrder");
                OnPerformanceMeasureSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _PerformanceMeasureSortOrder;
        partial void OnPerformanceMeasureSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnPerformanceMeasureSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAggregatable
        {
            get
            {
                return _IsAggregatable;
            }
            set
            {
                OnIsAggregatableChanging(value);
                ReportPropertyChanging("IsAggregatable");
                _IsAggregatable = StructuralObject.SetValidValue(value, "IsAggregatable");
                ReportPropertyChanged("IsAggregatable");
                OnIsAggregatableChanged();
            }
        }
        private global::System.Boolean _IsAggregatable;
        partial void OnIsAggregatableChanging(global::System.Boolean value);
        partial void OnIsAggregatableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureDataSourceTypeID
        {
            get
            {
                return _PerformanceMeasureDataSourceTypeID;
            }
            set
            {
                OnPerformanceMeasureDataSourceTypeIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureDataSourceTypeID");
                _PerformanceMeasureDataSourceTypeID = StructuralObject.SetValidValue(value, "PerformanceMeasureDataSourceTypeID");
                ReportPropertyChanged("PerformanceMeasureDataSourceTypeID");
                OnPerformanceMeasureDataSourceTypeIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureDataSourceTypeID;
        partial void OnPerformanceMeasureDataSourceTypeIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureDataSourceTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ClassificationPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "ClassificationPerformanceMeasure")]
        public EntityCollection<ClassificationPerformanceMeasure> ClassificationPerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClassificationPerformanceMeasure>("ProjectFirma.Web.Models.FK_ClassificationPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "ClassificationPerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClassificationPerformanceMeasure>("ProjectFirma.Web.Models.FK_ClassificationPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "ClassificationPerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasure_MeasurementUnitType_MeasurementUnitTypeID", "MeasurementUnitType")]
        public MeasurementUnitType MeasurementUnitType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasurementUnitType>("ProjectFirma.Web.Models.FK_PerformanceMeasure_MeasurementUnitType_MeasurementUnitTypeID", "MeasurementUnitType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasurementUnitType>("ProjectFirma.Web.Models.FK_PerformanceMeasure_MeasurementUnitType_MeasurementUnitTypeID", "MeasurementUnitType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MeasurementUnitType> MeasurementUnitTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasurementUnitType>("ProjectFirma.Web.Models.FK_PerformanceMeasure_MeasurementUnitType_MeasurementUnitTypeID", "MeasurementUnitType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MeasurementUnitType>("ProjectFirma.Web.Models.FK_PerformanceMeasure_MeasurementUnitType_MeasurementUnitTypeID", "MeasurementUnitType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasure_PerformanceMeasureDataSourceType_PerformanceMeasureDataSourceTypeID", "PerformanceMeasureDataSourceType")]
        public PerformanceMeasureDataSourceType PerformanceMeasureDataSourceType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureDataSourceType>("ProjectFirma.Web.Models.FK_PerformanceMeasure_PerformanceMeasureDataSourceType_PerformanceMeasureDataSourceTypeID", "PerformanceMeasureDataSourceType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureDataSourceType>("ProjectFirma.Web.Models.FK_PerformanceMeasure_PerformanceMeasureDataSourceType_PerformanceMeasureDataSourceTypeID", "PerformanceMeasureDataSourceType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasureDataSourceType> PerformanceMeasureDataSourceTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureDataSourceType>("ProjectFirma.Web.Models.FK_PerformanceMeasure_PerformanceMeasureDataSourceType_PerformanceMeasureDataSourceTypeID", "PerformanceMeasureDataSourceType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasureDataSourceType>("ProjectFirma.Web.Models.FK_PerformanceMeasure_PerformanceMeasureDataSourceType_PerformanceMeasureDataSourceTypeID", "PerformanceMeasureDataSourceType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasure_PerformanceMeasureType_PerformanceMeasureTypeID", "PerformanceMeasureType")]
        public PerformanceMeasureType PerformanceMeasureType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureType>("ProjectFirma.Web.Models.FK_PerformanceMeasure_PerformanceMeasureType_PerformanceMeasureTypeID", "PerformanceMeasureType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureType>("ProjectFirma.Web.Models.FK_PerformanceMeasure_PerformanceMeasureType_PerformanceMeasureTypeID", "PerformanceMeasureType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasureType> PerformanceMeasureTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureType>("ProjectFirma.Web.Models.FK_PerformanceMeasure_PerformanceMeasureType_PerformanceMeasureTypeID", "PerformanceMeasureType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasureType>("ProjectFirma.Web.Models.FK_PerformanceMeasure_PerformanceMeasureType_PerformanceMeasureTypeID", "PerformanceMeasureType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasure_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasure_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasure_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasure_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasure_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActual_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureActual")]
        public EntityCollection<PerformanceMeasureActual> PerformanceMeasureActual
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureActual>("ProjectFirma.Web.Models.FK_PerformanceMeasureActual_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureActual");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureActual>("ProjectFirma.Web.Models.FK_PerformanceMeasureActual_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureActual", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureActualSubcategoryOption")]
        public EntityCollection<PerformanceMeasureActualSubcategoryOption> PerformanceMeasureActualSubcategoryOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureActualSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureActualSubcategoryOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureActualSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureActualSubcategoryOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureActualSubcategoryOptionUpdate")]
        public EntityCollection<PerformanceMeasureActualSubcategoryOptionUpdate> PerformanceMeasureActualSubcategoryOptionUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureActualSubcategoryOptionUpdate>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureActualSubcategoryOptionUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureActualSubcategoryOptionUpdate>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureActualSubcategoryOptionUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualUpdate_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureActualUpdate")]
        public EntityCollection<PerformanceMeasureActualUpdate> PerformanceMeasureActualUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureActualUpdate>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualUpdate_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureActualUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureActualUpdate>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualUpdate_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureActualUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpected_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureExpected")]
        public EntityCollection<PerformanceMeasureExpected> PerformanceMeasureExpected
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureExpected>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpected_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureExpected");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureExpected>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpected_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureExpected", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureExpectedSubcategoryOption")]
        public EntityCollection<PerformanceMeasureExpectedSubcategoryOption> PerformanceMeasureExpectedSubcategoryOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureExpectedSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureExpectedSubcategoryOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureExpectedSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureExpectedSubcategoryOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureMonitoringProgram_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureMonitoringProgram")]
        public EntityCollection<PerformanceMeasureMonitoringProgram> PerformanceMeasureMonitoringProgram
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureMonitoringProgram>("ProjectFirma.Web.Models.FK_PerformanceMeasureMonitoringProgram_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureMonitoringProgram");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureMonitoringProgram>("ProjectFirma.Web.Models.FK_PerformanceMeasureMonitoringProgram_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureMonitoringProgram", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureNote_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureNote")]
        public EntityCollection<PerformanceMeasureNote> PerformanceMeasureNote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureNote>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureNote>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureSubcategory_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureSubcategory")]
        public EntityCollection<PerformanceMeasureSubcategory> PerformanceMeasureSubcategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategory_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureSubcategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategory_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasureSubcategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "SnapshotPerformanceMeasure")]
        public EntityCollection<SnapshotPerformanceMeasure> SnapshotPerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SnapshotPerformanceMeasure>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "SnapshotPerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SnapshotPerformanceMeasure>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "SnapshotPerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "SnapshotPerformanceMeasureSubcategoryOption")]
        public EntityCollection<SnapshotPerformanceMeasureSubcategoryOption> SnapshotPerformanceMeasureSubcategoryOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SnapshotPerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "SnapshotPerformanceMeasureSubcategoryOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SnapshotPerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "SnapshotPerformanceMeasureSubcategoryOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TaxonomyLeafPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "TaxonomyLeafPerformanceMeasure")]
        public EntityCollection<TaxonomyLeafPerformanceMeasure> TaxonomyLeafPerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaxonomyLeafPerformanceMeasure>("ProjectFirma.Web.Models.FK_TaxonomyLeafPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "TaxonomyLeafPerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaxonomyLeafPerformanceMeasure>("ProjectFirma.Web.Models.FK_TaxonomyLeafPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "TaxonomyLeafPerformanceMeasure", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="PerformanceMeasureActual")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PerformanceMeasureActual : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PerformanceMeasureActual object.
        /// </summary>
        /// <param name="performanceMeasureActualID">Initial value of the PerformanceMeasureActualID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="performanceMeasureID">Initial value of the PerformanceMeasureID property.</param>
        /// <param name="calendarYear">Initial value of the CalendarYear property.</param>
        /// <param name="actualValue">Initial value of the ActualValue property.</param>
        public static PerformanceMeasureActual CreatePerformanceMeasureActual(global::System.Int32 performanceMeasureActualID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.Int32 performanceMeasureID, global::System.Int32 calendarYear, global::System.Double actualValue)
        {
            PerformanceMeasureActual performanceMeasureActual = new PerformanceMeasureActual();
            performanceMeasureActual.PerformanceMeasureActualID = performanceMeasureActualID;
            performanceMeasureActual.TenantID = tenantID;
            performanceMeasureActual.ProjectID = projectID;
            performanceMeasureActual.PerformanceMeasureID = performanceMeasureID;
            performanceMeasureActual.CalendarYear = calendarYear;
            performanceMeasureActual.ActualValue = actualValue;
            return performanceMeasureActual;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureActualID
        {
            get
            {
                return _PerformanceMeasureActualID;
            }
            set
            {
                if (_PerformanceMeasureActualID != value)
                {
                    OnPerformanceMeasureActualIDChanging(value);
                    ReportPropertyChanging("PerformanceMeasureActualID");
                    _PerformanceMeasureActualID = StructuralObject.SetValidValue(value, "PerformanceMeasureActualID");
                    ReportPropertyChanged("PerformanceMeasureActualID");
                    OnPerformanceMeasureActualIDChanged();
                }
            }
        }
        private global::System.Int32 _PerformanceMeasureActualID;
        partial void OnPerformanceMeasureActualIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureActualIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureID
        {
            get
            {
                return _PerformanceMeasureID;
            }
            set
            {
                OnPerformanceMeasureIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureID");
                _PerformanceMeasureID = StructuralObject.SetValidValue(value, "PerformanceMeasureID");
                ReportPropertyChanged("PerformanceMeasureID");
                OnPerformanceMeasureIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureID;
        partial void OnPerformanceMeasureIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalendarYear
        {
            get
            {
                return _CalendarYear;
            }
            set
            {
                OnCalendarYearChanging(value);
                ReportPropertyChanging("CalendarYear");
                _CalendarYear = StructuralObject.SetValidValue(value, "CalendarYear");
                ReportPropertyChanged("CalendarYear");
                OnCalendarYearChanged();
            }
        }
        private global::System.Int32 _CalendarYear;
        partial void OnCalendarYearChanging(global::System.Int32 value);
        partial void OnCalendarYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ActualValue
        {
            get
            {
                return _ActualValue;
            }
            set
            {
                OnActualValueChanging(value);
                ReportPropertyChanging("ActualValue");
                _ActualValue = StructuralObject.SetValidValue(value, "ActualValue");
                ReportPropertyChanged("ActualValue");
                OnActualValueChanged();
            }
        }
        private global::System.Double _ActualValue;
        partial void OnActualValueChanging(global::System.Double value);
        partial void OnActualValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActual_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure")]
        public PerformanceMeasure PerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureActual_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureActual_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasure> PerformanceMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureActual_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureActual_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActual_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_PerformanceMeasureActual_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_PerformanceMeasureActual_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_PerformanceMeasureActual_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_PerformanceMeasureActual_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActual_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureActual_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureActual_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureActual_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureActual_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureActual_PerformanceMeasureActualID", "PerformanceMeasureActualSubcategoryOption")]
        public EntityCollection<PerformanceMeasureActualSubcategoryOption> PerformanceMeasureActualSubcategoryOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureActualSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureActual_PerformanceMeasureActualID", "PerformanceMeasureActualSubcategoryOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureActualSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureActual_PerformanceMeasureActualID", "PerformanceMeasureActualSubcategoryOption", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="PerformanceMeasureActualSubcategoryOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PerformanceMeasureActualSubcategoryOption : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PerformanceMeasureActualSubcategoryOption object.
        /// </summary>
        /// <param name="performanceMeasureActualSubcategoryOptionID">Initial value of the PerformanceMeasureActualSubcategoryOptionID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="performanceMeasureActualID">Initial value of the PerformanceMeasureActualID property.</param>
        /// <param name="performanceMeasureSubcategoryOptionID">Initial value of the PerformanceMeasureSubcategoryOptionID property.</param>
        /// <param name="performanceMeasureID">Initial value of the PerformanceMeasureID property.</param>
        /// <param name="performanceMeasureSubcategoryID">Initial value of the PerformanceMeasureSubcategoryID property.</param>
        public static PerformanceMeasureActualSubcategoryOption CreatePerformanceMeasureActualSubcategoryOption(global::System.Int32 performanceMeasureActualSubcategoryOptionID, global::System.Int32 tenantID, global::System.Int32 performanceMeasureActualID, global::System.Int32 performanceMeasureSubcategoryOptionID, global::System.Int32 performanceMeasureID, global::System.Int32 performanceMeasureSubcategoryID)
        {
            PerformanceMeasureActualSubcategoryOption performanceMeasureActualSubcategoryOption = new PerformanceMeasureActualSubcategoryOption();
            performanceMeasureActualSubcategoryOption.PerformanceMeasureActualSubcategoryOptionID = performanceMeasureActualSubcategoryOptionID;
            performanceMeasureActualSubcategoryOption.TenantID = tenantID;
            performanceMeasureActualSubcategoryOption.PerformanceMeasureActualID = performanceMeasureActualID;
            performanceMeasureActualSubcategoryOption.PerformanceMeasureSubcategoryOptionID = performanceMeasureSubcategoryOptionID;
            performanceMeasureActualSubcategoryOption.PerformanceMeasureID = performanceMeasureID;
            performanceMeasureActualSubcategoryOption.PerformanceMeasureSubcategoryID = performanceMeasureSubcategoryID;
            return performanceMeasureActualSubcategoryOption;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureActualSubcategoryOptionID
        {
            get
            {
                return _PerformanceMeasureActualSubcategoryOptionID;
            }
            set
            {
                if (_PerformanceMeasureActualSubcategoryOptionID != value)
                {
                    OnPerformanceMeasureActualSubcategoryOptionIDChanging(value);
                    ReportPropertyChanging("PerformanceMeasureActualSubcategoryOptionID");
                    _PerformanceMeasureActualSubcategoryOptionID = StructuralObject.SetValidValue(value, "PerformanceMeasureActualSubcategoryOptionID");
                    ReportPropertyChanged("PerformanceMeasureActualSubcategoryOptionID");
                    OnPerformanceMeasureActualSubcategoryOptionIDChanged();
                }
            }
        }
        private global::System.Int32 _PerformanceMeasureActualSubcategoryOptionID;
        partial void OnPerformanceMeasureActualSubcategoryOptionIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureActualSubcategoryOptionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureActualID
        {
            get
            {
                return _PerformanceMeasureActualID;
            }
            set
            {
                OnPerformanceMeasureActualIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureActualID");
                _PerformanceMeasureActualID = StructuralObject.SetValidValue(value, "PerformanceMeasureActualID");
                ReportPropertyChanged("PerformanceMeasureActualID");
                OnPerformanceMeasureActualIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureActualID;
        partial void OnPerformanceMeasureActualIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureActualIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureSubcategoryOptionID
        {
            get
            {
                return _PerformanceMeasureSubcategoryOptionID;
            }
            set
            {
                OnPerformanceMeasureSubcategoryOptionIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureSubcategoryOptionID");
                _PerformanceMeasureSubcategoryOptionID = StructuralObject.SetValidValue(value, "PerformanceMeasureSubcategoryOptionID");
                ReportPropertyChanged("PerformanceMeasureSubcategoryOptionID");
                OnPerformanceMeasureSubcategoryOptionIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureSubcategoryOptionID;
        partial void OnPerformanceMeasureSubcategoryOptionIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureSubcategoryOptionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureID
        {
            get
            {
                return _PerformanceMeasureID;
            }
            set
            {
                OnPerformanceMeasureIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureID");
                _PerformanceMeasureID = StructuralObject.SetValidValue(value, "PerformanceMeasureID");
                ReportPropertyChanged("PerformanceMeasureID");
                OnPerformanceMeasureIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureID;
        partial void OnPerformanceMeasureIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureSubcategoryID
        {
            get
            {
                return _PerformanceMeasureSubcategoryID;
            }
            set
            {
                OnPerformanceMeasureSubcategoryIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureSubcategoryID");
                _PerformanceMeasureSubcategoryID = StructuralObject.SetValidValue(value, "PerformanceMeasureSubcategoryID");
                ReportPropertyChanged("PerformanceMeasureSubcategoryID");
                OnPerformanceMeasureSubcategoryIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureSubcategoryID;
        partial void OnPerformanceMeasureSubcategoryIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureSubcategoryIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure")]
        public PerformanceMeasure PerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasure> PerformanceMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureActual_PerformanceMeasureActualID", "PerformanceMeasureActual")]
        public PerformanceMeasureActual PerformanceMeasureActual
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureActual>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureActual_PerformanceMeasureActualID", "PerformanceMeasureActual").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureActual>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureActual_PerformanceMeasureActualID", "PerformanceMeasureActual").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasureActual> PerformanceMeasureActualReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureActual>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureActual_PerformanceMeasureActualID", "PerformanceMeasureActual");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasureActual>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureActual_PerformanceMeasureActualID", "PerformanceMeasureActual", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory")]
        public PerformanceMeasureSubcategory PerformanceMeasureSubcategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasureSubcategory> PerformanceMeasureSubcategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption")]
        public PerformanceMeasureSubcategoryOption PerformanceMeasureSubcategoryOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasureSubcategoryOption> PerformanceMeasureSubcategoryOptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOption_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="PerformanceMeasureActualSubcategoryOptionUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PerformanceMeasureActualSubcategoryOptionUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PerformanceMeasureActualSubcategoryOptionUpdate object.
        /// </summary>
        /// <param name="performanceMeasureActualSubcategoryOptionUpdateID">Initial value of the PerformanceMeasureActualSubcategoryOptionUpdateID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="performanceMeasureActualUpdateID">Initial value of the PerformanceMeasureActualUpdateID property.</param>
        /// <param name="performanceMeasureSubcategoryOptionID">Initial value of the PerformanceMeasureSubcategoryOptionID property.</param>
        /// <param name="performanceMeasureID">Initial value of the PerformanceMeasureID property.</param>
        /// <param name="performanceMeasureSubcategoryID">Initial value of the PerformanceMeasureSubcategoryID property.</param>
        public static PerformanceMeasureActualSubcategoryOptionUpdate CreatePerformanceMeasureActualSubcategoryOptionUpdate(global::System.Int32 performanceMeasureActualSubcategoryOptionUpdateID, global::System.Int32 tenantID, global::System.Int32 performanceMeasureActualUpdateID, global::System.Int32 performanceMeasureSubcategoryOptionID, global::System.Int32 performanceMeasureID, global::System.Int32 performanceMeasureSubcategoryID)
        {
            PerformanceMeasureActualSubcategoryOptionUpdate performanceMeasureActualSubcategoryOptionUpdate = new PerformanceMeasureActualSubcategoryOptionUpdate();
            performanceMeasureActualSubcategoryOptionUpdate.PerformanceMeasureActualSubcategoryOptionUpdateID = performanceMeasureActualSubcategoryOptionUpdateID;
            performanceMeasureActualSubcategoryOptionUpdate.TenantID = tenantID;
            performanceMeasureActualSubcategoryOptionUpdate.PerformanceMeasureActualUpdateID = performanceMeasureActualUpdateID;
            performanceMeasureActualSubcategoryOptionUpdate.PerformanceMeasureSubcategoryOptionID = performanceMeasureSubcategoryOptionID;
            performanceMeasureActualSubcategoryOptionUpdate.PerformanceMeasureID = performanceMeasureID;
            performanceMeasureActualSubcategoryOptionUpdate.PerformanceMeasureSubcategoryID = performanceMeasureSubcategoryID;
            return performanceMeasureActualSubcategoryOptionUpdate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureActualSubcategoryOptionUpdateID
        {
            get
            {
                return _PerformanceMeasureActualSubcategoryOptionUpdateID;
            }
            set
            {
                if (_PerformanceMeasureActualSubcategoryOptionUpdateID != value)
                {
                    OnPerformanceMeasureActualSubcategoryOptionUpdateIDChanging(value);
                    ReportPropertyChanging("PerformanceMeasureActualSubcategoryOptionUpdateID");
                    _PerformanceMeasureActualSubcategoryOptionUpdateID = StructuralObject.SetValidValue(value, "PerformanceMeasureActualSubcategoryOptionUpdateID");
                    ReportPropertyChanged("PerformanceMeasureActualSubcategoryOptionUpdateID");
                    OnPerformanceMeasureActualSubcategoryOptionUpdateIDChanged();
                }
            }
        }
        private global::System.Int32 _PerformanceMeasureActualSubcategoryOptionUpdateID;
        partial void OnPerformanceMeasureActualSubcategoryOptionUpdateIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureActualSubcategoryOptionUpdateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureActualUpdateID
        {
            get
            {
                return _PerformanceMeasureActualUpdateID;
            }
            set
            {
                OnPerformanceMeasureActualUpdateIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureActualUpdateID");
                _PerformanceMeasureActualUpdateID = StructuralObject.SetValidValue(value, "PerformanceMeasureActualUpdateID");
                ReportPropertyChanged("PerformanceMeasureActualUpdateID");
                OnPerformanceMeasureActualUpdateIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureActualUpdateID;
        partial void OnPerformanceMeasureActualUpdateIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureActualUpdateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureSubcategoryOptionID
        {
            get
            {
                return _PerformanceMeasureSubcategoryOptionID;
            }
            set
            {
                OnPerformanceMeasureSubcategoryOptionIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureSubcategoryOptionID");
                _PerformanceMeasureSubcategoryOptionID = StructuralObject.SetValidValue(value, "PerformanceMeasureSubcategoryOptionID");
                ReportPropertyChanged("PerformanceMeasureSubcategoryOptionID");
                OnPerformanceMeasureSubcategoryOptionIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureSubcategoryOptionID;
        partial void OnPerformanceMeasureSubcategoryOptionIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureSubcategoryOptionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureID
        {
            get
            {
                return _PerformanceMeasureID;
            }
            set
            {
                OnPerformanceMeasureIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureID");
                _PerformanceMeasureID = StructuralObject.SetValidValue(value, "PerformanceMeasureID");
                ReportPropertyChanged("PerformanceMeasureID");
                OnPerformanceMeasureIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureID;
        partial void OnPerformanceMeasureIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureSubcategoryID
        {
            get
            {
                return _PerformanceMeasureSubcategoryID;
            }
            set
            {
                OnPerformanceMeasureSubcategoryIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureSubcategoryID");
                _PerformanceMeasureSubcategoryID = StructuralObject.SetValidValue(value, "PerformanceMeasureSubcategoryID");
                ReportPropertyChanged("PerformanceMeasureSubcategoryID");
                OnPerformanceMeasureSubcategoryIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureSubcategoryID;
        partial void OnPerformanceMeasureSubcategoryIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureSubcategoryIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure")]
        public PerformanceMeasure PerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasure> PerformanceMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureActualUpdate_PerformanceMeasureActualUpdateID", "PerformanceMeasureActualUpdate")]
        public PerformanceMeasureActualUpdate PerformanceMeasureActualUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureActualUpdate>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureActualUpdate_PerformanceMeasureActualUpdateID", "PerformanceMeasureActualUpdate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureActualUpdate>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureActualUpdate_PerformanceMeasureActualUpdateID", "PerformanceMeasureActualUpdate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasureActualUpdate> PerformanceMeasureActualUpdateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureActualUpdate>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureActualUpdate_PerformanceMeasureActualUpdateID", "PerformanceMeasureActualUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasureActualUpdate>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureActualUpdate_PerformanceMeasureActualUpdateID", "PerformanceMeasureActualUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory")]
        public PerformanceMeasureSubcategory PerformanceMeasureSubcategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasureSubcategory> PerformanceMeasureSubcategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption")]
        public PerformanceMeasureSubcategoryOption PerformanceMeasureSubcategoryOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasureSubcategoryOption> PerformanceMeasureSubcategoryOptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOptionUpdate_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="PerformanceMeasureActualUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PerformanceMeasureActualUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PerformanceMeasureActualUpdate object.
        /// </summary>
        /// <param name="performanceMeasureActualUpdateID">Initial value of the PerformanceMeasureActualUpdateID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectUpdateBatchID">Initial value of the ProjectUpdateBatchID property.</param>
        /// <param name="performanceMeasureID">Initial value of the PerformanceMeasureID property.</param>
        /// <param name="calendarYear">Initial value of the CalendarYear property.</param>
        public static PerformanceMeasureActualUpdate CreatePerformanceMeasureActualUpdate(global::System.Int32 performanceMeasureActualUpdateID, global::System.Int32 tenantID, global::System.Int32 projectUpdateBatchID, global::System.Int32 performanceMeasureID, global::System.Int32 calendarYear)
        {
            PerformanceMeasureActualUpdate performanceMeasureActualUpdate = new PerformanceMeasureActualUpdate();
            performanceMeasureActualUpdate.PerformanceMeasureActualUpdateID = performanceMeasureActualUpdateID;
            performanceMeasureActualUpdate.TenantID = tenantID;
            performanceMeasureActualUpdate.ProjectUpdateBatchID = projectUpdateBatchID;
            performanceMeasureActualUpdate.PerformanceMeasureID = performanceMeasureID;
            performanceMeasureActualUpdate.CalendarYear = calendarYear;
            return performanceMeasureActualUpdate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureActualUpdateID
        {
            get
            {
                return _PerformanceMeasureActualUpdateID;
            }
            set
            {
                if (_PerformanceMeasureActualUpdateID != value)
                {
                    OnPerformanceMeasureActualUpdateIDChanging(value);
                    ReportPropertyChanging("PerformanceMeasureActualUpdateID");
                    _PerformanceMeasureActualUpdateID = StructuralObject.SetValidValue(value, "PerformanceMeasureActualUpdateID");
                    ReportPropertyChanged("PerformanceMeasureActualUpdateID");
                    OnPerformanceMeasureActualUpdateIDChanged();
                }
            }
        }
        private global::System.Int32 _PerformanceMeasureActualUpdateID;
        partial void OnPerformanceMeasureActualUpdateIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureActualUpdateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateBatchID
        {
            get
            {
                return _ProjectUpdateBatchID;
            }
            set
            {
                OnProjectUpdateBatchIDChanging(value);
                ReportPropertyChanging("ProjectUpdateBatchID");
                _ProjectUpdateBatchID = StructuralObject.SetValidValue(value, "ProjectUpdateBatchID");
                ReportPropertyChanged("ProjectUpdateBatchID");
                OnProjectUpdateBatchIDChanged();
            }
        }
        private global::System.Int32 _ProjectUpdateBatchID;
        partial void OnProjectUpdateBatchIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureID
        {
            get
            {
                return _PerformanceMeasureID;
            }
            set
            {
                OnPerformanceMeasureIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureID");
                _PerformanceMeasureID = StructuralObject.SetValidValue(value, "PerformanceMeasureID");
                ReportPropertyChanged("PerformanceMeasureID");
                OnPerformanceMeasureIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureID;
        partial void OnPerformanceMeasureIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalendarYear
        {
            get
            {
                return _CalendarYear;
            }
            set
            {
                OnCalendarYearChanging(value);
                ReportPropertyChanging("CalendarYear");
                _CalendarYear = StructuralObject.SetValidValue(value, "CalendarYear");
                ReportPropertyChanged("CalendarYear");
                OnCalendarYearChanged();
            }
        }
        private global::System.Int32 _CalendarYear;
        partial void OnCalendarYearChanging(global::System.Int32 value);
        partial void OnCalendarYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ActualValue
        {
            get
            {
                return _ActualValue;
            }
            set
            {
                OnActualValueChanging(value);
                ReportPropertyChanging("ActualValue");
                _ActualValue = StructuralObject.SetValidValue(value, "ActualValue");
                ReportPropertyChanged("ActualValue");
                OnActualValueChanged();
            }
        }
        private Nullable<global::System.Double> _ActualValue;
        partial void OnActualValueChanging(Nullable<global::System.Double> value);
        partial void OnActualValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualUpdate_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure")]
        public PerformanceMeasure PerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualUpdate_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualUpdate_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasure> PerformanceMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualUpdate_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualUpdate_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureActualUpdate_PerformanceMeasureActualUpdateID", "PerformanceMeasureActualSubcategoryOptionUpdate")]
        public EntityCollection<PerformanceMeasureActualSubcategoryOptionUpdate> PerformanceMeasureActualSubcategoryOptionUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureActualSubcategoryOptionUpdate>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureActualUpdate_PerformanceMeasureActualUpdateID", "PerformanceMeasureActualSubcategoryOptionUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureActualSubcategoryOptionUpdate>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureActualUpdate_PerformanceMeasureActualUpdateID", "PerformanceMeasureActualSubcategoryOptionUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch")]
        public ProjectUpdateBatch ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUpdateBatch> ProjectUpdateBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualUpdate_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualUpdate_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualUpdate_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualUpdate_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualUpdate_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="PerformanceMeasureDataSourceType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PerformanceMeasureDataSourceType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PerformanceMeasureDataSourceType object.
        /// </summary>
        /// <param name="performanceMeasureDataSourceTypeID">Initial value of the PerformanceMeasureDataSourceTypeID property.</param>
        /// <param name="performanceMeasureDataSourceTypeName">Initial value of the PerformanceMeasureDataSourceTypeName property.</param>
        /// <param name="performanceMeasureDataSourceTypeDisplayName">Initial value of the PerformanceMeasureDataSourceTypeDisplayName property.</param>
        /// <param name="isCustomCalculation">Initial value of the IsCustomCalculation property.</param>
        public static PerformanceMeasureDataSourceType CreatePerformanceMeasureDataSourceType(global::System.Int32 performanceMeasureDataSourceTypeID, global::System.String performanceMeasureDataSourceTypeName, global::System.String performanceMeasureDataSourceTypeDisplayName, global::System.Boolean isCustomCalculation)
        {
            PerformanceMeasureDataSourceType performanceMeasureDataSourceType = new PerformanceMeasureDataSourceType();
            performanceMeasureDataSourceType.PerformanceMeasureDataSourceTypeID = performanceMeasureDataSourceTypeID;
            performanceMeasureDataSourceType.PerformanceMeasureDataSourceTypeName = performanceMeasureDataSourceTypeName;
            performanceMeasureDataSourceType.PerformanceMeasureDataSourceTypeDisplayName = performanceMeasureDataSourceTypeDisplayName;
            performanceMeasureDataSourceType.IsCustomCalculation = isCustomCalculation;
            return performanceMeasureDataSourceType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureDataSourceTypeID
        {
            get
            {
                return _PerformanceMeasureDataSourceTypeID;
            }
            set
            {
                if (_PerformanceMeasureDataSourceTypeID != value)
                {
                    OnPerformanceMeasureDataSourceTypeIDChanging(value);
                    ReportPropertyChanging("PerformanceMeasureDataSourceTypeID");
                    _PerformanceMeasureDataSourceTypeID = StructuralObject.SetValidValue(value, "PerformanceMeasureDataSourceTypeID");
                    ReportPropertyChanged("PerformanceMeasureDataSourceTypeID");
                    OnPerformanceMeasureDataSourceTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _PerformanceMeasureDataSourceTypeID;
        partial void OnPerformanceMeasureDataSourceTypeIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureDataSourceTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PerformanceMeasureDataSourceTypeName
        {
            get
            {
                return _PerformanceMeasureDataSourceTypeName;
            }
            set
            {
                OnPerformanceMeasureDataSourceTypeNameChanging(value);
                ReportPropertyChanging("PerformanceMeasureDataSourceTypeName");
                _PerformanceMeasureDataSourceTypeName = StructuralObject.SetValidValue(value, false, "PerformanceMeasureDataSourceTypeName");
                ReportPropertyChanged("PerformanceMeasureDataSourceTypeName");
                OnPerformanceMeasureDataSourceTypeNameChanged();
            }
        }
        private global::System.String _PerformanceMeasureDataSourceTypeName;
        partial void OnPerformanceMeasureDataSourceTypeNameChanging(global::System.String value);
        partial void OnPerformanceMeasureDataSourceTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PerformanceMeasureDataSourceTypeDisplayName
        {
            get
            {
                return _PerformanceMeasureDataSourceTypeDisplayName;
            }
            set
            {
                OnPerformanceMeasureDataSourceTypeDisplayNameChanging(value);
                ReportPropertyChanging("PerformanceMeasureDataSourceTypeDisplayName");
                _PerformanceMeasureDataSourceTypeDisplayName = StructuralObject.SetValidValue(value, false, "PerformanceMeasureDataSourceTypeDisplayName");
                ReportPropertyChanged("PerformanceMeasureDataSourceTypeDisplayName");
                OnPerformanceMeasureDataSourceTypeDisplayNameChanged();
            }
        }
        private global::System.String _PerformanceMeasureDataSourceTypeDisplayName;
        partial void OnPerformanceMeasureDataSourceTypeDisplayNameChanging(global::System.String value);
        partial void OnPerformanceMeasureDataSourceTypeDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsCustomCalculation
        {
            get
            {
                return _IsCustomCalculation;
            }
            set
            {
                OnIsCustomCalculationChanging(value);
                ReportPropertyChanging("IsCustomCalculation");
                _IsCustomCalculation = StructuralObject.SetValidValue(value, "IsCustomCalculation");
                ReportPropertyChanged("IsCustomCalculation");
                OnIsCustomCalculationChanged();
            }
        }
        private global::System.Boolean _IsCustomCalculation;
        partial void OnIsCustomCalculationChanging(global::System.Boolean value);
        partial void OnIsCustomCalculationChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasure_PerformanceMeasureDataSourceType_PerformanceMeasureDataSourceTypeID", "PerformanceMeasure")]
        public EntityCollection<PerformanceMeasure> PerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasure_PerformanceMeasureDataSourceType_PerformanceMeasureDataSourceTypeID", "PerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasure_PerformanceMeasureDataSourceType_PerformanceMeasureDataSourceTypeID", "PerformanceMeasure", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="PerformanceMeasureExpected")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PerformanceMeasureExpected : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PerformanceMeasureExpected object.
        /// </summary>
        /// <param name="performanceMeasureExpectedID">Initial value of the PerformanceMeasureExpectedID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="performanceMeasureID">Initial value of the PerformanceMeasureID property.</param>
        public static PerformanceMeasureExpected CreatePerformanceMeasureExpected(global::System.Int32 performanceMeasureExpectedID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.Int32 performanceMeasureID)
        {
            PerformanceMeasureExpected performanceMeasureExpected = new PerformanceMeasureExpected();
            performanceMeasureExpected.PerformanceMeasureExpectedID = performanceMeasureExpectedID;
            performanceMeasureExpected.TenantID = tenantID;
            performanceMeasureExpected.ProjectID = projectID;
            performanceMeasureExpected.PerformanceMeasureID = performanceMeasureID;
            return performanceMeasureExpected;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureExpectedID
        {
            get
            {
                return _PerformanceMeasureExpectedID;
            }
            set
            {
                if (_PerformanceMeasureExpectedID != value)
                {
                    OnPerformanceMeasureExpectedIDChanging(value);
                    ReportPropertyChanging("PerformanceMeasureExpectedID");
                    _PerformanceMeasureExpectedID = StructuralObject.SetValidValue(value, "PerformanceMeasureExpectedID");
                    ReportPropertyChanged("PerformanceMeasureExpectedID");
                    OnPerformanceMeasureExpectedIDChanged();
                }
            }
        }
        private global::System.Int32 _PerformanceMeasureExpectedID;
        partial void OnPerformanceMeasureExpectedIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureExpectedIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureID
        {
            get
            {
                return _PerformanceMeasureID;
            }
            set
            {
                OnPerformanceMeasureIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureID");
                _PerformanceMeasureID = StructuralObject.SetValidValue(value, "PerformanceMeasureID");
                ReportPropertyChanged("PerformanceMeasureID");
                OnPerformanceMeasureIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureID;
        partial void OnPerformanceMeasureIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> ExpectedValue
        {
            get
            {
                return _ExpectedValue;
            }
            set
            {
                OnExpectedValueChanging(value);
                ReportPropertyChanging("ExpectedValue");
                _ExpectedValue = StructuralObject.SetValidValue(value, "ExpectedValue");
                ReportPropertyChanged("ExpectedValue");
                OnExpectedValueChanged();
            }
        }
        private Nullable<global::System.Double> _ExpectedValue;
        partial void OnExpectedValueChanging(Nullable<global::System.Double> value);
        partial void OnExpectedValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpected_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure")]
        public PerformanceMeasure PerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpected_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpected_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasure> PerformanceMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpected_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpected_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpected_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpected_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpected_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpected_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpected_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpected_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpected_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpected_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpected_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpected_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureExpected_PerformanceMeasureExpectedID", "PerformanceMeasureExpectedSubcategoryOption")]
        public EntityCollection<PerformanceMeasureExpectedSubcategoryOption> PerformanceMeasureExpectedSubcategoryOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureExpectedSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureExpected_PerformanceMeasureExpectedID", "PerformanceMeasureExpectedSubcategoryOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureExpectedSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureExpected_PerformanceMeasureExpectedID", "PerformanceMeasureExpectedSubcategoryOption", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="PerformanceMeasureExpectedSubcategoryOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PerformanceMeasureExpectedSubcategoryOption : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PerformanceMeasureExpectedSubcategoryOption object.
        /// </summary>
        /// <param name="performanceMeasureExpectedSubcategoryOptionID">Initial value of the PerformanceMeasureExpectedSubcategoryOptionID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="performanceMeasureExpectedID">Initial value of the PerformanceMeasureExpectedID property.</param>
        /// <param name="performanceMeasureSubcategoryOptionID">Initial value of the PerformanceMeasureSubcategoryOptionID property.</param>
        /// <param name="performanceMeasureID">Initial value of the PerformanceMeasureID property.</param>
        /// <param name="performanceMeasureSubcategoryID">Initial value of the PerformanceMeasureSubcategoryID property.</param>
        public static PerformanceMeasureExpectedSubcategoryOption CreatePerformanceMeasureExpectedSubcategoryOption(global::System.Int32 performanceMeasureExpectedSubcategoryOptionID, global::System.Int32 tenantID, global::System.Int32 performanceMeasureExpectedID, global::System.Int32 performanceMeasureSubcategoryOptionID, global::System.Int32 performanceMeasureID, global::System.Int32 performanceMeasureSubcategoryID)
        {
            PerformanceMeasureExpectedSubcategoryOption performanceMeasureExpectedSubcategoryOption = new PerformanceMeasureExpectedSubcategoryOption();
            performanceMeasureExpectedSubcategoryOption.PerformanceMeasureExpectedSubcategoryOptionID = performanceMeasureExpectedSubcategoryOptionID;
            performanceMeasureExpectedSubcategoryOption.TenantID = tenantID;
            performanceMeasureExpectedSubcategoryOption.PerformanceMeasureExpectedID = performanceMeasureExpectedID;
            performanceMeasureExpectedSubcategoryOption.PerformanceMeasureSubcategoryOptionID = performanceMeasureSubcategoryOptionID;
            performanceMeasureExpectedSubcategoryOption.PerformanceMeasureID = performanceMeasureID;
            performanceMeasureExpectedSubcategoryOption.PerformanceMeasureSubcategoryID = performanceMeasureSubcategoryID;
            return performanceMeasureExpectedSubcategoryOption;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureExpectedSubcategoryOptionID
        {
            get
            {
                return _PerformanceMeasureExpectedSubcategoryOptionID;
            }
            set
            {
                if (_PerformanceMeasureExpectedSubcategoryOptionID != value)
                {
                    OnPerformanceMeasureExpectedSubcategoryOptionIDChanging(value);
                    ReportPropertyChanging("PerformanceMeasureExpectedSubcategoryOptionID");
                    _PerformanceMeasureExpectedSubcategoryOptionID = StructuralObject.SetValidValue(value, "PerformanceMeasureExpectedSubcategoryOptionID");
                    ReportPropertyChanged("PerformanceMeasureExpectedSubcategoryOptionID");
                    OnPerformanceMeasureExpectedSubcategoryOptionIDChanged();
                }
            }
        }
        private global::System.Int32 _PerformanceMeasureExpectedSubcategoryOptionID;
        partial void OnPerformanceMeasureExpectedSubcategoryOptionIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureExpectedSubcategoryOptionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureExpectedID
        {
            get
            {
                return _PerformanceMeasureExpectedID;
            }
            set
            {
                OnPerformanceMeasureExpectedIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureExpectedID");
                _PerformanceMeasureExpectedID = StructuralObject.SetValidValue(value, "PerformanceMeasureExpectedID");
                ReportPropertyChanged("PerformanceMeasureExpectedID");
                OnPerformanceMeasureExpectedIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureExpectedID;
        partial void OnPerformanceMeasureExpectedIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureExpectedIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureSubcategoryOptionID
        {
            get
            {
                return _PerformanceMeasureSubcategoryOptionID;
            }
            set
            {
                OnPerformanceMeasureSubcategoryOptionIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureSubcategoryOptionID");
                _PerformanceMeasureSubcategoryOptionID = StructuralObject.SetValidValue(value, "PerformanceMeasureSubcategoryOptionID");
                ReportPropertyChanged("PerformanceMeasureSubcategoryOptionID");
                OnPerformanceMeasureSubcategoryOptionIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureSubcategoryOptionID;
        partial void OnPerformanceMeasureSubcategoryOptionIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureSubcategoryOptionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureID
        {
            get
            {
                return _PerformanceMeasureID;
            }
            set
            {
                OnPerformanceMeasureIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureID");
                _PerformanceMeasureID = StructuralObject.SetValidValue(value, "PerformanceMeasureID");
                ReportPropertyChanged("PerformanceMeasureID");
                OnPerformanceMeasureIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureID;
        partial void OnPerformanceMeasureIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureSubcategoryID
        {
            get
            {
                return _PerformanceMeasureSubcategoryID;
            }
            set
            {
                OnPerformanceMeasureSubcategoryIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureSubcategoryID");
                _PerformanceMeasureSubcategoryID = StructuralObject.SetValidValue(value, "PerformanceMeasureSubcategoryID");
                ReportPropertyChanged("PerformanceMeasureSubcategoryID");
                OnPerformanceMeasureSubcategoryIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureSubcategoryID;
        partial void OnPerformanceMeasureSubcategoryIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureSubcategoryIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure")]
        public PerformanceMeasure PerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasure> PerformanceMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureExpected_PerformanceMeasureExpectedID", "PerformanceMeasureExpected")]
        public PerformanceMeasureExpected PerformanceMeasureExpected
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureExpected>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureExpected_PerformanceMeasureExpectedID", "PerformanceMeasureExpected").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureExpected>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureExpected_PerformanceMeasureExpectedID", "PerformanceMeasureExpected").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasureExpected> PerformanceMeasureExpectedReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureExpected>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureExpected_PerformanceMeasureExpectedID", "PerformanceMeasureExpected");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasureExpected>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureExpected_PerformanceMeasureExpectedID", "PerformanceMeasureExpected", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory")]
        public PerformanceMeasureSubcategory PerformanceMeasureSubcategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasureSubcategory> PerformanceMeasureSubcategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption")]
        public PerformanceMeasureSubcategoryOption PerformanceMeasureSubcategoryOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasureSubcategoryOption> PerformanceMeasureSubcategoryOptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpectedSubcategoryOption_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="PerformanceMeasureMonitoringProgram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PerformanceMeasureMonitoringProgram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PerformanceMeasureMonitoringProgram object.
        /// </summary>
        /// <param name="performanceMeasureMonitoringProgramID">Initial value of the PerformanceMeasureMonitoringProgramID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="performanceMeasureID">Initial value of the PerformanceMeasureID property.</param>
        /// <param name="monitoringProgramID">Initial value of the MonitoringProgramID property.</param>
        public static PerformanceMeasureMonitoringProgram CreatePerformanceMeasureMonitoringProgram(global::System.Int32 performanceMeasureMonitoringProgramID, global::System.Int32 tenantID, global::System.Int32 performanceMeasureID, global::System.Int32 monitoringProgramID)
        {
            PerformanceMeasureMonitoringProgram performanceMeasureMonitoringProgram = new PerformanceMeasureMonitoringProgram();
            performanceMeasureMonitoringProgram.PerformanceMeasureMonitoringProgramID = performanceMeasureMonitoringProgramID;
            performanceMeasureMonitoringProgram.TenantID = tenantID;
            performanceMeasureMonitoringProgram.PerformanceMeasureID = performanceMeasureID;
            performanceMeasureMonitoringProgram.MonitoringProgramID = monitoringProgramID;
            return performanceMeasureMonitoringProgram;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureMonitoringProgramID
        {
            get
            {
                return _PerformanceMeasureMonitoringProgramID;
            }
            set
            {
                if (_PerformanceMeasureMonitoringProgramID != value)
                {
                    OnPerformanceMeasureMonitoringProgramIDChanging(value);
                    ReportPropertyChanging("PerformanceMeasureMonitoringProgramID");
                    _PerformanceMeasureMonitoringProgramID = StructuralObject.SetValidValue(value, "PerformanceMeasureMonitoringProgramID");
                    ReportPropertyChanged("PerformanceMeasureMonitoringProgramID");
                    OnPerformanceMeasureMonitoringProgramIDChanged();
                }
            }
        }
        private global::System.Int32 _PerformanceMeasureMonitoringProgramID;
        partial void OnPerformanceMeasureMonitoringProgramIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureMonitoringProgramIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureID
        {
            get
            {
                return _PerformanceMeasureID;
            }
            set
            {
                OnPerformanceMeasureIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureID");
                _PerformanceMeasureID = StructuralObject.SetValidValue(value, "PerformanceMeasureID");
                ReportPropertyChanged("PerformanceMeasureID");
                OnPerformanceMeasureIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureID;
        partial void OnPerformanceMeasureIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MonitoringProgramID
        {
            get
            {
                return _MonitoringProgramID;
            }
            set
            {
                OnMonitoringProgramIDChanging(value);
                ReportPropertyChanging("MonitoringProgramID");
                _MonitoringProgramID = StructuralObject.SetValidValue(value, "MonitoringProgramID");
                ReportPropertyChanged("MonitoringProgramID");
                OnMonitoringProgramIDChanged();
            }
        }
        private global::System.Int32 _MonitoringProgramID;
        partial void OnMonitoringProgramIDChanging(global::System.Int32 value);
        partial void OnMonitoringProgramIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureMonitoringProgram_MonitoringProgram_MonitoringProgramID", "MonitoringProgram")]
        public MonitoringProgram MonitoringProgram
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MonitoringProgram>("ProjectFirma.Web.Models.FK_PerformanceMeasureMonitoringProgram_MonitoringProgram_MonitoringProgramID", "MonitoringProgram").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MonitoringProgram>("ProjectFirma.Web.Models.FK_PerformanceMeasureMonitoringProgram_MonitoringProgram_MonitoringProgramID", "MonitoringProgram").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MonitoringProgram> MonitoringProgramReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MonitoringProgram>("ProjectFirma.Web.Models.FK_PerformanceMeasureMonitoringProgram_MonitoringProgram_MonitoringProgramID", "MonitoringProgram");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MonitoringProgram>("ProjectFirma.Web.Models.FK_PerformanceMeasureMonitoringProgram_MonitoringProgram_MonitoringProgramID", "MonitoringProgram", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureMonitoringProgram_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure")]
        public PerformanceMeasure PerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureMonitoringProgram_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureMonitoringProgram_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasure> PerformanceMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureMonitoringProgram_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureMonitoringProgram_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureMonitoringProgram_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureMonitoringProgram_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureMonitoringProgram_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureMonitoringProgram_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureMonitoringProgram_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="PerformanceMeasureNote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PerformanceMeasureNote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PerformanceMeasureNote object.
        /// </summary>
        /// <param name="performanceMeasureNoteID">Initial value of the PerformanceMeasureNoteID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="performanceMeasureID">Initial value of the PerformanceMeasureID property.</param>
        /// <param name="note">Initial value of the Note property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static PerformanceMeasureNote CreatePerformanceMeasureNote(global::System.Int32 performanceMeasureNoteID, global::System.Int32 tenantID, global::System.Int32 performanceMeasureID, global::System.String note, global::System.DateTime createDate)
        {
            PerformanceMeasureNote performanceMeasureNote = new PerformanceMeasureNote();
            performanceMeasureNote.PerformanceMeasureNoteID = performanceMeasureNoteID;
            performanceMeasureNote.TenantID = tenantID;
            performanceMeasureNote.PerformanceMeasureID = performanceMeasureID;
            performanceMeasureNote.Note = note;
            performanceMeasureNote.CreateDate = createDate;
            return performanceMeasureNote;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureNoteID
        {
            get
            {
                return _PerformanceMeasureNoteID;
            }
            set
            {
                if (_PerformanceMeasureNoteID != value)
                {
                    OnPerformanceMeasureNoteIDChanging(value);
                    ReportPropertyChanging("PerformanceMeasureNoteID");
                    _PerformanceMeasureNoteID = StructuralObject.SetValidValue(value, "PerformanceMeasureNoteID");
                    ReportPropertyChanged("PerformanceMeasureNoteID");
                    OnPerformanceMeasureNoteIDChanged();
                }
            }
        }
        private global::System.Int32 _PerformanceMeasureNoteID;
        partial void OnPerformanceMeasureNoteIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureNoteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureID
        {
            get
            {
                return _PerformanceMeasureID;
            }
            set
            {
                OnPerformanceMeasureIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureID");
                _PerformanceMeasureID = StructuralObject.SetValidValue(value, "PerformanceMeasureID");
                ReportPropertyChanged("PerformanceMeasureID");
                OnPerformanceMeasureIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureID;
        partial void OnPerformanceMeasureIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, false, "Note");
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatePersonID
        {
            get
            {
                return _CreatePersonID;
            }
            set
            {
                OnCreatePersonIDChanging(value);
                ReportPropertyChanging("CreatePersonID");
                _CreatePersonID = StructuralObject.SetValidValue(value, "CreatePersonID");
                ReportPropertyChanged("CreatePersonID");
                OnCreatePersonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatePersonID;
        partial void OnCreatePersonIDChanging(Nullable<global::System.Int32> value);
        partial void OnCreatePersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, "CreateDate");
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatePersonID
        {
            get
            {
                return _UpdatePersonID;
            }
            set
            {
                OnUpdatePersonIDChanging(value);
                ReportPropertyChanging("UpdatePersonID");
                _UpdatePersonID = StructuralObject.SetValidValue(value, "UpdatePersonID");
                ReportPropertyChanged("UpdatePersonID");
                OnUpdatePersonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatePersonID;
        partial void OnUpdatePersonIDChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatePersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureNote_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure")]
        public PerformanceMeasure PerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasure> PerformanceMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureNote_Person_CreatePersonID_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_Person_CreatePersonID_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_Person_CreatePersonID_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_Person_CreatePersonID_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_Person_CreatePersonID_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureNote_Person_UpdatePersonID_PersonID", "Person")]
        public Person Person1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_Person_UpdatePersonID_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_Person_UpdatePersonID_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> Person1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_Person_UpdatePersonID_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_Person_UpdatePersonID_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureNote_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="PerformanceMeasureSubcategory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PerformanceMeasureSubcategory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PerformanceMeasureSubcategory object.
        /// </summary>
        /// <param name="performanceMeasureSubcategoryID">Initial value of the PerformanceMeasureSubcategoryID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="performanceMeasureID">Initial value of the PerformanceMeasureID property.</param>
        /// <param name="performanceMeasureSubcategoryDisplayName">Initial value of the PerformanceMeasureSubcategoryDisplayName property.</param>
        public static PerformanceMeasureSubcategory CreatePerformanceMeasureSubcategory(global::System.Int32 performanceMeasureSubcategoryID, global::System.Int32 tenantID, global::System.Int32 performanceMeasureID, global::System.String performanceMeasureSubcategoryDisplayName)
        {
            PerformanceMeasureSubcategory performanceMeasureSubcategory = new PerformanceMeasureSubcategory();
            performanceMeasureSubcategory.PerformanceMeasureSubcategoryID = performanceMeasureSubcategoryID;
            performanceMeasureSubcategory.TenantID = tenantID;
            performanceMeasureSubcategory.PerformanceMeasureID = performanceMeasureID;
            performanceMeasureSubcategory.PerformanceMeasureSubcategoryDisplayName = performanceMeasureSubcategoryDisplayName;
            return performanceMeasureSubcategory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureSubcategoryID
        {
            get
            {
                return _PerformanceMeasureSubcategoryID;
            }
            set
            {
                if (_PerformanceMeasureSubcategoryID != value)
                {
                    OnPerformanceMeasureSubcategoryIDChanging(value);
                    ReportPropertyChanging("PerformanceMeasureSubcategoryID");
                    _PerformanceMeasureSubcategoryID = StructuralObject.SetValidValue(value, "PerformanceMeasureSubcategoryID");
                    ReportPropertyChanged("PerformanceMeasureSubcategoryID");
                    OnPerformanceMeasureSubcategoryIDChanged();
                }
            }
        }
        private global::System.Int32 _PerformanceMeasureSubcategoryID;
        partial void OnPerformanceMeasureSubcategoryIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureSubcategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureID
        {
            get
            {
                return _PerformanceMeasureID;
            }
            set
            {
                OnPerformanceMeasureIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureID");
                _PerformanceMeasureID = StructuralObject.SetValidValue(value, "PerformanceMeasureID");
                ReportPropertyChanged("PerformanceMeasureID");
                OnPerformanceMeasureIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureID;
        partial void OnPerformanceMeasureIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PerformanceMeasureSubcategoryDisplayName
        {
            get
            {
                return _PerformanceMeasureSubcategoryDisplayName;
            }
            set
            {
                OnPerformanceMeasureSubcategoryDisplayNameChanging(value);
                ReportPropertyChanging("PerformanceMeasureSubcategoryDisplayName");
                _PerformanceMeasureSubcategoryDisplayName = StructuralObject.SetValidValue(value, false, "PerformanceMeasureSubcategoryDisplayName");
                ReportPropertyChanged("PerformanceMeasureSubcategoryDisplayName");
                OnPerformanceMeasureSubcategoryDisplayNameChanged();
            }
        }
        private global::System.String _PerformanceMeasureSubcategoryDisplayName;
        partial void OnPerformanceMeasureSubcategoryDisplayNameChanging(global::System.String value);
        partial void OnPerformanceMeasureSubcategoryDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ChartConfigurationJson
        {
            get
            {
                return _ChartConfigurationJson;
            }
            set
            {
                OnChartConfigurationJsonChanging(value);
                ReportPropertyChanging("ChartConfigurationJson");
                _ChartConfigurationJson = StructuralObject.SetValidValue(value, true, "ChartConfigurationJson");
                ReportPropertyChanged("ChartConfigurationJson");
                OnChartConfigurationJsonChanged();
            }
        }
        private global::System.String _ChartConfigurationJson;
        partial void OnChartConfigurationJsonChanging(global::System.String value);
        partial void OnChartConfigurationJsonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GoogleChartTypeID
        {
            get
            {
                return _GoogleChartTypeID;
            }
            set
            {
                OnGoogleChartTypeIDChanging(value);
                ReportPropertyChanging("GoogleChartTypeID");
                _GoogleChartTypeID = StructuralObject.SetValidValue(value, "GoogleChartTypeID");
                ReportPropertyChanged("GoogleChartTypeID");
                OnGoogleChartTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _GoogleChartTypeID;
        partial void OnGoogleChartTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnGoogleChartTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureSubcategory_GoogleChartType_GoogleChartTypeID", "GoogleChartType")]
        public GoogleChartType GoogleChartType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoogleChartType>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategory_GoogleChartType_GoogleChartTypeID", "GoogleChartType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoogleChartType>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategory_GoogleChartType_GoogleChartTypeID", "GoogleChartType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GoogleChartType> GoogleChartTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GoogleChartType>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategory_GoogleChartType_GoogleChartTypeID", "GoogleChartType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GoogleChartType>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategory_GoogleChartType_GoogleChartTypeID", "GoogleChartType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureSubcategory_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure")]
        public PerformanceMeasure PerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategory_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategory_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasure> PerformanceMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategory_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategory_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureActualSubcategoryOption")]
        public EntityCollection<PerformanceMeasureActualSubcategoryOption> PerformanceMeasureActualSubcategoryOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureActualSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureActualSubcategoryOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureActualSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureActualSubcategoryOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureActualSubcategoryOptionUpdate")]
        public EntityCollection<PerformanceMeasureActualSubcategoryOptionUpdate> PerformanceMeasureActualSubcategoryOptionUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureActualSubcategoryOptionUpdate>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureActualSubcategoryOptionUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureActualSubcategoryOptionUpdate>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureActualSubcategoryOptionUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureExpectedSubcategoryOption")]
        public EntityCollection<PerformanceMeasureExpectedSubcategoryOption> PerformanceMeasureExpectedSubcategoryOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureExpectedSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureExpectedSubcategoryOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureExpectedSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureExpectedSubcategoryOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureSubcategory_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategory_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategory_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategory_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategory_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategoryOption")]
        public EntityCollection<PerformanceMeasureSubcategoryOption> PerformanceMeasureSubcategoryOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategoryOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategoryOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "SnapshotPerformanceMeasureSubcategoryOption")]
        public EntityCollection<SnapshotPerformanceMeasureSubcategoryOption> SnapshotPerformanceMeasureSubcategoryOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SnapshotPerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "SnapshotPerformanceMeasureSubcategoryOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SnapshotPerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "SnapshotPerformanceMeasureSubcategoryOption", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="PerformanceMeasureSubcategoryOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PerformanceMeasureSubcategoryOption : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PerformanceMeasureSubcategoryOption object.
        /// </summary>
        /// <param name="performanceMeasureSubcategoryOptionID">Initial value of the PerformanceMeasureSubcategoryOptionID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="performanceMeasureSubcategoryID">Initial value of the PerformanceMeasureSubcategoryID property.</param>
        /// <param name="performanceMeasureSubcategoryOptionName">Initial value of the PerformanceMeasureSubcategoryOptionName property.</param>
        /// <param name="showOnFactSheet">Initial value of the ShowOnFactSheet property.</param>
        public static PerformanceMeasureSubcategoryOption CreatePerformanceMeasureSubcategoryOption(global::System.Int32 performanceMeasureSubcategoryOptionID, global::System.Int32 tenantID, global::System.Int32 performanceMeasureSubcategoryID, global::System.String performanceMeasureSubcategoryOptionName, global::System.Boolean showOnFactSheet)
        {
            PerformanceMeasureSubcategoryOption performanceMeasureSubcategoryOption = new PerformanceMeasureSubcategoryOption();
            performanceMeasureSubcategoryOption.PerformanceMeasureSubcategoryOptionID = performanceMeasureSubcategoryOptionID;
            performanceMeasureSubcategoryOption.TenantID = tenantID;
            performanceMeasureSubcategoryOption.PerformanceMeasureSubcategoryID = performanceMeasureSubcategoryID;
            performanceMeasureSubcategoryOption.PerformanceMeasureSubcategoryOptionName = performanceMeasureSubcategoryOptionName;
            performanceMeasureSubcategoryOption.ShowOnFactSheet = showOnFactSheet;
            return performanceMeasureSubcategoryOption;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureSubcategoryOptionID
        {
            get
            {
                return _PerformanceMeasureSubcategoryOptionID;
            }
            set
            {
                if (_PerformanceMeasureSubcategoryOptionID != value)
                {
                    OnPerformanceMeasureSubcategoryOptionIDChanging(value);
                    ReportPropertyChanging("PerformanceMeasureSubcategoryOptionID");
                    _PerformanceMeasureSubcategoryOptionID = StructuralObject.SetValidValue(value, "PerformanceMeasureSubcategoryOptionID");
                    ReportPropertyChanged("PerformanceMeasureSubcategoryOptionID");
                    OnPerformanceMeasureSubcategoryOptionIDChanged();
                }
            }
        }
        private global::System.Int32 _PerformanceMeasureSubcategoryOptionID;
        partial void OnPerformanceMeasureSubcategoryOptionIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureSubcategoryOptionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureSubcategoryID
        {
            get
            {
                return _PerformanceMeasureSubcategoryID;
            }
            set
            {
                OnPerformanceMeasureSubcategoryIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureSubcategoryID");
                _PerformanceMeasureSubcategoryID = StructuralObject.SetValidValue(value, "PerformanceMeasureSubcategoryID");
                ReportPropertyChanged("PerformanceMeasureSubcategoryID");
                OnPerformanceMeasureSubcategoryIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureSubcategoryID;
        partial void OnPerformanceMeasureSubcategoryIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureSubcategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PerformanceMeasureSubcategoryOptionName
        {
            get
            {
                return _PerformanceMeasureSubcategoryOptionName;
            }
            set
            {
                OnPerformanceMeasureSubcategoryOptionNameChanging(value);
                ReportPropertyChanging("PerformanceMeasureSubcategoryOptionName");
                _PerformanceMeasureSubcategoryOptionName = StructuralObject.SetValidValue(value, false, "PerformanceMeasureSubcategoryOptionName");
                ReportPropertyChanged("PerformanceMeasureSubcategoryOptionName");
                OnPerformanceMeasureSubcategoryOptionNameChanged();
            }
        }
        private global::System.String _PerformanceMeasureSubcategoryOptionName;
        partial void OnPerformanceMeasureSubcategoryOptionNameChanging(global::System.String value);
        partial void OnPerformanceMeasureSubcategoryOptionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value, "SortOrder");
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _SortOrder;
        partial void OnSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowOnFactSheet
        {
            get
            {
                return _ShowOnFactSheet;
            }
            set
            {
                OnShowOnFactSheetChanging(value);
                ReportPropertyChanging("ShowOnFactSheet");
                _ShowOnFactSheet = StructuralObject.SetValidValue(value, "ShowOnFactSheet");
                ReportPropertyChanged("ShowOnFactSheet");
                OnShowOnFactSheetChanged();
            }
        }
        private global::System.Boolean _ShowOnFactSheet;
        partial void OnShowOnFactSheetChanging(global::System.Boolean value);
        partial void OnShowOnFactSheetChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureActualSubcategoryOption")]
        public EntityCollection<PerformanceMeasureActualSubcategoryOption> PerformanceMeasureActualSubcategoryOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureActualSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureActualSubcategoryOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureActualSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureActualSubcategoryOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureActualSubcategoryOptionUpdate")]
        public EntityCollection<PerformanceMeasureActualSubcategoryOptionUpdate> PerformanceMeasureActualSubcategoryOptionUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureActualSubcategoryOptionUpdate>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureActualSubcategoryOptionUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureActualSubcategoryOptionUpdate>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureActualSubcategoryOptionUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureExpectedSubcategoryOption")]
        public EntityCollection<PerformanceMeasureExpectedSubcategoryOption> PerformanceMeasureExpectedSubcategoryOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureExpectedSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureExpectedSubcategoryOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureExpectedSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureExpectedSubcategoryOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory")]
        public PerformanceMeasureSubcategory PerformanceMeasureSubcategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasureSubcategory> PerformanceMeasureSubcategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureSubcategoryOption_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategoryOption_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategoryOption_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategoryOption_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategoryOption_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "SnapshotPerformanceMeasureSubcategoryOption")]
        public EntityCollection<SnapshotPerformanceMeasureSubcategoryOption> SnapshotPerformanceMeasureSubcategoryOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SnapshotPerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "SnapshotPerformanceMeasureSubcategoryOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SnapshotPerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "SnapshotPerformanceMeasureSubcategoryOption", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="PerformanceMeasureTargetValueType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PerformanceMeasureTargetValueType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PerformanceMeasureTargetValueType object.
        /// </summary>
        /// <param name="performanceMeasureTargetValueTypeID">Initial value of the PerformanceMeasureTargetValueTypeID property.</param>
        /// <param name="performanceMeasureTargetValueTypeName">Initial value of the PerformanceMeasureTargetValueTypeName property.</param>
        /// <param name="performanceMeasureTargetValueTypeDisplayName">Initial value of the PerformanceMeasureTargetValueTypeDisplayName property.</param>
        public static PerformanceMeasureTargetValueType CreatePerformanceMeasureTargetValueType(global::System.Int32 performanceMeasureTargetValueTypeID, global::System.String performanceMeasureTargetValueTypeName, global::System.String performanceMeasureTargetValueTypeDisplayName)
        {
            PerformanceMeasureTargetValueType performanceMeasureTargetValueType = new PerformanceMeasureTargetValueType();
            performanceMeasureTargetValueType.PerformanceMeasureTargetValueTypeID = performanceMeasureTargetValueTypeID;
            performanceMeasureTargetValueType.PerformanceMeasureTargetValueTypeName = performanceMeasureTargetValueTypeName;
            performanceMeasureTargetValueType.PerformanceMeasureTargetValueTypeDisplayName = performanceMeasureTargetValueTypeDisplayName;
            return performanceMeasureTargetValueType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureTargetValueTypeID
        {
            get
            {
                return _PerformanceMeasureTargetValueTypeID;
            }
            set
            {
                if (_PerformanceMeasureTargetValueTypeID != value)
                {
                    OnPerformanceMeasureTargetValueTypeIDChanging(value);
                    ReportPropertyChanging("PerformanceMeasureTargetValueTypeID");
                    _PerformanceMeasureTargetValueTypeID = StructuralObject.SetValidValue(value, "PerformanceMeasureTargetValueTypeID");
                    ReportPropertyChanged("PerformanceMeasureTargetValueTypeID");
                    OnPerformanceMeasureTargetValueTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _PerformanceMeasureTargetValueTypeID;
        partial void OnPerformanceMeasureTargetValueTypeIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureTargetValueTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PerformanceMeasureTargetValueTypeName
        {
            get
            {
                return _PerformanceMeasureTargetValueTypeName;
            }
            set
            {
                OnPerformanceMeasureTargetValueTypeNameChanging(value);
                ReportPropertyChanging("PerformanceMeasureTargetValueTypeName");
                _PerformanceMeasureTargetValueTypeName = StructuralObject.SetValidValue(value, false, "PerformanceMeasureTargetValueTypeName");
                ReportPropertyChanged("PerformanceMeasureTargetValueTypeName");
                OnPerformanceMeasureTargetValueTypeNameChanged();
            }
        }
        private global::System.String _PerformanceMeasureTargetValueTypeName;
        partial void OnPerformanceMeasureTargetValueTypeNameChanging(global::System.String value);
        partial void OnPerformanceMeasureTargetValueTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PerformanceMeasureTargetValueTypeDisplayName
        {
            get
            {
                return _PerformanceMeasureTargetValueTypeDisplayName;
            }
            set
            {
                OnPerformanceMeasureTargetValueTypeDisplayNameChanging(value);
                ReportPropertyChanging("PerformanceMeasureTargetValueTypeDisplayName");
                _PerformanceMeasureTargetValueTypeDisplayName = StructuralObject.SetValidValue(value, false, "PerformanceMeasureTargetValueTypeDisplayName");
                ReportPropertyChanged("PerformanceMeasureTargetValueTypeDisplayName");
                OnPerformanceMeasureTargetValueTypeDisplayNameChanged();
            }
        }
        private global::System.String _PerformanceMeasureTargetValueTypeDisplayName;
        partial void OnPerformanceMeasureTargetValueTypeDisplayNameChanging(global::System.String value);
        partial void OnPerformanceMeasureTargetValueTypeDisplayNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="PerformanceMeasureType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PerformanceMeasureType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PerformanceMeasureType object.
        /// </summary>
        /// <param name="performanceMeasureTypeID">Initial value of the PerformanceMeasureTypeID property.</param>
        /// <param name="performanceMeasureTypeName">Initial value of the PerformanceMeasureTypeName property.</param>
        /// <param name="performanceMeasureTypeDisplayName">Initial value of the PerformanceMeasureTypeDisplayName property.</param>
        public static PerformanceMeasureType CreatePerformanceMeasureType(global::System.Int32 performanceMeasureTypeID, global::System.String performanceMeasureTypeName, global::System.String performanceMeasureTypeDisplayName)
        {
            PerformanceMeasureType performanceMeasureType = new PerformanceMeasureType();
            performanceMeasureType.PerformanceMeasureTypeID = performanceMeasureTypeID;
            performanceMeasureType.PerformanceMeasureTypeName = performanceMeasureTypeName;
            performanceMeasureType.PerformanceMeasureTypeDisplayName = performanceMeasureTypeDisplayName;
            return performanceMeasureType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureTypeID
        {
            get
            {
                return _PerformanceMeasureTypeID;
            }
            set
            {
                if (_PerformanceMeasureTypeID != value)
                {
                    OnPerformanceMeasureTypeIDChanging(value);
                    ReportPropertyChanging("PerformanceMeasureTypeID");
                    _PerformanceMeasureTypeID = StructuralObject.SetValidValue(value, "PerformanceMeasureTypeID");
                    ReportPropertyChanged("PerformanceMeasureTypeID");
                    OnPerformanceMeasureTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _PerformanceMeasureTypeID;
        partial void OnPerformanceMeasureTypeIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PerformanceMeasureTypeName
        {
            get
            {
                return _PerformanceMeasureTypeName;
            }
            set
            {
                OnPerformanceMeasureTypeNameChanging(value);
                ReportPropertyChanging("PerformanceMeasureTypeName");
                _PerformanceMeasureTypeName = StructuralObject.SetValidValue(value, false, "PerformanceMeasureTypeName");
                ReportPropertyChanged("PerformanceMeasureTypeName");
                OnPerformanceMeasureTypeNameChanged();
            }
        }
        private global::System.String _PerformanceMeasureTypeName;
        partial void OnPerformanceMeasureTypeNameChanging(global::System.String value);
        partial void OnPerformanceMeasureTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PerformanceMeasureTypeDisplayName
        {
            get
            {
                return _PerformanceMeasureTypeDisplayName;
            }
            set
            {
                OnPerformanceMeasureTypeDisplayNameChanging(value);
                ReportPropertyChanging("PerformanceMeasureTypeDisplayName");
                _PerformanceMeasureTypeDisplayName = StructuralObject.SetValidValue(value, false, "PerformanceMeasureTypeDisplayName");
                ReportPropertyChanged("PerformanceMeasureTypeDisplayName");
                OnPerformanceMeasureTypeDisplayNameChanged();
            }
        }
        private global::System.String _PerformanceMeasureTypeDisplayName;
        partial void OnPerformanceMeasureTypeDisplayNameChanging(global::System.String value);
        partial void OnPerformanceMeasureTypeDisplayNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasure_PerformanceMeasureType_PerformanceMeasureTypeID", "PerformanceMeasure")]
        public EntityCollection<PerformanceMeasure> PerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasure_PerformanceMeasureType_PerformanceMeasureTypeID", "PerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasure_PerformanceMeasureType_PerformanceMeasureTypeID", "PerformanceMeasure", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="Person")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Person : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Person object.
        /// </summary>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="receiveSupportEmails">Initial value of the ReceiveSupportEmails property.</param>
        public static Person CreatePerson(global::System.Int32 personID, global::System.Int32 tenantID, global::System.String firstName, global::System.String lastName, global::System.Int32 roleID, global::System.DateTime createDate, global::System.Boolean isActive, global::System.Boolean receiveSupportEmails)
        {
            Person person = new Person();
            person.PersonID = personID;
            person.TenantID = tenantID;
            person.FirstName = firstName;
            person.LastName = lastName;
            person.RoleID = roleID;
            person.CreateDate = createDate;
            person.IsActive = isActive;
            person.ReceiveSupportEmails = receiveSupportEmails;
            return person;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                if (_PersonID != value)
                {
                    OnPersonIDChanging(value);
                    ReportPropertyChanging("PersonID");
                    _PersonID = StructuralObject.SetValidValue(value, "PersonID");
                    ReportPropertyChanged("PersonID");
                    OnPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PersonUniqueIdentifier
        {
            get
            {
                return _PersonUniqueIdentifier;
            }
            set
            {
                OnPersonUniqueIdentifierChanging(value);
                ReportPropertyChanging("PersonUniqueIdentifier");
                _PersonUniqueIdentifier = StructuralObject.SetValidValue(value, true, "PersonUniqueIdentifier");
                ReportPropertyChanged("PersonUniqueIdentifier");
                OnPersonUniqueIdentifierChanged();
            }
        }
        private global::System.String _PersonUniqueIdentifier;
        partial void OnPersonUniqueIdentifierChanging(global::System.String value);
        partial void OnPersonUniqueIdentifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true, "Phone");
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PasswordPdfK2SaltHash
        {
            get
            {
                return _PasswordPdfK2SaltHash;
            }
            set
            {
                OnPasswordPdfK2SaltHashChanging(value);
                ReportPropertyChanging("PasswordPdfK2SaltHash");
                _PasswordPdfK2SaltHash = StructuralObject.SetValidValue(value, true, "PasswordPdfK2SaltHash");
                ReportPropertyChanged("PasswordPdfK2SaltHash");
                OnPasswordPdfK2SaltHashChanged();
            }
        }
        private global::System.String _PasswordPdfK2SaltHash;
        partial void OnPasswordPdfK2SaltHashChanging(global::System.String value);
        partial void OnPasswordPdfK2SaltHashChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                OnRoleIDChanging(value);
                ReportPropertyChanging("RoleID");
                _RoleID = StructuralObject.SetValidValue(value, "RoleID");
                ReportPropertyChanged("RoleID");
                OnRoleIDChanged();
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, "CreateDate");
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value, "LastActivityDate");
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastActivityDate;
        partial void OnLastActivityDateChanging(Nullable<global::System.DateTime> value);
        partial void OnLastActivityDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private Nullable<global::System.Int32> _OrganizationID;
        partial void OnOrganizationIDChanging(Nullable<global::System.Int32> value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReceiveSupportEmails
        {
            get
            {
                return _ReceiveSupportEmails;
            }
            set
            {
                OnReceiveSupportEmailsChanging(value);
                ReportPropertyChanging("ReceiveSupportEmails");
                _ReceiveSupportEmails = StructuralObject.SetValidValue(value, "ReceiveSupportEmails");
                ReportPropertyChanged("ReceiveSupportEmails");
                OnReceiveSupportEmailsChanged();
            }
        }
        private global::System.Boolean _ReceiveSupportEmails;
        partial void OnReceiveSupportEmailsChanging(global::System.Boolean value);
        partial void OnReceiveSupportEmailsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> WebServiceAccessToken
        {
            get
            {
                return _WebServiceAccessToken;
            }
            set
            {
                OnWebServiceAccessTokenChanging(value);
                ReportPropertyChanging("WebServiceAccessToken");
                _WebServiceAccessToken = StructuralObject.SetValidValue(value, "WebServiceAccessToken");
                ReportPropertyChanged("WebServiceAccessToken");
                OnWebServiceAccessTokenChanged();
            }
        }
        private Nullable<global::System.Guid> _WebServiceAccessToken;
        partial void OnWebServiceAccessTokenChanging(Nullable<global::System.Guid> value);
        partial void OnWebServiceAccessTokenChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LoginName
        {
            get
            {
                return _LoginName;
            }
            set
            {
                OnLoginNameChanging(value);
                ReportPropertyChanging("LoginName");
                _LoginName = StructuralObject.SetValidValue(value, true, "LoginName");
                ReportPropertyChanged("LoginName");
                OnLoginNameChanged();
            }
        }
        private global::System.String _LoginName;
        partial void OnLoginNameChanging(global::System.String value);
        partial void OnLoginNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MiddleName
        {
            get
            {
                return _MiddleName;
            }
            set
            {
                OnMiddleNameChanging(value);
                ReportPropertyChanging("MiddleName");
                _MiddleName = StructuralObject.SetValidValue(value, true, "MiddleName");
                ReportPropertyChanged("MiddleName");
                OnMiddleNameChanged();
            }
        }
        private global::System.String _MiddleName;
        partial void OnMiddleNameChanging(global::System.String value);
        partial void OnMiddleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StatewideVendorNumber
        {
            get
            {
                return _StatewideVendorNumber;
            }
            set
            {
                OnStatewideVendorNumberChanging(value);
                ReportPropertyChanging("StatewideVendorNumber");
                _StatewideVendorNumber = StructuralObject.SetValidValue(value, true, "StatewideVendorNumber");
                ReportPropertyChanged("StatewideVendorNumber");
                OnStatewideVendorNumberChanged();
            }
        }
        private global::System.String _StatewideVendorNumber;
        partial void OnStatewideVendorNumberChanging(global::System.String value);
        partial void OnStatewideVendorNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PersonAddress
        {
            get
            {
                return _PersonAddress;
            }
            set
            {
                OnPersonAddressChanging(value);
                ReportPropertyChanging("PersonAddress");
                _PersonAddress = StructuralObject.SetValidValue(value, true, "PersonAddress");
                ReportPropertyChanged("PersonAddress");
                OnPersonAddressChanged();
            }
        }
        private global::System.String _PersonAddress;
        partial void OnPersonAddressChanging(global::System.String value);
        partial void OnPersonAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AddedByPersonID
        {
            get
            {
                return _AddedByPersonID;
            }
            set
            {
                OnAddedByPersonIDChanging(value);
                ReportPropertyChanging("AddedByPersonID");
                _AddedByPersonID = StructuralObject.SetValidValue(value, "AddedByPersonID");
                ReportPropertyChanged("AddedByPersonID");
                OnAddedByPersonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _AddedByPersonID;
        partial void OnAddedByPersonIDChanging(Nullable<global::System.Int32> value);
        partial void OnAddedByPersonIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_AuditLog_Person_PersonID", "AuditLog")]
        public EntityCollection<AuditLog> AuditLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuditLog>("ProjectFirma.Web.Models.FK_AuditLog_Person_PersonID", "AuditLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuditLog>("ProjectFirma.Web.Models.FK_AuditLog_Person_PersonID", "AuditLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FileResource_Person_CreatePersonID_PersonID", "FileResource")]
        public EntityCollection<FileResource> FileResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FileResource>("ProjectFirma.Web.Models.FK_FileResource_Person_CreatePersonID_PersonID", "FileResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FileResource>("ProjectFirma.Web.Models.FK_FileResource_Person_CreatePersonID_PersonID", "FileResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ImportExternalProjectStaging_Person_CreatePersonID_PersonID", "ImportExternalProjectStaging")]
        public EntityCollection<ImportExternalProjectStaging> ImportExternalProjectStaging
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ImportExternalProjectStaging>("ProjectFirma.Web.Models.FK_ImportExternalProjectStaging_Person_CreatePersonID_PersonID", "ImportExternalProjectStaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ImportExternalProjectStaging>("ProjectFirma.Web.Models.FK_ImportExternalProjectStaging_Person_CreatePersonID_PersonID", "ImportExternalProjectStaging", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Notification_Person_PersonID", "Notification")]
        public EntityCollection<Notification> Notification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Notification>("ProjectFirma.Web.Models.FK_Notification_Person_PersonID", "Notification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Notification>("ProjectFirma.Web.Models.FK_Notification_Person_PersonID", "Notification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Organization_Person_PrimaryContactPersonID_PersonID", "Organization")]
        public EntityCollection<Organization> Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Organization>("ProjectFirma.Web.Models.FK_Organization_Person_PrimaryContactPersonID_PersonID", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Organization>("ProjectFirma.Web.Models.FK_Organization_Person_PrimaryContactPersonID_PersonID", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Person_Organization_OrganizationID", "Organization")]
        public Organization Organization1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("ProjectFirma.Web.Models.FK_Person_Organization_OrganizationID", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("ProjectFirma.Web.Models.FK_Person_Organization_OrganizationID", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> Organization1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("ProjectFirma.Web.Models.FK_Person_Organization_OrganizationID", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("ProjectFirma.Web.Models.FK_Person_Organization_OrganizationID", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureNote_Person_CreatePersonID_PersonID", "PerformanceMeasureNote")]
        public EntityCollection<PerformanceMeasureNote> PerformanceMeasureNote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureNote>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_Person_CreatePersonID_PersonID", "PerformanceMeasureNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureNote>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_Person_CreatePersonID_PersonID", "PerformanceMeasureNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureNote_Person_UpdatePersonID_PersonID", "PerformanceMeasureNote")]
        public EntityCollection<PerformanceMeasureNote> PerformanceMeasureNote1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureNote>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_Person_UpdatePersonID_PersonID", "PerformanceMeasureNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureNote>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_Person_UpdatePersonID_PersonID", "PerformanceMeasureNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Person_Person_AddedByPersonID_PersonID", "Person1")]
        public EntityCollection<Person> Person1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("ProjectFirma.Web.Models.FK_Person_Person_AddedByPersonID_PersonID", "Person1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("ProjectFirma.Web.Models.FK_Person_Person_AddedByPersonID_PersonID", "Person1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Person_Person_AddedByPersonID_PersonID", "Person")]
        public Person Person2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_Person_Person_AddedByPersonID_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_Person_Person_AddedByPersonID_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> Person2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_Person_Person_AddedByPersonID_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_Person_Person_AddedByPersonID_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Person_Role_RoleID", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("ProjectFirma.Web.Models.FK_Person_Role_RoleID", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("ProjectFirma.Web.Models.FK_Person_Role_RoleID", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("ProjectFirma.Web.Models.FK_Person_Role_RoleID", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("ProjectFirma.Web.Models.FK_Person_Role_RoleID", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Person_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Person_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Person_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Person_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Person_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PersonStewardGeospatialArea_Person_PersonID", "PersonStewardGeospatialArea")]
        public EntityCollection<PersonStewardGeospatialArea> PersonStewardGeospatialArea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonStewardGeospatialArea>("ProjectFirma.Web.Models.FK_PersonStewardGeospatialArea_Person_PersonID", "PersonStewardGeospatialArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonStewardGeospatialArea>("ProjectFirma.Web.Models.FK_PersonStewardGeospatialArea_Person_PersonID", "PersonStewardGeospatialArea", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PersonStewardOrganization_Person_PersonID", "PersonStewardOrganization")]
        public EntityCollection<PersonStewardOrganization> PersonStewardOrganization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonStewardOrganization>("ProjectFirma.Web.Models.FK_PersonStewardOrganization_Person_PersonID", "PersonStewardOrganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonStewardOrganization>("ProjectFirma.Web.Models.FK_PersonStewardOrganization_Person_PersonID", "PersonStewardOrganization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PersonStewardTaxonomyBranch_Person_PersonID", "PersonStewardTaxonomyBranch")]
        public EntityCollection<PersonStewardTaxonomyBranch> PersonStewardTaxonomyBranch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonStewardTaxonomyBranch>("ProjectFirma.Web.Models.FK_PersonStewardTaxonomyBranch_Person_PersonID", "PersonStewardTaxonomyBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonStewardTaxonomyBranch>("ProjectFirma.Web.Models.FK_PersonStewardTaxonomyBranch_Person_PersonID", "PersonStewardTaxonomyBranch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Project_Person_PrimaryContactPersonID_PersonID", "Project")]
        public EntityCollection<Project> Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("ProjectFirma.Web.Models.FK_Project_Person_PrimaryContactPersonID_PersonID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("ProjectFirma.Web.Models.FK_Project_Person_PrimaryContactPersonID_PersonID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Project_Person_ProposingPersonID_PersonID", "Project")]
        public EntityCollection<Project> Project1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("ProjectFirma.Web.Models.FK_Project_Person_ProposingPersonID_PersonID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("ProjectFirma.Web.Models.FK_Project_Person_ProposingPersonID_PersonID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Project_Person_ReviewedByPersonID_PersonID", "Project")]
        public EntityCollection<Project> Project2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("ProjectFirma.Web.Models.FK_Project_Person_ReviewedByPersonID_PersonID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("ProjectFirma.Web.Models.FK_Project_Person_ReviewedByPersonID_PersonID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectInternalNote_Person_CreatePersonID_PersonID", "ProjectInternalNote")]
        public EntityCollection<ProjectInternalNote> ProjectInternalNote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectInternalNote>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Person_CreatePersonID_PersonID", "ProjectInternalNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectInternalNote>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Person_CreatePersonID_PersonID", "ProjectInternalNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectInternalNote_Person_UpdatePersonID_PersonID", "ProjectInternalNote")]
        public EntityCollection<ProjectInternalNote> ProjectInternalNote1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectInternalNote>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Person_UpdatePersonID_PersonID", "ProjectInternalNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectInternalNote>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Person_UpdatePersonID_PersonID", "ProjectInternalNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationStaging_Person_PersonID", "ProjectLocationStaging")]
        public EntityCollection<ProjectLocationStaging> ProjectLocationStaging
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectLocationStaging>("ProjectFirma.Web.Models.FK_ProjectLocationStaging_Person_PersonID", "ProjectLocationStaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectLocationStaging>("ProjectFirma.Web.Models.FK_ProjectLocationStaging_Person_PersonID", "ProjectLocationStaging", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationStagingUpdate_Person_PersonID", "ProjectLocationStagingUpdate")]
        public EntityCollection<ProjectLocationStagingUpdate> ProjectLocationStagingUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectLocationStagingUpdate>("ProjectFirma.Web.Models.FK_ProjectLocationStagingUpdate_Person_PersonID", "ProjectLocationStagingUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectLocationStagingUpdate>("ProjectFirma.Web.Models.FK_ProjectLocationStagingUpdate_Person_PersonID", "ProjectLocationStagingUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectNote_Person_CreatePersonID_PersonID", "ProjectNote")]
        public EntityCollection<ProjectNote> ProjectNote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectNote>("ProjectFirma.Web.Models.FK_ProjectNote_Person_CreatePersonID_PersonID", "ProjectNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectNote>("ProjectFirma.Web.Models.FK_ProjectNote_Person_CreatePersonID_PersonID", "ProjectNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectNote_Person_UpdatePersonID_PersonID", "ProjectNote")]
        public EntityCollection<ProjectNote> ProjectNote1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectNote>("ProjectFirma.Web.Models.FK_ProjectNote_Person_UpdatePersonID_PersonID", "ProjectNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectNote>("ProjectFirma.Web.Models.FK_ProjectNote_Person_UpdatePersonID_PersonID", "ProjectNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectNoteUpdate_Person_CreatePersonID_PersonID", "ProjectNoteUpdate")]
        public EntityCollection<ProjectNoteUpdate> ProjectNoteUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectNoteUpdate>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_Person_CreatePersonID_PersonID", "ProjectNoteUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectNoteUpdate>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_Person_CreatePersonID_PersonID", "ProjectNoteUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectNoteUpdate_Person_UpdatePersonID_PersonID", "ProjectNoteUpdate")]
        public EntityCollection<ProjectNoteUpdate> ProjectNoteUpdate1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectNoteUpdate>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_Person_UpdatePersonID_PersonID", "ProjectNoteUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectNoteUpdate>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_Person_UpdatePersonID_PersonID", "ProjectNoteUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectPerson_Person_PersonID", "ProjectPerson")]
        public EntityCollection<ProjectPerson> ProjectPerson
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectPerson>("ProjectFirma.Web.Models.FK_ProjectPerson_Person_PersonID", "ProjectPerson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectPerson>("ProjectFirma.Web.Models.FK_ProjectPerson_Person_PersonID", "ProjectPerson", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectPersonUpdate_Person_PersonID", "ProjectPersonUpdate")]
        public EntityCollection<ProjectPersonUpdate> ProjectPersonUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectPersonUpdate>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_Person_PersonID", "ProjectPersonUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectPersonUpdate>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_Person_PersonID", "ProjectPersonUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdate_Person_PrimaryContactPersonID_PersonID", "ProjectUpdate")]
        public EntityCollection<ProjectUpdate> ProjectUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUpdate>("ProjectFirma.Web.Models.FK_ProjectUpdate_Person_PrimaryContactPersonID_PersonID", "ProjectUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUpdate>("ProjectFirma.Web.Models.FK_ProjectUpdate_Person_PrimaryContactPersonID_PersonID", "ProjectUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateBatch_Person_LastUpdatePersonID_PersonID", "ProjectUpdateBatch")]
        public EntityCollection<ProjectUpdateBatch> ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_Person_LastUpdatePersonID_PersonID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_Person_LastUpdatePersonID_PersonID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateHistory_Person_UpdatePersonID_PersonID", "ProjectUpdateHistory")]
        public EntityCollection<ProjectUpdateHistory> ProjectUpdateHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUpdateHistory>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_Person_UpdatePersonID_PersonID", "ProjectUpdateHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUpdateHistory>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_Person_UpdatePersonID_PersonID", "ProjectUpdateHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SupportRequestLog_Person_RequestPersonID_PersonID", "SupportRequestLog")]
        public EntityCollection<SupportRequestLog> SupportRequestLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SupportRequestLog>("ProjectFirma.Web.Models.FK_SupportRequestLog_Person_RequestPersonID_PersonID", "SupportRequestLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SupportRequestLog>("ProjectFirma.Web.Models.FK_SupportRequestLog_Person_RequestPersonID_PersonID", "SupportRequestLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_Person_PrimaryContactPersonID_PersonID", "TenantAttribute")]
        public EntityCollection<TenantAttribute> TenantAttribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TenantAttribute>("ProjectFirma.Web.Models.FK_TenantAttribute_Person_PrimaryContactPersonID_PersonID", "TenantAttribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TenantAttribute>("ProjectFirma.Web.Models.FK_TenantAttribute_Person_PrimaryContactPersonID_PersonID", "TenantAttribute", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="PersonStewardGeospatialArea")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonStewardGeospatialArea : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonStewardGeospatialArea object.
        /// </summary>
        /// <param name="personStewardGeospatialAreaID">Initial value of the PersonStewardGeospatialAreaID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="geospatialAreaID">Initial value of the GeospatialAreaID property.</param>
        public static PersonStewardGeospatialArea CreatePersonStewardGeospatialArea(global::System.Int32 personStewardGeospatialAreaID, global::System.Int32 tenantID, global::System.Int32 personID, global::System.Int32 geospatialAreaID)
        {
            PersonStewardGeospatialArea personStewardGeospatialArea = new PersonStewardGeospatialArea();
            personStewardGeospatialArea.PersonStewardGeospatialAreaID = personStewardGeospatialAreaID;
            personStewardGeospatialArea.TenantID = tenantID;
            personStewardGeospatialArea.PersonID = personID;
            personStewardGeospatialArea.GeospatialAreaID = geospatialAreaID;
            return personStewardGeospatialArea;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonStewardGeospatialAreaID
        {
            get
            {
                return _PersonStewardGeospatialAreaID;
            }
            set
            {
                if (_PersonStewardGeospatialAreaID != value)
                {
                    OnPersonStewardGeospatialAreaIDChanging(value);
                    ReportPropertyChanging("PersonStewardGeospatialAreaID");
                    _PersonStewardGeospatialAreaID = StructuralObject.SetValidValue(value, "PersonStewardGeospatialAreaID");
                    ReportPropertyChanged("PersonStewardGeospatialAreaID");
                    OnPersonStewardGeospatialAreaIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonStewardGeospatialAreaID;
        partial void OnPersonStewardGeospatialAreaIDChanging(global::System.Int32 value);
        partial void OnPersonStewardGeospatialAreaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value, "PersonID");
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GeospatialAreaID
        {
            get
            {
                return _GeospatialAreaID;
            }
            set
            {
                OnGeospatialAreaIDChanging(value);
                ReportPropertyChanging("GeospatialAreaID");
                _GeospatialAreaID = StructuralObject.SetValidValue(value, "GeospatialAreaID");
                ReportPropertyChanged("GeospatialAreaID");
                OnGeospatialAreaIDChanged();
            }
        }
        private global::System.Int32 _GeospatialAreaID;
        partial void OnGeospatialAreaIDChanging(global::System.Int32 value);
        partial void OnGeospatialAreaIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PersonStewardGeospatialArea_GeospatialArea_GeospatialAreaID", "GeospatialArea")]
        public GeospatialArea GeospatialArea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GeospatialArea>("ProjectFirma.Web.Models.FK_PersonStewardGeospatialArea_GeospatialArea_GeospatialAreaID", "GeospatialArea").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GeospatialArea>("ProjectFirma.Web.Models.FK_PersonStewardGeospatialArea_GeospatialArea_GeospatialAreaID", "GeospatialArea").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GeospatialArea> GeospatialAreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GeospatialArea>("ProjectFirma.Web.Models.FK_PersonStewardGeospatialArea_GeospatialArea_GeospatialAreaID", "GeospatialArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GeospatialArea>("ProjectFirma.Web.Models.FK_PersonStewardGeospatialArea_GeospatialArea_GeospatialAreaID", "GeospatialArea", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PersonStewardGeospatialArea_Person_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_PersonStewardGeospatialArea_Person_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_PersonStewardGeospatialArea_Person_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_PersonStewardGeospatialArea_Person_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_PersonStewardGeospatialArea_Person_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PersonStewardGeospatialArea_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PersonStewardGeospatialArea_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PersonStewardGeospatialArea_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PersonStewardGeospatialArea_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PersonStewardGeospatialArea_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="PersonStewardOrganization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonStewardOrganization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonStewardOrganization object.
        /// </summary>
        /// <param name="personStewardOrganizationID">Initial value of the PersonStewardOrganizationID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        public static PersonStewardOrganization CreatePersonStewardOrganization(global::System.Int32 personStewardOrganizationID, global::System.Int32 tenantID, global::System.Int32 personID, global::System.Int32 organizationID)
        {
            PersonStewardOrganization personStewardOrganization = new PersonStewardOrganization();
            personStewardOrganization.PersonStewardOrganizationID = personStewardOrganizationID;
            personStewardOrganization.TenantID = tenantID;
            personStewardOrganization.PersonID = personID;
            personStewardOrganization.OrganizationID = organizationID;
            return personStewardOrganization;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonStewardOrganizationID
        {
            get
            {
                return _PersonStewardOrganizationID;
            }
            set
            {
                if (_PersonStewardOrganizationID != value)
                {
                    OnPersonStewardOrganizationIDChanging(value);
                    ReportPropertyChanging("PersonStewardOrganizationID");
                    _PersonStewardOrganizationID = StructuralObject.SetValidValue(value, "PersonStewardOrganizationID");
                    ReportPropertyChanged("PersonStewardOrganizationID");
                    OnPersonStewardOrganizationIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonStewardOrganizationID;
        partial void OnPersonStewardOrganizationIDChanging(global::System.Int32 value);
        partial void OnPersonStewardOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value, "PersonID");
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Int32 _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Int32 value);
        partial void OnOrganizationIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PersonStewardOrganization_Organization_OrganizationID", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("ProjectFirma.Web.Models.FK_PersonStewardOrganization_Organization_OrganizationID", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("ProjectFirma.Web.Models.FK_PersonStewardOrganization_Organization_OrganizationID", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("ProjectFirma.Web.Models.FK_PersonStewardOrganization_Organization_OrganizationID", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("ProjectFirma.Web.Models.FK_PersonStewardOrganization_Organization_OrganizationID", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PersonStewardOrganization_Person_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_PersonStewardOrganization_Person_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_PersonStewardOrganization_Person_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_PersonStewardOrganization_Person_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_PersonStewardOrganization_Person_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PersonStewardOrganization_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PersonStewardOrganization_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PersonStewardOrganization_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PersonStewardOrganization_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PersonStewardOrganization_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="PersonStewardTaxonomyBranch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PersonStewardTaxonomyBranch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PersonStewardTaxonomyBranch object.
        /// </summary>
        /// <param name="personStewardTaxonomyBranchID">Initial value of the PersonStewardTaxonomyBranchID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="taxonomyBranchID">Initial value of the TaxonomyBranchID property.</param>
        public static PersonStewardTaxonomyBranch CreatePersonStewardTaxonomyBranch(global::System.Int32 personStewardTaxonomyBranchID, global::System.Int32 tenantID, global::System.Int32 personID, global::System.Int32 taxonomyBranchID)
        {
            PersonStewardTaxonomyBranch personStewardTaxonomyBranch = new PersonStewardTaxonomyBranch();
            personStewardTaxonomyBranch.PersonStewardTaxonomyBranchID = personStewardTaxonomyBranchID;
            personStewardTaxonomyBranch.TenantID = tenantID;
            personStewardTaxonomyBranch.PersonID = personID;
            personStewardTaxonomyBranch.TaxonomyBranchID = taxonomyBranchID;
            return personStewardTaxonomyBranch;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonStewardTaxonomyBranchID
        {
            get
            {
                return _PersonStewardTaxonomyBranchID;
            }
            set
            {
                if (_PersonStewardTaxonomyBranchID != value)
                {
                    OnPersonStewardTaxonomyBranchIDChanging(value);
                    ReportPropertyChanging("PersonStewardTaxonomyBranchID");
                    _PersonStewardTaxonomyBranchID = StructuralObject.SetValidValue(value, "PersonStewardTaxonomyBranchID");
                    ReportPropertyChanged("PersonStewardTaxonomyBranchID");
                    OnPersonStewardTaxonomyBranchIDChanged();
                }
            }
        }
        private global::System.Int32 _PersonStewardTaxonomyBranchID;
        partial void OnPersonStewardTaxonomyBranchIDChanging(global::System.Int32 value);
        partial void OnPersonStewardTaxonomyBranchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value, "PersonID");
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaxonomyBranchID
        {
            get
            {
                return _TaxonomyBranchID;
            }
            set
            {
                OnTaxonomyBranchIDChanging(value);
                ReportPropertyChanging("TaxonomyBranchID");
                _TaxonomyBranchID = StructuralObject.SetValidValue(value, "TaxonomyBranchID");
                ReportPropertyChanged("TaxonomyBranchID");
                OnTaxonomyBranchIDChanged();
            }
        }
        private global::System.Int32 _TaxonomyBranchID;
        partial void OnTaxonomyBranchIDChanging(global::System.Int32 value);
        partial void OnTaxonomyBranchIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PersonStewardTaxonomyBranch_Person_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_PersonStewardTaxonomyBranch_Person_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_PersonStewardTaxonomyBranch_Person_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_PersonStewardTaxonomyBranch_Person_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_PersonStewardTaxonomyBranch_Person_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PersonStewardTaxonomyBranch_TaxonomyBranch_TaxonomyBranchID", "TaxonomyBranch")]
        public TaxonomyBranch TaxonomyBranch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxonomyBranch>("ProjectFirma.Web.Models.FK_PersonStewardTaxonomyBranch_TaxonomyBranch_TaxonomyBranchID", "TaxonomyBranch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxonomyBranch>("ProjectFirma.Web.Models.FK_PersonStewardTaxonomyBranch_TaxonomyBranch_TaxonomyBranchID", "TaxonomyBranch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaxonomyBranch> TaxonomyBranchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxonomyBranch>("ProjectFirma.Web.Models.FK_PersonStewardTaxonomyBranch_TaxonomyBranch_TaxonomyBranchID", "TaxonomyBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaxonomyBranch>("ProjectFirma.Web.Models.FK_PersonStewardTaxonomyBranch_TaxonomyBranch_TaxonomyBranchID", "TaxonomyBranch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PersonStewardTaxonomyBranch_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PersonStewardTaxonomyBranch_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PersonStewardTaxonomyBranch_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PersonStewardTaxonomyBranch_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_PersonStewardTaxonomyBranch_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="taxonomyLeafID">Initial value of the TaxonomyLeafID property.</param>
        /// <param name="projectStageID">Initial value of the ProjectStageID property.</param>
        /// <param name="projectName">Initial value of the ProjectName property.</param>
        /// <param name="projectDescription">Initial value of the ProjectDescription property.</param>
        /// <param name="isFeatured">Initial value of the IsFeatured property.</param>
        /// <param name="projectLocationSimpleTypeID">Initial value of the ProjectLocationSimpleTypeID property.</param>
        /// <param name="projectApprovalStatusID">Initial value of the ProjectApprovalStatusID property.</param>
        public static Project CreateProject(global::System.Int32 projectID, global::System.Int32 tenantID, global::System.Int32 taxonomyLeafID, global::System.Int32 projectStageID, global::System.String projectName, global::System.String projectDescription, global::System.Boolean isFeatured, global::System.Int32 projectLocationSimpleTypeID, global::System.Int32 projectApprovalStatusID)
        {
            Project project = new Project();
            project.ProjectID = projectID;
            project.TenantID = tenantID;
            project.TaxonomyLeafID = taxonomyLeafID;
            project.ProjectStageID = projectStageID;
            project.ProjectName = projectName;
            project.ProjectDescription = projectDescription;
            project.IsFeatured = isFeatured;
            project.ProjectLocationSimpleTypeID = projectLocationSimpleTypeID;
            project.ProjectApprovalStatusID = projectApprovalStatusID;
            return project;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                if (_ProjectID != value)
                {
                    OnProjectIDChanging(value);
                    ReportPropertyChanging("ProjectID");
                    _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                    ReportPropertyChanged("ProjectID");
                    OnProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaxonomyLeafID
        {
            get
            {
                return _TaxonomyLeafID;
            }
            set
            {
                OnTaxonomyLeafIDChanging(value);
                ReportPropertyChanging("TaxonomyLeafID");
                _TaxonomyLeafID = StructuralObject.SetValidValue(value, "TaxonomyLeafID");
                ReportPropertyChanged("TaxonomyLeafID");
                OnTaxonomyLeafIDChanged();
            }
        }
        private global::System.Int32 _TaxonomyLeafID;
        partial void OnTaxonomyLeafIDChanging(global::System.Int32 value);
        partial void OnTaxonomyLeafIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectStageID
        {
            get
            {
                return _ProjectStageID;
            }
            set
            {
                OnProjectStageIDChanging(value);
                ReportPropertyChanging("ProjectStageID");
                _ProjectStageID = StructuralObject.SetValidValue(value, "ProjectStageID");
                ReportPropertyChanged("ProjectStageID");
                OnProjectStageIDChanged();
            }
        }
        private global::System.Int32 _ProjectStageID;
        partial void OnProjectStageIDChanging(global::System.Int32 value);
        partial void OnProjectStageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectName
        {
            get
            {
                return _ProjectName;
            }
            set
            {
                OnProjectNameChanging(value);
                ReportPropertyChanging("ProjectName");
                _ProjectName = StructuralObject.SetValidValue(value, false, "ProjectName");
                ReportPropertyChanged("ProjectName");
                OnProjectNameChanged();
            }
        }
        private global::System.String _ProjectName;
        partial void OnProjectNameChanging(global::System.String value);
        partial void OnProjectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectDescription
        {
            get
            {
                return _ProjectDescription;
            }
            set
            {
                OnProjectDescriptionChanging(value);
                ReportPropertyChanging("ProjectDescription");
                _ProjectDescription = StructuralObject.SetValidValue(value, false, "ProjectDescription");
                ReportPropertyChanged("ProjectDescription");
                OnProjectDescriptionChanged();
            }
        }
        private global::System.String _ProjectDescription;
        partial void OnProjectDescriptionChanging(global::System.String value);
        partial void OnProjectDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApprovalStartDate
        {
            get
            {
                return _ApprovalStartDate;
            }
            set
            {
                OnApprovalStartDateChanging(value);
                ReportPropertyChanging("ApprovalStartDate");
                _ApprovalStartDate = StructuralObject.SetValidValue(value, "ApprovalStartDate");
                ReportPropertyChanged("ApprovalStartDate");
                OnApprovalStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApprovalStartDate;
        partial void OnApprovalStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnApprovalStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CompletionDate
        {
            get
            {
                return _CompletionDate;
            }
            set
            {
                OnCompletionDateChanging(value);
                ReportPropertyChanging("CompletionDate");
                _CompletionDate = StructuralObject.SetValidValue(value, "CompletionDate");
                ReportPropertyChanged("CompletionDate");
                OnCompletionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CompletionDate;
        partial void OnCompletionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCompletionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EstimatedTotalCost
        {
            get
            {
                return _EstimatedTotalCost;
            }
            set
            {
                OnEstimatedTotalCostChanging(value);
                ReportPropertyChanging("EstimatedTotalCost");
                _EstimatedTotalCost = StructuralObject.SetValidValue(value, "EstimatedTotalCost");
                ReportPropertyChanged("EstimatedTotalCost");
                OnEstimatedTotalCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _EstimatedTotalCost;
        partial void OnEstimatedTotalCostChanging(Nullable<global::System.Decimal> value);
        partial void OnEstimatedTotalCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeometry ProjectLocationPoint
        {
            get
            {
                return _ProjectLocationPoint;
            }
            set
            {
                OnProjectLocationPointChanging(value);
                ReportPropertyChanging("ProjectLocationPoint");
                _ProjectLocationPoint = StructuralObject.SetValidValue(value, true, "ProjectLocationPoint");
                ReportPropertyChanged("ProjectLocationPoint");
                OnProjectLocationPointChanged();
            }
        }
        private global::System.Data.Spatial.DbGeometry _ProjectLocationPoint;
        partial void OnProjectLocationPointChanging(global::System.Data.Spatial.DbGeometry value);
        partial void OnProjectLocationPointChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PerformanceMeasureActualYearsExemptionExplanation
        {
            get
            {
                return _PerformanceMeasureActualYearsExemptionExplanation;
            }
            set
            {
                OnPerformanceMeasureActualYearsExemptionExplanationChanging(value);
                ReportPropertyChanging("PerformanceMeasureActualYearsExemptionExplanation");
                _PerformanceMeasureActualYearsExemptionExplanation = StructuralObject.SetValidValue(value, true, "PerformanceMeasureActualYearsExemptionExplanation");
                ReportPropertyChanged("PerformanceMeasureActualYearsExemptionExplanation");
                OnPerformanceMeasureActualYearsExemptionExplanationChanged();
            }
        }
        private global::System.String _PerformanceMeasureActualYearsExemptionExplanation;
        partial void OnPerformanceMeasureActualYearsExemptionExplanationChanging(global::System.String value);
        partial void OnPerformanceMeasureActualYearsExemptionExplanationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsFeatured
        {
            get
            {
                return _IsFeatured;
            }
            set
            {
                OnIsFeaturedChanging(value);
                ReportPropertyChanging("IsFeatured");
                _IsFeatured = StructuralObject.SetValidValue(value, "IsFeatured");
                ReportPropertyChanged("IsFeatured");
                OnIsFeaturedChanged();
            }
        }
        private global::System.Boolean _IsFeatured;
        partial void OnIsFeaturedChanging(global::System.Boolean value);
        partial void OnIsFeaturedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectLocationNotes
        {
            get
            {
                return _ProjectLocationNotes;
            }
            set
            {
                OnProjectLocationNotesChanging(value);
                ReportPropertyChanging("ProjectLocationNotes");
                _ProjectLocationNotes = StructuralObject.SetValidValue(value, true, "ProjectLocationNotes");
                ReportPropertyChanged("ProjectLocationNotes");
                OnProjectLocationNotesChanged();
            }
        }
        private global::System.String _ProjectLocationNotes;
        partial void OnProjectLocationNotesChanging(global::System.String value);
        partial void OnProjectLocationNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PlannedDate
        {
            get
            {
                return _PlannedDate;
            }
            set
            {
                OnPlannedDateChanging(value);
                ReportPropertyChanging("PlannedDate");
                _PlannedDate = StructuralObject.SetValidValue(value, "PlannedDate");
                ReportPropertyChanged("PlannedDate");
                OnPlannedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PlannedDate;
        partial void OnPlannedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPlannedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectLocationSimpleTypeID
        {
            get
            {
                return _ProjectLocationSimpleTypeID;
            }
            set
            {
                OnProjectLocationSimpleTypeIDChanging(value);
                ReportPropertyChanging("ProjectLocationSimpleTypeID");
                _ProjectLocationSimpleTypeID = StructuralObject.SetValidValue(value, "ProjectLocationSimpleTypeID");
                ReportPropertyChanged("ProjectLocationSimpleTypeID");
                OnProjectLocationSimpleTypeIDChanged();
            }
        }
        private global::System.Int32 _ProjectLocationSimpleTypeID;
        partial void OnProjectLocationSimpleTypeIDChanging(global::System.Int32 value);
        partial void OnProjectLocationSimpleTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrimaryContactPersonID
        {
            get
            {
                return _PrimaryContactPersonID;
            }
            set
            {
                OnPrimaryContactPersonIDChanging(value);
                ReportPropertyChanging("PrimaryContactPersonID");
                _PrimaryContactPersonID = StructuralObject.SetValidValue(value, "PrimaryContactPersonID");
                ReportPropertyChanged("PrimaryContactPersonID");
                OnPrimaryContactPersonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PrimaryContactPersonID;
        partial void OnPrimaryContactPersonIDChanging(Nullable<global::System.Int32> value);
        partial void OnPrimaryContactPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectApprovalStatusID
        {
            get
            {
                return _ProjectApprovalStatusID;
            }
            set
            {
                OnProjectApprovalStatusIDChanging(value);
                ReportPropertyChanging("ProjectApprovalStatusID");
                _ProjectApprovalStatusID = StructuralObject.SetValidValue(value, "ProjectApprovalStatusID");
                ReportPropertyChanged("ProjectApprovalStatusID");
                OnProjectApprovalStatusIDChanged();
            }
        }
        private global::System.Int32 _ProjectApprovalStatusID;
        partial void OnProjectApprovalStatusIDChanging(global::System.Int32 value);
        partial void OnProjectApprovalStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProposingPersonID
        {
            get
            {
                return _ProposingPersonID;
            }
            set
            {
                OnProposingPersonIDChanging(value);
                ReportPropertyChanging("ProposingPersonID");
                _ProposingPersonID = StructuralObject.SetValidValue(value, "ProposingPersonID");
                ReportPropertyChanged("ProposingPersonID");
                OnProposingPersonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProposingPersonID;
        partial void OnProposingPersonIDChanging(Nullable<global::System.Int32> value);
        partial void OnProposingPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ProposingDate
        {
            get
            {
                return _ProposingDate;
            }
            set
            {
                OnProposingDateChanging(value);
                ReportPropertyChanging("ProposingDate");
                _ProposingDate = StructuralObject.SetValidValue(value, "ProposingDate");
                ReportPropertyChanged("ProposingDate");
                OnProposingDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ProposingDate;
        partial void OnProposingDateChanging(Nullable<global::System.DateTime> value);
        partial void OnProposingDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PerformanceMeasureNotes
        {
            get
            {
                return _PerformanceMeasureNotes;
            }
            set
            {
                OnPerformanceMeasureNotesChanging(value);
                ReportPropertyChanging("PerformanceMeasureNotes");
                _PerformanceMeasureNotes = StructuralObject.SetValidValue(value, true, "PerformanceMeasureNotes");
                ReportPropertyChanged("PerformanceMeasureNotes");
                OnPerformanceMeasureNotesChanged();
            }
        }
        private global::System.String _PerformanceMeasureNotes;
        partial void OnPerformanceMeasureNotesChanging(global::System.String value);
        partial void OnPerformanceMeasureNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> SubmissionDate
        {
            get
            {
                return _SubmissionDate;
            }
            set
            {
                OnSubmissionDateChanging(value);
                ReportPropertyChanging("SubmissionDate");
                _SubmissionDate = StructuralObject.SetValidValue(value, "SubmissionDate");
                ReportPropertyChanged("SubmissionDate");
                OnSubmissionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _SubmissionDate;
        partial void OnSubmissionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnSubmissionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApprovalDate
        {
            get
            {
                return _ApprovalDate;
            }
            set
            {
                OnApprovalDateChanging(value);
                ReportPropertyChanging("ApprovalDate");
                _ApprovalDate = StructuralObject.SetValidValue(value, "ApprovalDate");
                ReportPropertyChanged("ApprovalDate");
                OnApprovalDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApprovalDate;
        partial void OnApprovalDateChanging(Nullable<global::System.DateTime> value);
        partial void OnApprovalDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ReviewedByPersonID
        {
            get
            {
                return _ReviewedByPersonID;
            }
            set
            {
                OnReviewedByPersonIDChanging(value);
                ReportPropertyChanging("ReviewedByPersonID");
                _ReviewedByPersonID = StructuralObject.SetValidValue(value, "ReviewedByPersonID");
                ReportPropertyChanged("ReviewedByPersonID");
                OnReviewedByPersonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ReviewedByPersonID;
        partial void OnReviewedByPersonIDChanging(Nullable<global::System.Int32> value);
        partial void OnReviewedByPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeometry DefaultBoundingBox
        {
            get
            {
                return _DefaultBoundingBox;
            }
            set
            {
                OnDefaultBoundingBoxChanging(value);
                ReportPropertyChanging("DefaultBoundingBox");
                _DefaultBoundingBox = StructuralObject.SetValidValue(value, true, "DefaultBoundingBox");
                ReportPropertyChanged("DefaultBoundingBox");
                OnDefaultBoundingBoxChanged();
            }
        }
        private global::System.Data.Spatial.DbGeometry _DefaultBoundingBox;
        partial void OnDefaultBoundingBoxChanging(global::System.Data.Spatial.DbGeometry value);
        partial void OnDefaultBoundingBoxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NoExpendituresToReportExplanation
        {
            get
            {
                return _NoExpendituresToReportExplanation;
            }
            set
            {
                OnNoExpendituresToReportExplanationChanging(value);
                ReportPropertyChanging("NoExpendituresToReportExplanation");
                _NoExpendituresToReportExplanation = StructuralObject.SetValidValue(value, true, "NoExpendituresToReportExplanation");
                ReportPropertyChanged("NoExpendituresToReportExplanation");
                OnNoExpendituresToReportExplanationChanged();
            }
        }
        private global::System.String _NoExpendituresToReportExplanation;
        partial void OnNoExpendituresToReportExplanationChanging(global::System.String value);
        partial void OnNoExpendituresToReportExplanationChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ContractorTimeActivity_Project_ProjectID", "ContractorTimeActivity")]
        public EntityCollection<ContractorTimeActivity> ContractorTimeActivity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContractorTimeActivity>("ProjectFirma.Web.Models.FK_ContractorTimeActivity_Project_ProjectID", "ContractorTimeActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContractorTimeActivity>("ProjectFirma.Web.Models.FK_ContractorTimeActivity_Project_ProjectID", "ContractorTimeActivity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_NotificationProject_Project_ProjectID", "NotificationProject")]
        public EntityCollection<NotificationProject> NotificationProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotificationProject>("ProjectFirma.Web.Models.FK_NotificationProject_Project_ProjectID", "NotificationProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotificationProject>("ProjectFirma.Web.Models.FK_NotificationProject_Project_ProjectID", "NotificationProject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActual_Project_ProjectID", "PerformanceMeasureActual")]
        public EntityCollection<PerformanceMeasureActual> PerformanceMeasureActual
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureActual>("ProjectFirma.Web.Models.FK_PerformanceMeasureActual_Project_ProjectID", "PerformanceMeasureActual");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureActual>("ProjectFirma.Web.Models.FK_PerformanceMeasureActual_Project_ProjectID", "PerformanceMeasureActual", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpected_Project_ProjectID", "PerformanceMeasureExpected")]
        public EntityCollection<PerformanceMeasureExpected> PerformanceMeasureExpected
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureExpected>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpected_Project_ProjectID", "PerformanceMeasureExpected");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureExpected>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpected_Project_ProjectID", "PerformanceMeasureExpected", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Project_Person_PrimaryContactPersonID_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_Project_Person_PrimaryContactPersonID_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_Project_Person_PrimaryContactPersonID_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_Project_Person_PrimaryContactPersonID_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_Project_Person_PrimaryContactPersonID_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Project_Person_ProposingPersonID_PersonID", "Person")]
        public Person Person1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_Project_Person_ProposingPersonID_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_Project_Person_ProposingPersonID_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> Person1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_Project_Person_ProposingPersonID_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_Project_Person_ProposingPersonID_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Project_Person_ReviewedByPersonID_PersonID", "Person")]
        public Person Person2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_Project_Person_ReviewedByPersonID_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_Project_Person_ReviewedByPersonID_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> Person2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_Project_Person_ReviewedByPersonID_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_Project_Person_ReviewedByPersonID_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Project_ProjectApprovalStatus_ProjectApprovalStatusID", "ProjectApprovalStatus")]
        public ProjectApprovalStatus ProjectApprovalStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectApprovalStatus>("ProjectFirma.Web.Models.FK_Project_ProjectApprovalStatus_ProjectApprovalStatusID", "ProjectApprovalStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectApprovalStatus>("ProjectFirma.Web.Models.FK_Project_ProjectApprovalStatus_ProjectApprovalStatusID", "ProjectApprovalStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectApprovalStatus> ProjectApprovalStatusReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectApprovalStatus>("ProjectFirma.Web.Models.FK_Project_ProjectApprovalStatus_ProjectApprovalStatusID", "ProjectApprovalStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectApprovalStatus>("ProjectFirma.Web.Models.FK_Project_ProjectApprovalStatus_ProjectApprovalStatusID", "ProjectApprovalStatus", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Project_ProjectLocationSimpleType_ProjectLocationSimpleTypeID", "ProjectLocationSimpleType")]
        public ProjectLocationSimpleType ProjectLocationSimpleType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectLocationSimpleType>("ProjectFirma.Web.Models.FK_Project_ProjectLocationSimpleType_ProjectLocationSimpleTypeID", "ProjectLocationSimpleType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectLocationSimpleType>("ProjectFirma.Web.Models.FK_Project_ProjectLocationSimpleType_ProjectLocationSimpleTypeID", "ProjectLocationSimpleType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectLocationSimpleType> ProjectLocationSimpleTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectLocationSimpleType>("ProjectFirma.Web.Models.FK_Project_ProjectLocationSimpleType_ProjectLocationSimpleTypeID", "ProjectLocationSimpleType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectLocationSimpleType>("ProjectFirma.Web.Models.FK_Project_ProjectLocationSimpleType_ProjectLocationSimpleTypeID", "ProjectLocationSimpleType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Project_ProjectStage_ProjectStageID", "ProjectStage")]
        public ProjectStage ProjectStage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectStage>("ProjectFirma.Web.Models.FK_Project_ProjectStage_ProjectStageID", "ProjectStage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectStage>("ProjectFirma.Web.Models.FK_Project_ProjectStage_ProjectStageID", "ProjectStage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectStage> ProjectStageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectStage>("ProjectFirma.Web.Models.FK_Project_ProjectStage_ProjectStageID", "ProjectStage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectStage>("ProjectFirma.Web.Models.FK_Project_ProjectStage_ProjectStageID", "ProjectStage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Project_TaxonomyLeaf_TaxonomyLeafID", "TaxonomyLeaf")]
        public TaxonomyLeaf TaxonomyLeaf
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxonomyLeaf>("ProjectFirma.Web.Models.FK_Project_TaxonomyLeaf_TaxonomyLeafID", "TaxonomyLeaf").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxonomyLeaf>("ProjectFirma.Web.Models.FK_Project_TaxonomyLeaf_TaxonomyLeafID", "TaxonomyLeaf").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaxonomyLeaf> TaxonomyLeafReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxonomyLeaf>("ProjectFirma.Web.Models.FK_Project_TaxonomyLeaf_TaxonomyLeafID", "TaxonomyLeaf");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaxonomyLeaf>("ProjectFirma.Web.Models.FK_Project_TaxonomyLeaf_TaxonomyLeafID", "TaxonomyLeaf", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Project_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Project_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Project_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Project_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Project_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectAssessmentQuestion_Project_ProjectID", "ProjectAssessmentQuestion")]
        public EntityCollection<ProjectAssessmentQuestion> ProjectAssessmentQuestion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectAssessmentQuestion>("ProjectFirma.Web.Models.FK_ProjectAssessmentQuestion_Project_ProjectID", "ProjectAssessmentQuestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectAssessmentQuestion>("ProjectFirma.Web.Models.FK_ProjectAssessmentQuestion_Project_ProjectID", "ProjectAssessmentQuestion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectBudget_Project_ProjectID", "ProjectBudget")]
        public EntityCollection<ProjectBudget> ProjectBudget
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectBudget>("ProjectFirma.Web.Models.FK_ProjectBudget_Project_ProjectID", "ProjectBudget");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectBudget>("ProjectFirma.Web.Models.FK_ProjectBudget_Project_ProjectID", "ProjectBudget", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectClassification_Project_ProjectID", "ProjectClassification")]
        public EntityCollection<ProjectClassification> ProjectClassification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectClassification>("ProjectFirma.Web.Models.FK_ProjectClassification_Project_ProjectID", "ProjectClassification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectClassification>("ProjectFirma.Web.Models.FK_ProjectClassification_Project_ProjectID", "ProjectClassification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttribute_Project_ProjectID", "ProjectCustomAttribute")]
        public EntityCollection<ProjectCustomAttribute> ProjectCustomAttribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectCustomAttribute>("ProjectFirma.Web.Models.FK_ProjectCustomAttribute_Project_ProjectID", "ProjectCustomAttribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectCustomAttribute>("ProjectFirma.Web.Models.FK_ProjectCustomAttribute_Project_ProjectID", "ProjectCustomAttribute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectDocument_Project_ProjectID", "ProjectDocument")]
        public EntityCollection<ProjectDocument> ProjectDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectDocument>("ProjectFirma.Web.Models.FK_ProjectDocument_Project_ProjectID", "ProjectDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectDocument>("ProjectFirma.Web.Models.FK_ProjectDocument_Project_ProjectID", "ProjectDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectExemptReportingYear_Project_ProjectID", "ProjectExemptReportingYear")]
        public EntityCollection<ProjectExemptReportingYear> ProjectExemptReportingYear
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectExemptReportingYear>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYear_Project_ProjectID", "ProjectExemptReportingYear");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectExemptReportingYear>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYear_Project_ProjectID", "ProjectExemptReportingYear", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectExternalLink_Project_ProjectID", "ProjectExternalLink")]
        public EntityCollection<ProjectExternalLink> ProjectExternalLink
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectExternalLink>("ProjectFirma.Web.Models.FK_ProjectExternalLink_Project_ProjectID", "ProjectExternalLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectExternalLink>("ProjectFirma.Web.Models.FK_ProjectExternalLink_Project_ProjectID", "ProjectExternalLink", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceExpenditure_Project_ProjectID", "ProjectFundingSourceExpenditure")]
        public EntityCollection<ProjectFundingSourceExpenditure> ProjectFundingSourceExpenditure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFundingSourceExpenditure>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditure_Project_ProjectID", "ProjectFundingSourceExpenditure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFundingSourceExpenditure>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditure_Project_ProjectID", "ProjectFundingSourceExpenditure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceRequest_Project_ProjectID", "ProjectFundingSourceRequest")]
        public EntityCollection<ProjectFundingSourceRequest> ProjectFundingSourceRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFundingSourceRequest>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequest_Project_ProjectID", "ProjectFundingSourceRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFundingSourceRequest>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequest_Project_ProjectID", "ProjectFundingSourceRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialArea_Project_ProjectID", "ProjectGeospatialArea")]
        public EntityCollection<ProjectGeospatialArea> ProjectGeospatialArea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectGeospatialArea>("ProjectFirma.Web.Models.FK_ProjectGeospatialArea_Project_ProjectID", "ProjectGeospatialArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectGeospatialArea>("ProjectFirma.Web.Models.FK_ProjectGeospatialArea_Project_ProjectID", "ProjectGeospatialArea", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaTypeNote_Project_ProjectID", "ProjectGeospatialAreaTypeNote")]
        public EntityCollection<ProjectGeospatialAreaTypeNote> ProjectGeospatialAreaTypeNote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectGeospatialAreaTypeNote>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNote_Project_ProjectID", "ProjectGeospatialAreaTypeNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectGeospatialAreaTypeNote>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNote_Project_ProjectID", "ProjectGeospatialAreaTypeNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectImage_Project_ProjectID", "ProjectImage")]
        public EntityCollection<ProjectImage> ProjectImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectImage>("ProjectFirma.Web.Models.FK_ProjectImage_Project_ProjectID", "ProjectImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectImage>("ProjectFirma.Web.Models.FK_ProjectImage_Project_ProjectID", "ProjectImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectInternalNote_Project_ProjectID", "ProjectInternalNote")]
        public EntityCollection<ProjectInternalNote> ProjectInternalNote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectInternalNote>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Project_ProjectID", "ProjectInternalNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectInternalNote>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Project_ProjectID", "ProjectInternalNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectLocation_Project_ProjectID", "ProjectLocation")]
        public EntityCollection<ProjectLocation> ProjectLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectLocation>("ProjectFirma.Web.Models.FK_ProjectLocation_Project_ProjectID", "ProjectLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectLocation>("ProjectFirma.Web.Models.FK_ProjectLocation_Project_ProjectID", "ProjectLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationStaging_Project_ProjectID", "ProjectLocationStaging")]
        public EntityCollection<ProjectLocationStaging> ProjectLocationStaging
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectLocationStaging>("ProjectFirma.Web.Models.FK_ProjectLocationStaging_Project_ProjectID", "ProjectLocationStaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectLocationStaging>("ProjectFirma.Web.Models.FK_ProjectLocationStaging_Project_ProjectID", "ProjectLocationStaging", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectNote_Project_ProjectID", "ProjectNote")]
        public EntityCollection<ProjectNote> ProjectNote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectNote>("ProjectFirma.Web.Models.FK_ProjectNote_Project_ProjectID", "ProjectNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectNote>("ProjectFirma.Web.Models.FK_ProjectNote_Project_ProjectID", "ProjectNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganization_Project_ProjectID", "ProjectOrganization")]
        public EntityCollection<ProjectOrganization> ProjectOrganization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectOrganization>("ProjectFirma.Web.Models.FK_ProjectOrganization_Project_ProjectID", "ProjectOrganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectOrganization>("ProjectFirma.Web.Models.FK_ProjectOrganization_Project_ProjectID", "ProjectOrganization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectPerson_Project_ProjectID", "ProjectPerson")]
        public EntityCollection<ProjectPerson> ProjectPerson
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectPerson>("ProjectFirma.Web.Models.FK_ProjectPerson_Project_ProjectID", "ProjectPerson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectPerson>("ProjectFirma.Web.Models.FK_ProjectPerson_Project_ProjectID", "ProjectPerson", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectTag_Project_ProjectID", "ProjectTag")]
        public EntityCollection<ProjectTag> ProjectTag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectTag>("ProjectFirma.Web.Models.FK_ProjectTag_Project_ProjectID", "ProjectTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectTag>("ProjectFirma.Web.Models.FK_ProjectTag_Project_ProjectID", "ProjectTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateBatch_Project_ProjectID", "ProjectUpdateBatch")]
        public EntityCollection<ProjectUpdateBatch> ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_Project_ProjectID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_Project_ProjectID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotProject_Project_ProjectID", "SnapshotProject")]
        public EntityCollection<SnapshotProject> SnapshotProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SnapshotProject>("ProjectFirma.Web.Models.FK_SnapshotProject_Project_ProjectID", "SnapshotProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SnapshotProject>("ProjectFirma.Web.Models.FK_SnapshotProject_Project_ProjectID", "SnapshotProject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TreatmentActivity_Project_ProjectID", "TreatmentActivity")]
        public EntityCollection<TreatmentActivity> TreatmentActivity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TreatmentActivity>("ProjectFirma.Web.Models.FK_TreatmentActivity_Project_ProjectID", "TreatmentActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TreatmentActivity>("ProjectFirma.Web.Models.FK_TreatmentActivity_Project_ProjectID", "TreatmentActivity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectApprovalStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectApprovalStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectApprovalStatus object.
        /// </summary>
        /// <param name="projectApprovalStatusID">Initial value of the ProjectApprovalStatusID property.</param>
        /// <param name="projectApprovalStatusName">Initial value of the ProjectApprovalStatusName property.</param>
        /// <param name="projectApprovalStatusDisplayName">Initial value of the ProjectApprovalStatusDisplayName property.</param>
        public static ProjectApprovalStatus CreateProjectApprovalStatus(global::System.Int32 projectApprovalStatusID, global::System.String projectApprovalStatusName, global::System.String projectApprovalStatusDisplayName)
        {
            ProjectApprovalStatus projectApprovalStatus = new ProjectApprovalStatus();
            projectApprovalStatus.ProjectApprovalStatusID = projectApprovalStatusID;
            projectApprovalStatus.ProjectApprovalStatusName = projectApprovalStatusName;
            projectApprovalStatus.ProjectApprovalStatusDisplayName = projectApprovalStatusDisplayName;
            return projectApprovalStatus;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectApprovalStatusID
        {
            get
            {
                return _ProjectApprovalStatusID;
            }
            set
            {
                if (_ProjectApprovalStatusID != value)
                {
                    OnProjectApprovalStatusIDChanging(value);
                    ReportPropertyChanging("ProjectApprovalStatusID");
                    _ProjectApprovalStatusID = StructuralObject.SetValidValue(value, "ProjectApprovalStatusID");
                    ReportPropertyChanged("ProjectApprovalStatusID");
                    OnProjectApprovalStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectApprovalStatusID;
        partial void OnProjectApprovalStatusIDChanging(global::System.Int32 value);
        partial void OnProjectApprovalStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectApprovalStatusName
        {
            get
            {
                return _ProjectApprovalStatusName;
            }
            set
            {
                OnProjectApprovalStatusNameChanging(value);
                ReportPropertyChanging("ProjectApprovalStatusName");
                _ProjectApprovalStatusName = StructuralObject.SetValidValue(value, false, "ProjectApprovalStatusName");
                ReportPropertyChanged("ProjectApprovalStatusName");
                OnProjectApprovalStatusNameChanged();
            }
        }
        private global::System.String _ProjectApprovalStatusName;
        partial void OnProjectApprovalStatusNameChanging(global::System.String value);
        partial void OnProjectApprovalStatusNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectApprovalStatusDisplayName
        {
            get
            {
                return _ProjectApprovalStatusDisplayName;
            }
            set
            {
                OnProjectApprovalStatusDisplayNameChanging(value);
                ReportPropertyChanging("ProjectApprovalStatusDisplayName");
                _ProjectApprovalStatusDisplayName = StructuralObject.SetValidValue(value, false, "ProjectApprovalStatusDisplayName");
                ReportPropertyChanged("ProjectApprovalStatusDisplayName");
                OnProjectApprovalStatusDisplayNameChanged();
            }
        }
        private global::System.String _ProjectApprovalStatusDisplayName;
        partial void OnProjectApprovalStatusDisplayNameChanging(global::System.String value);
        partial void OnProjectApprovalStatusDisplayNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Project_ProjectApprovalStatus_ProjectApprovalStatusID", "Project")]
        public EntityCollection<Project> Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("ProjectFirma.Web.Models.FK_Project_ProjectApprovalStatus_ProjectApprovalStatusID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("ProjectFirma.Web.Models.FK_Project_ProjectApprovalStatus_ProjectApprovalStatusID", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectAssessmentQuestion")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectAssessmentQuestion : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectAssessmentQuestion object.
        /// </summary>
        /// <param name="projectAssessmentQuestionID">Initial value of the ProjectAssessmentQuestionID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="assessmentQuestionID">Initial value of the AssessmentQuestionID property.</param>
        public static ProjectAssessmentQuestion CreateProjectAssessmentQuestion(global::System.Int32 projectAssessmentQuestionID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.Int32 assessmentQuestionID)
        {
            ProjectAssessmentQuestion projectAssessmentQuestion = new ProjectAssessmentQuestion();
            projectAssessmentQuestion.ProjectAssessmentQuestionID = projectAssessmentQuestionID;
            projectAssessmentQuestion.TenantID = tenantID;
            projectAssessmentQuestion.ProjectID = projectID;
            projectAssessmentQuestion.AssessmentQuestionID = assessmentQuestionID;
            return projectAssessmentQuestion;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectAssessmentQuestionID
        {
            get
            {
                return _ProjectAssessmentQuestionID;
            }
            set
            {
                if (_ProjectAssessmentQuestionID != value)
                {
                    OnProjectAssessmentQuestionIDChanging(value);
                    ReportPropertyChanging("ProjectAssessmentQuestionID");
                    _ProjectAssessmentQuestionID = StructuralObject.SetValidValue(value, "ProjectAssessmentQuestionID");
                    ReportPropertyChanged("ProjectAssessmentQuestionID");
                    OnProjectAssessmentQuestionIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectAssessmentQuestionID;
        partial void OnProjectAssessmentQuestionIDChanging(global::System.Int32 value);
        partial void OnProjectAssessmentQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssessmentQuestionID
        {
            get
            {
                return _AssessmentQuestionID;
            }
            set
            {
                OnAssessmentQuestionIDChanging(value);
                ReportPropertyChanging("AssessmentQuestionID");
                _AssessmentQuestionID = StructuralObject.SetValidValue(value, "AssessmentQuestionID");
                ReportPropertyChanged("AssessmentQuestionID");
                OnAssessmentQuestionIDChanged();
            }
        }
        private global::System.Int32 _AssessmentQuestionID;
        partial void OnAssessmentQuestionIDChanging(global::System.Int32 value);
        partial void OnAssessmentQuestionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Answer
        {
            get
            {
                return _Answer;
            }
            set
            {
                OnAnswerChanging(value);
                ReportPropertyChanging("Answer");
                _Answer = StructuralObject.SetValidValue(value, "Answer");
                ReportPropertyChanged("Answer");
                OnAnswerChanged();
            }
        }
        private Nullable<global::System.Boolean> _Answer;
        partial void OnAnswerChanging(Nullable<global::System.Boolean> value);
        partial void OnAnswerChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectAssessmentQuestion_AssessmentQuestion_AssessmentQuestionID", "AssessmentQuestion")]
        public AssessmentQuestion AssessmentQuestion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssessmentQuestion>("ProjectFirma.Web.Models.FK_ProjectAssessmentQuestion_AssessmentQuestion_AssessmentQuestionID", "AssessmentQuestion").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssessmentQuestion>("ProjectFirma.Web.Models.FK_ProjectAssessmentQuestion_AssessmentQuestion_AssessmentQuestionID", "AssessmentQuestion").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AssessmentQuestion> AssessmentQuestionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AssessmentQuestion>("ProjectFirma.Web.Models.FK_ProjectAssessmentQuestion_AssessmentQuestion_AssessmentQuestionID", "AssessmentQuestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AssessmentQuestion>("ProjectFirma.Web.Models.FK_ProjectAssessmentQuestion_AssessmentQuestion_AssessmentQuestionID", "AssessmentQuestion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectAssessmentQuestion_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectAssessmentQuestion_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectAssessmentQuestion_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectAssessmentQuestion_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectAssessmentQuestion_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectAssessmentQuestion_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectAssessmentQuestion_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectAssessmentQuestion_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectAssessmentQuestion_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectAssessmentQuestion_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectBudget")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectBudget : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectBudget object.
        /// </summary>
        /// <param name="projectBudgetID">Initial value of the ProjectBudgetID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="fundingSourceID">Initial value of the FundingSourceID property.</param>
        /// <param name="projectCostTypeID">Initial value of the ProjectCostTypeID property.</param>
        /// <param name="calendarYear">Initial value of the CalendarYear property.</param>
        /// <param name="budgetedAmount">Initial value of the BudgetedAmount property.</param>
        public static ProjectBudget CreateProjectBudget(global::System.Int32 projectBudgetID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.Int32 fundingSourceID, global::System.Int32 projectCostTypeID, global::System.Int32 calendarYear, global::System.Decimal budgetedAmount)
        {
            ProjectBudget projectBudget = new ProjectBudget();
            projectBudget.ProjectBudgetID = projectBudgetID;
            projectBudget.TenantID = tenantID;
            projectBudget.ProjectID = projectID;
            projectBudget.FundingSourceID = fundingSourceID;
            projectBudget.ProjectCostTypeID = projectCostTypeID;
            projectBudget.CalendarYear = calendarYear;
            projectBudget.BudgetedAmount = budgetedAmount;
            return projectBudget;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectBudgetID
        {
            get
            {
                return _ProjectBudgetID;
            }
            set
            {
                if (_ProjectBudgetID != value)
                {
                    OnProjectBudgetIDChanging(value);
                    ReportPropertyChanging("ProjectBudgetID");
                    _ProjectBudgetID = StructuralObject.SetValidValue(value, "ProjectBudgetID");
                    ReportPropertyChanged("ProjectBudgetID");
                    OnProjectBudgetIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectBudgetID;
        partial void OnProjectBudgetIDChanging(global::System.Int32 value);
        partial void OnProjectBudgetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingSourceID
        {
            get
            {
                return _FundingSourceID;
            }
            set
            {
                OnFundingSourceIDChanging(value);
                ReportPropertyChanging("FundingSourceID");
                _FundingSourceID = StructuralObject.SetValidValue(value, "FundingSourceID");
                ReportPropertyChanged("FundingSourceID");
                OnFundingSourceIDChanged();
            }
        }
        private global::System.Int32 _FundingSourceID;
        partial void OnFundingSourceIDChanging(global::System.Int32 value);
        partial void OnFundingSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectCostTypeID
        {
            get
            {
                return _ProjectCostTypeID;
            }
            set
            {
                OnProjectCostTypeIDChanging(value);
                ReportPropertyChanging("ProjectCostTypeID");
                _ProjectCostTypeID = StructuralObject.SetValidValue(value, "ProjectCostTypeID");
                ReportPropertyChanged("ProjectCostTypeID");
                OnProjectCostTypeIDChanged();
            }
        }
        private global::System.Int32 _ProjectCostTypeID;
        partial void OnProjectCostTypeIDChanging(global::System.Int32 value);
        partial void OnProjectCostTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalendarYear
        {
            get
            {
                return _CalendarYear;
            }
            set
            {
                OnCalendarYearChanging(value);
                ReportPropertyChanging("CalendarYear");
                _CalendarYear = StructuralObject.SetValidValue(value, "CalendarYear");
                ReportPropertyChanged("CalendarYear");
                OnCalendarYearChanged();
            }
        }
        private global::System.Int32 _CalendarYear;
        partial void OnCalendarYearChanging(global::System.Int32 value);
        partial void OnCalendarYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal BudgetedAmount
        {
            get
            {
                return _BudgetedAmount;
            }
            set
            {
                OnBudgetedAmountChanging(value);
                ReportPropertyChanging("BudgetedAmount");
                _BudgetedAmount = StructuralObject.SetValidValue(value, "BudgetedAmount");
                ReportPropertyChanged("BudgetedAmount");
                OnBudgetedAmountChanged();
            }
        }
        private global::System.Decimal _BudgetedAmount;
        partial void OnBudgetedAmountChanging(global::System.Decimal value);
        partial void OnBudgetedAmountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectBudget_FundingSource_FundingSourceID", "FundingSource")]
        public FundingSource FundingSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectBudget_FundingSource_FundingSourceID", "FundingSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectBudget_FundingSource_FundingSourceID", "FundingSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundingSource> FundingSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectBudget_FundingSource_FundingSourceID", "FundingSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectBudget_FundingSource_FundingSourceID", "FundingSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectBudget_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectBudget_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectBudget_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectBudget_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectBudget_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectBudget_ProjectCostType_ProjectCostTypeID", "ProjectCostType")]
        public ProjectCostType ProjectCostType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCostType>("ProjectFirma.Web.Models.FK_ProjectBudget_ProjectCostType_ProjectCostTypeID", "ProjectCostType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCostType>("ProjectFirma.Web.Models.FK_ProjectBudget_ProjectCostType_ProjectCostTypeID", "ProjectCostType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectCostType> ProjectCostTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCostType>("ProjectFirma.Web.Models.FK_ProjectBudget_ProjectCostType_ProjectCostTypeID", "ProjectCostType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectCostType>("ProjectFirma.Web.Models.FK_ProjectBudget_ProjectCostType_ProjectCostTypeID", "ProjectCostType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectBudget_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectBudget_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectBudget_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectBudget_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectBudget_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectBudgetUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectBudgetUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectBudgetUpdate object.
        /// </summary>
        /// <param name="projectBudgetUpdateID">Initial value of the ProjectBudgetUpdateID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectUpdateBatchID">Initial value of the ProjectUpdateBatchID property.</param>
        /// <param name="fundingSourceID">Initial value of the FundingSourceID property.</param>
        /// <param name="projectCostTypeID">Initial value of the ProjectCostTypeID property.</param>
        /// <param name="calendarYear">Initial value of the CalendarYear property.</param>
        public static ProjectBudgetUpdate CreateProjectBudgetUpdate(global::System.Int32 projectBudgetUpdateID, global::System.Int32 tenantID, global::System.Int32 projectUpdateBatchID, global::System.Int32 fundingSourceID, global::System.Int32 projectCostTypeID, global::System.Int32 calendarYear)
        {
            ProjectBudgetUpdate projectBudgetUpdate = new ProjectBudgetUpdate();
            projectBudgetUpdate.ProjectBudgetUpdateID = projectBudgetUpdateID;
            projectBudgetUpdate.TenantID = tenantID;
            projectBudgetUpdate.ProjectUpdateBatchID = projectUpdateBatchID;
            projectBudgetUpdate.FundingSourceID = fundingSourceID;
            projectBudgetUpdate.ProjectCostTypeID = projectCostTypeID;
            projectBudgetUpdate.CalendarYear = calendarYear;
            return projectBudgetUpdate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectBudgetUpdateID
        {
            get
            {
                return _ProjectBudgetUpdateID;
            }
            set
            {
                if (_ProjectBudgetUpdateID != value)
                {
                    OnProjectBudgetUpdateIDChanging(value);
                    ReportPropertyChanging("ProjectBudgetUpdateID");
                    _ProjectBudgetUpdateID = StructuralObject.SetValidValue(value, "ProjectBudgetUpdateID");
                    ReportPropertyChanged("ProjectBudgetUpdateID");
                    OnProjectBudgetUpdateIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectBudgetUpdateID;
        partial void OnProjectBudgetUpdateIDChanging(global::System.Int32 value);
        partial void OnProjectBudgetUpdateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateBatchID
        {
            get
            {
                return _ProjectUpdateBatchID;
            }
            set
            {
                OnProjectUpdateBatchIDChanging(value);
                ReportPropertyChanging("ProjectUpdateBatchID");
                _ProjectUpdateBatchID = StructuralObject.SetValidValue(value, "ProjectUpdateBatchID");
                ReportPropertyChanged("ProjectUpdateBatchID");
                OnProjectUpdateBatchIDChanged();
            }
        }
        private global::System.Int32 _ProjectUpdateBatchID;
        partial void OnProjectUpdateBatchIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingSourceID
        {
            get
            {
                return _FundingSourceID;
            }
            set
            {
                OnFundingSourceIDChanging(value);
                ReportPropertyChanging("FundingSourceID");
                _FundingSourceID = StructuralObject.SetValidValue(value, "FundingSourceID");
                ReportPropertyChanged("FundingSourceID");
                OnFundingSourceIDChanged();
            }
        }
        private global::System.Int32 _FundingSourceID;
        partial void OnFundingSourceIDChanging(global::System.Int32 value);
        partial void OnFundingSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectCostTypeID
        {
            get
            {
                return _ProjectCostTypeID;
            }
            set
            {
                OnProjectCostTypeIDChanging(value);
                ReportPropertyChanging("ProjectCostTypeID");
                _ProjectCostTypeID = StructuralObject.SetValidValue(value, "ProjectCostTypeID");
                ReportPropertyChanged("ProjectCostTypeID");
                OnProjectCostTypeIDChanged();
            }
        }
        private global::System.Int32 _ProjectCostTypeID;
        partial void OnProjectCostTypeIDChanging(global::System.Int32 value);
        partial void OnProjectCostTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalendarYear
        {
            get
            {
                return _CalendarYear;
            }
            set
            {
                OnCalendarYearChanging(value);
                ReportPropertyChanging("CalendarYear");
                _CalendarYear = StructuralObject.SetValidValue(value, "CalendarYear");
                ReportPropertyChanged("CalendarYear");
                OnCalendarYearChanged();
            }
        }
        private global::System.Int32 _CalendarYear;
        partial void OnCalendarYearChanging(global::System.Int32 value);
        partial void OnCalendarYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> BudgetedAmount
        {
            get
            {
                return _BudgetedAmount;
            }
            set
            {
                OnBudgetedAmountChanging(value);
                ReportPropertyChanging("BudgetedAmount");
                _BudgetedAmount = StructuralObject.SetValidValue(value, "BudgetedAmount");
                ReportPropertyChanged("BudgetedAmount");
                OnBudgetedAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _BudgetedAmount;
        partial void OnBudgetedAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnBudgetedAmountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectBudgetUpdate_FundingSource_FundingSourceID", "FundingSource")]
        public FundingSource FundingSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_FundingSource_FundingSourceID", "FundingSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_FundingSource_FundingSourceID", "FundingSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundingSource> FundingSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_FundingSource_FundingSourceID", "FundingSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_FundingSource_FundingSourceID", "FundingSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectBudgetUpdate_ProjectCostType_ProjectCostTypeID", "ProjectCostType")]
        public ProjectCostType ProjectCostType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCostType>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_ProjectCostType_ProjectCostTypeID", "ProjectCostType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCostType>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_ProjectCostType_ProjectCostTypeID", "ProjectCostType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectCostType> ProjectCostTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCostType>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_ProjectCostType_ProjectCostTypeID", "ProjectCostType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectCostType>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_ProjectCostType_ProjectCostTypeID", "ProjectCostType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectBudgetUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch")]
        public ProjectUpdateBatch ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUpdateBatch> ProjectUpdateBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectBudgetUpdate_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectClassification")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectClassification : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectClassification object.
        /// </summary>
        /// <param name="projectClassificationID">Initial value of the ProjectClassificationID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="classificationID">Initial value of the ClassificationID property.</param>
        public static ProjectClassification CreateProjectClassification(global::System.Int32 projectClassificationID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.Int32 classificationID)
        {
            ProjectClassification projectClassification = new ProjectClassification();
            projectClassification.ProjectClassificationID = projectClassificationID;
            projectClassification.TenantID = tenantID;
            projectClassification.ProjectID = projectID;
            projectClassification.ClassificationID = classificationID;
            return projectClassification;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectClassificationID
        {
            get
            {
                return _ProjectClassificationID;
            }
            set
            {
                if (_ProjectClassificationID != value)
                {
                    OnProjectClassificationIDChanging(value);
                    ReportPropertyChanging("ProjectClassificationID");
                    _ProjectClassificationID = StructuralObject.SetValidValue(value, "ProjectClassificationID");
                    ReportPropertyChanged("ProjectClassificationID");
                    OnProjectClassificationIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectClassificationID;
        partial void OnProjectClassificationIDChanging(global::System.Int32 value);
        partial void OnProjectClassificationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ClassificationID
        {
            get
            {
                return _ClassificationID;
            }
            set
            {
                OnClassificationIDChanging(value);
                ReportPropertyChanging("ClassificationID");
                _ClassificationID = StructuralObject.SetValidValue(value, "ClassificationID");
                ReportPropertyChanged("ClassificationID");
                OnClassificationIDChanged();
            }
        }
        private global::System.Int32 _ClassificationID;
        partial void OnClassificationIDChanging(global::System.Int32 value);
        partial void OnClassificationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectClassificationNotes
        {
            get
            {
                return _ProjectClassificationNotes;
            }
            set
            {
                OnProjectClassificationNotesChanging(value);
                ReportPropertyChanging("ProjectClassificationNotes");
                _ProjectClassificationNotes = StructuralObject.SetValidValue(value, true, "ProjectClassificationNotes");
                ReportPropertyChanged("ProjectClassificationNotes");
                OnProjectClassificationNotesChanged();
            }
        }
        private global::System.String _ProjectClassificationNotes;
        partial void OnProjectClassificationNotesChanging(global::System.String value);
        partial void OnProjectClassificationNotesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectClassification_Classification_ClassificationID", "Classification")]
        public Classification Classification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Classification>("ProjectFirma.Web.Models.FK_ProjectClassification_Classification_ClassificationID", "Classification").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Classification>("ProjectFirma.Web.Models.FK_ProjectClassification_Classification_ClassificationID", "Classification").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Classification> ClassificationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Classification>("ProjectFirma.Web.Models.FK_ProjectClassification_Classification_ClassificationID", "Classification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Classification>("ProjectFirma.Web.Models.FK_ProjectClassification_Classification_ClassificationID", "Classification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectClassification_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectClassification_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectClassification_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectClassification_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectClassification_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectClassification_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectClassification_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectClassification_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectClassification_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectClassification_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectColorByType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectColorByType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectColorByType object.
        /// </summary>
        /// <param name="projectColorByTypeID">Initial value of the ProjectColorByTypeID property.</param>
        /// <param name="projectColorByTypeName">Initial value of the ProjectColorByTypeName property.</param>
        /// <param name="projectColorByTypeNameWithIdentifier">Initial value of the ProjectColorByTypeNameWithIdentifier property.</param>
        /// <param name="projectColorByTypeDisplayName">Initial value of the ProjectColorByTypeDisplayName property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static ProjectColorByType CreateProjectColorByType(global::System.Int32 projectColorByTypeID, global::System.String projectColorByTypeName, global::System.String projectColorByTypeNameWithIdentifier, global::System.String projectColorByTypeDisplayName, global::System.Int32 sortOrder)
        {
            ProjectColorByType projectColorByType = new ProjectColorByType();
            projectColorByType.ProjectColorByTypeID = projectColorByTypeID;
            projectColorByType.ProjectColorByTypeName = projectColorByTypeName;
            projectColorByType.ProjectColorByTypeNameWithIdentifier = projectColorByTypeNameWithIdentifier;
            projectColorByType.ProjectColorByTypeDisplayName = projectColorByTypeDisplayName;
            projectColorByType.SortOrder = sortOrder;
            return projectColorByType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectColorByTypeID
        {
            get
            {
                return _ProjectColorByTypeID;
            }
            set
            {
                if (_ProjectColorByTypeID != value)
                {
                    OnProjectColorByTypeIDChanging(value);
                    ReportPropertyChanging("ProjectColorByTypeID");
                    _ProjectColorByTypeID = StructuralObject.SetValidValue(value, "ProjectColorByTypeID");
                    ReportPropertyChanged("ProjectColorByTypeID");
                    OnProjectColorByTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectColorByTypeID;
        partial void OnProjectColorByTypeIDChanging(global::System.Int32 value);
        partial void OnProjectColorByTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectColorByTypeName
        {
            get
            {
                return _ProjectColorByTypeName;
            }
            set
            {
                OnProjectColorByTypeNameChanging(value);
                ReportPropertyChanging("ProjectColorByTypeName");
                _ProjectColorByTypeName = StructuralObject.SetValidValue(value, false, "ProjectColorByTypeName");
                ReportPropertyChanged("ProjectColorByTypeName");
                OnProjectColorByTypeNameChanged();
            }
        }
        private global::System.String _ProjectColorByTypeName;
        partial void OnProjectColorByTypeNameChanging(global::System.String value);
        partial void OnProjectColorByTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectColorByTypeNameWithIdentifier
        {
            get
            {
                return _ProjectColorByTypeNameWithIdentifier;
            }
            set
            {
                OnProjectColorByTypeNameWithIdentifierChanging(value);
                ReportPropertyChanging("ProjectColorByTypeNameWithIdentifier");
                _ProjectColorByTypeNameWithIdentifier = StructuralObject.SetValidValue(value, false, "ProjectColorByTypeNameWithIdentifier");
                ReportPropertyChanged("ProjectColorByTypeNameWithIdentifier");
                OnProjectColorByTypeNameWithIdentifierChanged();
            }
        }
        private global::System.String _ProjectColorByTypeNameWithIdentifier;
        partial void OnProjectColorByTypeNameWithIdentifierChanging(global::System.String value);
        partial void OnProjectColorByTypeNameWithIdentifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectColorByTypeDisplayName
        {
            get
            {
                return _ProjectColorByTypeDisplayName;
            }
            set
            {
                OnProjectColorByTypeDisplayNameChanging(value);
                ReportPropertyChanging("ProjectColorByTypeDisplayName");
                _ProjectColorByTypeDisplayName = StructuralObject.SetValidValue(value, false, "ProjectColorByTypeDisplayName");
                ReportPropertyChanged("ProjectColorByTypeDisplayName");
                OnProjectColorByTypeDisplayNameChanged();
            }
        }
        private global::System.String _ProjectColorByTypeDisplayName;
        partial void OnProjectColorByTypeDisplayNameChanging(global::System.String value);
        partial void OnProjectColorByTypeDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value, "SortOrder");
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectCostType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectCostType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectCostType object.
        /// </summary>
        /// <param name="projectCostTypeID">Initial value of the ProjectCostTypeID property.</param>
        /// <param name="projectCostTypeName">Initial value of the ProjectCostTypeName property.</param>
        /// <param name="projectCostTypeDisplayName">Initial value of the ProjectCostTypeDisplayName property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static ProjectCostType CreateProjectCostType(global::System.Int32 projectCostTypeID, global::System.String projectCostTypeName, global::System.String projectCostTypeDisplayName, global::System.Int32 sortOrder)
        {
            ProjectCostType projectCostType = new ProjectCostType();
            projectCostType.ProjectCostTypeID = projectCostTypeID;
            projectCostType.ProjectCostTypeName = projectCostTypeName;
            projectCostType.ProjectCostTypeDisplayName = projectCostTypeDisplayName;
            projectCostType.SortOrder = sortOrder;
            return projectCostType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectCostTypeID
        {
            get
            {
                return _ProjectCostTypeID;
            }
            set
            {
                if (_ProjectCostTypeID != value)
                {
                    OnProjectCostTypeIDChanging(value);
                    ReportPropertyChanging("ProjectCostTypeID");
                    _ProjectCostTypeID = StructuralObject.SetValidValue(value, "ProjectCostTypeID");
                    ReportPropertyChanged("ProjectCostTypeID");
                    OnProjectCostTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectCostTypeID;
        partial void OnProjectCostTypeIDChanging(global::System.Int32 value);
        partial void OnProjectCostTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectCostTypeName
        {
            get
            {
                return _ProjectCostTypeName;
            }
            set
            {
                OnProjectCostTypeNameChanging(value);
                ReportPropertyChanging("ProjectCostTypeName");
                _ProjectCostTypeName = StructuralObject.SetValidValue(value, false, "ProjectCostTypeName");
                ReportPropertyChanged("ProjectCostTypeName");
                OnProjectCostTypeNameChanged();
            }
        }
        private global::System.String _ProjectCostTypeName;
        partial void OnProjectCostTypeNameChanging(global::System.String value);
        partial void OnProjectCostTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectCostTypeDisplayName
        {
            get
            {
                return _ProjectCostTypeDisplayName;
            }
            set
            {
                OnProjectCostTypeDisplayNameChanging(value);
                ReportPropertyChanging("ProjectCostTypeDisplayName");
                _ProjectCostTypeDisplayName = StructuralObject.SetValidValue(value, false, "ProjectCostTypeDisplayName");
                ReportPropertyChanged("ProjectCostTypeDisplayName");
                OnProjectCostTypeDisplayNameChanged();
            }
        }
        private global::System.String _ProjectCostTypeDisplayName;
        partial void OnProjectCostTypeDisplayNameChanging(global::System.String value);
        partial void OnProjectCostTypeDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value, "SortOrder");
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectBudget_ProjectCostType_ProjectCostTypeID", "ProjectBudget")]
        public EntityCollection<ProjectBudget> ProjectBudget
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectBudget>("ProjectFirma.Web.Models.FK_ProjectBudget_ProjectCostType_ProjectCostTypeID", "ProjectBudget");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectBudget>("ProjectFirma.Web.Models.FK_ProjectBudget_ProjectCostType_ProjectCostTypeID", "ProjectBudget", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectBudgetUpdate_ProjectCostType_ProjectCostTypeID", "ProjectBudgetUpdate")]
        public EntityCollection<ProjectBudgetUpdate> ProjectBudgetUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectBudgetUpdate>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_ProjectCostType_ProjectCostTypeID", "ProjectBudgetUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectBudgetUpdate>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_ProjectCostType_ProjectCostTypeID", "ProjectBudgetUpdate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectCreateSection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectCreateSection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectCreateSection object.
        /// </summary>
        /// <param name="projectCreateSectionID">Initial value of the ProjectCreateSectionID property.</param>
        /// <param name="projectCreateSectionName">Initial value of the ProjectCreateSectionName property.</param>
        /// <param name="projectCreateSectionDisplayName">Initial value of the ProjectCreateSectionDisplayName property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="hasCompletionStatus">Initial value of the HasCompletionStatus property.</param>
        /// <param name="projectWorkflowSectionGroupingID">Initial value of the ProjectWorkflowSectionGroupingID property.</param>
        public static ProjectCreateSection CreateProjectCreateSection(global::System.Int32 projectCreateSectionID, global::System.String projectCreateSectionName, global::System.String projectCreateSectionDisplayName, global::System.Int32 sortOrder, global::System.Boolean hasCompletionStatus, global::System.Int32 projectWorkflowSectionGroupingID)
        {
            ProjectCreateSection projectCreateSection = new ProjectCreateSection();
            projectCreateSection.ProjectCreateSectionID = projectCreateSectionID;
            projectCreateSection.ProjectCreateSectionName = projectCreateSectionName;
            projectCreateSection.ProjectCreateSectionDisplayName = projectCreateSectionDisplayName;
            projectCreateSection.SortOrder = sortOrder;
            projectCreateSection.HasCompletionStatus = hasCompletionStatus;
            projectCreateSection.ProjectWorkflowSectionGroupingID = projectWorkflowSectionGroupingID;
            return projectCreateSection;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectCreateSectionID
        {
            get
            {
                return _ProjectCreateSectionID;
            }
            set
            {
                if (_ProjectCreateSectionID != value)
                {
                    OnProjectCreateSectionIDChanging(value);
                    ReportPropertyChanging("ProjectCreateSectionID");
                    _ProjectCreateSectionID = StructuralObject.SetValidValue(value, "ProjectCreateSectionID");
                    ReportPropertyChanged("ProjectCreateSectionID");
                    OnProjectCreateSectionIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectCreateSectionID;
        partial void OnProjectCreateSectionIDChanging(global::System.Int32 value);
        partial void OnProjectCreateSectionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectCreateSectionName
        {
            get
            {
                return _ProjectCreateSectionName;
            }
            set
            {
                OnProjectCreateSectionNameChanging(value);
                ReportPropertyChanging("ProjectCreateSectionName");
                _ProjectCreateSectionName = StructuralObject.SetValidValue(value, false, "ProjectCreateSectionName");
                ReportPropertyChanged("ProjectCreateSectionName");
                OnProjectCreateSectionNameChanged();
            }
        }
        private global::System.String _ProjectCreateSectionName;
        partial void OnProjectCreateSectionNameChanging(global::System.String value);
        partial void OnProjectCreateSectionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectCreateSectionDisplayName
        {
            get
            {
                return _ProjectCreateSectionDisplayName;
            }
            set
            {
                OnProjectCreateSectionDisplayNameChanging(value);
                ReportPropertyChanging("ProjectCreateSectionDisplayName");
                _ProjectCreateSectionDisplayName = StructuralObject.SetValidValue(value, false, "ProjectCreateSectionDisplayName");
                ReportPropertyChanged("ProjectCreateSectionDisplayName");
                OnProjectCreateSectionDisplayNameChanged();
            }
        }
        private global::System.String _ProjectCreateSectionDisplayName;
        partial void OnProjectCreateSectionDisplayNameChanging(global::System.String value);
        partial void OnProjectCreateSectionDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value, "SortOrder");
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasCompletionStatus
        {
            get
            {
                return _HasCompletionStatus;
            }
            set
            {
                OnHasCompletionStatusChanging(value);
                ReportPropertyChanging("HasCompletionStatus");
                _HasCompletionStatus = StructuralObject.SetValidValue(value, "HasCompletionStatus");
                ReportPropertyChanged("HasCompletionStatus");
                OnHasCompletionStatusChanged();
            }
        }
        private global::System.Boolean _HasCompletionStatus;
        partial void OnHasCompletionStatusChanging(global::System.Boolean value);
        partial void OnHasCompletionStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectWorkflowSectionGroupingID
        {
            get
            {
                return _ProjectWorkflowSectionGroupingID;
            }
            set
            {
                OnProjectWorkflowSectionGroupingIDChanging(value);
                ReportPropertyChanging("ProjectWorkflowSectionGroupingID");
                _ProjectWorkflowSectionGroupingID = StructuralObject.SetValidValue(value, "ProjectWorkflowSectionGroupingID");
                ReportPropertyChanged("ProjectWorkflowSectionGroupingID");
                OnProjectWorkflowSectionGroupingIDChanged();
            }
        }
        private global::System.Int32 _ProjectWorkflowSectionGroupingID;
        partial void OnProjectWorkflowSectionGroupingIDChanging(global::System.Int32 value);
        partial void OnProjectWorkflowSectionGroupingIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCreateSection_ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID", "ProjectWorkflowSectionGrouping")]
        public ProjectWorkflowSectionGrouping ProjectWorkflowSectionGrouping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectWorkflowSectionGrouping>("ProjectFirma.Web.Models.FK_ProjectCreateSection_ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID", "ProjectWorkflowSectionGrouping").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectWorkflowSectionGrouping>("ProjectFirma.Web.Models.FK_ProjectCreateSection_ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID", "ProjectWorkflowSectionGrouping").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectWorkflowSectionGrouping> ProjectWorkflowSectionGroupingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectWorkflowSectionGrouping>("ProjectFirma.Web.Models.FK_ProjectCreateSection_ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID", "ProjectWorkflowSectionGrouping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectWorkflowSectionGrouping>("ProjectFirma.Web.Models.FK_ProjectCreateSection_ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID", "ProjectWorkflowSectionGrouping", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectCustomAttribute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectCustomAttribute : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectCustomAttribute object.
        /// </summary>
        /// <param name="projectCustomAttributeID">Initial value of the ProjectCustomAttributeID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="projectCustomAttributeTypeID">Initial value of the ProjectCustomAttributeTypeID property.</param>
        public static ProjectCustomAttribute CreateProjectCustomAttribute(global::System.Int32 projectCustomAttributeID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.Int32 projectCustomAttributeTypeID)
        {
            ProjectCustomAttribute projectCustomAttribute = new ProjectCustomAttribute();
            projectCustomAttribute.ProjectCustomAttributeID = projectCustomAttributeID;
            projectCustomAttribute.TenantID = tenantID;
            projectCustomAttribute.ProjectID = projectID;
            projectCustomAttribute.ProjectCustomAttributeTypeID = projectCustomAttributeTypeID;
            return projectCustomAttribute;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectCustomAttributeID
        {
            get
            {
                return _ProjectCustomAttributeID;
            }
            set
            {
                if (_ProjectCustomAttributeID != value)
                {
                    OnProjectCustomAttributeIDChanging(value);
                    ReportPropertyChanging("ProjectCustomAttributeID");
                    _ProjectCustomAttributeID = StructuralObject.SetValidValue(value, "ProjectCustomAttributeID");
                    ReportPropertyChanged("ProjectCustomAttributeID");
                    OnProjectCustomAttributeIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectCustomAttributeID;
        partial void OnProjectCustomAttributeIDChanging(global::System.Int32 value);
        partial void OnProjectCustomAttributeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectCustomAttributeTypeID
        {
            get
            {
                return _ProjectCustomAttributeTypeID;
            }
            set
            {
                OnProjectCustomAttributeTypeIDChanging(value);
                ReportPropertyChanging("ProjectCustomAttributeTypeID");
                _ProjectCustomAttributeTypeID = StructuralObject.SetValidValue(value, "ProjectCustomAttributeTypeID");
                ReportPropertyChanged("ProjectCustomAttributeTypeID");
                OnProjectCustomAttributeTypeIDChanged();
            }
        }
        private global::System.Int32 _ProjectCustomAttributeTypeID;
        partial void OnProjectCustomAttributeTypeIDChanging(global::System.Int32 value);
        partial void OnProjectCustomAttributeTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttribute_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectCustomAttribute_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectCustomAttribute_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectCustomAttribute_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectCustomAttribute_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttribute_ProjectCustomAttributeType_ProjectCustomAttributeTypeID", "ProjectCustomAttributeType")]
        public ProjectCustomAttributeType ProjectCustomAttributeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCustomAttributeType>("ProjectFirma.Web.Models.FK_ProjectCustomAttribute_ProjectCustomAttributeType_ProjectCustomAttributeTypeID", "ProjectCustomAttributeType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCustomAttributeType>("ProjectFirma.Web.Models.FK_ProjectCustomAttribute_ProjectCustomAttributeType_ProjectCustomAttributeTypeID", "ProjectCustomAttributeType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectCustomAttributeType> ProjectCustomAttributeTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCustomAttributeType>("ProjectFirma.Web.Models.FK_ProjectCustomAttribute_ProjectCustomAttributeType_ProjectCustomAttributeTypeID", "ProjectCustomAttributeType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectCustomAttributeType>("ProjectFirma.Web.Models.FK_ProjectCustomAttribute_ProjectCustomAttributeType_ProjectCustomAttributeTypeID", "ProjectCustomAttributeType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttribute_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectCustomAttribute_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectCustomAttribute_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectCustomAttribute_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectCustomAttribute_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeValue_ProjectCustomAttribute_ProjectCustomAttributeID", "ProjectCustomAttributeValue")]
        public EntityCollection<ProjectCustomAttributeValue> ProjectCustomAttributeValue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectCustomAttributeValue>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeValue_ProjectCustomAttribute_ProjectCustomAttributeID", "ProjectCustomAttributeValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectCustomAttributeValue>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeValue_ProjectCustomAttribute_ProjectCustomAttributeID", "ProjectCustomAttributeValue", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectCustomAttributeDataType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectCustomAttributeDataType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectCustomAttributeDataType object.
        /// </summary>
        /// <param name="projectCustomAttributeDataTypeID">Initial value of the ProjectCustomAttributeDataTypeID property.</param>
        /// <param name="projectCustomAttributeDataTypeName">Initial value of the ProjectCustomAttributeDataTypeName property.</param>
        /// <param name="projectCustomAttributeDataTypeDisplayName">Initial value of the ProjectCustomAttributeDataTypeDisplayName property.</param>
        public static ProjectCustomAttributeDataType CreateProjectCustomAttributeDataType(global::System.Int32 projectCustomAttributeDataTypeID, global::System.String projectCustomAttributeDataTypeName, global::System.String projectCustomAttributeDataTypeDisplayName)
        {
            ProjectCustomAttributeDataType projectCustomAttributeDataType = new ProjectCustomAttributeDataType();
            projectCustomAttributeDataType.ProjectCustomAttributeDataTypeID = projectCustomAttributeDataTypeID;
            projectCustomAttributeDataType.ProjectCustomAttributeDataTypeName = projectCustomAttributeDataTypeName;
            projectCustomAttributeDataType.ProjectCustomAttributeDataTypeDisplayName = projectCustomAttributeDataTypeDisplayName;
            return projectCustomAttributeDataType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectCustomAttributeDataTypeID
        {
            get
            {
                return _ProjectCustomAttributeDataTypeID;
            }
            set
            {
                if (_ProjectCustomAttributeDataTypeID != value)
                {
                    OnProjectCustomAttributeDataTypeIDChanging(value);
                    ReportPropertyChanging("ProjectCustomAttributeDataTypeID");
                    _ProjectCustomAttributeDataTypeID = StructuralObject.SetValidValue(value, "ProjectCustomAttributeDataTypeID");
                    ReportPropertyChanged("ProjectCustomAttributeDataTypeID");
                    OnProjectCustomAttributeDataTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectCustomAttributeDataTypeID;
        partial void OnProjectCustomAttributeDataTypeIDChanging(global::System.Int32 value);
        partial void OnProjectCustomAttributeDataTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectCustomAttributeDataTypeName
        {
            get
            {
                return _ProjectCustomAttributeDataTypeName;
            }
            set
            {
                OnProjectCustomAttributeDataTypeNameChanging(value);
                ReportPropertyChanging("ProjectCustomAttributeDataTypeName");
                _ProjectCustomAttributeDataTypeName = StructuralObject.SetValidValue(value, false, "ProjectCustomAttributeDataTypeName");
                ReportPropertyChanged("ProjectCustomAttributeDataTypeName");
                OnProjectCustomAttributeDataTypeNameChanged();
            }
        }
        private global::System.String _ProjectCustomAttributeDataTypeName;
        partial void OnProjectCustomAttributeDataTypeNameChanging(global::System.String value);
        partial void OnProjectCustomAttributeDataTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectCustomAttributeDataTypeDisplayName
        {
            get
            {
                return _ProjectCustomAttributeDataTypeDisplayName;
            }
            set
            {
                OnProjectCustomAttributeDataTypeDisplayNameChanging(value);
                ReportPropertyChanging("ProjectCustomAttributeDataTypeDisplayName");
                _ProjectCustomAttributeDataTypeDisplayName = StructuralObject.SetValidValue(value, false, "ProjectCustomAttributeDataTypeDisplayName");
                ReportPropertyChanged("ProjectCustomAttributeDataTypeDisplayName");
                OnProjectCustomAttributeDataTypeDisplayNameChanged();
            }
        }
        private global::System.String _ProjectCustomAttributeDataTypeDisplayName;
        partial void OnProjectCustomAttributeDataTypeDisplayNameChanging(global::System.String value);
        partial void OnProjectCustomAttributeDataTypeDisplayNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeType_ProjectCustomAttributeDataType_ProjectCustomAttributeDataTypeID", "ProjectCustomAttributeType")]
        public EntityCollection<ProjectCustomAttributeType> ProjectCustomAttributeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectCustomAttributeType>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeType_ProjectCustomAttributeDataType_ProjectCustomAttributeDataTypeID", "ProjectCustomAttributeType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectCustomAttributeType>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeType_ProjectCustomAttributeDataType_ProjectCustomAttributeDataTypeID", "ProjectCustomAttributeType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectCustomAttributeType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectCustomAttributeType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectCustomAttributeType object.
        /// </summary>
        /// <param name="projectCustomAttributeTypeID">Initial value of the ProjectCustomAttributeTypeID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectCustomAttributeTypeName">Initial value of the ProjectCustomAttributeTypeName property.</param>
        /// <param name="projectCustomAttributeDataTypeID">Initial value of the ProjectCustomAttributeDataTypeID property.</param>
        /// <param name="isRequired">Initial value of the IsRequired property.</param>
        public static ProjectCustomAttributeType CreateProjectCustomAttributeType(global::System.Int32 projectCustomAttributeTypeID, global::System.Int32 tenantID, global::System.String projectCustomAttributeTypeName, global::System.Int32 projectCustomAttributeDataTypeID, global::System.Boolean isRequired)
        {
            ProjectCustomAttributeType projectCustomAttributeType = new ProjectCustomAttributeType();
            projectCustomAttributeType.ProjectCustomAttributeTypeID = projectCustomAttributeTypeID;
            projectCustomAttributeType.TenantID = tenantID;
            projectCustomAttributeType.ProjectCustomAttributeTypeName = projectCustomAttributeTypeName;
            projectCustomAttributeType.ProjectCustomAttributeDataTypeID = projectCustomAttributeDataTypeID;
            projectCustomAttributeType.IsRequired = isRequired;
            return projectCustomAttributeType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectCustomAttributeTypeID
        {
            get
            {
                return _ProjectCustomAttributeTypeID;
            }
            set
            {
                if (_ProjectCustomAttributeTypeID != value)
                {
                    OnProjectCustomAttributeTypeIDChanging(value);
                    ReportPropertyChanging("ProjectCustomAttributeTypeID");
                    _ProjectCustomAttributeTypeID = StructuralObject.SetValidValue(value, "ProjectCustomAttributeTypeID");
                    ReportPropertyChanged("ProjectCustomAttributeTypeID");
                    OnProjectCustomAttributeTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectCustomAttributeTypeID;
        partial void OnProjectCustomAttributeTypeIDChanging(global::System.Int32 value);
        partial void OnProjectCustomAttributeTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectCustomAttributeTypeName
        {
            get
            {
                return _ProjectCustomAttributeTypeName;
            }
            set
            {
                OnProjectCustomAttributeTypeNameChanging(value);
                ReportPropertyChanging("ProjectCustomAttributeTypeName");
                _ProjectCustomAttributeTypeName = StructuralObject.SetValidValue(value, false, "ProjectCustomAttributeTypeName");
                ReportPropertyChanged("ProjectCustomAttributeTypeName");
                OnProjectCustomAttributeTypeNameChanged();
            }
        }
        private global::System.String _ProjectCustomAttributeTypeName;
        partial void OnProjectCustomAttributeTypeNameChanging(global::System.String value);
        partial void OnProjectCustomAttributeTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectCustomAttributeDataTypeID
        {
            get
            {
                return _ProjectCustomAttributeDataTypeID;
            }
            set
            {
                OnProjectCustomAttributeDataTypeIDChanging(value);
                ReportPropertyChanging("ProjectCustomAttributeDataTypeID");
                _ProjectCustomAttributeDataTypeID = StructuralObject.SetValidValue(value, "ProjectCustomAttributeDataTypeID");
                ReportPropertyChanged("ProjectCustomAttributeDataTypeID");
                OnProjectCustomAttributeDataTypeIDChanged();
            }
        }
        private global::System.Int32 _ProjectCustomAttributeDataTypeID;
        partial void OnProjectCustomAttributeDataTypeIDChanging(global::System.Int32 value);
        partial void OnProjectCustomAttributeDataTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> MeasurementUnitTypeID
        {
            get
            {
                return _MeasurementUnitTypeID;
            }
            set
            {
                OnMeasurementUnitTypeIDChanging(value);
                ReportPropertyChanging("MeasurementUnitTypeID");
                _MeasurementUnitTypeID = StructuralObject.SetValidValue(value, "MeasurementUnitTypeID");
                ReportPropertyChanged("MeasurementUnitTypeID");
                OnMeasurementUnitTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _MeasurementUnitTypeID;
        partial void OnMeasurementUnitTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnMeasurementUnitTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRequired
        {
            get
            {
                return _IsRequired;
            }
            set
            {
                OnIsRequiredChanging(value);
                ReportPropertyChanging("IsRequired");
                _IsRequired = StructuralObject.SetValidValue(value, "IsRequired");
                ReportPropertyChanged("IsRequired");
                OnIsRequiredChanged();
            }
        }
        private global::System.Boolean _IsRequired;
        partial void OnIsRequiredChanging(global::System.Boolean value);
        partial void OnIsRequiredChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectCustomAttributeTypeDescription
        {
            get
            {
                return _ProjectCustomAttributeTypeDescription;
            }
            set
            {
                OnProjectCustomAttributeTypeDescriptionChanging(value);
                ReportPropertyChanging("ProjectCustomAttributeTypeDescription");
                _ProjectCustomAttributeTypeDescription = StructuralObject.SetValidValue(value, true, "ProjectCustomAttributeTypeDescription");
                ReportPropertyChanged("ProjectCustomAttributeTypeDescription");
                OnProjectCustomAttributeTypeDescriptionChanged();
            }
        }
        private global::System.String _ProjectCustomAttributeTypeDescription;
        partial void OnProjectCustomAttributeTypeDescriptionChanging(global::System.String value);
        partial void OnProjectCustomAttributeTypeDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectCustomAttributeTypeOptionsSchema
        {
            get
            {
                return _ProjectCustomAttributeTypeOptionsSchema;
            }
            set
            {
                OnProjectCustomAttributeTypeOptionsSchemaChanging(value);
                ReportPropertyChanging("ProjectCustomAttributeTypeOptionsSchema");
                _ProjectCustomAttributeTypeOptionsSchema = StructuralObject.SetValidValue(value, true, "ProjectCustomAttributeTypeOptionsSchema");
                ReportPropertyChanged("ProjectCustomAttributeTypeOptionsSchema");
                OnProjectCustomAttributeTypeOptionsSchemaChanged();
            }
        }
        private global::System.String _ProjectCustomAttributeTypeOptionsSchema;
        partial void OnProjectCustomAttributeTypeOptionsSchemaChanging(global::System.String value);
        partial void OnProjectCustomAttributeTypeOptionsSchemaChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeType_MeasurementUnitType_MeasurementUnitTypeID", "MeasurementUnitType")]
        public MeasurementUnitType MeasurementUnitType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasurementUnitType>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeType_MeasurementUnitType_MeasurementUnitTypeID", "MeasurementUnitType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasurementUnitType>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeType_MeasurementUnitType_MeasurementUnitTypeID", "MeasurementUnitType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<MeasurementUnitType> MeasurementUnitTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MeasurementUnitType>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeType_MeasurementUnitType_MeasurementUnitTypeID", "MeasurementUnitType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MeasurementUnitType>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeType_MeasurementUnitType_MeasurementUnitTypeID", "MeasurementUnitType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttribute_ProjectCustomAttributeType_ProjectCustomAttributeTypeID", "ProjectCustomAttribute")]
        public EntityCollection<ProjectCustomAttribute> ProjectCustomAttribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectCustomAttribute>("ProjectFirma.Web.Models.FK_ProjectCustomAttribute_ProjectCustomAttributeType_ProjectCustomAttributeTypeID", "ProjectCustomAttribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectCustomAttribute>("ProjectFirma.Web.Models.FK_ProjectCustomAttribute_ProjectCustomAttributeType_ProjectCustomAttributeTypeID", "ProjectCustomAttribute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeType_ProjectCustomAttributeDataType_ProjectCustomAttributeDataTypeID", "ProjectCustomAttributeDataType")]
        public ProjectCustomAttributeDataType ProjectCustomAttributeDataType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCustomAttributeDataType>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeType_ProjectCustomAttributeDataType_ProjectCustomAttributeDataTypeID", "ProjectCustomAttributeDataType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCustomAttributeDataType>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeType_ProjectCustomAttributeDataType_ProjectCustomAttributeDataTypeID", "ProjectCustomAttributeDataType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectCustomAttributeDataType> ProjectCustomAttributeDataTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCustomAttributeDataType>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeType_ProjectCustomAttributeDataType_ProjectCustomAttributeDataTypeID", "ProjectCustomAttributeDataType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectCustomAttributeDataType>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeType_ProjectCustomAttributeDataType_ProjectCustomAttributeDataTypeID", "ProjectCustomAttributeDataType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeType_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeType_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeType_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeType_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeType_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeUpdate_ProjectCustomAttributeType_ProjectCustomAttributeTypeID", "ProjectCustomAttributeUpdate")]
        public EntityCollection<ProjectCustomAttributeUpdate> ProjectCustomAttributeUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectCustomAttributeUpdate>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdate_ProjectCustomAttributeType_ProjectCustomAttributeTypeID", "ProjectCustomAttributeUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectCustomAttributeUpdate>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdate_ProjectCustomAttributeType_ProjectCustomAttributeTypeID", "ProjectCustomAttributeUpdate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectCustomAttributeUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectCustomAttributeUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectCustomAttributeUpdate object.
        /// </summary>
        /// <param name="projectCustomAttributeUpdateID">Initial value of the ProjectCustomAttributeUpdateID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectUpdateBatchID">Initial value of the ProjectUpdateBatchID property.</param>
        /// <param name="projectCustomAttributeTypeID">Initial value of the ProjectCustomAttributeTypeID property.</param>
        public static ProjectCustomAttributeUpdate CreateProjectCustomAttributeUpdate(global::System.Int32 projectCustomAttributeUpdateID, global::System.Int32 tenantID, global::System.Int32 projectUpdateBatchID, global::System.Int32 projectCustomAttributeTypeID)
        {
            ProjectCustomAttributeUpdate projectCustomAttributeUpdate = new ProjectCustomAttributeUpdate();
            projectCustomAttributeUpdate.ProjectCustomAttributeUpdateID = projectCustomAttributeUpdateID;
            projectCustomAttributeUpdate.TenantID = tenantID;
            projectCustomAttributeUpdate.ProjectUpdateBatchID = projectUpdateBatchID;
            projectCustomAttributeUpdate.ProjectCustomAttributeTypeID = projectCustomAttributeTypeID;
            return projectCustomAttributeUpdate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectCustomAttributeUpdateID
        {
            get
            {
                return _ProjectCustomAttributeUpdateID;
            }
            set
            {
                if (_ProjectCustomAttributeUpdateID != value)
                {
                    OnProjectCustomAttributeUpdateIDChanging(value);
                    ReportPropertyChanging("ProjectCustomAttributeUpdateID");
                    _ProjectCustomAttributeUpdateID = StructuralObject.SetValidValue(value, "ProjectCustomAttributeUpdateID");
                    ReportPropertyChanged("ProjectCustomAttributeUpdateID");
                    OnProjectCustomAttributeUpdateIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectCustomAttributeUpdateID;
        partial void OnProjectCustomAttributeUpdateIDChanging(global::System.Int32 value);
        partial void OnProjectCustomAttributeUpdateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateBatchID
        {
            get
            {
                return _ProjectUpdateBatchID;
            }
            set
            {
                OnProjectUpdateBatchIDChanging(value);
                ReportPropertyChanging("ProjectUpdateBatchID");
                _ProjectUpdateBatchID = StructuralObject.SetValidValue(value, "ProjectUpdateBatchID");
                ReportPropertyChanged("ProjectUpdateBatchID");
                OnProjectUpdateBatchIDChanged();
            }
        }
        private global::System.Int32 _ProjectUpdateBatchID;
        partial void OnProjectUpdateBatchIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectCustomAttributeTypeID
        {
            get
            {
                return _ProjectCustomAttributeTypeID;
            }
            set
            {
                OnProjectCustomAttributeTypeIDChanging(value);
                ReportPropertyChanging("ProjectCustomAttributeTypeID");
                _ProjectCustomAttributeTypeID = StructuralObject.SetValidValue(value, "ProjectCustomAttributeTypeID");
                ReportPropertyChanged("ProjectCustomAttributeTypeID");
                OnProjectCustomAttributeTypeIDChanged();
            }
        }
        private global::System.Int32 _ProjectCustomAttributeTypeID;
        partial void OnProjectCustomAttributeTypeIDChanging(global::System.Int32 value);
        partial void OnProjectCustomAttributeTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeUpdate_ProjectCustomAttributeType_ProjectCustomAttributeTypeID", "ProjectCustomAttributeType")]
        public ProjectCustomAttributeType ProjectCustomAttributeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCustomAttributeType>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdate_ProjectCustomAttributeType_ProjectCustomAttributeTypeID", "ProjectCustomAttributeType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCustomAttributeType>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdate_ProjectCustomAttributeType_ProjectCustomAttributeTypeID", "ProjectCustomAttributeType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectCustomAttributeType> ProjectCustomAttributeTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCustomAttributeType>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdate_ProjectCustomAttributeType_ProjectCustomAttributeTypeID", "ProjectCustomAttributeType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectCustomAttributeType>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdate_ProjectCustomAttributeType_ProjectCustomAttributeTypeID", "ProjectCustomAttributeType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch")]
        public ProjectUpdateBatch ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUpdateBatch> ProjectUpdateBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeUpdate_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdate_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdate_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdate_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdate_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeUpdateValue_ProjectCustomAttributeUpdate_ProjectCustomAttributeUpdateID", "ProjectCustomAttributeUpdateValue")]
        public EntityCollection<ProjectCustomAttributeUpdateValue> ProjectCustomAttributeUpdateValue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectCustomAttributeUpdateValue>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdateValue_ProjectCustomAttributeUpdate_ProjectCustomAttributeUpdateID", "ProjectCustomAttributeUpdateValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectCustomAttributeUpdateValue>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdateValue_ProjectCustomAttributeUpdate_ProjectCustomAttributeUpdateID", "ProjectCustomAttributeUpdateValue", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectCustomAttributeUpdateValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectCustomAttributeUpdateValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectCustomAttributeUpdateValue object.
        /// </summary>
        /// <param name="projectCustomAttributeUpdateValueID">Initial value of the ProjectCustomAttributeUpdateValueID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectCustomAttributeUpdateID">Initial value of the ProjectCustomAttributeUpdateID property.</param>
        /// <param name="attributeValue">Initial value of the AttributeValue property.</param>
        public static ProjectCustomAttributeUpdateValue CreateProjectCustomAttributeUpdateValue(global::System.Int32 projectCustomAttributeUpdateValueID, global::System.Int32 tenantID, global::System.Int32 projectCustomAttributeUpdateID, global::System.String attributeValue)
        {
            ProjectCustomAttributeUpdateValue projectCustomAttributeUpdateValue = new ProjectCustomAttributeUpdateValue();
            projectCustomAttributeUpdateValue.ProjectCustomAttributeUpdateValueID = projectCustomAttributeUpdateValueID;
            projectCustomAttributeUpdateValue.TenantID = tenantID;
            projectCustomAttributeUpdateValue.ProjectCustomAttributeUpdateID = projectCustomAttributeUpdateID;
            projectCustomAttributeUpdateValue.AttributeValue = attributeValue;
            return projectCustomAttributeUpdateValue;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectCustomAttributeUpdateValueID
        {
            get
            {
                return _ProjectCustomAttributeUpdateValueID;
            }
            set
            {
                if (_ProjectCustomAttributeUpdateValueID != value)
                {
                    OnProjectCustomAttributeUpdateValueIDChanging(value);
                    ReportPropertyChanging("ProjectCustomAttributeUpdateValueID");
                    _ProjectCustomAttributeUpdateValueID = StructuralObject.SetValidValue(value, "ProjectCustomAttributeUpdateValueID");
                    ReportPropertyChanged("ProjectCustomAttributeUpdateValueID");
                    OnProjectCustomAttributeUpdateValueIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectCustomAttributeUpdateValueID;
        partial void OnProjectCustomAttributeUpdateValueIDChanging(global::System.Int32 value);
        partial void OnProjectCustomAttributeUpdateValueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectCustomAttributeUpdateID
        {
            get
            {
                return _ProjectCustomAttributeUpdateID;
            }
            set
            {
                OnProjectCustomAttributeUpdateIDChanging(value);
                ReportPropertyChanging("ProjectCustomAttributeUpdateID");
                _ProjectCustomAttributeUpdateID = StructuralObject.SetValidValue(value, "ProjectCustomAttributeUpdateID");
                ReportPropertyChanged("ProjectCustomAttributeUpdateID");
                OnProjectCustomAttributeUpdateIDChanged();
            }
        }
        private global::System.Int32 _ProjectCustomAttributeUpdateID;
        partial void OnProjectCustomAttributeUpdateIDChanging(global::System.Int32 value);
        partial void OnProjectCustomAttributeUpdateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AttributeValue
        {
            get
            {
                return _AttributeValue;
            }
            set
            {
                OnAttributeValueChanging(value);
                ReportPropertyChanging("AttributeValue");
                _AttributeValue = StructuralObject.SetValidValue(value, false, "AttributeValue");
                ReportPropertyChanged("AttributeValue");
                OnAttributeValueChanged();
            }
        }
        private global::System.String _AttributeValue;
        partial void OnAttributeValueChanging(global::System.String value);
        partial void OnAttributeValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeUpdateValue_ProjectCustomAttributeUpdate_ProjectCustomAttributeUpdateID", "ProjectCustomAttributeUpdate")]
        public ProjectCustomAttributeUpdate ProjectCustomAttributeUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCustomAttributeUpdate>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdateValue_ProjectCustomAttributeUpdate_ProjectCustomAttributeUpdateID", "ProjectCustomAttributeUpdate").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCustomAttributeUpdate>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdateValue_ProjectCustomAttributeUpdate_ProjectCustomAttributeUpdateID", "ProjectCustomAttributeUpdate").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectCustomAttributeUpdate> ProjectCustomAttributeUpdateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCustomAttributeUpdate>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdateValue_ProjectCustomAttributeUpdate_ProjectCustomAttributeUpdateID", "ProjectCustomAttributeUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectCustomAttributeUpdate>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdateValue_ProjectCustomAttributeUpdate_ProjectCustomAttributeUpdateID", "ProjectCustomAttributeUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeUpdateValue_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdateValue_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdateValue_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdateValue_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdateValue_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectCustomAttributeValue")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectCustomAttributeValue : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectCustomAttributeValue object.
        /// </summary>
        /// <param name="projectCustomAttributeValueID">Initial value of the ProjectCustomAttributeValueID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectCustomAttributeID">Initial value of the ProjectCustomAttributeID property.</param>
        /// <param name="attributeValue">Initial value of the AttributeValue property.</param>
        public static ProjectCustomAttributeValue CreateProjectCustomAttributeValue(global::System.Int32 projectCustomAttributeValueID, global::System.Int32 tenantID, global::System.Int32 projectCustomAttributeID, global::System.String attributeValue)
        {
            ProjectCustomAttributeValue projectCustomAttributeValue = new ProjectCustomAttributeValue();
            projectCustomAttributeValue.ProjectCustomAttributeValueID = projectCustomAttributeValueID;
            projectCustomAttributeValue.TenantID = tenantID;
            projectCustomAttributeValue.ProjectCustomAttributeID = projectCustomAttributeID;
            projectCustomAttributeValue.AttributeValue = attributeValue;
            return projectCustomAttributeValue;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectCustomAttributeValueID
        {
            get
            {
                return _ProjectCustomAttributeValueID;
            }
            set
            {
                if (_ProjectCustomAttributeValueID != value)
                {
                    OnProjectCustomAttributeValueIDChanging(value);
                    ReportPropertyChanging("ProjectCustomAttributeValueID");
                    _ProjectCustomAttributeValueID = StructuralObject.SetValidValue(value, "ProjectCustomAttributeValueID");
                    ReportPropertyChanged("ProjectCustomAttributeValueID");
                    OnProjectCustomAttributeValueIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectCustomAttributeValueID;
        partial void OnProjectCustomAttributeValueIDChanging(global::System.Int32 value);
        partial void OnProjectCustomAttributeValueIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectCustomAttributeID
        {
            get
            {
                return _ProjectCustomAttributeID;
            }
            set
            {
                OnProjectCustomAttributeIDChanging(value);
                ReportPropertyChanging("ProjectCustomAttributeID");
                _ProjectCustomAttributeID = StructuralObject.SetValidValue(value, "ProjectCustomAttributeID");
                ReportPropertyChanged("ProjectCustomAttributeID");
                OnProjectCustomAttributeIDChanged();
            }
        }
        private global::System.Int32 _ProjectCustomAttributeID;
        partial void OnProjectCustomAttributeIDChanging(global::System.Int32 value);
        partial void OnProjectCustomAttributeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AttributeValue
        {
            get
            {
                return _AttributeValue;
            }
            set
            {
                OnAttributeValueChanging(value);
                ReportPropertyChanging("AttributeValue");
                _AttributeValue = StructuralObject.SetValidValue(value, false, "AttributeValue");
                ReportPropertyChanged("AttributeValue");
                OnAttributeValueChanged();
            }
        }
        private global::System.String _AttributeValue;
        partial void OnAttributeValueChanging(global::System.String value);
        partial void OnAttributeValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeValue_ProjectCustomAttribute_ProjectCustomAttributeID", "ProjectCustomAttribute")]
        public ProjectCustomAttribute ProjectCustomAttribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCustomAttribute>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeValue_ProjectCustomAttribute_ProjectCustomAttributeID", "ProjectCustomAttribute").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCustomAttribute>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeValue_ProjectCustomAttribute_ProjectCustomAttributeID", "ProjectCustomAttribute").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectCustomAttribute> ProjectCustomAttributeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectCustomAttribute>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeValue_ProjectCustomAttribute_ProjectCustomAttributeID", "ProjectCustomAttribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectCustomAttribute>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeValue_ProjectCustomAttribute_ProjectCustomAttributeID", "ProjectCustomAttribute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeValue_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeValue_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeValue_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeValue_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeValue_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectDocument")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectDocument : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectDocument object.
        /// </summary>
        /// <param name="projectDocumentID">Initial value of the ProjectDocumentID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="fileResourceID">Initial value of the FileResourceID property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        public static ProjectDocument CreateProjectDocument(global::System.Int32 projectDocumentID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.Int32 fileResourceID, global::System.String displayName)
        {
            ProjectDocument projectDocument = new ProjectDocument();
            projectDocument.ProjectDocumentID = projectDocumentID;
            projectDocument.TenantID = tenantID;
            projectDocument.ProjectID = projectID;
            projectDocument.FileResourceID = fileResourceID;
            projectDocument.DisplayName = displayName;
            return projectDocument;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectDocumentID
        {
            get
            {
                return _ProjectDocumentID;
            }
            set
            {
                if (_ProjectDocumentID != value)
                {
                    OnProjectDocumentIDChanging(value);
                    ReportPropertyChanging("ProjectDocumentID");
                    _ProjectDocumentID = StructuralObject.SetValidValue(value, "ProjectDocumentID");
                    ReportPropertyChanged("ProjectDocumentID");
                    OnProjectDocumentIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectDocumentID;
        partial void OnProjectDocumentIDChanging(global::System.Int32 value);
        partial void OnProjectDocumentIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileResourceID
        {
            get
            {
                return _FileResourceID;
            }
            set
            {
                OnFileResourceIDChanging(value);
                ReportPropertyChanging("FileResourceID");
                _FileResourceID = StructuralObject.SetValidValue(value, "FileResourceID");
                ReportPropertyChanged("FileResourceID");
                OnFileResourceIDChanged();
            }
        }
        private global::System.Int32 _FileResourceID;
        partial void OnFileResourceIDChanging(global::System.Int32 value);
        partial void OnFileResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false, "DisplayName");
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectDocument_FileResource_FileResourceID", "FileResource")]
        public FileResource FileResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_ProjectDocument_FileResource_FileResourceID", "FileResource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_ProjectDocument_FileResource_FileResourceID", "FileResource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileResource> FileResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_ProjectDocument_FileResource_FileResourceID", "FileResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_ProjectDocument_FileResource_FileResourceID", "FileResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectDocument_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectDocument_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectDocument_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectDocument_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectDocument_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectDocument_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectDocument_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectDocument_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectDocument_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectDocument_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectDocumentUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectDocumentUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectDocumentUpdate object.
        /// </summary>
        /// <param name="projectDocumentUpdateID">Initial value of the ProjectDocumentUpdateID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectUpdateBatchID">Initial value of the ProjectUpdateBatchID property.</param>
        /// <param name="fileResourceID">Initial value of the FileResourceID property.</param>
        /// <param name="displayName">Initial value of the DisplayName property.</param>
        public static ProjectDocumentUpdate CreateProjectDocumentUpdate(global::System.Int32 projectDocumentUpdateID, global::System.Int32 tenantID, global::System.Int32 projectUpdateBatchID, global::System.Int32 fileResourceID, global::System.String displayName)
        {
            ProjectDocumentUpdate projectDocumentUpdate = new ProjectDocumentUpdate();
            projectDocumentUpdate.ProjectDocumentUpdateID = projectDocumentUpdateID;
            projectDocumentUpdate.TenantID = tenantID;
            projectDocumentUpdate.ProjectUpdateBatchID = projectUpdateBatchID;
            projectDocumentUpdate.FileResourceID = fileResourceID;
            projectDocumentUpdate.DisplayName = displayName;
            return projectDocumentUpdate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectDocumentUpdateID
        {
            get
            {
                return _ProjectDocumentUpdateID;
            }
            set
            {
                if (_ProjectDocumentUpdateID != value)
                {
                    OnProjectDocumentUpdateIDChanging(value);
                    ReportPropertyChanging("ProjectDocumentUpdateID");
                    _ProjectDocumentUpdateID = StructuralObject.SetValidValue(value, "ProjectDocumentUpdateID");
                    ReportPropertyChanged("ProjectDocumentUpdateID");
                    OnProjectDocumentUpdateIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectDocumentUpdateID;
        partial void OnProjectDocumentUpdateIDChanging(global::System.Int32 value);
        partial void OnProjectDocumentUpdateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateBatchID
        {
            get
            {
                return _ProjectUpdateBatchID;
            }
            set
            {
                OnProjectUpdateBatchIDChanging(value);
                ReportPropertyChanging("ProjectUpdateBatchID");
                _ProjectUpdateBatchID = StructuralObject.SetValidValue(value, "ProjectUpdateBatchID");
                ReportPropertyChanged("ProjectUpdateBatchID");
                OnProjectUpdateBatchIDChanged();
            }
        }
        private global::System.Int32 _ProjectUpdateBatchID;
        partial void OnProjectUpdateBatchIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileResourceID
        {
            get
            {
                return _FileResourceID;
            }
            set
            {
                OnFileResourceIDChanging(value);
                ReportPropertyChanging("FileResourceID");
                _FileResourceID = StructuralObject.SetValidValue(value, "FileResourceID");
                ReportPropertyChanged("FileResourceID");
                OnFileResourceIDChanged();
            }
        }
        private global::System.Int32 _FileResourceID;
        partial void OnFileResourceIDChanging(global::System.Int32 value);
        partial void OnFileResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayName
        {
            get
            {
                return _DisplayName;
            }
            set
            {
                OnDisplayNameChanging(value);
                ReportPropertyChanging("DisplayName");
                _DisplayName = StructuralObject.SetValidValue(value, false, "DisplayName");
                ReportPropertyChanged("DisplayName");
                OnDisplayNameChanged();
            }
        }
        private global::System.String _DisplayName;
        partial void OnDisplayNameChanging(global::System.String value);
        partial void OnDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectDocumentUpdate_FileResource_FileResourceID", "FileResource")]
        public FileResource FileResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_ProjectDocumentUpdate_FileResource_FileResourceID", "FileResource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_ProjectDocumentUpdate_FileResource_FileResourceID", "FileResource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileResource> FileResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_ProjectDocumentUpdate_FileResource_FileResourceID", "FileResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_ProjectDocumentUpdate_FileResource_FileResourceID", "FileResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectDocumentUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch")]
        public ProjectUpdateBatch ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectDocumentUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectDocumentUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUpdateBatch> ProjectUpdateBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectDocumentUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectDocumentUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectDocumentUpdate_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectDocumentUpdate_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectDocumentUpdate_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectDocumentUpdate_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectDocumentUpdate_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectExemptReportingType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectExemptReportingType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectExemptReportingType object.
        /// </summary>
        /// <param name="projectExemptReportingTypeID">Initial value of the ProjectExemptReportingTypeID property.</param>
        /// <param name="projectExemptReportingTypeName">Initial value of the ProjectExemptReportingTypeName property.</param>
        /// <param name="projectExemptReportingTypeDisplayName">Initial value of the ProjectExemptReportingTypeDisplayName property.</param>
        public static ProjectExemptReportingType CreateProjectExemptReportingType(global::System.Int32 projectExemptReportingTypeID, global::System.String projectExemptReportingTypeName, global::System.String projectExemptReportingTypeDisplayName)
        {
            ProjectExemptReportingType projectExemptReportingType = new ProjectExemptReportingType();
            projectExemptReportingType.ProjectExemptReportingTypeID = projectExemptReportingTypeID;
            projectExemptReportingType.ProjectExemptReportingTypeName = projectExemptReportingTypeName;
            projectExemptReportingType.ProjectExemptReportingTypeDisplayName = projectExemptReportingTypeDisplayName;
            return projectExemptReportingType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectExemptReportingTypeID
        {
            get
            {
                return _ProjectExemptReportingTypeID;
            }
            set
            {
                if (_ProjectExemptReportingTypeID != value)
                {
                    OnProjectExemptReportingTypeIDChanging(value);
                    ReportPropertyChanging("ProjectExemptReportingTypeID");
                    _ProjectExemptReportingTypeID = StructuralObject.SetValidValue(value, "ProjectExemptReportingTypeID");
                    ReportPropertyChanged("ProjectExemptReportingTypeID");
                    OnProjectExemptReportingTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectExemptReportingTypeID;
        partial void OnProjectExemptReportingTypeIDChanging(global::System.Int32 value);
        partial void OnProjectExemptReportingTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectExemptReportingTypeName
        {
            get
            {
                return _ProjectExemptReportingTypeName;
            }
            set
            {
                OnProjectExemptReportingTypeNameChanging(value);
                ReportPropertyChanging("ProjectExemptReportingTypeName");
                _ProjectExemptReportingTypeName = StructuralObject.SetValidValue(value, false, "ProjectExemptReportingTypeName");
                ReportPropertyChanged("ProjectExemptReportingTypeName");
                OnProjectExemptReportingTypeNameChanged();
            }
        }
        private global::System.String _ProjectExemptReportingTypeName;
        partial void OnProjectExemptReportingTypeNameChanging(global::System.String value);
        partial void OnProjectExemptReportingTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectExemptReportingTypeDisplayName
        {
            get
            {
                return _ProjectExemptReportingTypeDisplayName;
            }
            set
            {
                OnProjectExemptReportingTypeDisplayNameChanging(value);
                ReportPropertyChanging("ProjectExemptReportingTypeDisplayName");
                _ProjectExemptReportingTypeDisplayName = StructuralObject.SetValidValue(value, false, "ProjectExemptReportingTypeDisplayName");
                ReportPropertyChanged("ProjectExemptReportingTypeDisplayName");
                OnProjectExemptReportingTypeDisplayNameChanged();
            }
        }
        private global::System.String _ProjectExemptReportingTypeDisplayName;
        partial void OnProjectExemptReportingTypeDisplayNameChanging(global::System.String value);
        partial void OnProjectExemptReportingTypeDisplayNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectExemptReportingYear_ProjectExemptReportingType_ProjectExemptReportingTypeID", "ProjectExemptReportingYear")]
        public EntityCollection<ProjectExemptReportingYear> ProjectExemptReportingYear
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectExemptReportingYear>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYear_ProjectExemptReportingType_ProjectExemptReportingTypeID", "ProjectExemptReportingYear");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectExemptReportingYear>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYear_ProjectExemptReportingType_ProjectExemptReportingTypeID", "ProjectExemptReportingYear", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectExemptReportingYearUpdate_ProjectExemptReportingType_ProjectExemptReportingTypeID", "ProjectExemptReportingYearUpdate")]
        public EntityCollection<ProjectExemptReportingYearUpdate> ProjectExemptReportingYearUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectExemptReportingYearUpdate>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYearUpdate_ProjectExemptReportingType_ProjectExemptReportingTypeID", "ProjectExemptReportingYearUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectExemptReportingYearUpdate>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYearUpdate_ProjectExemptReportingType_ProjectExemptReportingTypeID", "ProjectExemptReportingYearUpdate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectExemptReportingYear")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectExemptReportingYear : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectExemptReportingYear object.
        /// </summary>
        /// <param name="projectExemptReportingYearID">Initial value of the ProjectExemptReportingYearID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="calendarYear">Initial value of the CalendarYear property.</param>
        /// <param name="projectExemptReportingTypeID">Initial value of the ProjectExemptReportingTypeID property.</param>
        public static ProjectExemptReportingYear CreateProjectExemptReportingYear(global::System.Int32 projectExemptReportingYearID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.Int32 calendarYear, global::System.Int32 projectExemptReportingTypeID)
        {
            ProjectExemptReportingYear projectExemptReportingYear = new ProjectExemptReportingYear();
            projectExemptReportingYear.ProjectExemptReportingYearID = projectExemptReportingYearID;
            projectExemptReportingYear.TenantID = tenantID;
            projectExemptReportingYear.ProjectID = projectID;
            projectExemptReportingYear.CalendarYear = calendarYear;
            projectExemptReportingYear.ProjectExemptReportingTypeID = projectExemptReportingTypeID;
            return projectExemptReportingYear;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectExemptReportingYearID
        {
            get
            {
                return _ProjectExemptReportingYearID;
            }
            set
            {
                if (_ProjectExemptReportingYearID != value)
                {
                    OnProjectExemptReportingYearIDChanging(value);
                    ReportPropertyChanging("ProjectExemptReportingYearID");
                    _ProjectExemptReportingYearID = StructuralObject.SetValidValue(value, "ProjectExemptReportingYearID");
                    ReportPropertyChanged("ProjectExemptReportingYearID");
                    OnProjectExemptReportingYearIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectExemptReportingYearID;
        partial void OnProjectExemptReportingYearIDChanging(global::System.Int32 value);
        partial void OnProjectExemptReportingYearIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalendarYear
        {
            get
            {
                return _CalendarYear;
            }
            set
            {
                OnCalendarYearChanging(value);
                ReportPropertyChanging("CalendarYear");
                _CalendarYear = StructuralObject.SetValidValue(value, "CalendarYear");
                ReportPropertyChanged("CalendarYear");
                OnCalendarYearChanged();
            }
        }
        private global::System.Int32 _CalendarYear;
        partial void OnCalendarYearChanging(global::System.Int32 value);
        partial void OnCalendarYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectExemptReportingTypeID
        {
            get
            {
                return _ProjectExemptReportingTypeID;
            }
            set
            {
                OnProjectExemptReportingTypeIDChanging(value);
                ReportPropertyChanging("ProjectExemptReportingTypeID");
                _ProjectExemptReportingTypeID = StructuralObject.SetValidValue(value, "ProjectExemptReportingTypeID");
                ReportPropertyChanged("ProjectExemptReportingTypeID");
                OnProjectExemptReportingTypeIDChanged();
            }
        }
        private global::System.Int32 _ProjectExemptReportingTypeID;
        partial void OnProjectExemptReportingTypeIDChanging(global::System.Int32 value);
        partial void OnProjectExemptReportingTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectExemptReportingYear_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYear_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYear_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYear_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYear_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectExemptReportingYear_ProjectExemptReportingType_ProjectExemptReportingTypeID", "ProjectExemptReportingType")]
        public ProjectExemptReportingType ProjectExemptReportingType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectExemptReportingType>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYear_ProjectExemptReportingType_ProjectExemptReportingTypeID", "ProjectExemptReportingType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectExemptReportingType>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYear_ProjectExemptReportingType_ProjectExemptReportingTypeID", "ProjectExemptReportingType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectExemptReportingType> ProjectExemptReportingTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectExemptReportingType>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYear_ProjectExemptReportingType_ProjectExemptReportingTypeID", "ProjectExemptReportingType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectExemptReportingType>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYear_ProjectExemptReportingType_ProjectExemptReportingTypeID", "ProjectExemptReportingType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectExemptReportingYear_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYear_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYear_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYear_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYear_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectExemptReportingYearUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectExemptReportingYearUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectExemptReportingYearUpdate object.
        /// </summary>
        /// <param name="projectExemptReportingYearUpdateID">Initial value of the ProjectExemptReportingYearUpdateID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectUpdateBatchID">Initial value of the ProjectUpdateBatchID property.</param>
        /// <param name="calendarYear">Initial value of the CalendarYear property.</param>
        /// <param name="projectExemptReportingTypeID">Initial value of the ProjectExemptReportingTypeID property.</param>
        public static ProjectExemptReportingYearUpdate CreateProjectExemptReportingYearUpdate(global::System.Int32 projectExemptReportingYearUpdateID, global::System.Int32 tenantID, global::System.Int32 projectUpdateBatchID, global::System.Int32 calendarYear, global::System.Int32 projectExemptReportingTypeID)
        {
            ProjectExemptReportingYearUpdate projectExemptReportingYearUpdate = new ProjectExemptReportingYearUpdate();
            projectExemptReportingYearUpdate.ProjectExemptReportingYearUpdateID = projectExemptReportingYearUpdateID;
            projectExemptReportingYearUpdate.TenantID = tenantID;
            projectExemptReportingYearUpdate.ProjectUpdateBatchID = projectUpdateBatchID;
            projectExemptReportingYearUpdate.CalendarYear = calendarYear;
            projectExemptReportingYearUpdate.ProjectExemptReportingTypeID = projectExemptReportingTypeID;
            return projectExemptReportingYearUpdate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectExemptReportingYearUpdateID
        {
            get
            {
                return _ProjectExemptReportingYearUpdateID;
            }
            set
            {
                if (_ProjectExemptReportingYearUpdateID != value)
                {
                    OnProjectExemptReportingYearUpdateIDChanging(value);
                    ReportPropertyChanging("ProjectExemptReportingYearUpdateID");
                    _ProjectExemptReportingYearUpdateID = StructuralObject.SetValidValue(value, "ProjectExemptReportingYearUpdateID");
                    ReportPropertyChanged("ProjectExemptReportingYearUpdateID");
                    OnProjectExemptReportingYearUpdateIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectExemptReportingYearUpdateID;
        partial void OnProjectExemptReportingYearUpdateIDChanging(global::System.Int32 value);
        partial void OnProjectExemptReportingYearUpdateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateBatchID
        {
            get
            {
                return _ProjectUpdateBatchID;
            }
            set
            {
                OnProjectUpdateBatchIDChanging(value);
                ReportPropertyChanging("ProjectUpdateBatchID");
                _ProjectUpdateBatchID = StructuralObject.SetValidValue(value, "ProjectUpdateBatchID");
                ReportPropertyChanged("ProjectUpdateBatchID");
                OnProjectUpdateBatchIDChanged();
            }
        }
        private global::System.Int32 _ProjectUpdateBatchID;
        partial void OnProjectUpdateBatchIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalendarYear
        {
            get
            {
                return _CalendarYear;
            }
            set
            {
                OnCalendarYearChanging(value);
                ReportPropertyChanging("CalendarYear");
                _CalendarYear = StructuralObject.SetValidValue(value, "CalendarYear");
                ReportPropertyChanged("CalendarYear");
                OnCalendarYearChanged();
            }
        }
        private global::System.Int32 _CalendarYear;
        partial void OnCalendarYearChanging(global::System.Int32 value);
        partial void OnCalendarYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectExemptReportingTypeID
        {
            get
            {
                return _ProjectExemptReportingTypeID;
            }
            set
            {
                OnProjectExemptReportingTypeIDChanging(value);
                ReportPropertyChanging("ProjectExemptReportingTypeID");
                _ProjectExemptReportingTypeID = StructuralObject.SetValidValue(value, "ProjectExemptReportingTypeID");
                ReportPropertyChanged("ProjectExemptReportingTypeID");
                OnProjectExemptReportingTypeIDChanged();
            }
        }
        private global::System.Int32 _ProjectExemptReportingTypeID;
        partial void OnProjectExemptReportingTypeIDChanging(global::System.Int32 value);
        partial void OnProjectExemptReportingTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectExemptReportingYearUpdate_ProjectExemptReportingType_ProjectExemptReportingTypeID", "ProjectExemptReportingType")]
        public ProjectExemptReportingType ProjectExemptReportingType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectExemptReportingType>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYearUpdate_ProjectExemptReportingType_ProjectExemptReportingTypeID", "ProjectExemptReportingType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectExemptReportingType>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYearUpdate_ProjectExemptReportingType_ProjectExemptReportingTypeID", "ProjectExemptReportingType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectExemptReportingType> ProjectExemptReportingTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectExemptReportingType>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYearUpdate_ProjectExemptReportingType_ProjectExemptReportingTypeID", "ProjectExemptReportingType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectExemptReportingType>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYearUpdate_ProjectExemptReportingType_ProjectExemptReportingTypeID", "ProjectExemptReportingType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectExemptReportingYearUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch")]
        public ProjectUpdateBatch ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYearUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYearUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUpdateBatch> ProjectUpdateBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYearUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYearUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectExemptReportingYearUpdate_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYearUpdate_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYearUpdate_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYearUpdate_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYearUpdate_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectExternalLink")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectExternalLink : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectExternalLink object.
        /// </summary>
        /// <param name="projectExternalLinkID">Initial value of the ProjectExternalLinkID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="externalLinkLabel">Initial value of the ExternalLinkLabel property.</param>
        /// <param name="externalLinkUrl">Initial value of the ExternalLinkUrl property.</param>
        public static ProjectExternalLink CreateProjectExternalLink(global::System.Int32 projectExternalLinkID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.String externalLinkLabel, global::System.String externalLinkUrl)
        {
            ProjectExternalLink projectExternalLink = new ProjectExternalLink();
            projectExternalLink.ProjectExternalLinkID = projectExternalLinkID;
            projectExternalLink.TenantID = tenantID;
            projectExternalLink.ProjectID = projectID;
            projectExternalLink.ExternalLinkLabel = externalLinkLabel;
            projectExternalLink.ExternalLinkUrl = externalLinkUrl;
            return projectExternalLink;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectExternalLinkID
        {
            get
            {
                return _ProjectExternalLinkID;
            }
            set
            {
                if (_ProjectExternalLinkID != value)
                {
                    OnProjectExternalLinkIDChanging(value);
                    ReportPropertyChanging("ProjectExternalLinkID");
                    _ProjectExternalLinkID = StructuralObject.SetValidValue(value, "ProjectExternalLinkID");
                    ReportPropertyChanged("ProjectExternalLinkID");
                    OnProjectExternalLinkIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectExternalLinkID;
        partial void OnProjectExternalLinkIDChanging(global::System.Int32 value);
        partial void OnProjectExternalLinkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExternalLinkLabel
        {
            get
            {
                return _ExternalLinkLabel;
            }
            set
            {
                OnExternalLinkLabelChanging(value);
                ReportPropertyChanging("ExternalLinkLabel");
                _ExternalLinkLabel = StructuralObject.SetValidValue(value, false, "ExternalLinkLabel");
                ReportPropertyChanged("ExternalLinkLabel");
                OnExternalLinkLabelChanged();
            }
        }
        private global::System.String _ExternalLinkLabel;
        partial void OnExternalLinkLabelChanging(global::System.String value);
        partial void OnExternalLinkLabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExternalLinkUrl
        {
            get
            {
                return _ExternalLinkUrl;
            }
            set
            {
                OnExternalLinkUrlChanging(value);
                ReportPropertyChanging("ExternalLinkUrl");
                _ExternalLinkUrl = StructuralObject.SetValidValue(value, false, "ExternalLinkUrl");
                ReportPropertyChanged("ExternalLinkUrl");
                OnExternalLinkUrlChanged();
            }
        }
        private global::System.String _ExternalLinkUrl;
        partial void OnExternalLinkUrlChanging(global::System.String value);
        partial void OnExternalLinkUrlChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectExternalLink_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectExternalLink_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectExternalLink_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectExternalLink_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectExternalLink_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectExternalLink_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectExternalLink_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectExternalLink_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectExternalLink_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectExternalLink_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectExternalLinkUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectExternalLinkUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectExternalLinkUpdate object.
        /// </summary>
        /// <param name="projectExternalLinkUpdateID">Initial value of the ProjectExternalLinkUpdateID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectUpdateBatchID">Initial value of the ProjectUpdateBatchID property.</param>
        /// <param name="externalLinkLabel">Initial value of the ExternalLinkLabel property.</param>
        /// <param name="externalLinkUrl">Initial value of the ExternalLinkUrl property.</param>
        public static ProjectExternalLinkUpdate CreateProjectExternalLinkUpdate(global::System.Int32 projectExternalLinkUpdateID, global::System.Int32 tenantID, global::System.Int32 projectUpdateBatchID, global::System.String externalLinkLabel, global::System.String externalLinkUrl)
        {
            ProjectExternalLinkUpdate projectExternalLinkUpdate = new ProjectExternalLinkUpdate();
            projectExternalLinkUpdate.ProjectExternalLinkUpdateID = projectExternalLinkUpdateID;
            projectExternalLinkUpdate.TenantID = tenantID;
            projectExternalLinkUpdate.ProjectUpdateBatchID = projectUpdateBatchID;
            projectExternalLinkUpdate.ExternalLinkLabel = externalLinkLabel;
            projectExternalLinkUpdate.ExternalLinkUrl = externalLinkUrl;
            return projectExternalLinkUpdate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectExternalLinkUpdateID
        {
            get
            {
                return _ProjectExternalLinkUpdateID;
            }
            set
            {
                if (_ProjectExternalLinkUpdateID != value)
                {
                    OnProjectExternalLinkUpdateIDChanging(value);
                    ReportPropertyChanging("ProjectExternalLinkUpdateID");
                    _ProjectExternalLinkUpdateID = StructuralObject.SetValidValue(value, "ProjectExternalLinkUpdateID");
                    ReportPropertyChanged("ProjectExternalLinkUpdateID");
                    OnProjectExternalLinkUpdateIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectExternalLinkUpdateID;
        partial void OnProjectExternalLinkUpdateIDChanging(global::System.Int32 value);
        partial void OnProjectExternalLinkUpdateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateBatchID
        {
            get
            {
                return _ProjectUpdateBatchID;
            }
            set
            {
                OnProjectUpdateBatchIDChanging(value);
                ReportPropertyChanging("ProjectUpdateBatchID");
                _ProjectUpdateBatchID = StructuralObject.SetValidValue(value, "ProjectUpdateBatchID");
                ReportPropertyChanged("ProjectUpdateBatchID");
                OnProjectUpdateBatchIDChanged();
            }
        }
        private global::System.Int32 _ProjectUpdateBatchID;
        partial void OnProjectUpdateBatchIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExternalLinkLabel
        {
            get
            {
                return _ExternalLinkLabel;
            }
            set
            {
                OnExternalLinkLabelChanging(value);
                ReportPropertyChanging("ExternalLinkLabel");
                _ExternalLinkLabel = StructuralObject.SetValidValue(value, false, "ExternalLinkLabel");
                ReportPropertyChanged("ExternalLinkLabel");
                OnExternalLinkLabelChanged();
            }
        }
        private global::System.String _ExternalLinkLabel;
        partial void OnExternalLinkLabelChanging(global::System.String value);
        partial void OnExternalLinkLabelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ExternalLinkUrl
        {
            get
            {
                return _ExternalLinkUrl;
            }
            set
            {
                OnExternalLinkUrlChanging(value);
                ReportPropertyChanging("ExternalLinkUrl");
                _ExternalLinkUrl = StructuralObject.SetValidValue(value, false, "ExternalLinkUrl");
                ReportPropertyChanged("ExternalLinkUrl");
                OnExternalLinkUrlChanged();
            }
        }
        private global::System.String _ExternalLinkUrl;
        partial void OnExternalLinkUrlChanging(global::System.String value);
        partial void OnExternalLinkUrlChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectExternalLinkUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch")]
        public ProjectUpdateBatch ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectExternalLinkUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectExternalLinkUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUpdateBatch> ProjectUpdateBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectExternalLinkUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectExternalLinkUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectExternalLinkUpdate_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectExternalLinkUpdate_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectExternalLinkUpdate_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectExternalLinkUpdate_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectExternalLinkUpdate_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectFundingSourceExpenditure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectFundingSourceExpenditure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectFundingSourceExpenditure object.
        /// </summary>
        /// <param name="projectFundingSourceExpenditureID">Initial value of the ProjectFundingSourceExpenditureID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="fundingSourceID">Initial value of the FundingSourceID property.</param>
        /// <param name="calendarYear">Initial value of the CalendarYear property.</param>
        /// <param name="expenditureAmount">Initial value of the ExpenditureAmount property.</param>
        public static ProjectFundingSourceExpenditure CreateProjectFundingSourceExpenditure(global::System.Int32 projectFundingSourceExpenditureID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.Int32 fundingSourceID, global::System.Int32 calendarYear, global::System.Decimal expenditureAmount)
        {
            ProjectFundingSourceExpenditure projectFundingSourceExpenditure = new ProjectFundingSourceExpenditure();
            projectFundingSourceExpenditure.ProjectFundingSourceExpenditureID = projectFundingSourceExpenditureID;
            projectFundingSourceExpenditure.TenantID = tenantID;
            projectFundingSourceExpenditure.ProjectID = projectID;
            projectFundingSourceExpenditure.FundingSourceID = fundingSourceID;
            projectFundingSourceExpenditure.CalendarYear = calendarYear;
            projectFundingSourceExpenditure.ExpenditureAmount = expenditureAmount;
            return projectFundingSourceExpenditure;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectFundingSourceExpenditureID
        {
            get
            {
                return _ProjectFundingSourceExpenditureID;
            }
            set
            {
                if (_ProjectFundingSourceExpenditureID != value)
                {
                    OnProjectFundingSourceExpenditureIDChanging(value);
                    ReportPropertyChanging("ProjectFundingSourceExpenditureID");
                    _ProjectFundingSourceExpenditureID = StructuralObject.SetValidValue(value, "ProjectFundingSourceExpenditureID");
                    ReportPropertyChanged("ProjectFundingSourceExpenditureID");
                    OnProjectFundingSourceExpenditureIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectFundingSourceExpenditureID;
        partial void OnProjectFundingSourceExpenditureIDChanging(global::System.Int32 value);
        partial void OnProjectFundingSourceExpenditureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingSourceID
        {
            get
            {
                return _FundingSourceID;
            }
            set
            {
                OnFundingSourceIDChanging(value);
                ReportPropertyChanging("FundingSourceID");
                _FundingSourceID = StructuralObject.SetValidValue(value, "FundingSourceID");
                ReportPropertyChanged("FundingSourceID");
                OnFundingSourceIDChanged();
            }
        }
        private global::System.Int32 _FundingSourceID;
        partial void OnFundingSourceIDChanging(global::System.Int32 value);
        partial void OnFundingSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalendarYear
        {
            get
            {
                return _CalendarYear;
            }
            set
            {
                OnCalendarYearChanging(value);
                ReportPropertyChanging("CalendarYear");
                _CalendarYear = StructuralObject.SetValidValue(value, "CalendarYear");
                ReportPropertyChanged("CalendarYear");
                OnCalendarYearChanged();
            }
        }
        private global::System.Int32 _CalendarYear;
        partial void OnCalendarYearChanging(global::System.Int32 value);
        partial void OnCalendarYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ExpenditureAmount
        {
            get
            {
                return _ExpenditureAmount;
            }
            set
            {
                OnExpenditureAmountChanging(value);
                ReportPropertyChanging("ExpenditureAmount");
                _ExpenditureAmount = StructuralObject.SetValidValue(value, "ExpenditureAmount");
                ReportPropertyChanged("ExpenditureAmount");
                OnExpenditureAmountChanged();
            }
        }
        private global::System.Decimal _ExpenditureAmount;
        partial void OnExpenditureAmountChanging(global::System.Decimal value);
        partial void OnExpenditureAmountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceExpenditure_FundingSource_FundingSourceID", "FundingSource")]
        public FundingSource FundingSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditure_FundingSource_FundingSourceID", "FundingSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditure_FundingSource_FundingSourceID", "FundingSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundingSource> FundingSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditure_FundingSource_FundingSourceID", "FundingSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditure_FundingSource_FundingSourceID", "FundingSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceExpenditure_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditure_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditure_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditure_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditure_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceExpenditure_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditure_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditure_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditure_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditure_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectFundingSourceExpenditureUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectFundingSourceExpenditureUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectFundingSourceExpenditureUpdate object.
        /// </summary>
        /// <param name="projectFundingSourceExpenditureUpdateID">Initial value of the ProjectFundingSourceExpenditureUpdateID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectUpdateBatchID">Initial value of the ProjectUpdateBatchID property.</param>
        /// <param name="fundingSourceID">Initial value of the FundingSourceID property.</param>
        /// <param name="calendarYear">Initial value of the CalendarYear property.</param>
        /// <param name="expenditureAmount">Initial value of the ExpenditureAmount property.</param>
        public static ProjectFundingSourceExpenditureUpdate CreateProjectFundingSourceExpenditureUpdate(global::System.Int32 projectFundingSourceExpenditureUpdateID, global::System.Int32 tenantID, global::System.Int32 projectUpdateBatchID, global::System.Int32 fundingSourceID, global::System.Int32 calendarYear, global::System.Decimal expenditureAmount)
        {
            ProjectFundingSourceExpenditureUpdate projectFundingSourceExpenditureUpdate = new ProjectFundingSourceExpenditureUpdate();
            projectFundingSourceExpenditureUpdate.ProjectFundingSourceExpenditureUpdateID = projectFundingSourceExpenditureUpdateID;
            projectFundingSourceExpenditureUpdate.TenantID = tenantID;
            projectFundingSourceExpenditureUpdate.ProjectUpdateBatchID = projectUpdateBatchID;
            projectFundingSourceExpenditureUpdate.FundingSourceID = fundingSourceID;
            projectFundingSourceExpenditureUpdate.CalendarYear = calendarYear;
            projectFundingSourceExpenditureUpdate.ExpenditureAmount = expenditureAmount;
            return projectFundingSourceExpenditureUpdate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectFundingSourceExpenditureUpdateID
        {
            get
            {
                return _ProjectFundingSourceExpenditureUpdateID;
            }
            set
            {
                if (_ProjectFundingSourceExpenditureUpdateID != value)
                {
                    OnProjectFundingSourceExpenditureUpdateIDChanging(value);
                    ReportPropertyChanging("ProjectFundingSourceExpenditureUpdateID");
                    _ProjectFundingSourceExpenditureUpdateID = StructuralObject.SetValidValue(value, "ProjectFundingSourceExpenditureUpdateID");
                    ReportPropertyChanged("ProjectFundingSourceExpenditureUpdateID");
                    OnProjectFundingSourceExpenditureUpdateIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectFundingSourceExpenditureUpdateID;
        partial void OnProjectFundingSourceExpenditureUpdateIDChanging(global::System.Int32 value);
        partial void OnProjectFundingSourceExpenditureUpdateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateBatchID
        {
            get
            {
                return _ProjectUpdateBatchID;
            }
            set
            {
                OnProjectUpdateBatchIDChanging(value);
                ReportPropertyChanging("ProjectUpdateBatchID");
                _ProjectUpdateBatchID = StructuralObject.SetValidValue(value, "ProjectUpdateBatchID");
                ReportPropertyChanged("ProjectUpdateBatchID");
                OnProjectUpdateBatchIDChanged();
            }
        }
        private global::System.Int32 _ProjectUpdateBatchID;
        partial void OnProjectUpdateBatchIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingSourceID
        {
            get
            {
                return _FundingSourceID;
            }
            set
            {
                OnFundingSourceIDChanging(value);
                ReportPropertyChanging("FundingSourceID");
                _FundingSourceID = StructuralObject.SetValidValue(value, "FundingSourceID");
                ReportPropertyChanged("FundingSourceID");
                OnFundingSourceIDChanged();
            }
        }
        private global::System.Int32 _FundingSourceID;
        partial void OnFundingSourceIDChanging(global::System.Int32 value);
        partial void OnFundingSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalendarYear
        {
            get
            {
                return _CalendarYear;
            }
            set
            {
                OnCalendarYearChanging(value);
                ReportPropertyChanging("CalendarYear");
                _CalendarYear = StructuralObject.SetValidValue(value, "CalendarYear");
                ReportPropertyChanged("CalendarYear");
                OnCalendarYearChanged();
            }
        }
        private global::System.Int32 _CalendarYear;
        partial void OnCalendarYearChanging(global::System.Int32 value);
        partial void OnCalendarYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ExpenditureAmount
        {
            get
            {
                return _ExpenditureAmount;
            }
            set
            {
                OnExpenditureAmountChanging(value);
                ReportPropertyChanging("ExpenditureAmount");
                _ExpenditureAmount = StructuralObject.SetValidValue(value, "ExpenditureAmount");
                ReportPropertyChanged("ExpenditureAmount");
                OnExpenditureAmountChanged();
            }
        }
        private global::System.Decimal _ExpenditureAmount;
        partial void OnExpenditureAmountChanging(global::System.Decimal value);
        partial void OnExpenditureAmountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceExpenditureUpdate_FundingSource_FundingSourceID", "FundingSource")]
        public FundingSource FundingSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditureUpdate_FundingSource_FundingSourceID", "FundingSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditureUpdate_FundingSource_FundingSourceID", "FundingSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundingSource> FundingSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditureUpdate_FundingSource_FundingSourceID", "FundingSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditureUpdate_FundingSource_FundingSourceID", "FundingSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceExpenditureUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch")]
        public ProjectUpdateBatch ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditureUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditureUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUpdateBatch> ProjectUpdateBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditureUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditureUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceExpenditureUpdate_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditureUpdate_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditureUpdate_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditureUpdate_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditureUpdate_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectFundingSourceRequest")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectFundingSourceRequest : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectFundingSourceRequest object.
        /// </summary>
        /// <param name="projectFundingSourceRequestID">Initial value of the ProjectFundingSourceRequestID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="fundingSourceID">Initial value of the FundingSourceID property.</param>
        public static ProjectFundingSourceRequest CreateProjectFundingSourceRequest(global::System.Int32 projectFundingSourceRequestID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.Int32 fundingSourceID)
        {
            ProjectFundingSourceRequest projectFundingSourceRequest = new ProjectFundingSourceRequest();
            projectFundingSourceRequest.ProjectFundingSourceRequestID = projectFundingSourceRequestID;
            projectFundingSourceRequest.TenantID = tenantID;
            projectFundingSourceRequest.ProjectID = projectID;
            projectFundingSourceRequest.FundingSourceID = fundingSourceID;
            return projectFundingSourceRequest;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectFundingSourceRequestID
        {
            get
            {
                return _ProjectFundingSourceRequestID;
            }
            set
            {
                if (_ProjectFundingSourceRequestID != value)
                {
                    OnProjectFundingSourceRequestIDChanging(value);
                    ReportPropertyChanging("ProjectFundingSourceRequestID");
                    _ProjectFundingSourceRequestID = StructuralObject.SetValidValue(value, "ProjectFundingSourceRequestID");
                    ReportPropertyChanged("ProjectFundingSourceRequestID");
                    OnProjectFundingSourceRequestIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectFundingSourceRequestID;
        partial void OnProjectFundingSourceRequestIDChanging(global::System.Int32 value);
        partial void OnProjectFundingSourceRequestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingSourceID
        {
            get
            {
                return _FundingSourceID;
            }
            set
            {
                OnFundingSourceIDChanging(value);
                ReportPropertyChanging("FundingSourceID");
                _FundingSourceID = StructuralObject.SetValidValue(value, "FundingSourceID");
                ReportPropertyChanged("FundingSourceID");
                OnFundingSourceIDChanged();
            }
        }
        private global::System.Int32 _FundingSourceID;
        partial void OnFundingSourceIDChanging(global::System.Int32 value);
        partial void OnFundingSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SecuredAmount
        {
            get
            {
                return _SecuredAmount;
            }
            set
            {
                OnSecuredAmountChanging(value);
                ReportPropertyChanging("SecuredAmount");
                _SecuredAmount = StructuralObject.SetValidValue(value, "SecuredAmount");
                ReportPropertyChanged("SecuredAmount");
                OnSecuredAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _SecuredAmount;
        partial void OnSecuredAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnSecuredAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UnsecuredAmount
        {
            get
            {
                return _UnsecuredAmount;
            }
            set
            {
                OnUnsecuredAmountChanging(value);
                ReportPropertyChanging("UnsecuredAmount");
                _UnsecuredAmount = StructuralObject.SetValidValue(value, "UnsecuredAmount");
                ReportPropertyChanged("UnsecuredAmount");
                OnUnsecuredAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _UnsecuredAmount;
        partial void OnUnsecuredAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnUnsecuredAmountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceRequest_FundingSource_FundingSourceID", "FundingSource")]
        public FundingSource FundingSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequest_FundingSource_FundingSourceID", "FundingSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequest_FundingSource_FundingSourceID", "FundingSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundingSource> FundingSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequest_FundingSource_FundingSourceID", "FundingSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequest_FundingSource_FundingSourceID", "FundingSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceRequest_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequest_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequest_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequest_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequest_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceRequest_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequest_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequest_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequest_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequest_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectFundingSourceRequestUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectFundingSourceRequestUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectFundingSourceRequestUpdate object.
        /// </summary>
        /// <param name="projectFundingSourceRequestUpdateID">Initial value of the ProjectFundingSourceRequestUpdateID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectUpdateBatchID">Initial value of the ProjectUpdateBatchID property.</param>
        /// <param name="fundingSourceID">Initial value of the FundingSourceID property.</param>
        public static ProjectFundingSourceRequestUpdate CreateProjectFundingSourceRequestUpdate(global::System.Int32 projectFundingSourceRequestUpdateID, global::System.Int32 tenantID, global::System.Int32 projectUpdateBatchID, global::System.Int32 fundingSourceID)
        {
            ProjectFundingSourceRequestUpdate projectFundingSourceRequestUpdate = new ProjectFundingSourceRequestUpdate();
            projectFundingSourceRequestUpdate.ProjectFundingSourceRequestUpdateID = projectFundingSourceRequestUpdateID;
            projectFundingSourceRequestUpdate.TenantID = tenantID;
            projectFundingSourceRequestUpdate.ProjectUpdateBatchID = projectUpdateBatchID;
            projectFundingSourceRequestUpdate.FundingSourceID = fundingSourceID;
            return projectFundingSourceRequestUpdate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectFundingSourceRequestUpdateID
        {
            get
            {
                return _ProjectFundingSourceRequestUpdateID;
            }
            set
            {
                if (_ProjectFundingSourceRequestUpdateID != value)
                {
                    OnProjectFundingSourceRequestUpdateIDChanging(value);
                    ReportPropertyChanging("ProjectFundingSourceRequestUpdateID");
                    _ProjectFundingSourceRequestUpdateID = StructuralObject.SetValidValue(value, "ProjectFundingSourceRequestUpdateID");
                    ReportPropertyChanged("ProjectFundingSourceRequestUpdateID");
                    OnProjectFundingSourceRequestUpdateIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectFundingSourceRequestUpdateID;
        partial void OnProjectFundingSourceRequestUpdateIDChanging(global::System.Int32 value);
        partial void OnProjectFundingSourceRequestUpdateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateBatchID
        {
            get
            {
                return _ProjectUpdateBatchID;
            }
            set
            {
                OnProjectUpdateBatchIDChanging(value);
                ReportPropertyChanging("ProjectUpdateBatchID");
                _ProjectUpdateBatchID = StructuralObject.SetValidValue(value, "ProjectUpdateBatchID");
                ReportPropertyChanged("ProjectUpdateBatchID");
                OnProjectUpdateBatchIDChanged();
            }
        }
        private global::System.Int32 _ProjectUpdateBatchID;
        partial void OnProjectUpdateBatchIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingSourceID
        {
            get
            {
                return _FundingSourceID;
            }
            set
            {
                OnFundingSourceIDChanging(value);
                ReportPropertyChanging("FundingSourceID");
                _FundingSourceID = StructuralObject.SetValidValue(value, "FundingSourceID");
                ReportPropertyChanged("FundingSourceID");
                OnFundingSourceIDChanged();
            }
        }
        private global::System.Int32 _FundingSourceID;
        partial void OnFundingSourceIDChanging(global::System.Int32 value);
        partial void OnFundingSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> SecuredAmount
        {
            get
            {
                return _SecuredAmount;
            }
            set
            {
                OnSecuredAmountChanging(value);
                ReportPropertyChanging("SecuredAmount");
                _SecuredAmount = StructuralObject.SetValidValue(value, "SecuredAmount");
                ReportPropertyChanged("SecuredAmount");
                OnSecuredAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _SecuredAmount;
        partial void OnSecuredAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnSecuredAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> UnsecuredAmount
        {
            get
            {
                return _UnsecuredAmount;
            }
            set
            {
                OnUnsecuredAmountChanging(value);
                ReportPropertyChanging("UnsecuredAmount");
                _UnsecuredAmount = StructuralObject.SetValidValue(value, "UnsecuredAmount");
                ReportPropertyChanged("UnsecuredAmount");
                OnUnsecuredAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _UnsecuredAmount;
        partial void OnUnsecuredAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnUnsecuredAmountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceRequestUpdate_FundingSource_FundingSourceID", "FundingSource")]
        public FundingSource FundingSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequestUpdate_FundingSource_FundingSourceID", "FundingSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequestUpdate_FundingSource_FundingSourceID", "FundingSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundingSource> FundingSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequestUpdate_FundingSource_FundingSourceID", "FundingSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequestUpdate_FundingSource_FundingSourceID", "FundingSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceRequestUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch")]
        public ProjectUpdateBatch ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequestUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequestUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUpdateBatch> ProjectUpdateBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequestUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequestUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceRequestUpdate_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequestUpdate_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequestUpdate_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequestUpdate_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequestUpdate_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectGeospatialArea")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectGeospatialArea : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectGeospatialArea object.
        /// </summary>
        /// <param name="projectGeospatialAreaID">Initial value of the ProjectGeospatialAreaID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="geospatialAreaID">Initial value of the GeospatialAreaID property.</param>
        public static ProjectGeospatialArea CreateProjectGeospatialArea(global::System.Int32 projectGeospatialAreaID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.Int32 geospatialAreaID)
        {
            ProjectGeospatialArea projectGeospatialArea = new ProjectGeospatialArea();
            projectGeospatialArea.ProjectGeospatialAreaID = projectGeospatialAreaID;
            projectGeospatialArea.TenantID = tenantID;
            projectGeospatialArea.ProjectID = projectID;
            projectGeospatialArea.GeospatialAreaID = geospatialAreaID;
            return projectGeospatialArea;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectGeospatialAreaID
        {
            get
            {
                return _ProjectGeospatialAreaID;
            }
            set
            {
                if (_ProjectGeospatialAreaID != value)
                {
                    OnProjectGeospatialAreaIDChanging(value);
                    ReportPropertyChanging("ProjectGeospatialAreaID");
                    _ProjectGeospatialAreaID = StructuralObject.SetValidValue(value, "ProjectGeospatialAreaID");
                    ReportPropertyChanged("ProjectGeospatialAreaID");
                    OnProjectGeospatialAreaIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectGeospatialAreaID;
        partial void OnProjectGeospatialAreaIDChanging(global::System.Int32 value);
        partial void OnProjectGeospatialAreaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GeospatialAreaID
        {
            get
            {
                return _GeospatialAreaID;
            }
            set
            {
                OnGeospatialAreaIDChanging(value);
                ReportPropertyChanging("GeospatialAreaID");
                _GeospatialAreaID = StructuralObject.SetValidValue(value, "GeospatialAreaID");
                ReportPropertyChanged("GeospatialAreaID");
                OnGeospatialAreaIDChanged();
            }
        }
        private global::System.Int32 _GeospatialAreaID;
        partial void OnGeospatialAreaIDChanging(global::System.Int32 value);
        partial void OnGeospatialAreaIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialArea_GeospatialArea_GeospatialAreaID", "GeospatialArea")]
        public GeospatialArea GeospatialArea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GeospatialArea>("ProjectFirma.Web.Models.FK_ProjectGeospatialArea_GeospatialArea_GeospatialAreaID", "GeospatialArea").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GeospatialArea>("ProjectFirma.Web.Models.FK_ProjectGeospatialArea_GeospatialArea_GeospatialAreaID", "GeospatialArea").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GeospatialArea> GeospatialAreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GeospatialArea>("ProjectFirma.Web.Models.FK_ProjectGeospatialArea_GeospatialArea_GeospatialAreaID", "GeospatialArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GeospatialArea>("ProjectFirma.Web.Models.FK_ProjectGeospatialArea_GeospatialArea_GeospatialAreaID", "GeospatialArea", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialArea_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectGeospatialArea_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectGeospatialArea_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectGeospatialArea_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectGeospatialArea_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialArea_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectGeospatialArea_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectGeospatialArea_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectGeospatialArea_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectGeospatialArea_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectGeospatialAreaTypeNote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectGeospatialAreaTypeNote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectGeospatialAreaTypeNote object.
        /// </summary>
        /// <param name="projectGeospatialAreaTypeNoteID">Initial value of the ProjectGeospatialAreaTypeNoteID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="geospatialAreaTypeID">Initial value of the GeospatialAreaTypeID property.</param>
        /// <param name="notes">Initial value of the Notes property.</param>
        public static ProjectGeospatialAreaTypeNote CreateProjectGeospatialAreaTypeNote(global::System.Int32 projectGeospatialAreaTypeNoteID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.Int32 geospatialAreaTypeID, global::System.String notes)
        {
            ProjectGeospatialAreaTypeNote projectGeospatialAreaTypeNote = new ProjectGeospatialAreaTypeNote();
            projectGeospatialAreaTypeNote.ProjectGeospatialAreaTypeNoteID = projectGeospatialAreaTypeNoteID;
            projectGeospatialAreaTypeNote.TenantID = tenantID;
            projectGeospatialAreaTypeNote.ProjectID = projectID;
            projectGeospatialAreaTypeNote.GeospatialAreaTypeID = geospatialAreaTypeID;
            projectGeospatialAreaTypeNote.Notes = notes;
            return projectGeospatialAreaTypeNote;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectGeospatialAreaTypeNoteID
        {
            get
            {
                return _ProjectGeospatialAreaTypeNoteID;
            }
            set
            {
                if (_ProjectGeospatialAreaTypeNoteID != value)
                {
                    OnProjectGeospatialAreaTypeNoteIDChanging(value);
                    ReportPropertyChanging("ProjectGeospatialAreaTypeNoteID");
                    _ProjectGeospatialAreaTypeNoteID = StructuralObject.SetValidValue(value, "ProjectGeospatialAreaTypeNoteID");
                    ReportPropertyChanged("ProjectGeospatialAreaTypeNoteID");
                    OnProjectGeospatialAreaTypeNoteIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectGeospatialAreaTypeNoteID;
        partial void OnProjectGeospatialAreaTypeNoteIDChanging(global::System.Int32 value);
        partial void OnProjectGeospatialAreaTypeNoteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GeospatialAreaTypeID
        {
            get
            {
                return _GeospatialAreaTypeID;
            }
            set
            {
                OnGeospatialAreaTypeIDChanging(value);
                ReportPropertyChanging("GeospatialAreaTypeID");
                _GeospatialAreaTypeID = StructuralObject.SetValidValue(value, "GeospatialAreaTypeID");
                ReportPropertyChanged("GeospatialAreaTypeID");
                OnGeospatialAreaTypeIDChanged();
            }
        }
        private global::System.Int32 _GeospatialAreaTypeID;
        partial void OnGeospatialAreaTypeIDChanging(global::System.Int32 value);
        partial void OnGeospatialAreaTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, false, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaTypeNote_GeospatialAreaType_GeospatialAreaTypeID", "GeospatialAreaType")]
        public GeospatialAreaType GeospatialAreaType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GeospatialAreaType>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNote_GeospatialAreaType_GeospatialAreaTypeID", "GeospatialAreaType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GeospatialAreaType>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNote_GeospatialAreaType_GeospatialAreaTypeID", "GeospatialAreaType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GeospatialAreaType> GeospatialAreaTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GeospatialAreaType>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNote_GeospatialAreaType_GeospatialAreaTypeID", "GeospatialAreaType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GeospatialAreaType>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNote_GeospatialAreaType_GeospatialAreaTypeID", "GeospatialAreaType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaTypeNote_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNote_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNote_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNote_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNote_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaTypeNote_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNote_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNote_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNote_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNote_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectGeospatialAreaTypeNoteUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectGeospatialAreaTypeNoteUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectGeospatialAreaTypeNoteUpdate object.
        /// </summary>
        /// <param name="projectGeospatialAreaTypeNoteUpdateID">Initial value of the ProjectGeospatialAreaTypeNoteUpdateID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectUpdateBatchID">Initial value of the ProjectUpdateBatchID property.</param>
        /// <param name="geospatialAreaTypeID">Initial value of the GeospatialAreaTypeID property.</param>
        /// <param name="notes">Initial value of the Notes property.</param>
        public static ProjectGeospatialAreaTypeNoteUpdate CreateProjectGeospatialAreaTypeNoteUpdate(global::System.Int32 projectGeospatialAreaTypeNoteUpdateID, global::System.Int32 tenantID, global::System.Int32 projectUpdateBatchID, global::System.Int32 geospatialAreaTypeID, global::System.String notes)
        {
            ProjectGeospatialAreaTypeNoteUpdate projectGeospatialAreaTypeNoteUpdate = new ProjectGeospatialAreaTypeNoteUpdate();
            projectGeospatialAreaTypeNoteUpdate.ProjectGeospatialAreaTypeNoteUpdateID = projectGeospatialAreaTypeNoteUpdateID;
            projectGeospatialAreaTypeNoteUpdate.TenantID = tenantID;
            projectGeospatialAreaTypeNoteUpdate.ProjectUpdateBatchID = projectUpdateBatchID;
            projectGeospatialAreaTypeNoteUpdate.GeospatialAreaTypeID = geospatialAreaTypeID;
            projectGeospatialAreaTypeNoteUpdate.Notes = notes;
            return projectGeospatialAreaTypeNoteUpdate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectGeospatialAreaTypeNoteUpdateID
        {
            get
            {
                return _ProjectGeospatialAreaTypeNoteUpdateID;
            }
            set
            {
                if (_ProjectGeospatialAreaTypeNoteUpdateID != value)
                {
                    OnProjectGeospatialAreaTypeNoteUpdateIDChanging(value);
                    ReportPropertyChanging("ProjectGeospatialAreaTypeNoteUpdateID");
                    _ProjectGeospatialAreaTypeNoteUpdateID = StructuralObject.SetValidValue(value, "ProjectGeospatialAreaTypeNoteUpdateID");
                    ReportPropertyChanged("ProjectGeospatialAreaTypeNoteUpdateID");
                    OnProjectGeospatialAreaTypeNoteUpdateIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectGeospatialAreaTypeNoteUpdateID;
        partial void OnProjectGeospatialAreaTypeNoteUpdateIDChanging(global::System.Int32 value);
        partial void OnProjectGeospatialAreaTypeNoteUpdateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateBatchID
        {
            get
            {
                return _ProjectUpdateBatchID;
            }
            set
            {
                OnProjectUpdateBatchIDChanging(value);
                ReportPropertyChanging("ProjectUpdateBatchID");
                _ProjectUpdateBatchID = StructuralObject.SetValidValue(value, "ProjectUpdateBatchID");
                ReportPropertyChanged("ProjectUpdateBatchID");
                OnProjectUpdateBatchIDChanged();
            }
        }
        private global::System.Int32 _ProjectUpdateBatchID;
        partial void OnProjectUpdateBatchIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GeospatialAreaTypeID
        {
            get
            {
                return _GeospatialAreaTypeID;
            }
            set
            {
                OnGeospatialAreaTypeIDChanging(value);
                ReportPropertyChanging("GeospatialAreaTypeID");
                _GeospatialAreaTypeID = StructuralObject.SetValidValue(value, "GeospatialAreaTypeID");
                ReportPropertyChanged("GeospatialAreaTypeID");
                OnGeospatialAreaTypeIDChanged();
            }
        }
        private global::System.Int32 _GeospatialAreaTypeID;
        partial void OnGeospatialAreaTypeIDChanging(global::System.Int32 value);
        partial void OnGeospatialAreaTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, false, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaTypeNoteUpdate_GeospatialAreaType_GeospatialAreaTypeID", "GeospatialAreaType")]
        public GeospatialAreaType GeospatialAreaType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GeospatialAreaType>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNoteUpdate_GeospatialAreaType_GeospatialAreaTypeID", "GeospatialAreaType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GeospatialAreaType>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNoteUpdate_GeospatialAreaType_GeospatialAreaTypeID", "GeospatialAreaType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GeospatialAreaType> GeospatialAreaTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GeospatialAreaType>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNoteUpdate_GeospatialAreaType_GeospatialAreaTypeID", "GeospatialAreaType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GeospatialAreaType>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNoteUpdate_GeospatialAreaType_GeospatialAreaTypeID", "GeospatialAreaType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaTypeNoteUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch")]
        public ProjectUpdateBatch ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNoteUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNoteUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUpdateBatch> ProjectUpdateBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNoteUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNoteUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaTypeNoteUpdate_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNoteUpdate_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNoteUpdate_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNoteUpdate_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNoteUpdate_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectGeospatialAreaUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectGeospatialAreaUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectGeospatialAreaUpdate object.
        /// </summary>
        /// <param name="projectGeospatialAreaUpdateID">Initial value of the ProjectGeospatialAreaUpdateID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectUpdateBatchID">Initial value of the ProjectUpdateBatchID property.</param>
        /// <param name="geospatialAreaID">Initial value of the GeospatialAreaID property.</param>
        public static ProjectGeospatialAreaUpdate CreateProjectGeospatialAreaUpdate(global::System.Int32 projectGeospatialAreaUpdateID, global::System.Int32 tenantID, global::System.Int32 projectUpdateBatchID, global::System.Int32 geospatialAreaID)
        {
            ProjectGeospatialAreaUpdate projectGeospatialAreaUpdate = new ProjectGeospatialAreaUpdate();
            projectGeospatialAreaUpdate.ProjectGeospatialAreaUpdateID = projectGeospatialAreaUpdateID;
            projectGeospatialAreaUpdate.TenantID = tenantID;
            projectGeospatialAreaUpdate.ProjectUpdateBatchID = projectUpdateBatchID;
            projectGeospatialAreaUpdate.GeospatialAreaID = geospatialAreaID;
            return projectGeospatialAreaUpdate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectGeospatialAreaUpdateID
        {
            get
            {
                return _ProjectGeospatialAreaUpdateID;
            }
            set
            {
                if (_ProjectGeospatialAreaUpdateID != value)
                {
                    OnProjectGeospatialAreaUpdateIDChanging(value);
                    ReportPropertyChanging("ProjectGeospatialAreaUpdateID");
                    _ProjectGeospatialAreaUpdateID = StructuralObject.SetValidValue(value, "ProjectGeospatialAreaUpdateID");
                    ReportPropertyChanged("ProjectGeospatialAreaUpdateID");
                    OnProjectGeospatialAreaUpdateIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectGeospatialAreaUpdateID;
        partial void OnProjectGeospatialAreaUpdateIDChanging(global::System.Int32 value);
        partial void OnProjectGeospatialAreaUpdateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateBatchID
        {
            get
            {
                return _ProjectUpdateBatchID;
            }
            set
            {
                OnProjectUpdateBatchIDChanging(value);
                ReportPropertyChanging("ProjectUpdateBatchID");
                _ProjectUpdateBatchID = StructuralObject.SetValidValue(value, "ProjectUpdateBatchID");
                ReportPropertyChanged("ProjectUpdateBatchID");
                OnProjectUpdateBatchIDChanged();
            }
        }
        private global::System.Int32 _ProjectUpdateBatchID;
        partial void OnProjectUpdateBatchIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GeospatialAreaID
        {
            get
            {
                return _GeospatialAreaID;
            }
            set
            {
                OnGeospatialAreaIDChanging(value);
                ReportPropertyChanging("GeospatialAreaID");
                _GeospatialAreaID = StructuralObject.SetValidValue(value, "GeospatialAreaID");
                ReportPropertyChanged("GeospatialAreaID");
                OnGeospatialAreaIDChanged();
            }
        }
        private global::System.Int32 _GeospatialAreaID;
        partial void OnGeospatialAreaIDChanging(global::System.Int32 value);
        partial void OnGeospatialAreaIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaUpdate_GeospatialArea_GeospatialAreaID", "GeospatialArea")]
        public GeospatialArea GeospatialArea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GeospatialArea>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaUpdate_GeospatialArea_GeospatialAreaID", "GeospatialArea").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GeospatialArea>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaUpdate_GeospatialArea_GeospatialAreaID", "GeospatialArea").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GeospatialArea> GeospatialAreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GeospatialArea>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaUpdate_GeospatialArea_GeospatialAreaID", "GeospatialArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GeospatialArea>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaUpdate_GeospatialArea_GeospatialAreaID", "GeospatialArea", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch")]
        public ProjectUpdateBatch ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUpdateBatch> ProjectUpdateBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaUpdate_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaUpdate_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaUpdate_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaUpdate_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaUpdate_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectImage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectImage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectImage object.
        /// </summary>
        /// <param name="projectImageID">Initial value of the ProjectImageID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="fileResourceID">Initial value of the FileResourceID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="projectImageTimingID">Initial value of the ProjectImageTimingID property.</param>
        /// <param name="caption">Initial value of the Caption property.</param>
        /// <param name="credit">Initial value of the Credit property.</param>
        /// <param name="isKeyPhoto">Initial value of the IsKeyPhoto property.</param>
        /// <param name="excludeFromFactSheet">Initial value of the ExcludeFromFactSheet property.</param>
        public static ProjectImage CreateProjectImage(global::System.Int32 projectImageID, global::System.Int32 tenantID, global::System.Int32 fileResourceID, global::System.Int32 projectID, global::System.Int32 projectImageTimingID, global::System.String caption, global::System.String credit, global::System.Boolean isKeyPhoto, global::System.Boolean excludeFromFactSheet)
        {
            ProjectImage projectImage = new ProjectImage();
            projectImage.ProjectImageID = projectImageID;
            projectImage.TenantID = tenantID;
            projectImage.FileResourceID = fileResourceID;
            projectImage.ProjectID = projectID;
            projectImage.ProjectImageTimingID = projectImageTimingID;
            projectImage.Caption = caption;
            projectImage.Credit = credit;
            projectImage.IsKeyPhoto = isKeyPhoto;
            projectImage.ExcludeFromFactSheet = excludeFromFactSheet;
            return projectImage;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectImageID
        {
            get
            {
                return _ProjectImageID;
            }
            set
            {
                if (_ProjectImageID != value)
                {
                    OnProjectImageIDChanging(value);
                    ReportPropertyChanging("ProjectImageID");
                    _ProjectImageID = StructuralObject.SetValidValue(value, "ProjectImageID");
                    ReportPropertyChanged("ProjectImageID");
                    OnProjectImageIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectImageID;
        partial void OnProjectImageIDChanging(global::System.Int32 value);
        partial void OnProjectImageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FileResourceID
        {
            get
            {
                return _FileResourceID;
            }
            set
            {
                OnFileResourceIDChanging(value);
                ReportPropertyChanging("FileResourceID");
                _FileResourceID = StructuralObject.SetValidValue(value, "FileResourceID");
                ReportPropertyChanged("FileResourceID");
                OnFileResourceIDChanged();
            }
        }
        private global::System.Int32 _FileResourceID;
        partial void OnFileResourceIDChanging(global::System.Int32 value);
        partial void OnFileResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectImageTimingID
        {
            get
            {
                return _ProjectImageTimingID;
            }
            set
            {
                OnProjectImageTimingIDChanging(value);
                ReportPropertyChanging("ProjectImageTimingID");
                _ProjectImageTimingID = StructuralObject.SetValidValue(value, "ProjectImageTimingID");
                ReportPropertyChanged("ProjectImageTimingID");
                OnProjectImageTimingIDChanged();
            }
        }
        private global::System.Int32 _ProjectImageTimingID;
        partial void OnProjectImageTimingIDChanging(global::System.Int32 value);
        partial void OnProjectImageTimingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Caption
        {
            get
            {
                return _Caption;
            }
            set
            {
                OnCaptionChanging(value);
                ReportPropertyChanging("Caption");
                _Caption = StructuralObject.SetValidValue(value, false, "Caption");
                ReportPropertyChanged("Caption");
                OnCaptionChanged();
            }
        }
        private global::System.String _Caption;
        partial void OnCaptionChanging(global::System.String value);
        partial void OnCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Credit
        {
            get
            {
                return _Credit;
            }
            set
            {
                OnCreditChanging(value);
                ReportPropertyChanging("Credit");
                _Credit = StructuralObject.SetValidValue(value, false, "Credit");
                ReportPropertyChanged("Credit");
                OnCreditChanged();
            }
        }
        private global::System.String _Credit;
        partial void OnCreditChanging(global::System.String value);
        partial void OnCreditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsKeyPhoto
        {
            get
            {
                return _IsKeyPhoto;
            }
            set
            {
                OnIsKeyPhotoChanging(value);
                ReportPropertyChanging("IsKeyPhoto");
                _IsKeyPhoto = StructuralObject.SetValidValue(value, "IsKeyPhoto");
                ReportPropertyChanged("IsKeyPhoto");
                OnIsKeyPhotoChanged();
            }
        }
        private global::System.Boolean _IsKeyPhoto;
        partial void OnIsKeyPhotoChanging(global::System.Boolean value);
        partial void OnIsKeyPhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ExcludeFromFactSheet
        {
            get
            {
                return _ExcludeFromFactSheet;
            }
            set
            {
                OnExcludeFromFactSheetChanging(value);
                ReportPropertyChanging("ExcludeFromFactSheet");
                _ExcludeFromFactSheet = StructuralObject.SetValidValue(value, "ExcludeFromFactSheet");
                ReportPropertyChanged("ExcludeFromFactSheet");
                OnExcludeFromFactSheetChanged();
            }
        }
        private global::System.Boolean _ExcludeFromFactSheet;
        partial void OnExcludeFromFactSheetChanging(global::System.Boolean value);
        partial void OnExcludeFromFactSheetChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectImage_FileResource_FileResourceID", "FileResource")]
        public FileResource FileResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_ProjectImage_FileResource_FileResourceID", "FileResource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_ProjectImage_FileResource_FileResourceID", "FileResource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileResource> FileResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_ProjectImage_FileResource_FileResourceID", "FileResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_ProjectImage_FileResource_FileResourceID", "FileResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectImage_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectImage_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectImage_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectImage_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectImage_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectImage_ProjectImageTiming_ProjectImageTimingID", "ProjectImageTiming")]
        public ProjectImageTiming ProjectImageTiming
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectImageTiming>("ProjectFirma.Web.Models.FK_ProjectImage_ProjectImageTiming_ProjectImageTimingID", "ProjectImageTiming").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectImageTiming>("ProjectFirma.Web.Models.FK_ProjectImage_ProjectImageTiming_ProjectImageTimingID", "ProjectImageTiming").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectImageTiming> ProjectImageTimingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectImageTiming>("ProjectFirma.Web.Models.FK_ProjectImage_ProjectImageTiming_ProjectImageTimingID", "ProjectImageTiming");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectImageTiming>("ProjectFirma.Web.Models.FK_ProjectImage_ProjectImageTiming_ProjectImageTimingID", "ProjectImageTiming", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectImage_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectImage_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectImage_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectImage_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectImage_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectImageUpdate_ProjectImage_ProjectImageID", "ProjectImageUpdate")]
        public EntityCollection<ProjectImageUpdate> ProjectImageUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectImageUpdate>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_ProjectImage_ProjectImageID", "ProjectImageUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectImageUpdate>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_ProjectImage_ProjectImageID", "ProjectImageUpdate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectImageTiming")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectImageTiming : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectImageTiming object.
        /// </summary>
        /// <param name="projectImageTimingID">Initial value of the ProjectImageTimingID property.</param>
        /// <param name="projectImageTimingName">Initial value of the ProjectImageTimingName property.</param>
        /// <param name="projectImageTimingDisplayName">Initial value of the ProjectImageTimingDisplayName property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static ProjectImageTiming CreateProjectImageTiming(global::System.Int32 projectImageTimingID, global::System.String projectImageTimingName, global::System.String projectImageTimingDisplayName, global::System.Int32 sortOrder)
        {
            ProjectImageTiming projectImageTiming = new ProjectImageTiming();
            projectImageTiming.ProjectImageTimingID = projectImageTimingID;
            projectImageTiming.ProjectImageTimingName = projectImageTimingName;
            projectImageTiming.ProjectImageTimingDisplayName = projectImageTimingDisplayName;
            projectImageTiming.SortOrder = sortOrder;
            return projectImageTiming;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectImageTimingID
        {
            get
            {
                return _ProjectImageTimingID;
            }
            set
            {
                if (_ProjectImageTimingID != value)
                {
                    OnProjectImageTimingIDChanging(value);
                    ReportPropertyChanging("ProjectImageTimingID");
                    _ProjectImageTimingID = StructuralObject.SetValidValue(value, "ProjectImageTimingID");
                    ReportPropertyChanged("ProjectImageTimingID");
                    OnProjectImageTimingIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectImageTimingID;
        partial void OnProjectImageTimingIDChanging(global::System.Int32 value);
        partial void OnProjectImageTimingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectImageTimingName
        {
            get
            {
                return _ProjectImageTimingName;
            }
            set
            {
                OnProjectImageTimingNameChanging(value);
                ReportPropertyChanging("ProjectImageTimingName");
                _ProjectImageTimingName = StructuralObject.SetValidValue(value, false, "ProjectImageTimingName");
                ReportPropertyChanged("ProjectImageTimingName");
                OnProjectImageTimingNameChanged();
            }
        }
        private global::System.String _ProjectImageTimingName;
        partial void OnProjectImageTimingNameChanging(global::System.String value);
        partial void OnProjectImageTimingNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectImageTimingDisplayName
        {
            get
            {
                return _ProjectImageTimingDisplayName;
            }
            set
            {
                OnProjectImageTimingDisplayNameChanging(value);
                ReportPropertyChanging("ProjectImageTimingDisplayName");
                _ProjectImageTimingDisplayName = StructuralObject.SetValidValue(value, false, "ProjectImageTimingDisplayName");
                ReportPropertyChanged("ProjectImageTimingDisplayName");
                OnProjectImageTimingDisplayNameChanged();
            }
        }
        private global::System.String _ProjectImageTimingDisplayName;
        partial void OnProjectImageTimingDisplayNameChanging(global::System.String value);
        partial void OnProjectImageTimingDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value, "SortOrder");
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectImage_ProjectImageTiming_ProjectImageTimingID", "ProjectImage")]
        public EntityCollection<ProjectImage> ProjectImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectImage>("ProjectFirma.Web.Models.FK_ProjectImage_ProjectImageTiming_ProjectImageTimingID", "ProjectImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectImage>("ProjectFirma.Web.Models.FK_ProjectImage_ProjectImageTiming_ProjectImageTimingID", "ProjectImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectImageUpdate_ProjectImageTiming_ProjectImageTimingID", "ProjectImageUpdate")]
        public EntityCollection<ProjectImageUpdate> ProjectImageUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectImageUpdate>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_ProjectImageTiming_ProjectImageTimingID", "ProjectImageUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectImageUpdate>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_ProjectImageTiming_ProjectImageTimingID", "ProjectImageUpdate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectImageUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectImageUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectImageUpdate object.
        /// </summary>
        /// <param name="projectImageUpdateID">Initial value of the ProjectImageUpdateID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectUpdateBatchID">Initial value of the ProjectUpdateBatchID property.</param>
        /// <param name="projectImageTimingID">Initial value of the ProjectImageTimingID property.</param>
        /// <param name="caption">Initial value of the Caption property.</param>
        /// <param name="credit">Initial value of the Credit property.</param>
        /// <param name="isKeyPhoto">Initial value of the IsKeyPhoto property.</param>
        /// <param name="excludeFromFactSheet">Initial value of the ExcludeFromFactSheet property.</param>
        public static ProjectImageUpdate CreateProjectImageUpdate(global::System.Int32 projectImageUpdateID, global::System.Int32 tenantID, global::System.Int32 projectUpdateBatchID, global::System.Int32 projectImageTimingID, global::System.String caption, global::System.String credit, global::System.Boolean isKeyPhoto, global::System.Boolean excludeFromFactSheet)
        {
            ProjectImageUpdate projectImageUpdate = new ProjectImageUpdate();
            projectImageUpdate.ProjectImageUpdateID = projectImageUpdateID;
            projectImageUpdate.TenantID = tenantID;
            projectImageUpdate.ProjectUpdateBatchID = projectUpdateBatchID;
            projectImageUpdate.ProjectImageTimingID = projectImageTimingID;
            projectImageUpdate.Caption = caption;
            projectImageUpdate.Credit = credit;
            projectImageUpdate.IsKeyPhoto = isKeyPhoto;
            projectImageUpdate.ExcludeFromFactSheet = excludeFromFactSheet;
            return projectImageUpdate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectImageUpdateID
        {
            get
            {
                return _ProjectImageUpdateID;
            }
            set
            {
                if (_ProjectImageUpdateID != value)
                {
                    OnProjectImageUpdateIDChanging(value);
                    ReportPropertyChanging("ProjectImageUpdateID");
                    _ProjectImageUpdateID = StructuralObject.SetValidValue(value, "ProjectImageUpdateID");
                    ReportPropertyChanged("ProjectImageUpdateID");
                    OnProjectImageUpdateIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectImageUpdateID;
        partial void OnProjectImageUpdateIDChanging(global::System.Int32 value);
        partial void OnProjectImageUpdateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> FileResourceID
        {
            get
            {
                return _FileResourceID;
            }
            set
            {
                OnFileResourceIDChanging(value);
                ReportPropertyChanging("FileResourceID");
                _FileResourceID = StructuralObject.SetValidValue(value, "FileResourceID");
                ReportPropertyChanged("FileResourceID");
                OnFileResourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _FileResourceID;
        partial void OnFileResourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnFileResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateBatchID
        {
            get
            {
                return _ProjectUpdateBatchID;
            }
            set
            {
                OnProjectUpdateBatchIDChanging(value);
                ReportPropertyChanging("ProjectUpdateBatchID");
                _ProjectUpdateBatchID = StructuralObject.SetValidValue(value, "ProjectUpdateBatchID");
                ReportPropertyChanged("ProjectUpdateBatchID");
                OnProjectUpdateBatchIDChanged();
            }
        }
        private global::System.Int32 _ProjectUpdateBatchID;
        partial void OnProjectUpdateBatchIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectImageTimingID
        {
            get
            {
                return _ProjectImageTimingID;
            }
            set
            {
                OnProjectImageTimingIDChanging(value);
                ReportPropertyChanging("ProjectImageTimingID");
                _ProjectImageTimingID = StructuralObject.SetValidValue(value, "ProjectImageTimingID");
                ReportPropertyChanged("ProjectImageTimingID");
                OnProjectImageTimingIDChanged();
            }
        }
        private global::System.Int32 _ProjectImageTimingID;
        partial void OnProjectImageTimingIDChanging(global::System.Int32 value);
        partial void OnProjectImageTimingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Caption
        {
            get
            {
                return _Caption;
            }
            set
            {
                OnCaptionChanging(value);
                ReportPropertyChanging("Caption");
                _Caption = StructuralObject.SetValidValue(value, false, "Caption");
                ReportPropertyChanged("Caption");
                OnCaptionChanged();
            }
        }
        private global::System.String _Caption;
        partial void OnCaptionChanging(global::System.String value);
        partial void OnCaptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Credit
        {
            get
            {
                return _Credit;
            }
            set
            {
                OnCreditChanging(value);
                ReportPropertyChanging("Credit");
                _Credit = StructuralObject.SetValidValue(value, false, "Credit");
                ReportPropertyChanged("Credit");
                OnCreditChanged();
            }
        }
        private global::System.String _Credit;
        partial void OnCreditChanging(global::System.String value);
        partial void OnCreditChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsKeyPhoto
        {
            get
            {
                return _IsKeyPhoto;
            }
            set
            {
                OnIsKeyPhotoChanging(value);
                ReportPropertyChanging("IsKeyPhoto");
                _IsKeyPhoto = StructuralObject.SetValidValue(value, "IsKeyPhoto");
                ReportPropertyChanged("IsKeyPhoto");
                OnIsKeyPhotoChanged();
            }
        }
        private global::System.Boolean _IsKeyPhoto;
        partial void OnIsKeyPhotoChanging(global::System.Boolean value);
        partial void OnIsKeyPhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ExcludeFromFactSheet
        {
            get
            {
                return _ExcludeFromFactSheet;
            }
            set
            {
                OnExcludeFromFactSheetChanging(value);
                ReportPropertyChanging("ExcludeFromFactSheet");
                _ExcludeFromFactSheet = StructuralObject.SetValidValue(value, "ExcludeFromFactSheet");
                ReportPropertyChanged("ExcludeFromFactSheet");
                OnExcludeFromFactSheetChanged();
            }
        }
        private global::System.Boolean _ExcludeFromFactSheet;
        partial void OnExcludeFromFactSheetChanging(global::System.Boolean value);
        partial void OnExcludeFromFactSheetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectImageID
        {
            get
            {
                return _ProjectImageID;
            }
            set
            {
                OnProjectImageIDChanging(value);
                ReportPropertyChanging("ProjectImageID");
                _ProjectImageID = StructuralObject.SetValidValue(value, "ProjectImageID");
                ReportPropertyChanged("ProjectImageID");
                OnProjectImageIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectImageID;
        partial void OnProjectImageIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectImageIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectImageUpdate_FileResource_FileResourceID", "FileResource")]
        public FileResource FileResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_FileResource_FileResourceID", "FileResource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_FileResource_FileResourceID", "FileResource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileResource> FileResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_FileResource_FileResourceID", "FileResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_FileResource_FileResourceID", "FileResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectImageUpdate_ProjectImage_ProjectImageID", "ProjectImage")]
        public ProjectImage ProjectImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectImage>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_ProjectImage_ProjectImageID", "ProjectImage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectImage>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_ProjectImage_ProjectImageID", "ProjectImage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectImage> ProjectImageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectImage>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_ProjectImage_ProjectImageID", "ProjectImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectImage>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_ProjectImage_ProjectImageID", "ProjectImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectImageUpdate_ProjectImageTiming_ProjectImageTimingID", "ProjectImageTiming")]
        public ProjectImageTiming ProjectImageTiming
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectImageTiming>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_ProjectImageTiming_ProjectImageTimingID", "ProjectImageTiming").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectImageTiming>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_ProjectImageTiming_ProjectImageTimingID", "ProjectImageTiming").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectImageTiming> ProjectImageTimingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectImageTiming>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_ProjectImageTiming_ProjectImageTimingID", "ProjectImageTiming");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectImageTiming>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_ProjectImageTiming_ProjectImageTimingID", "ProjectImageTiming", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectImageUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch")]
        public ProjectUpdateBatch ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUpdateBatch> ProjectUpdateBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectImageUpdate_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectInternalNote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectInternalNote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectInternalNote object.
        /// </summary>
        /// <param name="projectInternalNoteID">Initial value of the ProjectInternalNoteID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="note">Initial value of the Note property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static ProjectInternalNote CreateProjectInternalNote(global::System.Int32 projectInternalNoteID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.String note, global::System.DateTime createDate)
        {
            ProjectInternalNote projectInternalNote = new ProjectInternalNote();
            projectInternalNote.ProjectInternalNoteID = projectInternalNoteID;
            projectInternalNote.TenantID = tenantID;
            projectInternalNote.ProjectID = projectID;
            projectInternalNote.Note = note;
            projectInternalNote.CreateDate = createDate;
            return projectInternalNote;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectInternalNoteID
        {
            get
            {
                return _ProjectInternalNoteID;
            }
            set
            {
                if (_ProjectInternalNoteID != value)
                {
                    OnProjectInternalNoteIDChanging(value);
                    ReportPropertyChanging("ProjectInternalNoteID");
                    _ProjectInternalNoteID = StructuralObject.SetValidValue(value, "ProjectInternalNoteID");
                    ReportPropertyChanged("ProjectInternalNoteID");
                    OnProjectInternalNoteIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectInternalNoteID;
        partial void OnProjectInternalNoteIDChanging(global::System.Int32 value);
        partial void OnProjectInternalNoteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, false, "Note");
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatePersonID
        {
            get
            {
                return _CreatePersonID;
            }
            set
            {
                OnCreatePersonIDChanging(value);
                ReportPropertyChanging("CreatePersonID");
                _CreatePersonID = StructuralObject.SetValidValue(value, "CreatePersonID");
                ReportPropertyChanged("CreatePersonID");
                OnCreatePersonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatePersonID;
        partial void OnCreatePersonIDChanging(Nullable<global::System.Int32> value);
        partial void OnCreatePersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, "CreateDate");
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatePersonID
        {
            get
            {
                return _UpdatePersonID;
            }
            set
            {
                OnUpdatePersonIDChanging(value);
                ReportPropertyChanging("UpdatePersonID");
                _UpdatePersonID = StructuralObject.SetValidValue(value, "UpdatePersonID");
                ReportPropertyChanged("UpdatePersonID");
                OnUpdatePersonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatePersonID;
        partial void OnUpdatePersonIDChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatePersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectInternalNote_Person_CreatePersonID_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Person_CreatePersonID_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Person_CreatePersonID_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Person_CreatePersonID_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Person_CreatePersonID_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectInternalNote_Person_UpdatePersonID_PersonID", "Person")]
        public Person Person1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Person_UpdatePersonID_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Person_UpdatePersonID_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> Person1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Person_UpdatePersonID_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Person_UpdatePersonID_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectInternalNote_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectInternalNote_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectLocation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectLocation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectLocation object.
        /// </summary>
        /// <param name="projectLocationID">Initial value of the ProjectLocationID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="projectLocationGeometry">Initial value of the ProjectLocationGeometry property.</param>
        public static ProjectLocation CreateProjectLocation(global::System.Int32 projectLocationID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.Data.Spatial.DbGeometry projectLocationGeometry)
        {
            ProjectLocation projectLocation = new ProjectLocation();
            projectLocation.ProjectLocationID = projectLocationID;
            projectLocation.TenantID = tenantID;
            projectLocation.ProjectID = projectID;
            projectLocation.ProjectLocationGeometry = projectLocationGeometry;
            return projectLocation;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectLocationID
        {
            get
            {
                return _ProjectLocationID;
            }
            set
            {
                if (_ProjectLocationID != value)
                {
                    OnProjectLocationIDChanging(value);
                    ReportPropertyChanging("ProjectLocationID");
                    _ProjectLocationID = StructuralObject.SetValidValue(value, "ProjectLocationID");
                    ReportPropertyChanged("ProjectLocationID");
                    OnProjectLocationIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectLocationID;
        partial void OnProjectLocationIDChanging(global::System.Int32 value);
        partial void OnProjectLocationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeometry ProjectLocationGeometry
        {
            get
            {
                return _ProjectLocationGeometry;
            }
            set
            {
                OnProjectLocationGeometryChanging(value);
                ReportPropertyChanging("ProjectLocationGeometry");
                _ProjectLocationGeometry = StructuralObject.SetValidValue(value, false, "ProjectLocationGeometry");
                ReportPropertyChanged("ProjectLocationGeometry");
                OnProjectLocationGeometryChanged();
            }
        }
        private global::System.Data.Spatial.DbGeometry _ProjectLocationGeometry;
        partial void OnProjectLocationGeometryChanging(global::System.Data.Spatial.DbGeometry value);
        partial void OnProjectLocationGeometryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Annotation
        {
            get
            {
                return _Annotation;
            }
            set
            {
                OnAnnotationChanging(value);
                ReportPropertyChanging("Annotation");
                _Annotation = StructuralObject.SetValidValue(value, true, "Annotation");
                ReportPropertyChanged("Annotation");
                OnAnnotationChanged();
            }
        }
        private global::System.String _Annotation;
        partial void OnAnnotationChanging(global::System.String value);
        partial void OnAnnotationChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectLocation_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectLocation_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectLocation_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectLocation_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectLocation_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectLocation_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectLocation_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectLocation_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectLocation_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectLocation_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectLocationFilterType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectLocationFilterType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectLocationFilterType object.
        /// </summary>
        /// <param name="projectLocationFilterTypeID">Initial value of the ProjectLocationFilterTypeID property.</param>
        /// <param name="projectLocationFilterTypeName">Initial value of the ProjectLocationFilterTypeName property.</param>
        /// <param name="projectLocationFilterTypeNameWithIdentifier">Initial value of the ProjectLocationFilterTypeNameWithIdentifier property.</param>
        /// <param name="projectLocationFilterTypeDisplayName">Initial value of the ProjectLocationFilterTypeDisplayName property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="displayGroup">Initial value of the DisplayGroup property.</param>
        public static ProjectLocationFilterType CreateProjectLocationFilterType(global::System.Int32 projectLocationFilterTypeID, global::System.String projectLocationFilterTypeName, global::System.String projectLocationFilterTypeNameWithIdentifier, global::System.String projectLocationFilterTypeDisplayName, global::System.Int32 sortOrder, global::System.Int32 displayGroup)
        {
            ProjectLocationFilterType projectLocationFilterType = new ProjectLocationFilterType();
            projectLocationFilterType.ProjectLocationFilterTypeID = projectLocationFilterTypeID;
            projectLocationFilterType.ProjectLocationFilterTypeName = projectLocationFilterTypeName;
            projectLocationFilterType.ProjectLocationFilterTypeNameWithIdentifier = projectLocationFilterTypeNameWithIdentifier;
            projectLocationFilterType.ProjectLocationFilterTypeDisplayName = projectLocationFilterTypeDisplayName;
            projectLocationFilterType.SortOrder = sortOrder;
            projectLocationFilterType.DisplayGroup = displayGroup;
            return projectLocationFilterType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectLocationFilterTypeID
        {
            get
            {
                return _ProjectLocationFilterTypeID;
            }
            set
            {
                if (_ProjectLocationFilterTypeID != value)
                {
                    OnProjectLocationFilterTypeIDChanging(value);
                    ReportPropertyChanging("ProjectLocationFilterTypeID");
                    _ProjectLocationFilterTypeID = StructuralObject.SetValidValue(value, "ProjectLocationFilterTypeID");
                    ReportPropertyChanged("ProjectLocationFilterTypeID");
                    OnProjectLocationFilterTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectLocationFilterTypeID;
        partial void OnProjectLocationFilterTypeIDChanging(global::System.Int32 value);
        partial void OnProjectLocationFilterTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectLocationFilterTypeName
        {
            get
            {
                return _ProjectLocationFilterTypeName;
            }
            set
            {
                OnProjectLocationFilterTypeNameChanging(value);
                ReportPropertyChanging("ProjectLocationFilterTypeName");
                _ProjectLocationFilterTypeName = StructuralObject.SetValidValue(value, false, "ProjectLocationFilterTypeName");
                ReportPropertyChanged("ProjectLocationFilterTypeName");
                OnProjectLocationFilterTypeNameChanged();
            }
        }
        private global::System.String _ProjectLocationFilterTypeName;
        partial void OnProjectLocationFilterTypeNameChanging(global::System.String value);
        partial void OnProjectLocationFilterTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectLocationFilterTypeNameWithIdentifier
        {
            get
            {
                return _ProjectLocationFilterTypeNameWithIdentifier;
            }
            set
            {
                OnProjectLocationFilterTypeNameWithIdentifierChanging(value);
                ReportPropertyChanging("ProjectLocationFilterTypeNameWithIdentifier");
                _ProjectLocationFilterTypeNameWithIdentifier = StructuralObject.SetValidValue(value, false, "ProjectLocationFilterTypeNameWithIdentifier");
                ReportPropertyChanged("ProjectLocationFilterTypeNameWithIdentifier");
                OnProjectLocationFilterTypeNameWithIdentifierChanged();
            }
        }
        private global::System.String _ProjectLocationFilterTypeNameWithIdentifier;
        partial void OnProjectLocationFilterTypeNameWithIdentifierChanging(global::System.String value);
        partial void OnProjectLocationFilterTypeNameWithIdentifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectLocationFilterTypeDisplayName
        {
            get
            {
                return _ProjectLocationFilterTypeDisplayName;
            }
            set
            {
                OnProjectLocationFilterTypeDisplayNameChanging(value);
                ReportPropertyChanging("ProjectLocationFilterTypeDisplayName");
                _ProjectLocationFilterTypeDisplayName = StructuralObject.SetValidValue(value, false, "ProjectLocationFilterTypeDisplayName");
                ReportPropertyChanged("ProjectLocationFilterTypeDisplayName");
                OnProjectLocationFilterTypeDisplayNameChanged();
            }
        }
        private global::System.String _ProjectLocationFilterTypeDisplayName;
        partial void OnProjectLocationFilterTypeDisplayNameChanging(global::System.String value);
        partial void OnProjectLocationFilterTypeDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value, "SortOrder");
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisplayGroup
        {
            get
            {
                return _DisplayGroup;
            }
            set
            {
                OnDisplayGroupChanging(value);
                ReportPropertyChanging("DisplayGroup");
                _DisplayGroup = StructuralObject.SetValidValue(value, "DisplayGroup");
                ReportPropertyChanged("DisplayGroup");
                OnDisplayGroupChanged();
            }
        }
        private global::System.Int32 _DisplayGroup;
        partial void OnDisplayGroupChanging(global::System.Int32 value);
        partial void OnDisplayGroupChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectLocationSimpleType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectLocationSimpleType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectLocationSimpleType object.
        /// </summary>
        /// <param name="projectLocationSimpleTypeID">Initial value of the ProjectLocationSimpleTypeID property.</param>
        /// <param name="projectLocationSimpleTypeName">Initial value of the ProjectLocationSimpleTypeName property.</param>
        /// <param name="displayInstructions">Initial value of the DisplayInstructions property.</param>
        /// <param name="displayOrder">Initial value of the DisplayOrder property.</param>
        public static ProjectLocationSimpleType CreateProjectLocationSimpleType(global::System.Int32 projectLocationSimpleTypeID, global::System.String projectLocationSimpleTypeName, global::System.String displayInstructions, global::System.Int32 displayOrder)
        {
            ProjectLocationSimpleType projectLocationSimpleType = new ProjectLocationSimpleType();
            projectLocationSimpleType.ProjectLocationSimpleTypeID = projectLocationSimpleTypeID;
            projectLocationSimpleType.ProjectLocationSimpleTypeName = projectLocationSimpleTypeName;
            projectLocationSimpleType.DisplayInstructions = displayInstructions;
            projectLocationSimpleType.DisplayOrder = displayOrder;
            return projectLocationSimpleType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectLocationSimpleTypeID
        {
            get
            {
                return _ProjectLocationSimpleTypeID;
            }
            set
            {
                if (_ProjectLocationSimpleTypeID != value)
                {
                    OnProjectLocationSimpleTypeIDChanging(value);
                    ReportPropertyChanging("ProjectLocationSimpleTypeID");
                    _ProjectLocationSimpleTypeID = StructuralObject.SetValidValue(value, "ProjectLocationSimpleTypeID");
                    ReportPropertyChanged("ProjectLocationSimpleTypeID");
                    OnProjectLocationSimpleTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectLocationSimpleTypeID;
        partial void OnProjectLocationSimpleTypeIDChanging(global::System.Int32 value);
        partial void OnProjectLocationSimpleTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectLocationSimpleTypeName
        {
            get
            {
                return _ProjectLocationSimpleTypeName;
            }
            set
            {
                OnProjectLocationSimpleTypeNameChanging(value);
                ReportPropertyChanging("ProjectLocationSimpleTypeName");
                _ProjectLocationSimpleTypeName = StructuralObject.SetValidValue(value, false, "ProjectLocationSimpleTypeName");
                ReportPropertyChanged("ProjectLocationSimpleTypeName");
                OnProjectLocationSimpleTypeNameChanged();
            }
        }
        private global::System.String _ProjectLocationSimpleTypeName;
        partial void OnProjectLocationSimpleTypeNameChanging(global::System.String value);
        partial void OnProjectLocationSimpleTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DisplayInstructions
        {
            get
            {
                return _DisplayInstructions;
            }
            set
            {
                OnDisplayInstructionsChanging(value);
                ReportPropertyChanging("DisplayInstructions");
                _DisplayInstructions = StructuralObject.SetValidValue(value, false, "DisplayInstructions");
                ReportPropertyChanged("DisplayInstructions");
                OnDisplayInstructionsChanged();
            }
        }
        private global::System.String _DisplayInstructions;
        partial void OnDisplayInstructionsChanging(global::System.String value);
        partial void OnDisplayInstructionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DisplayOrder
        {
            get
            {
                return _DisplayOrder;
            }
            set
            {
                OnDisplayOrderChanging(value);
                ReportPropertyChanging("DisplayOrder");
                _DisplayOrder = StructuralObject.SetValidValue(value, "DisplayOrder");
                ReportPropertyChanged("DisplayOrder");
                OnDisplayOrderChanged();
            }
        }
        private global::System.Int32 _DisplayOrder;
        partial void OnDisplayOrderChanging(global::System.Int32 value);
        partial void OnDisplayOrderChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Project_ProjectLocationSimpleType_ProjectLocationSimpleTypeID", "Project")]
        public EntityCollection<Project> Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("ProjectFirma.Web.Models.FK_Project_ProjectLocationSimpleType_ProjectLocationSimpleTypeID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("ProjectFirma.Web.Models.FK_Project_ProjectLocationSimpleType_ProjectLocationSimpleTypeID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdate_ProjectLocationSimpleType_ProjectLocationSimpleTypeID", "ProjectUpdate")]
        public EntityCollection<ProjectUpdate> ProjectUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUpdate>("ProjectFirma.Web.Models.FK_ProjectUpdate_ProjectLocationSimpleType_ProjectLocationSimpleTypeID", "ProjectUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUpdate>("ProjectFirma.Web.Models.FK_ProjectUpdate_ProjectLocationSimpleType_ProjectLocationSimpleTypeID", "ProjectUpdate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectLocationStaging")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectLocationStaging : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectLocationStaging object.
        /// </summary>
        /// <param name="projectLocationStagingID">Initial value of the ProjectLocationStagingID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="featureClassName">Initial value of the FeatureClassName property.</param>
        /// <param name="geoJson">Initial value of the GeoJson property.</param>
        /// <param name="shouldImport">Initial value of the ShouldImport property.</param>
        public static ProjectLocationStaging CreateProjectLocationStaging(global::System.Int32 projectLocationStagingID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.Int32 personID, global::System.String featureClassName, global::System.String geoJson, global::System.Boolean shouldImport)
        {
            ProjectLocationStaging projectLocationStaging = new ProjectLocationStaging();
            projectLocationStaging.ProjectLocationStagingID = projectLocationStagingID;
            projectLocationStaging.TenantID = tenantID;
            projectLocationStaging.ProjectID = projectID;
            projectLocationStaging.PersonID = personID;
            projectLocationStaging.FeatureClassName = featureClassName;
            projectLocationStaging.GeoJson = geoJson;
            projectLocationStaging.ShouldImport = shouldImport;
            return projectLocationStaging;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectLocationStagingID
        {
            get
            {
                return _ProjectLocationStagingID;
            }
            set
            {
                if (_ProjectLocationStagingID != value)
                {
                    OnProjectLocationStagingIDChanging(value);
                    ReportPropertyChanging("ProjectLocationStagingID");
                    _ProjectLocationStagingID = StructuralObject.SetValidValue(value, "ProjectLocationStagingID");
                    ReportPropertyChanged("ProjectLocationStagingID");
                    OnProjectLocationStagingIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectLocationStagingID;
        partial void OnProjectLocationStagingIDChanging(global::System.Int32 value);
        partial void OnProjectLocationStagingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value, "PersonID");
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FeatureClassName
        {
            get
            {
                return _FeatureClassName;
            }
            set
            {
                OnFeatureClassNameChanging(value);
                ReportPropertyChanging("FeatureClassName");
                _FeatureClassName = StructuralObject.SetValidValue(value, false, "FeatureClassName");
                ReportPropertyChanged("FeatureClassName");
                OnFeatureClassNameChanged();
            }
        }
        private global::System.String _FeatureClassName;
        partial void OnFeatureClassNameChanging(global::System.String value);
        partial void OnFeatureClassNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GeoJson
        {
            get
            {
                return _GeoJson;
            }
            set
            {
                OnGeoJsonChanging(value);
                ReportPropertyChanging("GeoJson");
                _GeoJson = StructuralObject.SetValidValue(value, false, "GeoJson");
                ReportPropertyChanged("GeoJson");
                OnGeoJsonChanged();
            }
        }
        private global::System.String _GeoJson;
        partial void OnGeoJsonChanging(global::System.String value);
        partial void OnGeoJsonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SelectedProperty
        {
            get
            {
                return _SelectedProperty;
            }
            set
            {
                OnSelectedPropertyChanging(value);
                ReportPropertyChanging("SelectedProperty");
                _SelectedProperty = StructuralObject.SetValidValue(value, true, "SelectedProperty");
                ReportPropertyChanged("SelectedProperty");
                OnSelectedPropertyChanged();
            }
        }
        private global::System.String _SelectedProperty;
        partial void OnSelectedPropertyChanging(global::System.String value);
        partial void OnSelectedPropertyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShouldImport
        {
            get
            {
                return _ShouldImport;
            }
            set
            {
                OnShouldImportChanging(value);
                ReportPropertyChanging("ShouldImport");
                _ShouldImport = StructuralObject.SetValidValue(value, "ShouldImport");
                ReportPropertyChanged("ShouldImport");
                OnShouldImportChanged();
            }
        }
        private global::System.Boolean _ShouldImport;
        partial void OnShouldImportChanging(global::System.Boolean value);
        partial void OnShouldImportChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationStaging_Person_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectLocationStaging_Person_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectLocationStaging_Person_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectLocationStaging_Person_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectLocationStaging_Person_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationStaging_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectLocationStaging_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectLocationStaging_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectLocationStaging_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectLocationStaging_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationStaging_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectLocationStaging_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectLocationStaging_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectLocationStaging_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectLocationStaging_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectLocationStagingUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectLocationStagingUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectLocationStagingUpdate object.
        /// </summary>
        /// <param name="projectLocationStagingUpdateID">Initial value of the ProjectLocationStagingUpdateID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectUpdateBatchID">Initial value of the ProjectUpdateBatchID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="featureClassName">Initial value of the FeatureClassName property.</param>
        /// <param name="geoJson">Initial value of the GeoJson property.</param>
        /// <param name="shouldImport">Initial value of the ShouldImport property.</param>
        public static ProjectLocationStagingUpdate CreateProjectLocationStagingUpdate(global::System.Int32 projectLocationStagingUpdateID, global::System.Int32 tenantID, global::System.Int32 projectUpdateBatchID, global::System.Int32 personID, global::System.String featureClassName, global::System.String geoJson, global::System.Boolean shouldImport)
        {
            ProjectLocationStagingUpdate projectLocationStagingUpdate = new ProjectLocationStagingUpdate();
            projectLocationStagingUpdate.ProjectLocationStagingUpdateID = projectLocationStagingUpdateID;
            projectLocationStagingUpdate.TenantID = tenantID;
            projectLocationStagingUpdate.ProjectUpdateBatchID = projectUpdateBatchID;
            projectLocationStagingUpdate.PersonID = personID;
            projectLocationStagingUpdate.FeatureClassName = featureClassName;
            projectLocationStagingUpdate.GeoJson = geoJson;
            projectLocationStagingUpdate.ShouldImport = shouldImport;
            return projectLocationStagingUpdate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectLocationStagingUpdateID
        {
            get
            {
                return _ProjectLocationStagingUpdateID;
            }
            set
            {
                if (_ProjectLocationStagingUpdateID != value)
                {
                    OnProjectLocationStagingUpdateIDChanging(value);
                    ReportPropertyChanging("ProjectLocationStagingUpdateID");
                    _ProjectLocationStagingUpdateID = StructuralObject.SetValidValue(value, "ProjectLocationStagingUpdateID");
                    ReportPropertyChanged("ProjectLocationStagingUpdateID");
                    OnProjectLocationStagingUpdateIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectLocationStagingUpdateID;
        partial void OnProjectLocationStagingUpdateIDChanging(global::System.Int32 value);
        partial void OnProjectLocationStagingUpdateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateBatchID
        {
            get
            {
                return _ProjectUpdateBatchID;
            }
            set
            {
                OnProjectUpdateBatchIDChanging(value);
                ReportPropertyChanging("ProjectUpdateBatchID");
                _ProjectUpdateBatchID = StructuralObject.SetValidValue(value, "ProjectUpdateBatchID");
                ReportPropertyChanged("ProjectUpdateBatchID");
                OnProjectUpdateBatchIDChanged();
            }
        }
        private global::System.Int32 _ProjectUpdateBatchID;
        partial void OnProjectUpdateBatchIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value, "PersonID");
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FeatureClassName
        {
            get
            {
                return _FeatureClassName;
            }
            set
            {
                OnFeatureClassNameChanging(value);
                ReportPropertyChanging("FeatureClassName");
                _FeatureClassName = StructuralObject.SetValidValue(value, false, "FeatureClassName");
                ReportPropertyChanged("FeatureClassName");
                OnFeatureClassNameChanged();
            }
        }
        private global::System.String _FeatureClassName;
        partial void OnFeatureClassNameChanging(global::System.String value);
        partial void OnFeatureClassNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GeoJson
        {
            get
            {
                return _GeoJson;
            }
            set
            {
                OnGeoJsonChanging(value);
                ReportPropertyChanging("GeoJson");
                _GeoJson = StructuralObject.SetValidValue(value, false, "GeoJson");
                ReportPropertyChanged("GeoJson");
                OnGeoJsonChanged();
            }
        }
        private global::System.String _GeoJson;
        partial void OnGeoJsonChanging(global::System.String value);
        partial void OnGeoJsonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SelectedProperty
        {
            get
            {
                return _SelectedProperty;
            }
            set
            {
                OnSelectedPropertyChanging(value);
                ReportPropertyChanging("SelectedProperty");
                _SelectedProperty = StructuralObject.SetValidValue(value, true, "SelectedProperty");
                ReportPropertyChanged("SelectedProperty");
                OnSelectedPropertyChanged();
            }
        }
        private global::System.String _SelectedProperty;
        partial void OnSelectedPropertyChanging(global::System.String value);
        partial void OnSelectedPropertyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShouldImport
        {
            get
            {
                return _ShouldImport;
            }
            set
            {
                OnShouldImportChanging(value);
                ReportPropertyChanging("ShouldImport");
                _ShouldImport = StructuralObject.SetValidValue(value, "ShouldImport");
                ReportPropertyChanged("ShouldImport");
                OnShouldImportChanged();
            }
        }
        private global::System.Boolean _ShouldImport;
        partial void OnShouldImportChanging(global::System.Boolean value);
        partial void OnShouldImportChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationStagingUpdate_Person_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectLocationStagingUpdate_Person_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectLocationStagingUpdate_Person_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectLocationStagingUpdate_Person_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectLocationStagingUpdate_Person_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationStagingUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch")]
        public ProjectUpdateBatch ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectLocationStagingUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectLocationStagingUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUpdateBatch> ProjectUpdateBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectLocationStagingUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectLocationStagingUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationStagingUpdate_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectLocationStagingUpdate_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectLocationStagingUpdate_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectLocationStagingUpdate_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectLocationStagingUpdate_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectLocationUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectLocationUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectLocationUpdate object.
        /// </summary>
        /// <param name="projectLocationUpdateID">Initial value of the ProjectLocationUpdateID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectUpdateBatchID">Initial value of the ProjectUpdateBatchID property.</param>
        /// <param name="projectLocationUpdateGeometry">Initial value of the ProjectLocationUpdateGeometry property.</param>
        public static ProjectLocationUpdate CreateProjectLocationUpdate(global::System.Int32 projectLocationUpdateID, global::System.Int32 tenantID, global::System.Int32 projectUpdateBatchID, global::System.Data.Spatial.DbGeometry projectLocationUpdateGeometry)
        {
            ProjectLocationUpdate projectLocationUpdate = new ProjectLocationUpdate();
            projectLocationUpdate.ProjectLocationUpdateID = projectLocationUpdateID;
            projectLocationUpdate.TenantID = tenantID;
            projectLocationUpdate.ProjectUpdateBatchID = projectUpdateBatchID;
            projectLocationUpdate.ProjectLocationUpdateGeometry = projectLocationUpdateGeometry;
            return projectLocationUpdate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectLocationUpdateID
        {
            get
            {
                return _ProjectLocationUpdateID;
            }
            set
            {
                if (_ProjectLocationUpdateID != value)
                {
                    OnProjectLocationUpdateIDChanging(value);
                    ReportPropertyChanging("ProjectLocationUpdateID");
                    _ProjectLocationUpdateID = StructuralObject.SetValidValue(value, "ProjectLocationUpdateID");
                    ReportPropertyChanged("ProjectLocationUpdateID");
                    OnProjectLocationUpdateIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectLocationUpdateID;
        partial void OnProjectLocationUpdateIDChanging(global::System.Int32 value);
        partial void OnProjectLocationUpdateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateBatchID
        {
            get
            {
                return _ProjectUpdateBatchID;
            }
            set
            {
                OnProjectUpdateBatchIDChanging(value);
                ReportPropertyChanging("ProjectUpdateBatchID");
                _ProjectUpdateBatchID = StructuralObject.SetValidValue(value, "ProjectUpdateBatchID");
                ReportPropertyChanged("ProjectUpdateBatchID");
                OnProjectUpdateBatchIDChanged();
            }
        }
        private global::System.Int32 _ProjectUpdateBatchID;
        partial void OnProjectUpdateBatchIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeometry ProjectLocationUpdateGeometry
        {
            get
            {
                return _ProjectLocationUpdateGeometry;
            }
            set
            {
                OnProjectLocationUpdateGeometryChanging(value);
                ReportPropertyChanging("ProjectLocationUpdateGeometry");
                _ProjectLocationUpdateGeometry = StructuralObject.SetValidValue(value, false, "ProjectLocationUpdateGeometry");
                ReportPropertyChanged("ProjectLocationUpdateGeometry");
                OnProjectLocationUpdateGeometryChanged();
            }
        }
        private global::System.Data.Spatial.DbGeometry _ProjectLocationUpdateGeometry;
        partial void OnProjectLocationUpdateGeometryChanging(global::System.Data.Spatial.DbGeometry value);
        partial void OnProjectLocationUpdateGeometryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Annotation
        {
            get
            {
                return _Annotation;
            }
            set
            {
                OnAnnotationChanging(value);
                ReportPropertyChanging("Annotation");
                _Annotation = StructuralObject.SetValidValue(value, true, "Annotation");
                ReportPropertyChanged("Annotation");
                OnAnnotationChanged();
            }
        }
        private global::System.String _Annotation;
        partial void OnAnnotationChanging(global::System.String value);
        partial void OnAnnotationChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch")]
        public ProjectUpdateBatch ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectLocationUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectLocationUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUpdateBatch> ProjectUpdateBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectLocationUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectLocationUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationUpdate_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectLocationUpdate_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectLocationUpdate_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectLocationUpdate_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectLocationUpdate_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectNote")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectNote : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectNote object.
        /// </summary>
        /// <param name="projectNoteID">Initial value of the ProjectNoteID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="note">Initial value of the Note property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static ProjectNote CreateProjectNote(global::System.Int32 projectNoteID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.String note, global::System.DateTime createDate)
        {
            ProjectNote projectNote = new ProjectNote();
            projectNote.ProjectNoteID = projectNoteID;
            projectNote.TenantID = tenantID;
            projectNote.ProjectID = projectID;
            projectNote.Note = note;
            projectNote.CreateDate = createDate;
            return projectNote;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectNoteID
        {
            get
            {
                return _ProjectNoteID;
            }
            set
            {
                if (_ProjectNoteID != value)
                {
                    OnProjectNoteIDChanging(value);
                    ReportPropertyChanging("ProjectNoteID");
                    _ProjectNoteID = StructuralObject.SetValidValue(value, "ProjectNoteID");
                    ReportPropertyChanged("ProjectNoteID");
                    OnProjectNoteIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectNoteID;
        partial void OnProjectNoteIDChanging(global::System.Int32 value);
        partial void OnProjectNoteIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, false, "Note");
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatePersonID
        {
            get
            {
                return _CreatePersonID;
            }
            set
            {
                OnCreatePersonIDChanging(value);
                ReportPropertyChanging("CreatePersonID");
                _CreatePersonID = StructuralObject.SetValidValue(value, "CreatePersonID");
                ReportPropertyChanged("CreatePersonID");
                OnCreatePersonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatePersonID;
        partial void OnCreatePersonIDChanging(Nullable<global::System.Int32> value);
        partial void OnCreatePersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, "CreateDate");
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatePersonID
        {
            get
            {
                return _UpdatePersonID;
            }
            set
            {
                OnUpdatePersonIDChanging(value);
                ReportPropertyChanging("UpdatePersonID");
                _UpdatePersonID = StructuralObject.SetValidValue(value, "UpdatePersonID");
                ReportPropertyChanged("UpdatePersonID");
                OnUpdatePersonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatePersonID;
        partial void OnUpdatePersonIDChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatePersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectNote_Person_CreatePersonID_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectNote_Person_CreatePersonID_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectNote_Person_CreatePersonID_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectNote_Person_CreatePersonID_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectNote_Person_CreatePersonID_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectNote_Person_UpdatePersonID_PersonID", "Person")]
        public Person Person1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectNote_Person_UpdatePersonID_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectNote_Person_UpdatePersonID_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> Person1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectNote_Person_UpdatePersonID_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectNote_Person_UpdatePersonID_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectNote_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectNote_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectNote_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectNote_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectNote_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectNote_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectNote_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectNote_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectNote_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectNote_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectNoteUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectNoteUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectNoteUpdate object.
        /// </summary>
        /// <param name="projectNoteUpdateID">Initial value of the ProjectNoteUpdateID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectUpdateBatchID">Initial value of the ProjectUpdateBatchID property.</param>
        /// <param name="note">Initial value of the Note property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        public static ProjectNoteUpdate CreateProjectNoteUpdate(global::System.Int32 projectNoteUpdateID, global::System.Int32 tenantID, global::System.Int32 projectUpdateBatchID, global::System.String note, global::System.DateTime createDate)
        {
            ProjectNoteUpdate projectNoteUpdate = new ProjectNoteUpdate();
            projectNoteUpdate.ProjectNoteUpdateID = projectNoteUpdateID;
            projectNoteUpdate.TenantID = tenantID;
            projectNoteUpdate.ProjectUpdateBatchID = projectUpdateBatchID;
            projectNoteUpdate.Note = note;
            projectNoteUpdate.CreateDate = createDate;
            return projectNoteUpdate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectNoteUpdateID
        {
            get
            {
                return _ProjectNoteUpdateID;
            }
            set
            {
                if (_ProjectNoteUpdateID != value)
                {
                    OnProjectNoteUpdateIDChanging(value);
                    ReportPropertyChanging("ProjectNoteUpdateID");
                    _ProjectNoteUpdateID = StructuralObject.SetValidValue(value, "ProjectNoteUpdateID");
                    ReportPropertyChanged("ProjectNoteUpdateID");
                    OnProjectNoteUpdateIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectNoteUpdateID;
        partial void OnProjectNoteUpdateIDChanging(global::System.Int32 value);
        partial void OnProjectNoteUpdateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateBatchID
        {
            get
            {
                return _ProjectUpdateBatchID;
            }
            set
            {
                OnProjectUpdateBatchIDChanging(value);
                ReportPropertyChanging("ProjectUpdateBatchID");
                _ProjectUpdateBatchID = StructuralObject.SetValidValue(value, "ProjectUpdateBatchID");
                ReportPropertyChanged("ProjectUpdateBatchID");
                OnProjectUpdateBatchIDChanged();
            }
        }
        private global::System.Int32 _ProjectUpdateBatchID;
        partial void OnProjectUpdateBatchIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Note
        {
            get
            {
                return _Note;
            }
            set
            {
                OnNoteChanging(value);
                ReportPropertyChanging("Note");
                _Note = StructuralObject.SetValidValue(value, false, "Note");
                ReportPropertyChanged("Note");
                OnNoteChanged();
            }
        }
        private global::System.String _Note;
        partial void OnNoteChanging(global::System.String value);
        partial void OnNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CreatePersonID
        {
            get
            {
                return _CreatePersonID;
            }
            set
            {
                OnCreatePersonIDChanging(value);
                ReportPropertyChanging("CreatePersonID");
                _CreatePersonID = StructuralObject.SetValidValue(value, "CreatePersonID");
                ReportPropertyChanged("CreatePersonID");
                OnCreatePersonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CreatePersonID;
        partial void OnCreatePersonIDChanging(Nullable<global::System.Int32> value);
        partial void OnCreatePersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value, "CreateDate");
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UpdatePersonID
        {
            get
            {
                return _UpdatePersonID;
            }
            set
            {
                OnUpdatePersonIDChanging(value);
                ReportPropertyChanging("UpdatePersonID");
                _UpdatePersonID = StructuralObject.SetValidValue(value, "UpdatePersonID");
                ReportPropertyChanged("UpdatePersonID");
                OnUpdatePersonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _UpdatePersonID;
        partial void OnUpdatePersonIDChanging(Nullable<global::System.Int32> value);
        partial void OnUpdatePersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> UpdateDate
        {
            get
            {
                return _UpdateDate;
            }
            set
            {
                OnUpdateDateChanging(value);
                ReportPropertyChanging("UpdateDate");
                _UpdateDate = StructuralObject.SetValidValue(value, "UpdateDate");
                ReportPropertyChanged("UpdateDate");
                OnUpdateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _UpdateDate;
        partial void OnUpdateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnUpdateDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectNoteUpdate_Person_CreatePersonID_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_Person_CreatePersonID_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_Person_CreatePersonID_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_Person_CreatePersonID_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_Person_CreatePersonID_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectNoteUpdate_Person_UpdatePersonID_PersonID", "Person")]
        public Person Person1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_Person_UpdatePersonID_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_Person_UpdatePersonID_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> Person1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_Person_UpdatePersonID_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_Person_UpdatePersonID_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectNoteUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch")]
        public ProjectUpdateBatch ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUpdateBatch> ProjectUpdateBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectNoteUpdate_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectOrganization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectOrganization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectOrganization object.
        /// </summary>
        /// <param name="projectOrganizationID">Initial value of the ProjectOrganizationID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        /// <param name="relationshipTypeID">Initial value of the RelationshipTypeID property.</param>
        public static ProjectOrganization CreateProjectOrganization(global::System.Int32 projectOrganizationID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.Int32 organizationID, global::System.Int32 relationshipTypeID)
        {
            ProjectOrganization projectOrganization = new ProjectOrganization();
            projectOrganization.ProjectOrganizationID = projectOrganizationID;
            projectOrganization.TenantID = tenantID;
            projectOrganization.ProjectID = projectID;
            projectOrganization.OrganizationID = organizationID;
            projectOrganization.RelationshipTypeID = relationshipTypeID;
            return projectOrganization;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectOrganizationID
        {
            get
            {
                return _ProjectOrganizationID;
            }
            set
            {
                if (_ProjectOrganizationID != value)
                {
                    OnProjectOrganizationIDChanging(value);
                    ReportPropertyChanging("ProjectOrganizationID");
                    _ProjectOrganizationID = StructuralObject.SetValidValue(value, "ProjectOrganizationID");
                    ReportPropertyChanged("ProjectOrganizationID");
                    OnProjectOrganizationIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectOrganizationID;
        partial void OnProjectOrganizationIDChanging(global::System.Int32 value);
        partial void OnProjectOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Int32 _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Int32 value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelationshipTypeID
        {
            get
            {
                return _RelationshipTypeID;
            }
            set
            {
                OnRelationshipTypeIDChanging(value);
                ReportPropertyChanging("RelationshipTypeID");
                _RelationshipTypeID = StructuralObject.SetValidValue(value, "RelationshipTypeID");
                ReportPropertyChanged("RelationshipTypeID");
                OnRelationshipTypeIDChanged();
            }
        }
        private global::System.Int32 _RelationshipTypeID;
        partial void OnRelationshipTypeIDChanging(global::System.Int32 value);
        partial void OnRelationshipTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganization_Organization_OrganizationID", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("ProjectFirma.Web.Models.FK_ProjectOrganization_Organization_OrganizationID", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("ProjectFirma.Web.Models.FK_ProjectOrganization_Organization_OrganizationID", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("ProjectFirma.Web.Models.FK_ProjectOrganization_Organization_OrganizationID", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("ProjectFirma.Web.Models.FK_ProjectOrganization_Organization_OrganizationID", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganization_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectOrganization_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectOrganization_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectOrganization_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectOrganization_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganization_RelationshipType_RelationshipTypeID", "RelationshipType")]
        public RelationshipType RelationshipType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationshipType>("ProjectFirma.Web.Models.FK_ProjectOrganization_RelationshipType_RelationshipTypeID", "RelationshipType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationshipType>("ProjectFirma.Web.Models.FK_ProjectOrganization_RelationshipType_RelationshipTypeID", "RelationshipType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RelationshipType> RelationshipTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationshipType>("ProjectFirma.Web.Models.FK_ProjectOrganization_RelationshipType_RelationshipTypeID", "RelationshipType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RelationshipType>("ProjectFirma.Web.Models.FK_ProjectOrganization_RelationshipType_RelationshipTypeID", "RelationshipType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganization_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectOrganization_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectOrganization_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectOrganization_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectOrganization_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectOrganizationUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectOrganizationUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectOrganizationUpdate object.
        /// </summary>
        /// <param name="projectOrganizationUpdateID">Initial value of the ProjectOrganizationUpdateID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectUpdateBatchID">Initial value of the ProjectUpdateBatchID property.</param>
        /// <param name="organizationID">Initial value of the OrganizationID property.</param>
        /// <param name="relationshipTypeID">Initial value of the RelationshipTypeID property.</param>
        public static ProjectOrganizationUpdate CreateProjectOrganizationUpdate(global::System.Int32 projectOrganizationUpdateID, global::System.Int32 tenantID, global::System.Int32 projectUpdateBatchID, global::System.Int32 organizationID, global::System.Int32 relationshipTypeID)
        {
            ProjectOrganizationUpdate projectOrganizationUpdate = new ProjectOrganizationUpdate();
            projectOrganizationUpdate.ProjectOrganizationUpdateID = projectOrganizationUpdateID;
            projectOrganizationUpdate.TenantID = tenantID;
            projectOrganizationUpdate.ProjectUpdateBatchID = projectUpdateBatchID;
            projectOrganizationUpdate.OrganizationID = organizationID;
            projectOrganizationUpdate.RelationshipTypeID = relationshipTypeID;
            return projectOrganizationUpdate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectOrganizationUpdateID
        {
            get
            {
                return _ProjectOrganizationUpdateID;
            }
            set
            {
                if (_ProjectOrganizationUpdateID != value)
                {
                    OnProjectOrganizationUpdateIDChanging(value);
                    ReportPropertyChanging("ProjectOrganizationUpdateID");
                    _ProjectOrganizationUpdateID = StructuralObject.SetValidValue(value, "ProjectOrganizationUpdateID");
                    ReportPropertyChanged("ProjectOrganizationUpdateID");
                    OnProjectOrganizationUpdateIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectOrganizationUpdateID;
        partial void OnProjectOrganizationUpdateIDChanging(global::System.Int32 value);
        partial void OnProjectOrganizationUpdateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateBatchID
        {
            get
            {
                return _ProjectUpdateBatchID;
            }
            set
            {
                OnProjectUpdateBatchIDChanging(value);
                ReportPropertyChanging("ProjectUpdateBatchID");
                _ProjectUpdateBatchID = StructuralObject.SetValidValue(value, "ProjectUpdateBatchID");
                ReportPropertyChanged("ProjectUpdateBatchID");
                OnProjectUpdateBatchIDChanged();
            }
        }
        private global::System.Int32 _ProjectUpdateBatchID;
        partial void OnProjectUpdateBatchIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganizationID
        {
            get
            {
                return _OrganizationID;
            }
            set
            {
                OnOrganizationIDChanging(value);
                ReportPropertyChanging("OrganizationID");
                _OrganizationID = StructuralObject.SetValidValue(value, "OrganizationID");
                ReportPropertyChanged("OrganizationID");
                OnOrganizationIDChanged();
            }
        }
        private global::System.Int32 _OrganizationID;
        partial void OnOrganizationIDChanging(global::System.Int32 value);
        partial void OnOrganizationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelationshipTypeID
        {
            get
            {
                return _RelationshipTypeID;
            }
            set
            {
                OnRelationshipTypeIDChanging(value);
                ReportPropertyChanging("RelationshipTypeID");
                _RelationshipTypeID = StructuralObject.SetValidValue(value, "RelationshipTypeID");
                ReportPropertyChanged("RelationshipTypeID");
                OnRelationshipTypeIDChanged();
            }
        }
        private global::System.Int32 _RelationshipTypeID;
        partial void OnRelationshipTypeIDChanging(global::System.Int32 value);
        partial void OnRelationshipTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganizationUpdate_Organization_OrganizationID", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_Organization_OrganizationID", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_Organization_OrganizationID", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_Organization_OrganizationID", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_Organization_OrganizationID", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganizationUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch")]
        public ProjectUpdateBatch ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUpdateBatch> ProjectUpdateBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganizationUpdate_RelationshipType_RelationshipTypeID", "RelationshipType")]
        public RelationshipType RelationshipType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationshipType>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_RelationshipType_RelationshipTypeID", "RelationshipType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationshipType>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_RelationshipType_RelationshipTypeID", "RelationshipType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RelationshipType> RelationshipTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RelationshipType>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_RelationshipType_RelationshipTypeID", "RelationshipType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RelationshipType>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_RelationshipType_RelationshipTypeID", "RelationshipType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganizationUpdate_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectPerson")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectPerson : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectPerson object.
        /// </summary>
        /// <param name="projectPersonID">Initial value of the ProjectPersonID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="projectPersonRelationshipTypeID">Initial value of the ProjectPersonRelationshipTypeID property.</param>
        public static ProjectPerson CreateProjectPerson(global::System.Int32 projectPersonID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.Int32 personID, global::System.Int32 projectPersonRelationshipTypeID)
        {
            ProjectPerson projectPerson = new ProjectPerson();
            projectPerson.ProjectPersonID = projectPersonID;
            projectPerson.TenantID = tenantID;
            projectPerson.ProjectID = projectID;
            projectPerson.PersonID = personID;
            projectPerson.ProjectPersonRelationshipTypeID = projectPersonRelationshipTypeID;
            return projectPerson;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectPersonID
        {
            get
            {
                return _ProjectPersonID;
            }
            set
            {
                if (_ProjectPersonID != value)
                {
                    OnProjectPersonIDChanging(value);
                    ReportPropertyChanging("ProjectPersonID");
                    _ProjectPersonID = StructuralObject.SetValidValue(value, "ProjectPersonID");
                    ReportPropertyChanged("ProjectPersonID");
                    OnProjectPersonIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectPersonID;
        partial void OnProjectPersonIDChanging(global::System.Int32 value);
        partial void OnProjectPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value, "PersonID");
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectPersonRelationshipTypeID
        {
            get
            {
                return _ProjectPersonRelationshipTypeID;
            }
            set
            {
                OnProjectPersonRelationshipTypeIDChanging(value);
                ReportPropertyChanging("ProjectPersonRelationshipTypeID");
                _ProjectPersonRelationshipTypeID = StructuralObject.SetValidValue(value, "ProjectPersonRelationshipTypeID");
                ReportPropertyChanged("ProjectPersonRelationshipTypeID");
                OnProjectPersonRelationshipTypeIDChanged();
            }
        }
        private global::System.Int32 _ProjectPersonRelationshipTypeID;
        partial void OnProjectPersonRelationshipTypeIDChanging(global::System.Int32 value);
        partial void OnProjectPersonRelationshipTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectPerson_Person_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectPerson_Person_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectPerson_Person_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectPerson_Person_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectPerson_Person_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectPerson_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectPerson_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectPerson_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectPerson_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectPerson_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectPerson_ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID", "ProjectPersonRelationshipType")]
        public ProjectPersonRelationshipType ProjectPersonRelationshipType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectPersonRelationshipType>("ProjectFirma.Web.Models.FK_ProjectPerson_ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID", "ProjectPersonRelationshipType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectPersonRelationshipType>("ProjectFirma.Web.Models.FK_ProjectPerson_ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID", "ProjectPersonRelationshipType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectPersonRelationshipType> ProjectPersonRelationshipTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectPersonRelationshipType>("ProjectFirma.Web.Models.FK_ProjectPerson_ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID", "ProjectPersonRelationshipType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectPersonRelationshipType>("ProjectFirma.Web.Models.FK_ProjectPerson_ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID", "ProjectPersonRelationshipType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectPerson_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectPerson_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectPerson_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectPerson_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectPerson_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectPersonRelationshipType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectPersonRelationshipType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectPersonRelationshipType object.
        /// </summary>
        /// <param name="projectPersonRelationshipTypeID">Initial value of the ProjectPersonRelationshipTypeID property.</param>
        /// <param name="projectPersonRelationshipTypeName">Initial value of the ProjectPersonRelationshipTypeName property.</param>
        /// <param name="projectPersonRelationshipTypeDisplayName">Initial value of the ProjectPersonRelationshipTypeDisplayName property.</param>
        /// <param name="fieldDefinitionID">Initial value of the FieldDefinitionID property.</param>
        /// <param name="isRequired">Initial value of the IsRequired property.</param>
        public static ProjectPersonRelationshipType CreateProjectPersonRelationshipType(global::System.Int32 projectPersonRelationshipTypeID, global::System.String projectPersonRelationshipTypeName, global::System.String projectPersonRelationshipTypeDisplayName, global::System.Int32 fieldDefinitionID, global::System.Boolean isRequired)
        {
            ProjectPersonRelationshipType projectPersonRelationshipType = new ProjectPersonRelationshipType();
            projectPersonRelationshipType.ProjectPersonRelationshipTypeID = projectPersonRelationshipTypeID;
            projectPersonRelationshipType.ProjectPersonRelationshipTypeName = projectPersonRelationshipTypeName;
            projectPersonRelationshipType.ProjectPersonRelationshipTypeDisplayName = projectPersonRelationshipTypeDisplayName;
            projectPersonRelationshipType.FieldDefinitionID = fieldDefinitionID;
            projectPersonRelationshipType.IsRequired = isRequired;
            return projectPersonRelationshipType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectPersonRelationshipTypeID
        {
            get
            {
                return _ProjectPersonRelationshipTypeID;
            }
            set
            {
                if (_ProjectPersonRelationshipTypeID != value)
                {
                    OnProjectPersonRelationshipTypeIDChanging(value);
                    ReportPropertyChanging("ProjectPersonRelationshipTypeID");
                    _ProjectPersonRelationshipTypeID = StructuralObject.SetValidValue(value, "ProjectPersonRelationshipTypeID");
                    ReportPropertyChanged("ProjectPersonRelationshipTypeID");
                    OnProjectPersonRelationshipTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectPersonRelationshipTypeID;
        partial void OnProjectPersonRelationshipTypeIDChanging(global::System.Int32 value);
        partial void OnProjectPersonRelationshipTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectPersonRelationshipTypeName
        {
            get
            {
                return _ProjectPersonRelationshipTypeName;
            }
            set
            {
                OnProjectPersonRelationshipTypeNameChanging(value);
                ReportPropertyChanging("ProjectPersonRelationshipTypeName");
                _ProjectPersonRelationshipTypeName = StructuralObject.SetValidValue(value, false, "ProjectPersonRelationshipTypeName");
                ReportPropertyChanged("ProjectPersonRelationshipTypeName");
                OnProjectPersonRelationshipTypeNameChanged();
            }
        }
        private global::System.String _ProjectPersonRelationshipTypeName;
        partial void OnProjectPersonRelationshipTypeNameChanging(global::System.String value);
        partial void OnProjectPersonRelationshipTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectPersonRelationshipTypeDisplayName
        {
            get
            {
                return _ProjectPersonRelationshipTypeDisplayName;
            }
            set
            {
                OnProjectPersonRelationshipTypeDisplayNameChanging(value);
                ReportPropertyChanging("ProjectPersonRelationshipTypeDisplayName");
                _ProjectPersonRelationshipTypeDisplayName = StructuralObject.SetValidValue(value, false, "ProjectPersonRelationshipTypeDisplayName");
                ReportPropertyChanged("ProjectPersonRelationshipTypeDisplayName");
                OnProjectPersonRelationshipTypeDisplayNameChanged();
            }
        }
        private global::System.String _ProjectPersonRelationshipTypeDisplayName;
        partial void OnProjectPersonRelationshipTypeDisplayNameChanging(global::System.String value);
        partial void OnProjectPersonRelationshipTypeDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FieldDefinitionID
        {
            get
            {
                return _FieldDefinitionID;
            }
            set
            {
                OnFieldDefinitionIDChanging(value);
                ReportPropertyChanging("FieldDefinitionID");
                _FieldDefinitionID = StructuralObject.SetValidValue(value, "FieldDefinitionID");
                ReportPropertyChanged("FieldDefinitionID");
                OnFieldDefinitionIDChanged();
            }
        }
        private global::System.Int32 _FieldDefinitionID;
        partial void OnFieldDefinitionIDChanging(global::System.Int32 value);
        partial void OnFieldDefinitionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsRequired
        {
            get
            {
                return _IsRequired;
            }
            set
            {
                OnIsRequiredChanging(value);
                ReportPropertyChanging("IsRequired");
                _IsRequired = StructuralObject.SetValidValue(value, "IsRequired");
                ReportPropertyChanged("IsRequired");
                OnIsRequiredChanged();
            }
        }
        private global::System.Boolean _IsRequired;
        partial void OnIsRequiredChanging(global::System.Boolean value);
        partial void OnIsRequiredChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectPersonRelationshipType_ProjectPersonRelationshipType", "FieldDefinition")]
        public FieldDefinition FieldDefinition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldDefinition>("ProjectFirma.Web.Models.FK_ProjectPersonRelationshipType_ProjectPersonRelationshipType", "FieldDefinition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldDefinition>("ProjectFirma.Web.Models.FK_ProjectPersonRelationshipType_ProjectPersonRelationshipType", "FieldDefinition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FieldDefinition> FieldDefinitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FieldDefinition>("ProjectFirma.Web.Models.FK_ProjectPersonRelationshipType_ProjectPersonRelationshipType", "FieldDefinition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FieldDefinition>("ProjectFirma.Web.Models.FK_ProjectPersonRelationshipType_ProjectPersonRelationshipType", "FieldDefinition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectPerson_ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID", "ProjectPerson")]
        public EntityCollection<ProjectPerson> ProjectPerson
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectPerson>("ProjectFirma.Web.Models.FK_ProjectPerson_ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID", "ProjectPerson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectPerson>("ProjectFirma.Web.Models.FK_ProjectPerson_ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID", "ProjectPerson", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectPersonUpdate_ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID", "ProjectPersonUpdate")]
        public EntityCollection<ProjectPersonUpdate> ProjectPersonUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectPersonUpdate>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID", "ProjectPersonUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectPersonUpdate>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID", "ProjectPersonUpdate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectPersonUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectPersonUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectPersonUpdate object.
        /// </summary>
        /// <param name="projectPersonUpdateID">Initial value of the ProjectPersonUpdateID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectUpdateBatchID">Initial value of the ProjectUpdateBatchID property.</param>
        /// <param name="personID">Initial value of the PersonID property.</param>
        /// <param name="projectPersonRelationshipTypeID">Initial value of the ProjectPersonRelationshipTypeID property.</param>
        public static ProjectPersonUpdate CreateProjectPersonUpdate(global::System.Int32 projectPersonUpdateID, global::System.Int32 tenantID, global::System.Int32 projectUpdateBatchID, global::System.Int32 personID, global::System.Int32 projectPersonRelationshipTypeID)
        {
            ProjectPersonUpdate projectPersonUpdate = new ProjectPersonUpdate();
            projectPersonUpdate.ProjectPersonUpdateID = projectPersonUpdateID;
            projectPersonUpdate.TenantID = tenantID;
            projectPersonUpdate.ProjectUpdateBatchID = projectUpdateBatchID;
            projectPersonUpdate.PersonID = personID;
            projectPersonUpdate.ProjectPersonRelationshipTypeID = projectPersonRelationshipTypeID;
            return projectPersonUpdate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectPersonUpdateID
        {
            get
            {
                return _ProjectPersonUpdateID;
            }
            set
            {
                if (_ProjectPersonUpdateID != value)
                {
                    OnProjectPersonUpdateIDChanging(value);
                    ReportPropertyChanging("ProjectPersonUpdateID");
                    _ProjectPersonUpdateID = StructuralObject.SetValidValue(value, "ProjectPersonUpdateID");
                    ReportPropertyChanged("ProjectPersonUpdateID");
                    OnProjectPersonUpdateIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectPersonUpdateID;
        partial void OnProjectPersonUpdateIDChanging(global::System.Int32 value);
        partial void OnProjectPersonUpdateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateBatchID
        {
            get
            {
                return _ProjectUpdateBatchID;
            }
            set
            {
                OnProjectUpdateBatchIDChanging(value);
                ReportPropertyChanging("ProjectUpdateBatchID");
                _ProjectUpdateBatchID = StructuralObject.SetValidValue(value, "ProjectUpdateBatchID");
                ReportPropertyChanged("ProjectUpdateBatchID");
                OnProjectUpdateBatchIDChanged();
            }
        }
        private global::System.Int32 _ProjectUpdateBatchID;
        partial void OnProjectUpdateBatchIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PersonID
        {
            get
            {
                return _PersonID;
            }
            set
            {
                OnPersonIDChanging(value);
                ReportPropertyChanging("PersonID");
                _PersonID = StructuralObject.SetValidValue(value, "PersonID");
                ReportPropertyChanged("PersonID");
                OnPersonIDChanged();
            }
        }
        private global::System.Int32 _PersonID;
        partial void OnPersonIDChanging(global::System.Int32 value);
        partial void OnPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectPersonRelationshipTypeID
        {
            get
            {
                return _ProjectPersonRelationshipTypeID;
            }
            set
            {
                OnProjectPersonRelationshipTypeIDChanging(value);
                ReportPropertyChanging("ProjectPersonRelationshipTypeID");
                _ProjectPersonRelationshipTypeID = StructuralObject.SetValidValue(value, "ProjectPersonRelationshipTypeID");
                ReportPropertyChanged("ProjectPersonRelationshipTypeID");
                OnProjectPersonRelationshipTypeIDChanged();
            }
        }
        private global::System.Int32 _ProjectPersonRelationshipTypeID;
        partial void OnProjectPersonRelationshipTypeIDChanging(global::System.Int32 value);
        partial void OnProjectPersonRelationshipTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectPersonUpdate_Person_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_Person_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_Person_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_Person_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_Person_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectPersonUpdate_ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID", "ProjectPersonRelationshipType")]
        public ProjectPersonRelationshipType ProjectPersonRelationshipType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectPersonRelationshipType>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID", "ProjectPersonRelationshipType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectPersonRelationshipType>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID", "ProjectPersonRelationshipType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectPersonRelationshipType> ProjectPersonRelationshipTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectPersonRelationshipType>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID", "ProjectPersonRelationshipType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectPersonRelationshipType>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_ProjectPersonRelationshipType_ProjectPersonRelationshipTypeID", "ProjectPersonRelationshipType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectPersonUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch")]
        public ProjectUpdateBatch ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUpdateBatch> ProjectUpdateBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectPersonUpdate_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectStage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectStage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectStage object.
        /// </summary>
        /// <param name="projectStageID">Initial value of the ProjectStageID property.</param>
        /// <param name="projectStageName">Initial value of the ProjectStageName property.</param>
        /// <param name="projectStageDisplayName">Initial value of the ProjectStageDisplayName property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="projectStageColor">Initial value of the ProjectStageColor property.</param>
        public static ProjectStage CreateProjectStage(global::System.Int32 projectStageID, global::System.String projectStageName, global::System.String projectStageDisplayName, global::System.Int32 sortOrder, global::System.String projectStageColor)
        {
            ProjectStage projectStage = new ProjectStage();
            projectStage.ProjectStageID = projectStageID;
            projectStage.ProjectStageName = projectStageName;
            projectStage.ProjectStageDisplayName = projectStageDisplayName;
            projectStage.SortOrder = sortOrder;
            projectStage.ProjectStageColor = projectStageColor;
            return projectStage;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectStageID
        {
            get
            {
                return _ProjectStageID;
            }
            set
            {
                if (_ProjectStageID != value)
                {
                    OnProjectStageIDChanging(value);
                    ReportPropertyChanging("ProjectStageID");
                    _ProjectStageID = StructuralObject.SetValidValue(value, "ProjectStageID");
                    ReportPropertyChanged("ProjectStageID");
                    OnProjectStageIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectStageID;
        partial void OnProjectStageIDChanging(global::System.Int32 value);
        partial void OnProjectStageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectStageName
        {
            get
            {
                return _ProjectStageName;
            }
            set
            {
                OnProjectStageNameChanging(value);
                ReportPropertyChanging("ProjectStageName");
                _ProjectStageName = StructuralObject.SetValidValue(value, false, "ProjectStageName");
                ReportPropertyChanged("ProjectStageName");
                OnProjectStageNameChanged();
            }
        }
        private global::System.String _ProjectStageName;
        partial void OnProjectStageNameChanging(global::System.String value);
        partial void OnProjectStageNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectStageDisplayName
        {
            get
            {
                return _ProjectStageDisplayName;
            }
            set
            {
                OnProjectStageDisplayNameChanging(value);
                ReportPropertyChanging("ProjectStageDisplayName");
                _ProjectStageDisplayName = StructuralObject.SetValidValue(value, false, "ProjectStageDisplayName");
                ReportPropertyChanged("ProjectStageDisplayName");
                OnProjectStageDisplayNameChanged();
            }
        }
        private global::System.String _ProjectStageDisplayName;
        partial void OnProjectStageDisplayNameChanging(global::System.String value);
        partial void OnProjectStageDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value, "SortOrder");
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectStageColor
        {
            get
            {
                return _ProjectStageColor;
            }
            set
            {
                OnProjectStageColorChanging(value);
                ReportPropertyChanging("ProjectStageColor");
                _ProjectStageColor = StructuralObject.SetValidValue(value, false, "ProjectStageColor");
                ReportPropertyChanged("ProjectStageColor");
                OnProjectStageColorChanged();
            }
        }
        private global::System.String _ProjectStageColor;
        partial void OnProjectStageColorChanging(global::System.String value);
        partial void OnProjectStageColorChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Project_ProjectStage_ProjectStageID", "Project")]
        public EntityCollection<Project> Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("ProjectFirma.Web.Models.FK_Project_ProjectStage_ProjectStageID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("ProjectFirma.Web.Models.FK_Project_ProjectStage_ProjectStageID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdate_ProjectStage_ProjectStageID", "ProjectUpdate")]
        public EntityCollection<ProjectUpdate> ProjectUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUpdate>("ProjectFirma.Web.Models.FK_ProjectUpdate_ProjectStage_ProjectStageID", "ProjectUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUpdate>("ProjectFirma.Web.Models.FK_ProjectUpdate_ProjectStage_ProjectStageID", "ProjectUpdate", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectStewardshipAreaType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectStewardshipAreaType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectStewardshipAreaType object.
        /// </summary>
        /// <param name="projectStewardshipAreaTypeID">Initial value of the ProjectStewardshipAreaTypeID property.</param>
        /// <param name="projectStewardshipAreaTypeName">Initial value of the ProjectStewardshipAreaTypeName property.</param>
        /// <param name="projectStewardshipAreaTypeDisplayName">Initial value of the ProjectStewardshipAreaTypeDisplayName property.</param>
        public static ProjectStewardshipAreaType CreateProjectStewardshipAreaType(global::System.Int32 projectStewardshipAreaTypeID, global::System.String projectStewardshipAreaTypeName, global::System.String projectStewardshipAreaTypeDisplayName)
        {
            ProjectStewardshipAreaType projectStewardshipAreaType = new ProjectStewardshipAreaType();
            projectStewardshipAreaType.ProjectStewardshipAreaTypeID = projectStewardshipAreaTypeID;
            projectStewardshipAreaType.ProjectStewardshipAreaTypeName = projectStewardshipAreaTypeName;
            projectStewardshipAreaType.ProjectStewardshipAreaTypeDisplayName = projectStewardshipAreaTypeDisplayName;
            return projectStewardshipAreaType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectStewardshipAreaTypeID
        {
            get
            {
                return _ProjectStewardshipAreaTypeID;
            }
            set
            {
                if (_ProjectStewardshipAreaTypeID != value)
                {
                    OnProjectStewardshipAreaTypeIDChanging(value);
                    ReportPropertyChanging("ProjectStewardshipAreaTypeID");
                    _ProjectStewardshipAreaTypeID = StructuralObject.SetValidValue(value, "ProjectStewardshipAreaTypeID");
                    ReportPropertyChanged("ProjectStewardshipAreaTypeID");
                    OnProjectStewardshipAreaTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectStewardshipAreaTypeID;
        partial void OnProjectStewardshipAreaTypeIDChanging(global::System.Int32 value);
        partial void OnProjectStewardshipAreaTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectStewardshipAreaTypeName
        {
            get
            {
                return _ProjectStewardshipAreaTypeName;
            }
            set
            {
                OnProjectStewardshipAreaTypeNameChanging(value);
                ReportPropertyChanging("ProjectStewardshipAreaTypeName");
                _ProjectStewardshipAreaTypeName = StructuralObject.SetValidValue(value, false, "ProjectStewardshipAreaTypeName");
                ReportPropertyChanged("ProjectStewardshipAreaTypeName");
                OnProjectStewardshipAreaTypeNameChanged();
            }
        }
        private global::System.String _ProjectStewardshipAreaTypeName;
        partial void OnProjectStewardshipAreaTypeNameChanging(global::System.String value);
        partial void OnProjectStewardshipAreaTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectStewardshipAreaTypeDisplayName
        {
            get
            {
                return _ProjectStewardshipAreaTypeDisplayName;
            }
            set
            {
                OnProjectStewardshipAreaTypeDisplayNameChanging(value);
                ReportPropertyChanging("ProjectStewardshipAreaTypeDisplayName");
                _ProjectStewardshipAreaTypeDisplayName = StructuralObject.SetValidValue(value, false, "ProjectStewardshipAreaTypeDisplayName");
                ReportPropertyChanged("ProjectStewardshipAreaTypeDisplayName");
                OnProjectStewardshipAreaTypeDisplayNameChanged();
            }
        }
        private global::System.String _ProjectStewardshipAreaTypeDisplayName;
        partial void OnProjectStewardshipAreaTypeDisplayNameChanging(global::System.String value);
        partial void OnProjectStewardshipAreaTypeDisplayNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_ProjectStewardshipAreaType_ProjectStewardshipAreaTypeID", "TenantAttribute")]
        public EntityCollection<TenantAttribute> TenantAttribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TenantAttribute>("ProjectFirma.Web.Models.FK_TenantAttribute_ProjectStewardshipAreaType_ProjectStewardshipAreaTypeID", "TenantAttribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TenantAttribute>("ProjectFirma.Web.Models.FK_TenantAttribute_ProjectStewardshipAreaType_ProjectStewardshipAreaTypeID", "TenantAttribute", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectTag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectTag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectTag object.
        /// </summary>
        /// <param name="projectTagID">Initial value of the ProjectTagID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="tagID">Initial value of the TagID property.</param>
        public static ProjectTag CreateProjectTag(global::System.Int32 projectTagID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.Int32 tagID)
        {
            ProjectTag projectTag = new ProjectTag();
            projectTag.ProjectTagID = projectTagID;
            projectTag.TenantID = tenantID;
            projectTag.ProjectID = projectID;
            projectTag.TagID = tagID;
            return projectTag;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectTagID
        {
            get
            {
                return _ProjectTagID;
            }
            set
            {
                if (_ProjectTagID != value)
                {
                    OnProjectTagIDChanging(value);
                    ReportPropertyChanging("ProjectTagID");
                    _ProjectTagID = StructuralObject.SetValidValue(value, "ProjectTagID");
                    ReportPropertyChanged("ProjectTagID");
                    OnProjectTagIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectTagID;
        partial void OnProjectTagIDChanging(global::System.Int32 value);
        partial void OnProjectTagIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TagID
        {
            get
            {
                return _TagID;
            }
            set
            {
                OnTagIDChanging(value);
                ReportPropertyChanging("TagID");
                _TagID = StructuralObject.SetValidValue(value, "TagID");
                ReportPropertyChanged("TagID");
                OnTagIDChanged();
            }
        }
        private global::System.Int32 _TagID;
        partial void OnTagIDChanging(global::System.Int32 value);
        partial void OnTagIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectTag_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectTag_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectTag_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectTag_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectTag_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectTag_Tag_TagID", "Tag")]
        public Tag Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("ProjectFirma.Web.Models.FK_ProjectTag_Tag_TagID", "Tag").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("ProjectFirma.Web.Models.FK_ProjectTag_Tag_TagID", "Tag").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tag> TagReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tag>("ProjectFirma.Web.Models.FK_ProjectTag_Tag_TagID", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tag>("ProjectFirma.Web.Models.FK_ProjectTag_Tag_TagID", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectTag_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectTag_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectTag_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectTag_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectTag_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectUpdate")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectUpdate : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectUpdate object.
        /// </summary>
        /// <param name="projectUpdateID">Initial value of the ProjectUpdateID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectUpdateBatchID">Initial value of the ProjectUpdateBatchID property.</param>
        /// <param name="projectStageID">Initial value of the ProjectStageID property.</param>
        /// <param name="projectDescription">Initial value of the ProjectDescription property.</param>
        /// <param name="projectLocationSimpleTypeID">Initial value of the ProjectLocationSimpleTypeID property.</param>
        public static ProjectUpdate CreateProjectUpdate(global::System.Int32 projectUpdateID, global::System.Int32 tenantID, global::System.Int32 projectUpdateBatchID, global::System.Int32 projectStageID, global::System.String projectDescription, global::System.Int32 projectLocationSimpleTypeID)
        {
            ProjectUpdate projectUpdate = new ProjectUpdate();
            projectUpdate.ProjectUpdateID = projectUpdateID;
            projectUpdate.TenantID = tenantID;
            projectUpdate.ProjectUpdateBatchID = projectUpdateBatchID;
            projectUpdate.ProjectStageID = projectStageID;
            projectUpdate.ProjectDescription = projectDescription;
            projectUpdate.ProjectLocationSimpleTypeID = projectLocationSimpleTypeID;
            return projectUpdate;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateID
        {
            get
            {
                return _ProjectUpdateID;
            }
            set
            {
                if (_ProjectUpdateID != value)
                {
                    OnProjectUpdateIDChanging(value);
                    ReportPropertyChanging("ProjectUpdateID");
                    _ProjectUpdateID = StructuralObject.SetValidValue(value, "ProjectUpdateID");
                    ReportPropertyChanged("ProjectUpdateID");
                    OnProjectUpdateIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectUpdateID;
        partial void OnProjectUpdateIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateBatchID
        {
            get
            {
                return _ProjectUpdateBatchID;
            }
            set
            {
                OnProjectUpdateBatchIDChanging(value);
                ReportPropertyChanging("ProjectUpdateBatchID");
                _ProjectUpdateBatchID = StructuralObject.SetValidValue(value, "ProjectUpdateBatchID");
                ReportPropertyChanged("ProjectUpdateBatchID");
                OnProjectUpdateBatchIDChanged();
            }
        }
        private global::System.Int32 _ProjectUpdateBatchID;
        partial void OnProjectUpdateBatchIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectStageID
        {
            get
            {
                return _ProjectStageID;
            }
            set
            {
                OnProjectStageIDChanging(value);
                ReportPropertyChanging("ProjectStageID");
                _ProjectStageID = StructuralObject.SetValidValue(value, "ProjectStageID");
                ReportPropertyChanged("ProjectStageID");
                OnProjectStageIDChanged();
            }
        }
        private global::System.Int32 _ProjectStageID;
        partial void OnProjectStageIDChanging(global::System.Int32 value);
        partial void OnProjectStageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectDescription
        {
            get
            {
                return _ProjectDescription;
            }
            set
            {
                OnProjectDescriptionChanging(value);
                ReportPropertyChanging("ProjectDescription");
                _ProjectDescription = StructuralObject.SetValidValue(value, false, "ProjectDescription");
                ReportPropertyChanged("ProjectDescription");
                OnProjectDescriptionChanged();
            }
        }
        private global::System.String _ProjectDescription;
        partial void OnProjectDescriptionChanging(global::System.String value);
        partial void OnProjectDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ApprovalStartDate
        {
            get
            {
                return _ApprovalStartDate;
            }
            set
            {
                OnApprovalStartDateChanging(value);
                ReportPropertyChanging("ApprovalStartDate");
                _ApprovalStartDate = StructuralObject.SetValidValue(value, "ApprovalStartDate");
                ReportPropertyChanged("ApprovalStartDate");
                OnApprovalStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ApprovalStartDate;
        partial void OnApprovalStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnApprovalStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CompletionDate
        {
            get
            {
                return _CompletionDate;
            }
            set
            {
                OnCompletionDateChanging(value);
                ReportPropertyChanging("CompletionDate");
                _CompletionDate = StructuralObject.SetValidValue(value, "CompletionDate");
                ReportPropertyChanged("CompletionDate");
                OnCompletionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CompletionDate;
        partial void OnCompletionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCompletionDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EstimatedTotalCost
        {
            get
            {
                return _EstimatedTotalCost;
            }
            set
            {
                OnEstimatedTotalCostChanging(value);
                ReportPropertyChanging("EstimatedTotalCost");
                _EstimatedTotalCost = StructuralObject.SetValidValue(value, "EstimatedTotalCost");
                ReportPropertyChanged("EstimatedTotalCost");
                OnEstimatedTotalCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _EstimatedTotalCost;
        partial void OnEstimatedTotalCostChanging(Nullable<global::System.Decimal> value);
        partial void OnEstimatedTotalCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeometry ProjectLocationPoint
        {
            get
            {
                return _ProjectLocationPoint;
            }
            set
            {
                OnProjectLocationPointChanging(value);
                ReportPropertyChanging("ProjectLocationPoint");
                _ProjectLocationPoint = StructuralObject.SetValidValue(value, true, "ProjectLocationPoint");
                ReportPropertyChanged("ProjectLocationPoint");
                OnProjectLocationPointChanged();
            }
        }
        private global::System.Data.Spatial.DbGeometry _ProjectLocationPoint;
        partial void OnProjectLocationPointChanging(global::System.Data.Spatial.DbGeometry value);
        partial void OnProjectLocationPointChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectLocationNotes
        {
            get
            {
                return _ProjectLocationNotes;
            }
            set
            {
                OnProjectLocationNotesChanging(value);
                ReportPropertyChanging("ProjectLocationNotes");
                _ProjectLocationNotes = StructuralObject.SetValidValue(value, true, "ProjectLocationNotes");
                ReportPropertyChanged("ProjectLocationNotes");
                OnProjectLocationNotesChanged();
            }
        }
        private global::System.String _ProjectLocationNotes;
        partial void OnProjectLocationNotesChanging(global::System.String value);
        partial void OnProjectLocationNotesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PlannedDate
        {
            get
            {
                return _PlannedDate;
            }
            set
            {
                OnPlannedDateChanging(value);
                ReportPropertyChanging("PlannedDate");
                _PlannedDate = StructuralObject.SetValidValue(value, "PlannedDate");
                ReportPropertyChanged("PlannedDate");
                OnPlannedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PlannedDate;
        partial void OnPlannedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPlannedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectLocationSimpleTypeID
        {
            get
            {
                return _ProjectLocationSimpleTypeID;
            }
            set
            {
                OnProjectLocationSimpleTypeIDChanging(value);
                ReportPropertyChanging("ProjectLocationSimpleTypeID");
                _ProjectLocationSimpleTypeID = StructuralObject.SetValidValue(value, "ProjectLocationSimpleTypeID");
                ReportPropertyChanged("ProjectLocationSimpleTypeID");
                OnProjectLocationSimpleTypeIDChanged();
            }
        }
        private global::System.Int32 _ProjectLocationSimpleTypeID;
        partial void OnProjectLocationSimpleTypeIDChanging(global::System.Int32 value);
        partial void OnProjectLocationSimpleTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrimaryContactPersonID
        {
            get
            {
                return _PrimaryContactPersonID;
            }
            set
            {
                OnPrimaryContactPersonIDChanging(value);
                ReportPropertyChanging("PrimaryContactPersonID");
                _PrimaryContactPersonID = StructuralObject.SetValidValue(value, "PrimaryContactPersonID");
                ReportPropertyChanged("PrimaryContactPersonID");
                OnPrimaryContactPersonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PrimaryContactPersonID;
        partial void OnPrimaryContactPersonIDChanging(Nullable<global::System.Int32> value);
        partial void OnPrimaryContactPersonIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdate_Person_PrimaryContactPersonID_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectUpdate_Person_PrimaryContactPersonID_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectUpdate_Person_PrimaryContactPersonID_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectUpdate_Person_PrimaryContactPersonID_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectUpdate_Person_PrimaryContactPersonID_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdate_ProjectLocationSimpleType_ProjectLocationSimpleTypeID", "ProjectLocationSimpleType")]
        public ProjectLocationSimpleType ProjectLocationSimpleType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectLocationSimpleType>("ProjectFirma.Web.Models.FK_ProjectUpdate_ProjectLocationSimpleType_ProjectLocationSimpleTypeID", "ProjectLocationSimpleType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectLocationSimpleType>("ProjectFirma.Web.Models.FK_ProjectUpdate_ProjectLocationSimpleType_ProjectLocationSimpleTypeID", "ProjectLocationSimpleType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectLocationSimpleType> ProjectLocationSimpleTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectLocationSimpleType>("ProjectFirma.Web.Models.FK_ProjectUpdate_ProjectLocationSimpleType_ProjectLocationSimpleTypeID", "ProjectLocationSimpleType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectLocationSimpleType>("ProjectFirma.Web.Models.FK_ProjectUpdate_ProjectLocationSimpleType_ProjectLocationSimpleTypeID", "ProjectLocationSimpleType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdate_ProjectStage_ProjectStageID", "ProjectStage")]
        public ProjectStage ProjectStage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectStage>("ProjectFirma.Web.Models.FK_ProjectUpdate_ProjectStage_ProjectStageID", "ProjectStage").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectStage>("ProjectFirma.Web.Models.FK_ProjectUpdate_ProjectStage_ProjectStageID", "ProjectStage").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectStage> ProjectStageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectStage>("ProjectFirma.Web.Models.FK_ProjectUpdate_ProjectStage_ProjectStageID", "ProjectStage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectStage>("ProjectFirma.Web.Models.FK_ProjectUpdate_ProjectStage_ProjectStageID", "ProjectStage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch")]
        public ProjectUpdateBatch ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUpdateBatch> ProjectUpdateBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdate_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectUpdate_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectUpdate_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectUpdate_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectUpdate_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectUpdateBatch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectUpdateBatch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectUpdateBatch object.
        /// </summary>
        /// <param name="projectUpdateBatchID">Initial value of the ProjectUpdateBatchID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="lastUpdateDate">Initial value of the LastUpdateDate property.</param>
        /// <param name="lastUpdatePersonID">Initial value of the LastUpdatePersonID property.</param>
        /// <param name="projectUpdateStateID">Initial value of the ProjectUpdateStateID property.</param>
        /// <param name="isPhotosUpdated">Initial value of the IsPhotosUpdated property.</param>
        public static ProjectUpdateBatch CreateProjectUpdateBatch(global::System.Int32 projectUpdateBatchID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.DateTime lastUpdateDate, global::System.Int32 lastUpdatePersonID, global::System.Int32 projectUpdateStateID, global::System.Boolean isPhotosUpdated)
        {
            ProjectUpdateBatch projectUpdateBatch = new ProjectUpdateBatch();
            projectUpdateBatch.ProjectUpdateBatchID = projectUpdateBatchID;
            projectUpdateBatch.TenantID = tenantID;
            projectUpdateBatch.ProjectID = projectID;
            projectUpdateBatch.LastUpdateDate = lastUpdateDate;
            projectUpdateBatch.LastUpdatePersonID = lastUpdatePersonID;
            projectUpdateBatch.ProjectUpdateStateID = projectUpdateStateID;
            projectUpdateBatch.IsPhotosUpdated = isPhotosUpdated;
            return projectUpdateBatch;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateBatchID
        {
            get
            {
                return _ProjectUpdateBatchID;
            }
            set
            {
                if (_ProjectUpdateBatchID != value)
                {
                    OnProjectUpdateBatchIDChanging(value);
                    ReportPropertyChanging("ProjectUpdateBatchID");
                    _ProjectUpdateBatchID = StructuralObject.SetValidValue(value, "ProjectUpdateBatchID");
                    ReportPropertyChanged("ProjectUpdateBatchID");
                    OnProjectUpdateBatchIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectUpdateBatchID;
        partial void OnProjectUpdateBatchIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastUpdateDate
        {
            get
            {
                return _LastUpdateDate;
            }
            set
            {
                OnLastUpdateDateChanging(value);
                ReportPropertyChanging("LastUpdateDate");
                _LastUpdateDate = StructuralObject.SetValidValue(value, "LastUpdateDate");
                ReportPropertyChanged("LastUpdateDate");
                OnLastUpdateDateChanged();
            }
        }
        private global::System.DateTime _LastUpdateDate;
        partial void OnLastUpdateDateChanging(global::System.DateTime value);
        partial void OnLastUpdateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PerformanceMeasureActualYearsExemptionExplanation
        {
            get
            {
                return _PerformanceMeasureActualYearsExemptionExplanation;
            }
            set
            {
                OnPerformanceMeasureActualYearsExemptionExplanationChanging(value);
                ReportPropertyChanging("PerformanceMeasureActualYearsExemptionExplanation");
                _PerformanceMeasureActualYearsExemptionExplanation = StructuralObject.SetValidValue(value, true, "PerformanceMeasureActualYearsExemptionExplanation");
                ReportPropertyChanged("PerformanceMeasureActualYearsExemptionExplanation");
                OnPerformanceMeasureActualYearsExemptionExplanationChanged();
            }
        }
        private global::System.String _PerformanceMeasureActualYearsExemptionExplanation;
        partial void OnPerformanceMeasureActualYearsExemptionExplanationChanging(global::System.String value);
        partial void OnPerformanceMeasureActualYearsExemptionExplanationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LastUpdatePersonID
        {
            get
            {
                return _LastUpdatePersonID;
            }
            set
            {
                OnLastUpdatePersonIDChanging(value);
                ReportPropertyChanging("LastUpdatePersonID");
                _LastUpdatePersonID = StructuralObject.SetValidValue(value, "LastUpdatePersonID");
                ReportPropertyChanged("LastUpdatePersonID");
                OnLastUpdatePersonIDChanged();
            }
        }
        private global::System.Int32 _LastUpdatePersonID;
        partial void OnLastUpdatePersonIDChanging(global::System.Int32 value);
        partial void OnLastUpdatePersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BasicsComment
        {
            get
            {
                return _BasicsComment;
            }
            set
            {
                OnBasicsCommentChanging(value);
                ReportPropertyChanging("BasicsComment");
                _BasicsComment = StructuralObject.SetValidValue(value, true, "BasicsComment");
                ReportPropertyChanged("BasicsComment");
                OnBasicsCommentChanged();
            }
        }
        private global::System.String _BasicsComment;
        partial void OnBasicsCommentChanging(global::System.String value);
        partial void OnBasicsCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExpendituresComment
        {
            get
            {
                return _ExpendituresComment;
            }
            set
            {
                OnExpendituresCommentChanging(value);
                ReportPropertyChanging("ExpendituresComment");
                _ExpendituresComment = StructuralObject.SetValidValue(value, true, "ExpendituresComment");
                ReportPropertyChanged("ExpendituresComment");
                OnExpendituresCommentChanged();
            }
        }
        private global::System.String _ExpendituresComment;
        partial void OnExpendituresCommentChanging(global::System.String value);
        partial void OnExpendituresCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PerformanceMeasuresComment
        {
            get
            {
                return _PerformanceMeasuresComment;
            }
            set
            {
                OnPerformanceMeasuresCommentChanging(value);
                ReportPropertyChanging("PerformanceMeasuresComment");
                _PerformanceMeasuresComment = StructuralObject.SetValidValue(value, true, "PerformanceMeasuresComment");
                ReportPropertyChanged("PerformanceMeasuresComment");
                OnPerformanceMeasuresCommentChanged();
            }
        }
        private global::System.String _PerformanceMeasuresComment;
        partial void OnPerformanceMeasuresCommentChanging(global::System.String value);
        partial void OnPerformanceMeasuresCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocationSimpleComment
        {
            get
            {
                return _LocationSimpleComment;
            }
            set
            {
                OnLocationSimpleCommentChanging(value);
                ReportPropertyChanging("LocationSimpleComment");
                _LocationSimpleComment = StructuralObject.SetValidValue(value, true, "LocationSimpleComment");
                ReportPropertyChanged("LocationSimpleComment");
                OnLocationSimpleCommentChanged();
            }
        }
        private global::System.String _LocationSimpleComment;
        partial void OnLocationSimpleCommentChanging(global::System.String value);
        partial void OnLocationSimpleCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocationDetailedComment
        {
            get
            {
                return _LocationDetailedComment;
            }
            set
            {
                OnLocationDetailedCommentChanging(value);
                ReportPropertyChanging("LocationDetailedComment");
                _LocationDetailedComment = StructuralObject.SetValidValue(value, true, "LocationDetailedComment");
                ReportPropertyChanged("LocationDetailedComment");
                OnLocationDetailedCommentChanged();
            }
        }
        private global::System.String _LocationDetailedComment;
        partial void OnLocationDetailedCommentChanging(global::System.String value);
        partial void OnLocationDetailedCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BudgetsComment
        {
            get
            {
                return _BudgetsComment;
            }
            set
            {
                OnBudgetsCommentChanging(value);
                ReportPropertyChanging("BudgetsComment");
                _BudgetsComment = StructuralObject.SetValidValue(value, true, "BudgetsComment");
                ReportPropertyChanged("BudgetsComment");
                OnBudgetsCommentChanged();
            }
        }
        private global::System.String _BudgetsComment;
        partial void OnBudgetsCommentChanging(global::System.String value);
        partial void OnBudgetsCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateStateID
        {
            get
            {
                return _ProjectUpdateStateID;
            }
            set
            {
                OnProjectUpdateStateIDChanging(value);
                ReportPropertyChanging("ProjectUpdateStateID");
                _ProjectUpdateStateID = StructuralObject.SetValidValue(value, "ProjectUpdateStateID");
                ReportPropertyChanged("ProjectUpdateStateID");
                OnProjectUpdateStateIDChanged();
            }
        }
        private global::System.Int32 _ProjectUpdateStateID;
        partial void OnProjectUpdateStateIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPhotosUpdated
        {
            get
            {
                return _IsPhotosUpdated;
            }
            set
            {
                OnIsPhotosUpdatedChanging(value);
                ReportPropertyChanging("IsPhotosUpdated");
                _IsPhotosUpdated = StructuralObject.SetValidValue(value, "IsPhotosUpdated");
                ReportPropertyChanged("IsPhotosUpdated");
                OnIsPhotosUpdatedChanged();
            }
        }
        private global::System.Boolean _IsPhotosUpdated;
        partial void OnIsPhotosUpdatedChanging(global::System.Boolean value);
        partial void OnIsPhotosUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BasicsDiffLog
        {
            get
            {
                return _BasicsDiffLog;
            }
            set
            {
                OnBasicsDiffLogChanging(value);
                ReportPropertyChanging("BasicsDiffLog");
                _BasicsDiffLog = StructuralObject.SetValidValue(value, true, "BasicsDiffLog");
                ReportPropertyChanged("BasicsDiffLog");
                OnBasicsDiffLogChanged();
            }
        }
        private global::System.String _BasicsDiffLog;
        partial void OnBasicsDiffLogChanging(global::System.String value);
        partial void OnBasicsDiffLogChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PerformanceMeasureDiffLog
        {
            get
            {
                return _PerformanceMeasureDiffLog;
            }
            set
            {
                OnPerformanceMeasureDiffLogChanging(value);
                ReportPropertyChanging("PerformanceMeasureDiffLog");
                _PerformanceMeasureDiffLog = StructuralObject.SetValidValue(value, true, "PerformanceMeasureDiffLog");
                ReportPropertyChanged("PerformanceMeasureDiffLog");
                OnPerformanceMeasureDiffLogChanged();
            }
        }
        private global::System.String _PerformanceMeasureDiffLog;
        partial void OnPerformanceMeasureDiffLogChanging(global::System.String value);
        partial void OnPerformanceMeasureDiffLogChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExpendituresDiffLog
        {
            get
            {
                return _ExpendituresDiffLog;
            }
            set
            {
                OnExpendituresDiffLogChanging(value);
                ReportPropertyChanging("ExpendituresDiffLog");
                _ExpendituresDiffLog = StructuralObject.SetValidValue(value, true, "ExpendituresDiffLog");
                ReportPropertyChanged("ExpendituresDiffLog");
                OnExpendituresDiffLogChanged();
            }
        }
        private global::System.String _ExpendituresDiffLog;
        partial void OnExpendituresDiffLogChanging(global::System.String value);
        partial void OnExpendituresDiffLogChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BudgetsDiffLog
        {
            get
            {
                return _BudgetsDiffLog;
            }
            set
            {
                OnBudgetsDiffLogChanging(value);
                ReportPropertyChanging("BudgetsDiffLog");
                _BudgetsDiffLog = StructuralObject.SetValidValue(value, true, "BudgetsDiffLog");
                ReportPropertyChanged("BudgetsDiffLog");
                OnBudgetsDiffLogChanged();
            }
        }
        private global::System.String _BudgetsDiffLog;
        partial void OnBudgetsDiffLogChanging(global::System.String value);
        partial void OnBudgetsDiffLogChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExternalLinksDiffLog
        {
            get
            {
                return _ExternalLinksDiffLog;
            }
            set
            {
                OnExternalLinksDiffLogChanging(value);
                ReportPropertyChanging("ExternalLinksDiffLog");
                _ExternalLinksDiffLog = StructuralObject.SetValidValue(value, true, "ExternalLinksDiffLog");
                ReportPropertyChanged("ExternalLinksDiffLog");
                OnExternalLinksDiffLogChanged();
            }
        }
        private global::System.String _ExternalLinksDiffLog;
        partial void OnExternalLinksDiffLogChanging(global::System.String value);
        partial void OnExternalLinksDiffLogChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NotesDiffLog
        {
            get
            {
                return _NotesDiffLog;
            }
            set
            {
                OnNotesDiffLogChanging(value);
                ReportPropertyChanging("NotesDiffLog");
                _NotesDiffLog = StructuralObject.SetValidValue(value, true, "NotesDiffLog");
                ReportPropertyChanged("NotesDiffLog");
                OnNotesDiffLogChanged();
            }
        }
        private global::System.String _NotesDiffLog;
        partial void OnNotesDiffLogChanging(global::System.String value);
        partial void OnNotesDiffLogChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GeospatialAreaComment
        {
            get
            {
                return _GeospatialAreaComment;
            }
            set
            {
                OnGeospatialAreaCommentChanging(value);
                ReportPropertyChanging("GeospatialAreaComment");
                _GeospatialAreaComment = StructuralObject.SetValidValue(value, true, "GeospatialAreaComment");
                ReportPropertyChanged("GeospatialAreaComment");
                OnGeospatialAreaCommentChanged();
            }
        }
        private global::System.String _GeospatialAreaComment;
        partial void OnGeospatialAreaCommentChanging(global::System.String value);
        partial void OnGeospatialAreaCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExpectedFundingComment
        {
            get
            {
                return _ExpectedFundingComment;
            }
            set
            {
                OnExpectedFundingCommentChanging(value);
                ReportPropertyChanging("ExpectedFundingComment");
                _ExpectedFundingComment = StructuralObject.SetValidValue(value, true, "ExpectedFundingComment");
                ReportPropertyChanged("ExpectedFundingComment");
                OnExpectedFundingCommentChanged();
            }
        }
        private global::System.String _ExpectedFundingComment;
        partial void OnExpectedFundingCommentChanging(global::System.String value);
        partial void OnExpectedFundingCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExpectedFundingDiffLog
        {
            get
            {
                return _ExpectedFundingDiffLog;
            }
            set
            {
                OnExpectedFundingDiffLogChanging(value);
                ReportPropertyChanging("ExpectedFundingDiffLog");
                _ExpectedFundingDiffLog = StructuralObject.SetValidValue(value, true, "ExpectedFundingDiffLog");
                ReportPropertyChanged("ExpectedFundingDiffLog");
                OnExpectedFundingDiffLogChanged();
            }
        }
        private global::System.String _ExpectedFundingDiffLog;
        partial void OnExpectedFundingDiffLogChanging(global::System.String value);
        partial void OnExpectedFundingDiffLogChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrganizationsComment
        {
            get
            {
                return _OrganizationsComment;
            }
            set
            {
                OnOrganizationsCommentChanging(value);
                ReportPropertyChanging("OrganizationsComment");
                _OrganizationsComment = StructuralObject.SetValidValue(value, true, "OrganizationsComment");
                ReportPropertyChanged("OrganizationsComment");
                OnOrganizationsCommentChanged();
            }
        }
        private global::System.String _OrganizationsComment;
        partial void OnOrganizationsCommentChanging(global::System.String value);
        partial void OnOrganizationsCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrganizationsDiffLog
        {
            get
            {
                return _OrganizationsDiffLog;
            }
            set
            {
                OnOrganizationsDiffLogChanging(value);
                ReportPropertyChanging("OrganizationsDiffLog");
                _OrganizationsDiffLog = StructuralObject.SetValidValue(value, true, "OrganizationsDiffLog");
                ReportPropertyChanged("OrganizationsDiffLog");
                OnOrganizationsDiffLogChanged();
            }
        }
        private global::System.String _OrganizationsDiffLog;
        partial void OnOrganizationsDiffLogChanging(global::System.String value);
        partial void OnOrganizationsDiffLogChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NoExpendituresToReportExplanation
        {
            get
            {
                return _NoExpendituresToReportExplanation;
            }
            set
            {
                OnNoExpendituresToReportExplanationChanging(value);
                ReportPropertyChanging("NoExpendituresToReportExplanation");
                _NoExpendituresToReportExplanation = StructuralObject.SetValidValue(value, true, "NoExpendituresToReportExplanation");
                ReportPropertyChanged("NoExpendituresToReportExplanation");
                OnNoExpendituresToReportExplanationChanged();
            }
        }
        private global::System.String _NoExpendituresToReportExplanation;
        partial void OnNoExpendituresToReportExplanationChanging(global::System.String value);
        partial void OnNoExpendituresToReportExplanationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ContactsComment
        {
            get
            {
                return _ContactsComment;
            }
            set
            {
                OnContactsCommentChanging(value);
                ReportPropertyChanging("ContactsComment");
                _ContactsComment = StructuralObject.SetValidValue(value, true, "ContactsComment");
                ReportPropertyChanged("ContactsComment");
                OnContactsCommentChanged();
            }
        }
        private global::System.String _ContactsComment;
        partial void OnContactsCommentChanging(global::System.String value);
        partial void OnContactsCommentChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "PerformanceMeasureActualUpdate")]
        public EntityCollection<PerformanceMeasureActualUpdate> PerformanceMeasureActualUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureActualUpdate>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "PerformanceMeasureActualUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureActualUpdate>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "PerformanceMeasureActualUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateBatch_Person_LastUpdatePersonID_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_Person_LastUpdatePersonID_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_Person_LastUpdatePersonID_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_Person_LastUpdatePersonID_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_Person_LastUpdatePersonID_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateBatch_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectBudgetUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectBudgetUpdate")]
        public EntityCollection<ProjectBudgetUpdate> ProjectBudgetUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectBudgetUpdate>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectBudgetUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectBudgetUpdate>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectBudgetUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectCustomAttributeUpdate")]
        public EntityCollection<ProjectCustomAttributeUpdate> ProjectCustomAttributeUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectCustomAttributeUpdate>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectCustomAttributeUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectCustomAttributeUpdate>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectCustomAttributeUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectDocumentUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectDocumentUpdate")]
        public EntityCollection<ProjectDocumentUpdate> ProjectDocumentUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectDocumentUpdate>("ProjectFirma.Web.Models.FK_ProjectDocumentUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectDocumentUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectDocumentUpdate>("ProjectFirma.Web.Models.FK_ProjectDocumentUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectDocumentUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectExemptReportingYearUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectExemptReportingYearUpdate")]
        public EntityCollection<ProjectExemptReportingYearUpdate> ProjectExemptReportingYearUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectExemptReportingYearUpdate>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYearUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectExemptReportingYearUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectExemptReportingYearUpdate>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYearUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectExemptReportingYearUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectExternalLinkUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectExternalLinkUpdate")]
        public EntityCollection<ProjectExternalLinkUpdate> ProjectExternalLinkUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectExternalLinkUpdate>("ProjectFirma.Web.Models.FK_ProjectExternalLinkUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectExternalLinkUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectExternalLinkUpdate>("ProjectFirma.Web.Models.FK_ProjectExternalLinkUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectExternalLinkUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceExpenditureUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectFundingSourceExpenditureUpdate")]
        public EntityCollection<ProjectFundingSourceExpenditureUpdate> ProjectFundingSourceExpenditureUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFundingSourceExpenditureUpdate>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditureUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectFundingSourceExpenditureUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFundingSourceExpenditureUpdate>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditureUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectFundingSourceExpenditureUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceRequestUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectFundingSourceRequestUpdate")]
        public EntityCollection<ProjectFundingSourceRequestUpdate> ProjectFundingSourceRequestUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFundingSourceRequestUpdate>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequestUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectFundingSourceRequestUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFundingSourceRequestUpdate>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequestUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectFundingSourceRequestUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaTypeNoteUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectGeospatialAreaTypeNoteUpdate")]
        public EntityCollection<ProjectGeospatialAreaTypeNoteUpdate> ProjectGeospatialAreaTypeNoteUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectGeospatialAreaTypeNoteUpdate>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNoteUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectGeospatialAreaTypeNoteUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectGeospatialAreaTypeNoteUpdate>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNoteUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectGeospatialAreaTypeNoteUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectGeospatialAreaUpdate")]
        public EntityCollection<ProjectGeospatialAreaUpdate> ProjectGeospatialAreaUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectGeospatialAreaUpdate>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectGeospatialAreaUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectGeospatialAreaUpdate>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectGeospatialAreaUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectImageUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectImageUpdate")]
        public EntityCollection<ProjectImageUpdate> ProjectImageUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectImageUpdate>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectImageUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectImageUpdate>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectImageUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationStagingUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectLocationStagingUpdate")]
        public EntityCollection<ProjectLocationStagingUpdate> ProjectLocationStagingUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectLocationStagingUpdate>("ProjectFirma.Web.Models.FK_ProjectLocationStagingUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectLocationStagingUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectLocationStagingUpdate>("ProjectFirma.Web.Models.FK_ProjectLocationStagingUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectLocationStagingUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectLocationUpdate")]
        public EntityCollection<ProjectLocationUpdate> ProjectLocationUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectLocationUpdate>("ProjectFirma.Web.Models.FK_ProjectLocationUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectLocationUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectLocationUpdate>("ProjectFirma.Web.Models.FK_ProjectLocationUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectLocationUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectNoteUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectNoteUpdate")]
        public EntityCollection<ProjectNoteUpdate> ProjectNoteUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectNoteUpdate>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectNoteUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectNoteUpdate>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectNoteUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganizationUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectOrganizationUpdate")]
        public EntityCollection<ProjectOrganizationUpdate> ProjectOrganizationUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectOrganizationUpdate>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectOrganizationUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectOrganizationUpdate>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectOrganizationUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectPersonUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectPersonUpdate")]
        public EntityCollection<ProjectPersonUpdate> ProjectPersonUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectPersonUpdate>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectPersonUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectPersonUpdate>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectPersonUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdate")]
        public EntityCollection<ProjectUpdate> ProjectUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUpdate>("ProjectFirma.Web.Models.FK_ProjectUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUpdate>("ProjectFirma.Web.Models.FK_ProjectUpdate_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateBatch_ProjectUpdateState_ProjectUpdateStateID", "ProjectUpdateState")]
        public ProjectUpdateState ProjectUpdateState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateState>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_ProjectUpdateState_ProjectUpdateStateID", "ProjectUpdateState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateState>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_ProjectUpdateState_ProjectUpdateStateID", "ProjectUpdateState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUpdateState> ProjectUpdateStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateState>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_ProjectUpdateState_ProjectUpdateStateID", "ProjectUpdateState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUpdateState>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_ProjectUpdateState_ProjectUpdateStateID", "ProjectUpdateState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateBatch_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateHistory_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateHistory")]
        public EntityCollection<ProjectUpdateHistory> ProjectUpdateHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUpdateHistory>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUpdateHistory>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectUpdateConfiguration")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectUpdateConfiguration : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectUpdateConfiguration object.
        /// </summary>
        /// <param name="projectUpdateConfigurationID">Initial value of the ProjectUpdateConfigurationID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="enableProjectUpdateReminders">Initial value of the EnableProjectUpdateReminders property.</param>
        /// <param name="sendPeriodicReminders">Initial value of the SendPeriodicReminders property.</param>
        /// <param name="sendCloseOutNotification">Initial value of the SendCloseOutNotification property.</param>
        public static ProjectUpdateConfiguration CreateProjectUpdateConfiguration(global::System.Int32 projectUpdateConfigurationID, global::System.Int32 tenantID, global::System.Boolean enableProjectUpdateReminders, global::System.Boolean sendPeriodicReminders, global::System.Boolean sendCloseOutNotification)
        {
            ProjectUpdateConfiguration projectUpdateConfiguration = new ProjectUpdateConfiguration();
            projectUpdateConfiguration.ProjectUpdateConfigurationID = projectUpdateConfigurationID;
            projectUpdateConfiguration.TenantID = tenantID;
            projectUpdateConfiguration.EnableProjectUpdateReminders = enableProjectUpdateReminders;
            projectUpdateConfiguration.SendPeriodicReminders = sendPeriodicReminders;
            projectUpdateConfiguration.SendCloseOutNotification = sendCloseOutNotification;
            return projectUpdateConfiguration;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateConfigurationID
        {
            get
            {
                return _ProjectUpdateConfigurationID;
            }
            set
            {
                if (_ProjectUpdateConfigurationID != value)
                {
                    OnProjectUpdateConfigurationIDChanging(value);
                    ReportPropertyChanging("ProjectUpdateConfigurationID");
                    _ProjectUpdateConfigurationID = StructuralObject.SetValidValue(value, "ProjectUpdateConfigurationID");
                    ReportPropertyChanged("ProjectUpdateConfigurationID");
                    OnProjectUpdateConfigurationIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectUpdateConfigurationID;
        partial void OnProjectUpdateConfigurationIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateConfigurationIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ProjectUpdateKickOffDate
        {
            get
            {
                return _ProjectUpdateKickOffDate;
            }
            set
            {
                OnProjectUpdateKickOffDateChanging(value);
                ReportPropertyChanging("ProjectUpdateKickOffDate");
                _ProjectUpdateKickOffDate = StructuralObject.SetValidValue(value, "ProjectUpdateKickOffDate");
                ReportPropertyChanged("ProjectUpdateKickOffDate");
                OnProjectUpdateKickOffDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ProjectUpdateKickOffDate;
        partial void OnProjectUpdateKickOffDateChanging(Nullable<global::System.DateTime> value);
        partial void OnProjectUpdateKickOffDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ProjectUpdateCloseOutDate
        {
            get
            {
                return _ProjectUpdateCloseOutDate;
            }
            set
            {
                OnProjectUpdateCloseOutDateChanging(value);
                ReportPropertyChanging("ProjectUpdateCloseOutDate");
                _ProjectUpdateCloseOutDate = StructuralObject.SetValidValue(value, "ProjectUpdateCloseOutDate");
                ReportPropertyChanged("ProjectUpdateCloseOutDate");
                OnProjectUpdateCloseOutDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _ProjectUpdateCloseOutDate;
        partial void OnProjectUpdateCloseOutDateChanging(Nullable<global::System.DateTime> value);
        partial void OnProjectUpdateCloseOutDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectUpdateReminderInterval
        {
            get
            {
                return _ProjectUpdateReminderInterval;
            }
            set
            {
                OnProjectUpdateReminderIntervalChanging(value);
                ReportPropertyChanging("ProjectUpdateReminderInterval");
                _ProjectUpdateReminderInterval = StructuralObject.SetValidValue(value, "ProjectUpdateReminderInterval");
                ReportPropertyChanged("ProjectUpdateReminderInterval");
                OnProjectUpdateReminderIntervalChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectUpdateReminderInterval;
        partial void OnProjectUpdateReminderIntervalChanging(Nullable<global::System.Int32> value);
        partial void OnProjectUpdateReminderIntervalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean EnableProjectUpdateReminders
        {
            get
            {
                return _EnableProjectUpdateReminders;
            }
            set
            {
                OnEnableProjectUpdateRemindersChanging(value);
                ReportPropertyChanging("EnableProjectUpdateReminders");
                _EnableProjectUpdateReminders = StructuralObject.SetValidValue(value, "EnableProjectUpdateReminders");
                ReportPropertyChanged("EnableProjectUpdateReminders");
                OnEnableProjectUpdateRemindersChanged();
            }
        }
        private global::System.Boolean _EnableProjectUpdateReminders;
        partial void OnEnableProjectUpdateRemindersChanging(global::System.Boolean value);
        partial void OnEnableProjectUpdateRemindersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SendPeriodicReminders
        {
            get
            {
                return _SendPeriodicReminders;
            }
            set
            {
                OnSendPeriodicRemindersChanging(value);
                ReportPropertyChanging("SendPeriodicReminders");
                _SendPeriodicReminders = StructuralObject.SetValidValue(value, "SendPeriodicReminders");
                ReportPropertyChanged("SendPeriodicReminders");
                OnSendPeriodicRemindersChanged();
            }
        }
        private global::System.Boolean _SendPeriodicReminders;
        partial void OnSendPeriodicRemindersChanging(global::System.Boolean value);
        partial void OnSendPeriodicRemindersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean SendCloseOutNotification
        {
            get
            {
                return _SendCloseOutNotification;
            }
            set
            {
                OnSendCloseOutNotificationChanging(value);
                ReportPropertyChanging("SendCloseOutNotification");
                _SendCloseOutNotification = StructuralObject.SetValidValue(value, "SendCloseOutNotification");
                ReportPropertyChanged("SendCloseOutNotification");
                OnSendCloseOutNotificationChanged();
            }
        }
        private global::System.Boolean _SendCloseOutNotification;
        partial void OnSendCloseOutNotificationChanging(global::System.Boolean value);
        partial void OnSendCloseOutNotificationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectUpdateKickOffIntroContent
        {
            get
            {
                return _ProjectUpdateKickOffIntroContent;
            }
            set
            {
                OnProjectUpdateKickOffIntroContentChanging(value);
                ReportPropertyChanging("ProjectUpdateKickOffIntroContent");
                _ProjectUpdateKickOffIntroContent = StructuralObject.SetValidValue(value, true, "ProjectUpdateKickOffIntroContent");
                ReportPropertyChanged("ProjectUpdateKickOffIntroContent");
                OnProjectUpdateKickOffIntroContentChanged();
            }
        }
        private global::System.String _ProjectUpdateKickOffIntroContent;
        partial void OnProjectUpdateKickOffIntroContentChanging(global::System.String value);
        partial void OnProjectUpdateKickOffIntroContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectUpdateReminderIntroContent
        {
            get
            {
                return _ProjectUpdateReminderIntroContent;
            }
            set
            {
                OnProjectUpdateReminderIntroContentChanging(value);
                ReportPropertyChanging("ProjectUpdateReminderIntroContent");
                _ProjectUpdateReminderIntroContent = StructuralObject.SetValidValue(value, true, "ProjectUpdateReminderIntroContent");
                ReportPropertyChanged("ProjectUpdateReminderIntroContent");
                OnProjectUpdateReminderIntroContentChanged();
            }
        }
        private global::System.String _ProjectUpdateReminderIntroContent;
        partial void OnProjectUpdateReminderIntroContentChanging(global::System.String value);
        partial void OnProjectUpdateReminderIntroContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProjectUpdateCloseOutIntroContent
        {
            get
            {
                return _ProjectUpdateCloseOutIntroContent;
            }
            set
            {
                OnProjectUpdateCloseOutIntroContentChanging(value);
                ReportPropertyChanging("ProjectUpdateCloseOutIntroContent");
                _ProjectUpdateCloseOutIntroContent = StructuralObject.SetValidValue(value, true, "ProjectUpdateCloseOutIntroContent");
                ReportPropertyChanged("ProjectUpdateCloseOutIntroContent");
                OnProjectUpdateCloseOutIntroContentChanged();
            }
        }
        private global::System.String _ProjectUpdateCloseOutIntroContent;
        partial void OnProjectUpdateCloseOutIntroContentChanging(global::System.String value);
        partial void OnProjectUpdateCloseOutIntroContentChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateConfiguration_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectUpdateConfiguration_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectUpdateConfiguration_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectUpdateConfiguration_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectUpdateConfiguration_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectUpdateHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectUpdateHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectUpdateHistory object.
        /// </summary>
        /// <param name="projectUpdateHistoryID">Initial value of the ProjectUpdateHistoryID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectUpdateBatchID">Initial value of the ProjectUpdateBatchID property.</param>
        /// <param name="projectUpdateStateID">Initial value of the ProjectUpdateStateID property.</param>
        /// <param name="updatePersonID">Initial value of the UpdatePersonID property.</param>
        /// <param name="transitionDate">Initial value of the TransitionDate property.</param>
        public static ProjectUpdateHistory CreateProjectUpdateHistory(global::System.Int32 projectUpdateHistoryID, global::System.Int32 tenantID, global::System.Int32 projectUpdateBatchID, global::System.Int32 projectUpdateStateID, global::System.Int32 updatePersonID, global::System.DateTime transitionDate)
        {
            ProjectUpdateHistory projectUpdateHistory = new ProjectUpdateHistory();
            projectUpdateHistory.ProjectUpdateHistoryID = projectUpdateHistoryID;
            projectUpdateHistory.TenantID = tenantID;
            projectUpdateHistory.ProjectUpdateBatchID = projectUpdateBatchID;
            projectUpdateHistory.ProjectUpdateStateID = projectUpdateStateID;
            projectUpdateHistory.UpdatePersonID = updatePersonID;
            projectUpdateHistory.TransitionDate = transitionDate;
            return projectUpdateHistory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateHistoryID
        {
            get
            {
                return _ProjectUpdateHistoryID;
            }
            set
            {
                if (_ProjectUpdateHistoryID != value)
                {
                    OnProjectUpdateHistoryIDChanging(value);
                    ReportPropertyChanging("ProjectUpdateHistoryID");
                    _ProjectUpdateHistoryID = StructuralObject.SetValidValue(value, "ProjectUpdateHistoryID");
                    ReportPropertyChanged("ProjectUpdateHistoryID");
                    OnProjectUpdateHistoryIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectUpdateHistoryID;
        partial void OnProjectUpdateHistoryIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateHistoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateBatchID
        {
            get
            {
                return _ProjectUpdateBatchID;
            }
            set
            {
                OnProjectUpdateBatchIDChanging(value);
                ReportPropertyChanging("ProjectUpdateBatchID");
                _ProjectUpdateBatchID = StructuralObject.SetValidValue(value, "ProjectUpdateBatchID");
                ReportPropertyChanged("ProjectUpdateBatchID");
                OnProjectUpdateBatchIDChanged();
            }
        }
        private global::System.Int32 _ProjectUpdateBatchID;
        partial void OnProjectUpdateBatchIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateStateID
        {
            get
            {
                return _ProjectUpdateStateID;
            }
            set
            {
                OnProjectUpdateStateIDChanging(value);
                ReportPropertyChanging("ProjectUpdateStateID");
                _ProjectUpdateStateID = StructuralObject.SetValidValue(value, "ProjectUpdateStateID");
                ReportPropertyChanged("ProjectUpdateStateID");
                OnProjectUpdateStateIDChanged();
            }
        }
        private global::System.Int32 _ProjectUpdateStateID;
        partial void OnProjectUpdateStateIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UpdatePersonID
        {
            get
            {
                return _UpdatePersonID;
            }
            set
            {
                OnUpdatePersonIDChanging(value);
                ReportPropertyChanging("UpdatePersonID");
                _UpdatePersonID = StructuralObject.SetValidValue(value, "UpdatePersonID");
                ReportPropertyChanged("UpdatePersonID");
                OnUpdatePersonIDChanged();
            }
        }
        private global::System.Int32 _UpdatePersonID;
        partial void OnUpdatePersonIDChanging(global::System.Int32 value);
        partial void OnUpdatePersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TransitionDate
        {
            get
            {
                return _TransitionDate;
            }
            set
            {
                OnTransitionDateChanging(value);
                ReportPropertyChanging("TransitionDate");
                _TransitionDate = StructuralObject.SetValidValue(value, "TransitionDate");
                ReportPropertyChanged("TransitionDate");
                OnTransitionDateChanged();
            }
        }
        private global::System.DateTime _TransitionDate;
        partial void OnTransitionDateChanging(global::System.DateTime value);
        partial void OnTransitionDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateHistory_Person_UpdatePersonID_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_Person_UpdatePersonID_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_Person_UpdatePersonID_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_Person_UpdatePersonID_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_Person_UpdatePersonID_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateHistory_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch")]
        public ProjectUpdateBatch ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUpdateBatch> ProjectUpdateBatchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_ProjectUpdateBatch_ProjectUpdateBatchID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateHistory_ProjectUpdateState_ProjectUpdateStateID", "ProjectUpdateState")]
        public ProjectUpdateState ProjectUpdateState
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateState>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_ProjectUpdateState_ProjectUpdateStateID", "ProjectUpdateState").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateState>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_ProjectUpdateState_ProjectUpdateStateID", "ProjectUpdateState").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectUpdateState> ProjectUpdateStateReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectUpdateState>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_ProjectUpdateState_ProjectUpdateStateID", "ProjectUpdateState");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectUpdateState>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_ProjectUpdateState_ProjectUpdateStateID", "ProjectUpdateState", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateHistory_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectUpdateSection")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectUpdateSection : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectUpdateSection object.
        /// </summary>
        /// <param name="projectUpdateSectionID">Initial value of the ProjectUpdateSectionID property.</param>
        /// <param name="projectUpdateSectionName">Initial value of the ProjectUpdateSectionName property.</param>
        /// <param name="projectUpdateSectionDisplayName">Initial value of the ProjectUpdateSectionDisplayName property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        /// <param name="hasCompletionStatus">Initial value of the HasCompletionStatus property.</param>
        /// <param name="projectWorkflowSectionGroupingID">Initial value of the ProjectWorkflowSectionGroupingID property.</param>
        public static ProjectUpdateSection CreateProjectUpdateSection(global::System.Int32 projectUpdateSectionID, global::System.String projectUpdateSectionName, global::System.String projectUpdateSectionDisplayName, global::System.Int32 sortOrder, global::System.Boolean hasCompletionStatus, global::System.Int32 projectWorkflowSectionGroupingID)
        {
            ProjectUpdateSection projectUpdateSection = new ProjectUpdateSection();
            projectUpdateSection.ProjectUpdateSectionID = projectUpdateSectionID;
            projectUpdateSection.ProjectUpdateSectionName = projectUpdateSectionName;
            projectUpdateSection.ProjectUpdateSectionDisplayName = projectUpdateSectionDisplayName;
            projectUpdateSection.SortOrder = sortOrder;
            projectUpdateSection.HasCompletionStatus = hasCompletionStatus;
            projectUpdateSection.ProjectWorkflowSectionGroupingID = projectWorkflowSectionGroupingID;
            return projectUpdateSection;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateSectionID
        {
            get
            {
                return _ProjectUpdateSectionID;
            }
            set
            {
                if (_ProjectUpdateSectionID != value)
                {
                    OnProjectUpdateSectionIDChanging(value);
                    ReportPropertyChanging("ProjectUpdateSectionID");
                    _ProjectUpdateSectionID = StructuralObject.SetValidValue(value, "ProjectUpdateSectionID");
                    ReportPropertyChanged("ProjectUpdateSectionID");
                    OnProjectUpdateSectionIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectUpdateSectionID;
        partial void OnProjectUpdateSectionIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateSectionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectUpdateSectionName
        {
            get
            {
                return _ProjectUpdateSectionName;
            }
            set
            {
                OnProjectUpdateSectionNameChanging(value);
                ReportPropertyChanging("ProjectUpdateSectionName");
                _ProjectUpdateSectionName = StructuralObject.SetValidValue(value, false, "ProjectUpdateSectionName");
                ReportPropertyChanged("ProjectUpdateSectionName");
                OnProjectUpdateSectionNameChanged();
            }
        }
        private global::System.String _ProjectUpdateSectionName;
        partial void OnProjectUpdateSectionNameChanging(global::System.String value);
        partial void OnProjectUpdateSectionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectUpdateSectionDisplayName
        {
            get
            {
                return _ProjectUpdateSectionDisplayName;
            }
            set
            {
                OnProjectUpdateSectionDisplayNameChanging(value);
                ReportPropertyChanging("ProjectUpdateSectionDisplayName");
                _ProjectUpdateSectionDisplayName = StructuralObject.SetValidValue(value, false, "ProjectUpdateSectionDisplayName");
                ReportPropertyChanged("ProjectUpdateSectionDisplayName");
                OnProjectUpdateSectionDisplayNameChanged();
            }
        }
        private global::System.String _ProjectUpdateSectionDisplayName;
        partial void OnProjectUpdateSectionDisplayNameChanging(global::System.String value);
        partial void OnProjectUpdateSectionDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value, "SortOrder");
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasCompletionStatus
        {
            get
            {
                return _HasCompletionStatus;
            }
            set
            {
                OnHasCompletionStatusChanging(value);
                ReportPropertyChanging("HasCompletionStatus");
                _HasCompletionStatus = StructuralObject.SetValidValue(value, "HasCompletionStatus");
                ReportPropertyChanged("HasCompletionStatus");
                OnHasCompletionStatusChanged();
            }
        }
        private global::System.Boolean _HasCompletionStatus;
        partial void OnHasCompletionStatusChanging(global::System.Boolean value);
        partial void OnHasCompletionStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectWorkflowSectionGroupingID
        {
            get
            {
                return _ProjectWorkflowSectionGroupingID;
            }
            set
            {
                OnProjectWorkflowSectionGroupingIDChanging(value);
                ReportPropertyChanging("ProjectWorkflowSectionGroupingID");
                _ProjectWorkflowSectionGroupingID = StructuralObject.SetValidValue(value, "ProjectWorkflowSectionGroupingID");
                ReportPropertyChanged("ProjectWorkflowSectionGroupingID");
                OnProjectWorkflowSectionGroupingIDChanged();
            }
        }
        private global::System.Int32 _ProjectWorkflowSectionGroupingID;
        partial void OnProjectWorkflowSectionGroupingIDChanging(global::System.Int32 value);
        partial void OnProjectWorkflowSectionGroupingIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateSection_ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID", "ProjectWorkflowSectionGrouping")]
        public ProjectWorkflowSectionGrouping ProjectWorkflowSectionGrouping
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectWorkflowSectionGrouping>("ProjectFirma.Web.Models.FK_ProjectUpdateSection_ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID", "ProjectWorkflowSectionGrouping").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectWorkflowSectionGrouping>("ProjectFirma.Web.Models.FK_ProjectUpdateSection_ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID", "ProjectWorkflowSectionGrouping").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectWorkflowSectionGrouping> ProjectWorkflowSectionGroupingReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectWorkflowSectionGrouping>("ProjectFirma.Web.Models.FK_ProjectUpdateSection_ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID", "ProjectWorkflowSectionGrouping");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectWorkflowSectionGrouping>("ProjectFirma.Web.Models.FK_ProjectUpdateSection_ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID", "ProjectWorkflowSectionGrouping", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectUpdateState")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectUpdateState : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectUpdateState object.
        /// </summary>
        /// <param name="projectUpdateStateID">Initial value of the ProjectUpdateStateID property.</param>
        /// <param name="projectUpdateStateName">Initial value of the ProjectUpdateStateName property.</param>
        /// <param name="projectUpdateStateDisplayName">Initial value of the ProjectUpdateStateDisplayName property.</param>
        public static ProjectUpdateState CreateProjectUpdateState(global::System.Int32 projectUpdateStateID, global::System.String projectUpdateStateName, global::System.String projectUpdateStateDisplayName)
        {
            ProjectUpdateState projectUpdateState = new ProjectUpdateState();
            projectUpdateState.ProjectUpdateStateID = projectUpdateStateID;
            projectUpdateState.ProjectUpdateStateName = projectUpdateStateName;
            projectUpdateState.ProjectUpdateStateDisplayName = projectUpdateStateDisplayName;
            return projectUpdateState;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectUpdateStateID
        {
            get
            {
                return _ProjectUpdateStateID;
            }
            set
            {
                if (_ProjectUpdateStateID != value)
                {
                    OnProjectUpdateStateIDChanging(value);
                    ReportPropertyChanging("ProjectUpdateStateID");
                    _ProjectUpdateStateID = StructuralObject.SetValidValue(value, "ProjectUpdateStateID");
                    ReportPropertyChanged("ProjectUpdateStateID");
                    OnProjectUpdateStateIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectUpdateStateID;
        partial void OnProjectUpdateStateIDChanging(global::System.Int32 value);
        partial void OnProjectUpdateStateIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectUpdateStateName
        {
            get
            {
                return _ProjectUpdateStateName;
            }
            set
            {
                OnProjectUpdateStateNameChanging(value);
                ReportPropertyChanging("ProjectUpdateStateName");
                _ProjectUpdateStateName = StructuralObject.SetValidValue(value, false, "ProjectUpdateStateName");
                ReportPropertyChanged("ProjectUpdateStateName");
                OnProjectUpdateStateNameChanged();
            }
        }
        private global::System.String _ProjectUpdateStateName;
        partial void OnProjectUpdateStateNameChanging(global::System.String value);
        partial void OnProjectUpdateStateNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectUpdateStateDisplayName
        {
            get
            {
                return _ProjectUpdateStateDisplayName;
            }
            set
            {
                OnProjectUpdateStateDisplayNameChanging(value);
                ReportPropertyChanging("ProjectUpdateStateDisplayName");
                _ProjectUpdateStateDisplayName = StructuralObject.SetValidValue(value, false, "ProjectUpdateStateDisplayName");
                ReportPropertyChanged("ProjectUpdateStateDisplayName");
                OnProjectUpdateStateDisplayNameChanged();
            }
        }
        private global::System.String _ProjectUpdateStateDisplayName;
        partial void OnProjectUpdateStateDisplayNameChanging(global::System.String value);
        partial void OnProjectUpdateStateDisplayNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateBatch_ProjectUpdateState_ProjectUpdateStateID", "ProjectUpdateBatch")]
        public EntityCollection<ProjectUpdateBatch> ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_ProjectUpdateState_ProjectUpdateStateID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_ProjectUpdateState_ProjectUpdateStateID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateHistory_ProjectUpdateState_ProjectUpdateStateID", "ProjectUpdateHistory")]
        public EntityCollection<ProjectUpdateHistory> ProjectUpdateHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUpdateHistory>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_ProjectUpdateState_ProjectUpdateStateID", "ProjectUpdateHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUpdateHistory>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_ProjectUpdateState_ProjectUpdateStateID", "ProjectUpdateHistory", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="ProjectWorkflowSectionGrouping")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectWorkflowSectionGrouping : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectWorkflowSectionGrouping object.
        /// </summary>
        /// <param name="projectWorkflowSectionGroupingID">Initial value of the ProjectWorkflowSectionGroupingID property.</param>
        /// <param name="projectWorkflowSectionGroupingName">Initial value of the ProjectWorkflowSectionGroupingName property.</param>
        /// <param name="projectWorkflowSectionGroupingDisplayName">Initial value of the ProjectWorkflowSectionGroupingDisplayName property.</param>
        /// <param name="sortOrder">Initial value of the SortOrder property.</param>
        public static ProjectWorkflowSectionGrouping CreateProjectWorkflowSectionGrouping(global::System.Int32 projectWorkflowSectionGroupingID, global::System.String projectWorkflowSectionGroupingName, global::System.String projectWorkflowSectionGroupingDisplayName, global::System.Int32 sortOrder)
        {
            ProjectWorkflowSectionGrouping projectWorkflowSectionGrouping = new ProjectWorkflowSectionGrouping();
            projectWorkflowSectionGrouping.ProjectWorkflowSectionGroupingID = projectWorkflowSectionGroupingID;
            projectWorkflowSectionGrouping.ProjectWorkflowSectionGroupingName = projectWorkflowSectionGroupingName;
            projectWorkflowSectionGrouping.ProjectWorkflowSectionGroupingDisplayName = projectWorkflowSectionGroupingDisplayName;
            projectWorkflowSectionGrouping.SortOrder = sortOrder;
            return projectWorkflowSectionGrouping;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectWorkflowSectionGroupingID
        {
            get
            {
                return _ProjectWorkflowSectionGroupingID;
            }
            set
            {
                if (_ProjectWorkflowSectionGroupingID != value)
                {
                    OnProjectWorkflowSectionGroupingIDChanging(value);
                    ReportPropertyChanging("ProjectWorkflowSectionGroupingID");
                    _ProjectWorkflowSectionGroupingID = StructuralObject.SetValidValue(value, "ProjectWorkflowSectionGroupingID");
                    ReportPropertyChanged("ProjectWorkflowSectionGroupingID");
                    OnProjectWorkflowSectionGroupingIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectWorkflowSectionGroupingID;
        partial void OnProjectWorkflowSectionGroupingIDChanging(global::System.Int32 value);
        partial void OnProjectWorkflowSectionGroupingIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectWorkflowSectionGroupingName
        {
            get
            {
                return _ProjectWorkflowSectionGroupingName;
            }
            set
            {
                OnProjectWorkflowSectionGroupingNameChanging(value);
                ReportPropertyChanging("ProjectWorkflowSectionGroupingName");
                _ProjectWorkflowSectionGroupingName = StructuralObject.SetValidValue(value, false, "ProjectWorkflowSectionGroupingName");
                ReportPropertyChanged("ProjectWorkflowSectionGroupingName");
                OnProjectWorkflowSectionGroupingNameChanged();
            }
        }
        private global::System.String _ProjectWorkflowSectionGroupingName;
        partial void OnProjectWorkflowSectionGroupingNameChanging(global::System.String value);
        partial void OnProjectWorkflowSectionGroupingNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProjectWorkflowSectionGroupingDisplayName
        {
            get
            {
                return _ProjectWorkflowSectionGroupingDisplayName;
            }
            set
            {
                OnProjectWorkflowSectionGroupingDisplayNameChanging(value);
                ReportPropertyChanging("ProjectWorkflowSectionGroupingDisplayName");
                _ProjectWorkflowSectionGroupingDisplayName = StructuralObject.SetValidValue(value, false, "ProjectWorkflowSectionGroupingDisplayName");
                ReportPropertyChanged("ProjectWorkflowSectionGroupingDisplayName");
                OnProjectWorkflowSectionGroupingDisplayNameChanged();
            }
        }
        private global::System.String _ProjectWorkflowSectionGroupingDisplayName;
        partial void OnProjectWorkflowSectionGroupingDisplayNameChanging(global::System.String value);
        partial void OnProjectWorkflowSectionGroupingDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SortOrder
        {
            get
            {
                return _SortOrder;
            }
            set
            {
                OnSortOrderChanging(value);
                ReportPropertyChanging("SortOrder");
                _SortOrder = StructuralObject.SetValidValue(value, "SortOrder");
                ReportPropertyChanged("SortOrder");
                OnSortOrderChanged();
            }
        }
        private global::System.Int32 _SortOrder;
        partial void OnSortOrderChanging(global::System.Int32 value);
        partial void OnSortOrderChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCreateSection_ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID", "ProjectCreateSection")]
        public EntityCollection<ProjectCreateSection> ProjectCreateSection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectCreateSection>("ProjectFirma.Web.Models.FK_ProjectCreateSection_ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID", "ProjectCreateSection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectCreateSection>("ProjectFirma.Web.Models.FK_ProjectCreateSection_ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID", "ProjectCreateSection", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateSection_ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID", "ProjectUpdateSection")]
        public EntityCollection<ProjectUpdateSection> ProjectUpdateSection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUpdateSection>("ProjectFirma.Web.Models.FK_ProjectUpdateSection_ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID", "ProjectUpdateSection");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUpdateSection>("ProjectFirma.Web.Models.FK_ProjectUpdateSection_ProjectWorkflowSectionGrouping_ProjectWorkflowSectionGroupingID", "ProjectUpdateSection", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="RelationshipType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RelationshipType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RelationshipType object.
        /// </summary>
        /// <param name="relationshipTypeID">Initial value of the RelationshipTypeID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="relationshipTypeName">Initial value of the RelationshipTypeName property.</param>
        /// <param name="canStewardProjects">Initial value of the CanStewardProjects property.</param>
        /// <param name="isPrimaryContact">Initial value of the IsPrimaryContact property.</param>
        /// <param name="canOnlyBeRelatedOnceToAProject">Initial value of the CanOnlyBeRelatedOnceToAProject property.</param>
        /// <param name="reportInAccomplishmentsDashboard">Initial value of the ReportInAccomplishmentsDashboard property.</param>
        /// <param name="showOnFactSheet">Initial value of the ShowOnFactSheet property.</param>
        public static RelationshipType CreateRelationshipType(global::System.Int32 relationshipTypeID, global::System.Int32 tenantID, global::System.String relationshipTypeName, global::System.Boolean canStewardProjects, global::System.Boolean isPrimaryContact, global::System.Boolean canOnlyBeRelatedOnceToAProject, global::System.Boolean reportInAccomplishmentsDashboard, global::System.Boolean showOnFactSheet)
        {
            RelationshipType relationshipType = new RelationshipType();
            relationshipType.RelationshipTypeID = relationshipTypeID;
            relationshipType.TenantID = tenantID;
            relationshipType.RelationshipTypeName = relationshipTypeName;
            relationshipType.CanStewardProjects = canStewardProjects;
            relationshipType.IsPrimaryContact = isPrimaryContact;
            relationshipType.CanOnlyBeRelatedOnceToAProject = canOnlyBeRelatedOnceToAProject;
            relationshipType.ReportInAccomplishmentsDashboard = reportInAccomplishmentsDashboard;
            relationshipType.ShowOnFactSheet = showOnFactSheet;
            return relationshipType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RelationshipTypeID
        {
            get
            {
                return _RelationshipTypeID;
            }
            set
            {
                if (_RelationshipTypeID != value)
                {
                    OnRelationshipTypeIDChanging(value);
                    ReportPropertyChanging("RelationshipTypeID");
                    _RelationshipTypeID = StructuralObject.SetValidValue(value, "RelationshipTypeID");
                    ReportPropertyChanged("RelationshipTypeID");
                    OnRelationshipTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _RelationshipTypeID;
        partial void OnRelationshipTypeIDChanging(global::System.Int32 value);
        partial void OnRelationshipTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RelationshipTypeName
        {
            get
            {
                return _RelationshipTypeName;
            }
            set
            {
                OnRelationshipTypeNameChanging(value);
                ReportPropertyChanging("RelationshipTypeName");
                _RelationshipTypeName = StructuralObject.SetValidValue(value, false, "RelationshipTypeName");
                ReportPropertyChanged("RelationshipTypeName");
                OnRelationshipTypeNameChanged();
            }
        }
        private global::System.String _RelationshipTypeName;
        partial void OnRelationshipTypeNameChanging(global::System.String value);
        partial void OnRelationshipTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanStewardProjects
        {
            get
            {
                return _CanStewardProjects;
            }
            set
            {
                OnCanStewardProjectsChanging(value);
                ReportPropertyChanging("CanStewardProjects");
                _CanStewardProjects = StructuralObject.SetValidValue(value, "CanStewardProjects");
                ReportPropertyChanged("CanStewardProjects");
                OnCanStewardProjectsChanged();
            }
        }
        private global::System.Boolean _CanStewardProjects;
        partial void OnCanStewardProjectsChanging(global::System.Boolean value);
        partial void OnCanStewardProjectsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrimaryContact
        {
            get
            {
                return _IsPrimaryContact;
            }
            set
            {
                OnIsPrimaryContactChanging(value);
                ReportPropertyChanging("IsPrimaryContact");
                _IsPrimaryContact = StructuralObject.SetValidValue(value, "IsPrimaryContact");
                ReportPropertyChanged("IsPrimaryContact");
                OnIsPrimaryContactChanged();
            }
        }
        private global::System.Boolean _IsPrimaryContact;
        partial void OnIsPrimaryContactChanging(global::System.Boolean value);
        partial void OnIsPrimaryContactChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean CanOnlyBeRelatedOnceToAProject
        {
            get
            {
                return _CanOnlyBeRelatedOnceToAProject;
            }
            set
            {
                OnCanOnlyBeRelatedOnceToAProjectChanging(value);
                ReportPropertyChanging("CanOnlyBeRelatedOnceToAProject");
                _CanOnlyBeRelatedOnceToAProject = StructuralObject.SetValidValue(value, "CanOnlyBeRelatedOnceToAProject");
                ReportPropertyChanged("CanOnlyBeRelatedOnceToAProject");
                OnCanOnlyBeRelatedOnceToAProjectChanged();
            }
        }
        private global::System.Boolean _CanOnlyBeRelatedOnceToAProject;
        partial void OnCanOnlyBeRelatedOnceToAProjectChanging(global::System.Boolean value);
        partial void OnCanOnlyBeRelatedOnceToAProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelationshipTypeDescription
        {
            get
            {
                return _RelationshipTypeDescription;
            }
            set
            {
                OnRelationshipTypeDescriptionChanging(value);
                ReportPropertyChanging("RelationshipTypeDescription");
                _RelationshipTypeDescription = StructuralObject.SetValidValue(value, true, "RelationshipTypeDescription");
                ReportPropertyChanged("RelationshipTypeDescription");
                OnRelationshipTypeDescriptionChanged();
            }
        }
        private global::System.String _RelationshipTypeDescription;
        partial void OnRelationshipTypeDescriptionChanging(global::System.String value);
        partial void OnRelationshipTypeDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ReportInAccomplishmentsDashboard
        {
            get
            {
                return _ReportInAccomplishmentsDashboard;
            }
            set
            {
                OnReportInAccomplishmentsDashboardChanging(value);
                ReportPropertyChanging("ReportInAccomplishmentsDashboard");
                _ReportInAccomplishmentsDashboard = StructuralObject.SetValidValue(value, "ReportInAccomplishmentsDashboard");
                ReportPropertyChanged("ReportInAccomplishmentsDashboard");
                OnReportInAccomplishmentsDashboardChanged();
            }
        }
        private global::System.Boolean _ReportInAccomplishmentsDashboard;
        partial void OnReportInAccomplishmentsDashboardChanging(global::System.Boolean value);
        partial void OnReportInAccomplishmentsDashboardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowOnFactSheet
        {
            get
            {
                return _ShowOnFactSheet;
            }
            set
            {
                OnShowOnFactSheetChanging(value);
                ReportPropertyChanging("ShowOnFactSheet");
                _ShowOnFactSheet = StructuralObject.SetValidValue(value, "ShowOnFactSheet");
                ReportPropertyChanged("ShowOnFactSheet");
                OnShowOnFactSheetChanged();
            }
        }
        private global::System.Boolean _ShowOnFactSheet;
        partial void OnShowOnFactSheetChanging(global::System.Boolean value);
        partial void OnShowOnFactSheetChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_OrganizationTypeRelationshipType_RelationshipType_RelationshipTypeID", "OrganizationTypeRelationshipType")]
        public EntityCollection<OrganizationTypeRelationshipType> OrganizationTypeRelationshipType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrganizationTypeRelationshipType>("ProjectFirma.Web.Models.FK_OrganizationTypeRelationshipType_RelationshipType_RelationshipTypeID", "OrganizationTypeRelationshipType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrganizationTypeRelationshipType>("ProjectFirma.Web.Models.FK_OrganizationTypeRelationshipType_RelationshipType_RelationshipTypeID", "OrganizationTypeRelationshipType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganization_RelationshipType_RelationshipTypeID", "ProjectOrganization")]
        public EntityCollection<ProjectOrganization> ProjectOrganization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectOrganization>("ProjectFirma.Web.Models.FK_ProjectOrganization_RelationshipType_RelationshipTypeID", "ProjectOrganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectOrganization>("ProjectFirma.Web.Models.FK_ProjectOrganization_RelationshipType_RelationshipTypeID", "ProjectOrganization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganizationUpdate_RelationshipType_RelationshipTypeID", "ProjectOrganizationUpdate")]
        public EntityCollection<ProjectOrganizationUpdate> ProjectOrganizationUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectOrganizationUpdate>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_RelationshipType_RelationshipTypeID", "ProjectOrganizationUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectOrganizationUpdate>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_RelationshipType_RelationshipTypeID", "ProjectOrganizationUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_RelationshipType_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_RelationshipType_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_RelationshipType_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_RelationshipType_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_RelationshipType_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="roleDisplayName">Initial value of the RoleDisplayName property.</param>
        public static Role CreateRole(global::System.Int32 roleID, global::System.String roleName, global::System.String roleDisplayName)
        {
            Role role = new Role();
            role.RoleID = roleID;
            role.RoleName = roleName;
            role.RoleDisplayName = roleDisplayName;
            return role;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value, "RoleID");
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false, "RoleName");
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleDisplayName
        {
            get
            {
                return _RoleDisplayName;
            }
            set
            {
                OnRoleDisplayNameChanging(value);
                ReportPropertyChanging("RoleDisplayName");
                _RoleDisplayName = StructuralObject.SetValidValue(value, false, "RoleDisplayName");
                ReportPropertyChanged("RoleDisplayName");
                OnRoleDisplayNameChanged();
            }
        }
        private global::System.String _RoleDisplayName;
        partial void OnRoleDisplayNameChanging(global::System.String value);
        partial void OnRoleDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RoleDescription
        {
            get
            {
                return _RoleDescription;
            }
            set
            {
                OnRoleDescriptionChanging(value);
                ReportPropertyChanging("RoleDescription");
                _RoleDescription = StructuralObject.SetValidValue(value, true, "RoleDescription");
                ReportPropertyChanged("RoleDescription");
                OnRoleDescriptionChanged();
            }
        }
        private global::System.String _RoleDescription;
        partial void OnRoleDescriptionChanging(global::System.String value);
        partial void OnRoleDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Person_Role_RoleID", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("ProjectFirma.Web.Models.FK_Person_Role_RoleID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("ProjectFirma.Web.Models.FK_Person_Role_RoleID", "Person", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="Schema")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Schema : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Schema object.
        /// </summary>
        /// <param name="version">Initial value of the Version property.</param>
        public static Schema CreateSchema(global::System.Int32 version)
        {
            Schema schema = new Schema();
            schema.Version = version;
            return schema;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                if (_Version != value)
                {
                    OnVersionChanging(value);
                    ReportPropertyChanging("Version");
                    _Version = StructuralObject.SetValidValue(value, "Version");
                    ReportPropertyChanged("Version");
                    OnVersionChanged();
                }
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="Server")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Server : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Server object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="lastHeartbeat">Initial value of the LastHeartbeat property.</param>
        public static Server CreateServer(global::System.String id, global::System.DateTime lastHeartbeat)
        {
            Server server = new Server();
            server.Id = id;
            server.LastHeartbeat = lastHeartbeat;
            return server;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, false, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.String _Id;
        partial void OnIdChanging(global::System.String value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true, "Data");
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastHeartbeat
        {
            get
            {
                return _LastHeartbeat;
            }
            set
            {
                OnLastHeartbeatChanging(value);
                ReportPropertyChanging("LastHeartbeat");
                _LastHeartbeat = StructuralObject.SetValidValue(value, "LastHeartbeat");
                ReportPropertyChanged("LastHeartbeat");
                OnLastHeartbeatChanged();
            }
        }
        private global::System.DateTime _LastHeartbeat;
        partial void OnLastHeartbeatChanging(global::System.DateTime value);
        partial void OnLastHeartbeatChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="Set")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Set : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Set object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="score">Initial value of the Score property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static Set CreateSet(global::System.Int32 id, global::System.String key, global::System.Double score, global::System.String value)
        {
            Set set = new Set();
            set.Id = id;
            set.Key = key;
            set.Score = score;
            set.Value = value;
            return set;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false, "Key");
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Score
        {
            get
            {
                return _Score;
            }
            set
            {
                OnScoreChanging(value);
                ReportPropertyChanging("Score");
                _Score = StructuralObject.SetValidValue(value, "Score");
                ReportPropertyChanged("Score");
                OnScoreChanged();
            }
        }
        private global::System.Double _Score;
        partial void OnScoreChanging(global::System.Double value);
        partial void OnScoreChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false, "Value");
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ExpireAt
        {
            get
            {
                return _ExpireAt;
            }
            set
            {
                OnExpireAtChanging(value);
                ReportPropertyChanging("ExpireAt");
                _ExpireAt = StructuralObject.SetValidValue(value, "ExpireAt");
                ReportPropertyChanged("ExpireAt");
                OnExpireAtChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpireAt;
        partial void OnExpireAtChanging(Nullable<global::System.DateTime> value);
        partial void OnExpireAtChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="Snapshot")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Snapshot : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Snapshot object.
        /// </summary>
        /// <param name="snapshotID">Initial value of the SnapshotID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="snapshotDate">Initial value of the SnapshotDate property.</param>
        /// <param name="projectCount">Initial value of the ProjectCount property.</param>
        public static Snapshot CreateSnapshot(global::System.Int32 snapshotID, global::System.Int32 tenantID, global::System.DateTime snapshotDate, global::System.Int32 projectCount)
        {
            Snapshot snapshot = new Snapshot();
            snapshot.SnapshotID = snapshotID;
            snapshot.TenantID = tenantID;
            snapshot.SnapshotDate = snapshotDate;
            snapshot.ProjectCount = projectCount;
            return snapshot;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SnapshotID
        {
            get
            {
                return _SnapshotID;
            }
            set
            {
                if (_SnapshotID != value)
                {
                    OnSnapshotIDChanging(value);
                    ReportPropertyChanging("SnapshotID");
                    _SnapshotID = StructuralObject.SetValidValue(value, "SnapshotID");
                    ReportPropertyChanged("SnapshotID");
                    OnSnapshotIDChanged();
                }
            }
        }
        private global::System.Int32 _SnapshotID;
        partial void OnSnapshotIDChanging(global::System.Int32 value);
        partial void OnSnapshotIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime SnapshotDate
        {
            get
            {
                return _SnapshotDate;
            }
            set
            {
                OnSnapshotDateChanging(value);
                ReportPropertyChanging("SnapshotDate");
                _SnapshotDate = StructuralObject.SetValidValue(value, "SnapshotDate");
                ReportPropertyChanged("SnapshotDate");
                OnSnapshotDateChanged();
            }
        }
        private global::System.DateTime _SnapshotDate;
        partial void OnSnapshotDateChanging(global::System.DateTime value);
        partial void OnSnapshotDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SnapshotNote
        {
            get
            {
                return _SnapshotNote;
            }
            set
            {
                OnSnapshotNoteChanging(value);
                ReportPropertyChanging("SnapshotNote");
                _SnapshotNote = StructuralObject.SetValidValue(value, true, "SnapshotNote");
                ReportPropertyChanged("SnapshotNote");
                OnSnapshotNoteChanged();
            }
        }
        private global::System.String _SnapshotNote;
        partial void OnSnapshotNoteChanging(global::System.String value);
        partial void OnSnapshotNoteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectCount
        {
            get
            {
                return _ProjectCount;
            }
            set
            {
                OnProjectCountChanging(value);
                ReportPropertyChanging("ProjectCount");
                _ProjectCount = StructuralObject.SetValidValue(value, "ProjectCount");
                ReportPropertyChanged("ProjectCount");
                OnProjectCountChanged();
            }
        }
        private global::System.Int32 _ProjectCount;
        partial void OnProjectCountChanging(global::System.Int32 value);
        partial void OnProjectCountChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Snapshot_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Snapshot_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Snapshot_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Snapshot_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Snapshot_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotOrganizationTypeExpenditure_Snapshot_SnapshotID", "SnapshotOrganizationTypeExpenditure")]
        public EntityCollection<SnapshotOrganizationTypeExpenditure> SnapshotOrganizationTypeExpenditure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SnapshotOrganizationTypeExpenditure>("ProjectFirma.Web.Models.FK_SnapshotOrganizationTypeExpenditure_Snapshot_SnapshotID", "SnapshotOrganizationTypeExpenditure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SnapshotOrganizationTypeExpenditure>("ProjectFirma.Web.Models.FK_SnapshotOrganizationTypeExpenditure_Snapshot_SnapshotID", "SnapshotOrganizationTypeExpenditure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasure_Snapshot_SnapshotID", "SnapshotPerformanceMeasure")]
        public EntityCollection<SnapshotPerformanceMeasure> SnapshotPerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SnapshotPerformanceMeasure>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasure_Snapshot_SnapshotID", "SnapshotPerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SnapshotPerformanceMeasure>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasure_Snapshot_SnapshotID", "SnapshotPerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotProject_Snapshot_SnapshotID", "SnapshotProject")]
        public EntityCollection<SnapshotProject> SnapshotProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SnapshotProject>("ProjectFirma.Web.Models.FK_SnapshotProject_Snapshot_SnapshotID", "SnapshotProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SnapshotProject>("ProjectFirma.Web.Models.FK_SnapshotProject_Snapshot_SnapshotID", "SnapshotProject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="SnapshotOrganizationTypeExpenditure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SnapshotOrganizationTypeExpenditure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SnapshotOrganizationTypeExpenditure object.
        /// </summary>
        /// <param name="snapshotOrganizationTypeExpenditureID">Initial value of the SnapshotOrganizationTypeExpenditureID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="snapshotID">Initial value of the SnapshotID property.</param>
        /// <param name="calendarYear">Initial value of the CalendarYear property.</param>
        /// <param name="expenditureAmount">Initial value of the ExpenditureAmount property.</param>
        /// <param name="organizationTypeID">Initial value of the OrganizationTypeID property.</param>
        public static SnapshotOrganizationTypeExpenditure CreateSnapshotOrganizationTypeExpenditure(global::System.Int32 snapshotOrganizationTypeExpenditureID, global::System.Int32 tenantID, global::System.Int32 snapshotID, global::System.Int32 calendarYear, global::System.Decimal expenditureAmount, global::System.Int32 organizationTypeID)
        {
            SnapshotOrganizationTypeExpenditure snapshotOrganizationTypeExpenditure = new SnapshotOrganizationTypeExpenditure();
            snapshotOrganizationTypeExpenditure.SnapshotOrganizationTypeExpenditureID = snapshotOrganizationTypeExpenditureID;
            snapshotOrganizationTypeExpenditure.TenantID = tenantID;
            snapshotOrganizationTypeExpenditure.SnapshotID = snapshotID;
            snapshotOrganizationTypeExpenditure.CalendarYear = calendarYear;
            snapshotOrganizationTypeExpenditure.ExpenditureAmount = expenditureAmount;
            snapshotOrganizationTypeExpenditure.OrganizationTypeID = organizationTypeID;
            return snapshotOrganizationTypeExpenditure;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SnapshotOrganizationTypeExpenditureID
        {
            get
            {
                return _SnapshotOrganizationTypeExpenditureID;
            }
            set
            {
                if (_SnapshotOrganizationTypeExpenditureID != value)
                {
                    OnSnapshotOrganizationTypeExpenditureIDChanging(value);
                    ReportPropertyChanging("SnapshotOrganizationTypeExpenditureID");
                    _SnapshotOrganizationTypeExpenditureID = StructuralObject.SetValidValue(value, "SnapshotOrganizationTypeExpenditureID");
                    ReportPropertyChanged("SnapshotOrganizationTypeExpenditureID");
                    OnSnapshotOrganizationTypeExpenditureIDChanged();
                }
            }
        }
        private global::System.Int32 _SnapshotOrganizationTypeExpenditureID;
        partial void OnSnapshotOrganizationTypeExpenditureIDChanging(global::System.Int32 value);
        partial void OnSnapshotOrganizationTypeExpenditureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SnapshotID
        {
            get
            {
                return _SnapshotID;
            }
            set
            {
                OnSnapshotIDChanging(value);
                ReportPropertyChanging("SnapshotID");
                _SnapshotID = StructuralObject.SetValidValue(value, "SnapshotID");
                ReportPropertyChanged("SnapshotID");
                OnSnapshotIDChanged();
            }
        }
        private global::System.Int32 _SnapshotID;
        partial void OnSnapshotIDChanging(global::System.Int32 value);
        partial void OnSnapshotIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalendarYear
        {
            get
            {
                return _CalendarYear;
            }
            set
            {
                OnCalendarYearChanging(value);
                ReportPropertyChanging("CalendarYear");
                _CalendarYear = StructuralObject.SetValidValue(value, "CalendarYear");
                ReportPropertyChanged("CalendarYear");
                OnCalendarYearChanged();
            }
        }
        private global::System.Int32 _CalendarYear;
        partial void OnCalendarYearChanging(global::System.Int32 value);
        partial void OnCalendarYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ExpenditureAmount
        {
            get
            {
                return _ExpenditureAmount;
            }
            set
            {
                OnExpenditureAmountChanging(value);
                ReportPropertyChanging("ExpenditureAmount");
                _ExpenditureAmount = StructuralObject.SetValidValue(value, "ExpenditureAmount");
                ReportPropertyChanged("ExpenditureAmount");
                OnExpenditureAmountChanged();
            }
        }
        private global::System.Decimal _ExpenditureAmount;
        partial void OnExpenditureAmountChanging(global::System.Decimal value);
        partial void OnExpenditureAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 OrganizationTypeID
        {
            get
            {
                return _OrganizationTypeID;
            }
            set
            {
                OnOrganizationTypeIDChanging(value);
                ReportPropertyChanging("OrganizationTypeID");
                _OrganizationTypeID = StructuralObject.SetValidValue(value, "OrganizationTypeID");
                ReportPropertyChanged("OrganizationTypeID");
                OnOrganizationTypeIDChanged();
            }
        }
        private global::System.Int32 _OrganizationTypeID;
        partial void OnOrganizationTypeIDChanging(global::System.Int32 value);
        partial void OnOrganizationTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotOrganizationTypeExpenditure_OrganizationType_OrganizationTypeID", "OrganizationType")]
        public OrganizationType OrganizationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("ProjectFirma.Web.Models.FK_SnapshotOrganizationTypeExpenditure_OrganizationType_OrganizationTypeID", "OrganizationType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("ProjectFirma.Web.Models.FK_SnapshotOrganizationTypeExpenditure_OrganizationType_OrganizationTypeID", "OrganizationType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrganizationType> OrganizationTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrganizationType>("ProjectFirma.Web.Models.FK_SnapshotOrganizationTypeExpenditure_OrganizationType_OrganizationTypeID", "OrganizationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrganizationType>("ProjectFirma.Web.Models.FK_SnapshotOrganizationTypeExpenditure_OrganizationType_OrganizationTypeID", "OrganizationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotOrganizationTypeExpenditure_Snapshot_SnapshotID", "Snapshot")]
        public Snapshot Snapshot
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Snapshot>("ProjectFirma.Web.Models.FK_SnapshotOrganizationTypeExpenditure_Snapshot_SnapshotID", "Snapshot").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Snapshot>("ProjectFirma.Web.Models.FK_SnapshotOrganizationTypeExpenditure_Snapshot_SnapshotID", "Snapshot").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Snapshot> SnapshotReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Snapshot>("ProjectFirma.Web.Models.FK_SnapshotOrganizationTypeExpenditure_Snapshot_SnapshotID", "Snapshot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Snapshot>("ProjectFirma.Web.Models.FK_SnapshotOrganizationTypeExpenditure_Snapshot_SnapshotID", "Snapshot", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotOrganizationTypeExpenditure_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_SnapshotOrganizationTypeExpenditure_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_SnapshotOrganizationTypeExpenditure_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_SnapshotOrganizationTypeExpenditure_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_SnapshotOrganizationTypeExpenditure_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="SnapshotPerformanceMeasure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SnapshotPerformanceMeasure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SnapshotPerformanceMeasure object.
        /// </summary>
        /// <param name="snapshotPerformanceMeasureID">Initial value of the SnapshotPerformanceMeasureID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="snapshotID">Initial value of the SnapshotID property.</param>
        /// <param name="performanceMeasureID">Initial value of the PerformanceMeasureID property.</param>
        /// <param name="calendarYear">Initial value of the CalendarYear property.</param>
        /// <param name="actualValue">Initial value of the ActualValue property.</param>
        public static SnapshotPerformanceMeasure CreateSnapshotPerformanceMeasure(global::System.Int32 snapshotPerformanceMeasureID, global::System.Int32 tenantID, global::System.Int32 snapshotID, global::System.Int32 performanceMeasureID, global::System.Int32 calendarYear, global::System.Double actualValue)
        {
            SnapshotPerformanceMeasure snapshotPerformanceMeasure = new SnapshotPerformanceMeasure();
            snapshotPerformanceMeasure.SnapshotPerformanceMeasureID = snapshotPerformanceMeasureID;
            snapshotPerformanceMeasure.TenantID = tenantID;
            snapshotPerformanceMeasure.SnapshotID = snapshotID;
            snapshotPerformanceMeasure.PerformanceMeasureID = performanceMeasureID;
            snapshotPerformanceMeasure.CalendarYear = calendarYear;
            snapshotPerformanceMeasure.ActualValue = actualValue;
            return snapshotPerformanceMeasure;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SnapshotPerformanceMeasureID
        {
            get
            {
                return _SnapshotPerformanceMeasureID;
            }
            set
            {
                if (_SnapshotPerformanceMeasureID != value)
                {
                    OnSnapshotPerformanceMeasureIDChanging(value);
                    ReportPropertyChanging("SnapshotPerformanceMeasureID");
                    _SnapshotPerformanceMeasureID = StructuralObject.SetValidValue(value, "SnapshotPerformanceMeasureID");
                    ReportPropertyChanged("SnapshotPerformanceMeasureID");
                    OnSnapshotPerformanceMeasureIDChanged();
                }
            }
        }
        private global::System.Int32 _SnapshotPerformanceMeasureID;
        partial void OnSnapshotPerformanceMeasureIDChanging(global::System.Int32 value);
        partial void OnSnapshotPerformanceMeasureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SnapshotID
        {
            get
            {
                return _SnapshotID;
            }
            set
            {
                OnSnapshotIDChanging(value);
                ReportPropertyChanging("SnapshotID");
                _SnapshotID = StructuralObject.SetValidValue(value, "SnapshotID");
                ReportPropertyChanged("SnapshotID");
                OnSnapshotIDChanged();
            }
        }
        private global::System.Int32 _SnapshotID;
        partial void OnSnapshotIDChanging(global::System.Int32 value);
        partial void OnSnapshotIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureID
        {
            get
            {
                return _PerformanceMeasureID;
            }
            set
            {
                OnPerformanceMeasureIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureID");
                _PerformanceMeasureID = StructuralObject.SetValidValue(value, "PerformanceMeasureID");
                ReportPropertyChanged("PerformanceMeasureID");
                OnPerformanceMeasureIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureID;
        partial void OnPerformanceMeasureIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalendarYear
        {
            get
            {
                return _CalendarYear;
            }
            set
            {
                OnCalendarYearChanging(value);
                ReportPropertyChanging("CalendarYear");
                _CalendarYear = StructuralObject.SetValidValue(value, "CalendarYear");
                ReportPropertyChanged("CalendarYear");
                OnCalendarYearChanged();
            }
        }
        private global::System.Int32 _CalendarYear;
        partial void OnCalendarYearChanging(global::System.Int32 value);
        partial void OnCalendarYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ActualValue
        {
            get
            {
                return _ActualValue;
            }
            set
            {
                OnActualValueChanging(value);
                ReportPropertyChanging("ActualValue");
                _ActualValue = StructuralObject.SetValidValue(value, "ActualValue");
                ReportPropertyChanged("ActualValue");
                OnActualValueChanged();
            }
        }
        private global::System.Double _ActualValue;
        partial void OnActualValueChanging(global::System.Double value);
        partial void OnActualValueChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure")]
        public PerformanceMeasure PerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasure> PerformanceMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasure_Snapshot_SnapshotID", "Snapshot")]
        public Snapshot Snapshot
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Snapshot>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasure_Snapshot_SnapshotID", "Snapshot").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Snapshot>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasure_Snapshot_SnapshotID", "Snapshot").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Snapshot> SnapshotReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Snapshot>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasure_Snapshot_SnapshotID", "Snapshot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Snapshot>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasure_Snapshot_SnapshotID", "Snapshot", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasure_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasure_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasure_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasure_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasure_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasureSubcategoryOption_SnapshotPerformanceMeasure_SnapshotPerformanceMeasureID", "SnapshotPerformanceMeasureSubcategoryOption")]
        public EntityCollection<SnapshotPerformanceMeasureSubcategoryOption> SnapshotPerformanceMeasureSubcategoryOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SnapshotPerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_SnapshotPerformanceMeasure_SnapshotPerformanceMeasureID", "SnapshotPerformanceMeasureSubcategoryOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SnapshotPerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_SnapshotPerformanceMeasure_SnapshotPerformanceMeasureID", "SnapshotPerformanceMeasureSubcategoryOption", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="SnapshotPerformanceMeasureSubcategoryOption")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SnapshotPerformanceMeasureSubcategoryOption : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SnapshotPerformanceMeasureSubcategoryOption object.
        /// </summary>
        /// <param name="snapshotPerformanceMeasureSubcategoryOptionID">Initial value of the SnapshotPerformanceMeasureSubcategoryOptionID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="snapshotPerformanceMeasureID">Initial value of the SnapshotPerformanceMeasureID property.</param>
        /// <param name="performanceMeasureSubcategoryOptionID">Initial value of the PerformanceMeasureSubcategoryOptionID property.</param>
        /// <param name="performanceMeasureID">Initial value of the PerformanceMeasureID property.</param>
        /// <param name="performanceMeasureSubcategoryID">Initial value of the PerformanceMeasureSubcategoryID property.</param>
        public static SnapshotPerformanceMeasureSubcategoryOption CreateSnapshotPerformanceMeasureSubcategoryOption(global::System.Int32 snapshotPerformanceMeasureSubcategoryOptionID, global::System.Int32 tenantID, global::System.Int32 snapshotPerformanceMeasureID, global::System.Int32 performanceMeasureSubcategoryOptionID, global::System.Int32 performanceMeasureID, global::System.Int32 performanceMeasureSubcategoryID)
        {
            SnapshotPerformanceMeasureSubcategoryOption snapshotPerformanceMeasureSubcategoryOption = new SnapshotPerformanceMeasureSubcategoryOption();
            snapshotPerformanceMeasureSubcategoryOption.SnapshotPerformanceMeasureSubcategoryOptionID = snapshotPerformanceMeasureSubcategoryOptionID;
            snapshotPerformanceMeasureSubcategoryOption.TenantID = tenantID;
            snapshotPerformanceMeasureSubcategoryOption.SnapshotPerformanceMeasureID = snapshotPerformanceMeasureID;
            snapshotPerformanceMeasureSubcategoryOption.PerformanceMeasureSubcategoryOptionID = performanceMeasureSubcategoryOptionID;
            snapshotPerformanceMeasureSubcategoryOption.PerformanceMeasureID = performanceMeasureID;
            snapshotPerformanceMeasureSubcategoryOption.PerformanceMeasureSubcategoryID = performanceMeasureSubcategoryID;
            return snapshotPerformanceMeasureSubcategoryOption;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SnapshotPerformanceMeasureSubcategoryOptionID
        {
            get
            {
                return _SnapshotPerformanceMeasureSubcategoryOptionID;
            }
            set
            {
                if (_SnapshotPerformanceMeasureSubcategoryOptionID != value)
                {
                    OnSnapshotPerformanceMeasureSubcategoryOptionIDChanging(value);
                    ReportPropertyChanging("SnapshotPerformanceMeasureSubcategoryOptionID");
                    _SnapshotPerformanceMeasureSubcategoryOptionID = StructuralObject.SetValidValue(value, "SnapshotPerformanceMeasureSubcategoryOptionID");
                    ReportPropertyChanged("SnapshotPerformanceMeasureSubcategoryOptionID");
                    OnSnapshotPerformanceMeasureSubcategoryOptionIDChanged();
                }
            }
        }
        private global::System.Int32 _SnapshotPerformanceMeasureSubcategoryOptionID;
        partial void OnSnapshotPerformanceMeasureSubcategoryOptionIDChanging(global::System.Int32 value);
        partial void OnSnapshotPerformanceMeasureSubcategoryOptionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SnapshotPerformanceMeasureID
        {
            get
            {
                return _SnapshotPerformanceMeasureID;
            }
            set
            {
                OnSnapshotPerformanceMeasureIDChanging(value);
                ReportPropertyChanging("SnapshotPerformanceMeasureID");
                _SnapshotPerformanceMeasureID = StructuralObject.SetValidValue(value, "SnapshotPerformanceMeasureID");
                ReportPropertyChanged("SnapshotPerformanceMeasureID");
                OnSnapshotPerformanceMeasureIDChanged();
            }
        }
        private global::System.Int32 _SnapshotPerformanceMeasureID;
        partial void OnSnapshotPerformanceMeasureIDChanging(global::System.Int32 value);
        partial void OnSnapshotPerformanceMeasureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureSubcategoryOptionID
        {
            get
            {
                return _PerformanceMeasureSubcategoryOptionID;
            }
            set
            {
                OnPerformanceMeasureSubcategoryOptionIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureSubcategoryOptionID");
                _PerformanceMeasureSubcategoryOptionID = StructuralObject.SetValidValue(value, "PerformanceMeasureSubcategoryOptionID");
                ReportPropertyChanged("PerformanceMeasureSubcategoryOptionID");
                OnPerformanceMeasureSubcategoryOptionIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureSubcategoryOptionID;
        partial void OnPerformanceMeasureSubcategoryOptionIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureSubcategoryOptionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureID
        {
            get
            {
                return _PerformanceMeasureID;
            }
            set
            {
                OnPerformanceMeasureIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureID");
                _PerformanceMeasureID = StructuralObject.SetValidValue(value, "PerformanceMeasureID");
                ReportPropertyChanged("PerformanceMeasureID");
                OnPerformanceMeasureIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureID;
        partial void OnPerformanceMeasureIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureSubcategoryID
        {
            get
            {
                return _PerformanceMeasureSubcategoryID;
            }
            set
            {
                OnPerformanceMeasureSubcategoryIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureSubcategoryID");
                _PerformanceMeasureSubcategoryID = StructuralObject.SetValidValue(value, "PerformanceMeasureSubcategoryID");
                ReportPropertyChanged("PerformanceMeasureSubcategoryID");
                OnPerformanceMeasureSubcategoryIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureSubcategoryID;
        partial void OnPerformanceMeasureSubcategoryIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureSubcategoryIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure")]
        public PerformanceMeasure PerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasure> PerformanceMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory")]
        public PerformanceMeasureSubcategory PerformanceMeasureSubcategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasureSubcategory> PerformanceMeasureSubcategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategory_PerformanceMeasureSubcategoryID", "PerformanceMeasureSubcategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption")]
        public PerformanceMeasureSubcategoryOption PerformanceMeasureSubcategoryOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasureSubcategoryOption> PerformanceMeasureSubcategoryOptionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOption_PerformanceMeasureSubcategoryOptionID", "PerformanceMeasureSubcategoryOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasureSubcategoryOption_SnapshotPerformanceMeasure_SnapshotPerformanceMeasureID", "SnapshotPerformanceMeasure")]
        public SnapshotPerformanceMeasure SnapshotPerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SnapshotPerformanceMeasure>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_SnapshotPerformanceMeasure_SnapshotPerformanceMeasureID", "SnapshotPerformanceMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SnapshotPerformanceMeasure>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_SnapshotPerformanceMeasure_SnapshotPerformanceMeasureID", "SnapshotPerformanceMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SnapshotPerformanceMeasure> SnapshotPerformanceMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SnapshotPerformanceMeasure>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_SnapshotPerformanceMeasure_SnapshotPerformanceMeasureID", "SnapshotPerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SnapshotPerformanceMeasure>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_SnapshotPerformanceMeasure_SnapshotPerformanceMeasureID", "SnapshotPerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasureSubcategoryOption_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="SnapshotProject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SnapshotProject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SnapshotProject object.
        /// </summary>
        /// <param name="snapshotProjectID">Initial value of the SnapshotProjectID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="snapshotID">Initial value of the SnapshotID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="snapshotProjectTypeID">Initial value of the SnapshotProjectTypeID property.</param>
        public static SnapshotProject CreateSnapshotProject(global::System.Int32 snapshotProjectID, global::System.Int32 tenantID, global::System.Int32 snapshotID, global::System.Int32 projectID, global::System.Int32 snapshotProjectTypeID)
        {
            SnapshotProject snapshotProject = new SnapshotProject();
            snapshotProject.SnapshotProjectID = snapshotProjectID;
            snapshotProject.TenantID = tenantID;
            snapshotProject.SnapshotID = snapshotID;
            snapshotProject.ProjectID = projectID;
            snapshotProject.SnapshotProjectTypeID = snapshotProjectTypeID;
            return snapshotProject;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SnapshotProjectID
        {
            get
            {
                return _SnapshotProjectID;
            }
            set
            {
                if (_SnapshotProjectID != value)
                {
                    OnSnapshotProjectIDChanging(value);
                    ReportPropertyChanging("SnapshotProjectID");
                    _SnapshotProjectID = StructuralObject.SetValidValue(value, "SnapshotProjectID");
                    ReportPropertyChanged("SnapshotProjectID");
                    OnSnapshotProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _SnapshotProjectID;
        partial void OnSnapshotProjectIDChanging(global::System.Int32 value);
        partial void OnSnapshotProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SnapshotID
        {
            get
            {
                return _SnapshotID;
            }
            set
            {
                OnSnapshotIDChanging(value);
                ReportPropertyChanging("SnapshotID");
                _SnapshotID = StructuralObject.SetValidValue(value, "SnapshotID");
                ReportPropertyChanged("SnapshotID");
                OnSnapshotIDChanged();
            }
        }
        private global::System.Int32 _SnapshotID;
        partial void OnSnapshotIDChanging(global::System.Int32 value);
        partial void OnSnapshotIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SnapshotProjectTypeID
        {
            get
            {
                return _SnapshotProjectTypeID;
            }
            set
            {
                OnSnapshotProjectTypeIDChanging(value);
                ReportPropertyChanging("SnapshotProjectTypeID");
                _SnapshotProjectTypeID = StructuralObject.SetValidValue(value, "SnapshotProjectTypeID");
                ReportPropertyChanged("SnapshotProjectTypeID");
                OnSnapshotProjectTypeIDChanged();
            }
        }
        private global::System.Int32 _SnapshotProjectTypeID;
        partial void OnSnapshotProjectTypeIDChanging(global::System.Int32 value);
        partial void OnSnapshotProjectTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotProject_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_SnapshotProject_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_SnapshotProject_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_SnapshotProject_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_SnapshotProject_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotProject_Snapshot_SnapshotID", "Snapshot")]
        public Snapshot Snapshot
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Snapshot>("ProjectFirma.Web.Models.FK_SnapshotProject_Snapshot_SnapshotID", "Snapshot").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Snapshot>("ProjectFirma.Web.Models.FK_SnapshotProject_Snapshot_SnapshotID", "Snapshot").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Snapshot> SnapshotReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Snapshot>("ProjectFirma.Web.Models.FK_SnapshotProject_Snapshot_SnapshotID", "Snapshot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Snapshot>("ProjectFirma.Web.Models.FK_SnapshotProject_Snapshot_SnapshotID", "Snapshot", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotProject_SnapshotProjectType_SnapshotProjectTypeID", "SnapshotProjectType")]
        public SnapshotProjectType SnapshotProjectType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SnapshotProjectType>("ProjectFirma.Web.Models.FK_SnapshotProject_SnapshotProjectType_SnapshotProjectTypeID", "SnapshotProjectType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SnapshotProjectType>("ProjectFirma.Web.Models.FK_SnapshotProject_SnapshotProjectType_SnapshotProjectTypeID", "SnapshotProjectType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SnapshotProjectType> SnapshotProjectTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SnapshotProjectType>("ProjectFirma.Web.Models.FK_SnapshotProject_SnapshotProjectType_SnapshotProjectTypeID", "SnapshotProjectType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SnapshotProjectType>("ProjectFirma.Web.Models.FK_SnapshotProject_SnapshotProjectType_SnapshotProjectTypeID", "SnapshotProjectType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotProject_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_SnapshotProject_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_SnapshotProject_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_SnapshotProject_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_SnapshotProject_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="SnapshotProjectType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SnapshotProjectType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SnapshotProjectType object.
        /// </summary>
        /// <param name="snapshotProjectTypeID">Initial value of the SnapshotProjectTypeID property.</param>
        /// <param name="snapshotProjectTypeName">Initial value of the SnapshotProjectTypeName property.</param>
        /// <param name="snapshotProjectTypeDisplayName">Initial value of the SnapshotProjectTypeDisplayName property.</param>
        public static SnapshotProjectType CreateSnapshotProjectType(global::System.Int32 snapshotProjectTypeID, global::System.String snapshotProjectTypeName, global::System.String snapshotProjectTypeDisplayName)
        {
            SnapshotProjectType snapshotProjectType = new SnapshotProjectType();
            snapshotProjectType.SnapshotProjectTypeID = snapshotProjectTypeID;
            snapshotProjectType.SnapshotProjectTypeName = snapshotProjectTypeName;
            snapshotProjectType.SnapshotProjectTypeDisplayName = snapshotProjectTypeDisplayName;
            return snapshotProjectType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SnapshotProjectTypeID
        {
            get
            {
                return _SnapshotProjectTypeID;
            }
            set
            {
                if (_SnapshotProjectTypeID != value)
                {
                    OnSnapshotProjectTypeIDChanging(value);
                    ReportPropertyChanging("SnapshotProjectTypeID");
                    _SnapshotProjectTypeID = StructuralObject.SetValidValue(value, "SnapshotProjectTypeID");
                    ReportPropertyChanged("SnapshotProjectTypeID");
                    OnSnapshotProjectTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _SnapshotProjectTypeID;
        partial void OnSnapshotProjectTypeIDChanging(global::System.Int32 value);
        partial void OnSnapshotProjectTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SnapshotProjectTypeName
        {
            get
            {
                return _SnapshotProjectTypeName;
            }
            set
            {
                OnSnapshotProjectTypeNameChanging(value);
                ReportPropertyChanging("SnapshotProjectTypeName");
                _SnapshotProjectTypeName = StructuralObject.SetValidValue(value, false, "SnapshotProjectTypeName");
                ReportPropertyChanged("SnapshotProjectTypeName");
                OnSnapshotProjectTypeNameChanged();
            }
        }
        private global::System.String _SnapshotProjectTypeName;
        partial void OnSnapshotProjectTypeNameChanging(global::System.String value);
        partial void OnSnapshotProjectTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SnapshotProjectTypeDisplayName
        {
            get
            {
                return _SnapshotProjectTypeDisplayName;
            }
            set
            {
                OnSnapshotProjectTypeDisplayNameChanging(value);
                ReportPropertyChanging("SnapshotProjectTypeDisplayName");
                _SnapshotProjectTypeDisplayName = StructuralObject.SetValidValue(value, false, "SnapshotProjectTypeDisplayName");
                ReportPropertyChanged("SnapshotProjectTypeDisplayName");
                OnSnapshotProjectTypeDisplayNameChanged();
            }
        }
        private global::System.String _SnapshotProjectTypeDisplayName;
        partial void OnSnapshotProjectTypeDisplayNameChanging(global::System.String value);
        partial void OnSnapshotProjectTypeDisplayNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotProject_SnapshotProjectType_SnapshotProjectTypeID", "SnapshotProject")]
        public EntityCollection<SnapshotProject> SnapshotProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SnapshotProject>("ProjectFirma.Web.Models.FK_SnapshotProject_SnapshotProjectType_SnapshotProjectTypeID", "SnapshotProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SnapshotProject>("ProjectFirma.Web.Models.FK_SnapshotProject_SnapshotProjectType_SnapshotProjectTypeID", "SnapshotProject", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="spatial_ref_sys")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class spatial_ref_sys : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new spatial_ref_sys object.
        /// </summary>
        /// <param name="srid">Initial value of the srid property.</param>
        public static spatial_ref_sys Createspatial_ref_sys(global::System.Int32 srid)
        {
            spatial_ref_sys spatial_ref_sys = new spatial_ref_sys();
            spatial_ref_sys.srid = srid;
            return spatial_ref_sys;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 srid
        {
            get
            {
                return _srid;
            }
            set
            {
                if (_srid != value)
                {
                    OnsridChanging(value);
                    ReportPropertyChanging("srid");
                    _srid = StructuralObject.SetValidValue(value, "srid");
                    ReportPropertyChanged("srid");
                    OnsridChanged();
                }
            }
        }
        private global::System.Int32 _srid;
        partial void OnsridChanging(global::System.Int32 value);
        partial void OnsridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String auth_name
        {
            get
            {
                return _auth_name;
            }
            set
            {
                Onauth_nameChanging(value);
                ReportPropertyChanging("auth_name");
                _auth_name = StructuralObject.SetValidValue(value, true, "auth_name");
                ReportPropertyChanged("auth_name");
                Onauth_nameChanged();
            }
        }
        private global::System.String _auth_name;
        partial void Onauth_nameChanging(global::System.String value);
        partial void Onauth_nameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> auth_srid
        {
            get
            {
                return _auth_srid;
            }
            set
            {
                Onauth_sridChanging(value);
                ReportPropertyChanging("auth_srid");
                _auth_srid = StructuralObject.SetValidValue(value, "auth_srid");
                ReportPropertyChanged("auth_srid");
                Onauth_sridChanged();
            }
        }
        private Nullable<global::System.Int32> _auth_srid;
        partial void Onauth_sridChanging(Nullable<global::System.Int32> value);
        partial void Onauth_sridChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String srtext
        {
            get
            {
                return _srtext;
            }
            set
            {
                OnsrtextChanging(value);
                ReportPropertyChanging("srtext");
                _srtext = StructuralObject.SetValidValue(value, true, "srtext");
                ReportPropertyChanged("srtext");
                OnsrtextChanged();
            }
        }
        private global::System.String _srtext;
        partial void OnsrtextChanging(global::System.String value);
        partial void OnsrtextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String proj4text
        {
            get
            {
                return _proj4text;
            }
            set
            {
                Onproj4textChanging(value);
                ReportPropertyChanging("proj4text");
                _proj4text = StructuralObject.SetValidValue(value, true, "proj4text");
                ReportPropertyChanged("proj4text");
                Onproj4textChanged();
            }
        }
        private global::System.String _proj4text;
        partial void Onproj4textChanging(global::System.String value);
        partial void Onproj4textChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="State")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class State : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new State object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="jobId">Initial value of the JobId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="createdAt">Initial value of the CreatedAt property.</param>
        public static State CreateState(global::System.Int32 id, global::System.Int32 jobId, global::System.String name, global::System.DateTime createdAt)
        {
            State state = new State();
            state.Id = id;
            state.JobId = jobId;
            state.Name = name;
            state.CreatedAt = createdAt;
            return state;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobId
        {
            get
            {
                return _JobId;
            }
            set
            {
                OnJobIdChanging(value);
                ReportPropertyChanging("JobId");
                _JobId = StructuralObject.SetValidValue(value, "JobId");
                ReportPropertyChanged("JobId");
                OnJobIdChanged();
            }
        }
        private global::System.Int32 _JobId;
        partial void OnJobIdChanging(global::System.Int32 value);
        partial void OnJobIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Reason
        {
            get
            {
                return _Reason;
            }
            set
            {
                OnReasonChanging(value);
                ReportPropertyChanging("Reason");
                _Reason = StructuralObject.SetValidValue(value, true, "Reason");
                ReportPropertyChanged("Reason");
                OnReasonChanged();
            }
        }
        private global::System.String _Reason;
        partial void OnReasonChanging(global::System.String value);
        partial void OnReasonChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreatedAt
        {
            get
            {
                return _CreatedAt;
            }
            set
            {
                OnCreatedAtChanging(value);
                ReportPropertyChanging("CreatedAt");
                _CreatedAt = StructuralObject.SetValidValue(value, "CreatedAt");
                ReportPropertyChanged("CreatedAt");
                OnCreatedAtChanged();
            }
        }
        private global::System.DateTime _CreatedAt;
        partial void OnCreatedAtChanging(global::System.DateTime value);
        partial void OnCreatedAtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true, "Data");
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_State_Job_JobId_Id", "Job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("ProjectFirma.Web.Models.FK_State_Job_JobId_Id", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("ProjectFirma.Web.Models.FK_State_Job_JobId_Id", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("ProjectFirma.Web.Models.FK_State_Job_JobId_Id", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("ProjectFirma.Web.Models.FK_State_Job_JobId_Id", "Job", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="StateProvince")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StateProvince : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StateProvince object.
        /// </summary>
        /// <param name="stateProvinceID">Initial value of the StateProvinceID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="stateProvinceName">Initial value of the StateProvinceName property.</param>
        /// <param name="stateProvinceAbbreviation">Initial value of the StateProvinceAbbreviation property.</param>
        /// <param name="stateProvinceFeatureForAnalysis">Initial value of the StateProvinceFeatureForAnalysis property.</param>
        public static StateProvince CreateStateProvince(global::System.Int32 stateProvinceID, global::System.Int32 tenantID, global::System.String stateProvinceName, global::System.String stateProvinceAbbreviation, global::System.Data.Spatial.DbGeometry stateProvinceFeatureForAnalysis)
        {
            StateProvince stateProvince = new StateProvince();
            stateProvince.StateProvinceID = stateProvinceID;
            stateProvince.TenantID = tenantID;
            stateProvince.StateProvinceName = stateProvinceName;
            stateProvince.StateProvinceAbbreviation = stateProvinceAbbreviation;
            stateProvince.StateProvinceFeatureForAnalysis = stateProvinceFeatureForAnalysis;
            return stateProvince;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StateProvinceID
        {
            get
            {
                return _StateProvinceID;
            }
            set
            {
                if (_StateProvinceID != value)
                {
                    OnStateProvinceIDChanging(value);
                    ReportPropertyChanging("StateProvinceID");
                    _StateProvinceID = StructuralObject.SetValidValue(value, "StateProvinceID");
                    ReportPropertyChanged("StateProvinceID");
                    OnStateProvinceIDChanged();
                }
            }
        }
        private global::System.Int32 _StateProvinceID;
        partial void OnStateProvinceIDChanging(global::System.Int32 value);
        partial void OnStateProvinceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StateProvinceName
        {
            get
            {
                return _StateProvinceName;
            }
            set
            {
                OnStateProvinceNameChanging(value);
                ReportPropertyChanging("StateProvinceName");
                _StateProvinceName = StructuralObject.SetValidValue(value, false, "StateProvinceName");
                ReportPropertyChanged("StateProvinceName");
                OnStateProvinceNameChanged();
            }
        }
        private global::System.String _StateProvinceName;
        partial void OnStateProvinceNameChanging(global::System.String value);
        partial void OnStateProvinceNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String StateProvinceAbbreviation
        {
            get
            {
                return _StateProvinceAbbreviation;
            }
            set
            {
                OnStateProvinceAbbreviationChanging(value);
                ReportPropertyChanging("StateProvinceAbbreviation");
                _StateProvinceAbbreviation = StructuralObject.SetValidValue(value, false, "StateProvinceAbbreviation");
                ReportPropertyChanged("StateProvinceAbbreviation");
                OnStateProvinceAbbreviationChanged();
            }
        }
        private global::System.String _StateProvinceAbbreviation;
        partial void OnStateProvinceAbbreviationChanging(global::System.String value);
        partial void OnStateProvinceAbbreviationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeometry StateProvinceFeature
        {
            get
            {
                return _StateProvinceFeature;
            }
            set
            {
                OnStateProvinceFeatureChanging(value);
                ReportPropertyChanging("StateProvinceFeature");
                _StateProvinceFeature = StructuralObject.SetValidValue(value, true, "StateProvinceFeature");
                ReportPropertyChanged("StateProvinceFeature");
                OnStateProvinceFeatureChanged();
            }
        }
        private global::System.Data.Spatial.DbGeometry _StateProvinceFeature;
        partial void OnStateProvinceFeatureChanging(global::System.Data.Spatial.DbGeometry value);
        partial void OnStateProvinceFeatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeometry StateProvinceFeatureForAnalysis
        {
            get
            {
                return _StateProvinceFeatureForAnalysis;
            }
            set
            {
                OnStateProvinceFeatureForAnalysisChanging(value);
                ReportPropertyChanging("StateProvinceFeatureForAnalysis");
                _StateProvinceFeatureForAnalysis = StructuralObject.SetValidValue(value, false, "StateProvinceFeatureForAnalysis");
                ReportPropertyChanged("StateProvinceFeatureForAnalysis");
                OnStateProvinceFeatureForAnalysisChanged();
            }
        }
        private global::System.Data.Spatial.DbGeometry _StateProvinceFeatureForAnalysis;
        partial void OnStateProvinceFeatureForAnalysisChanging(global::System.Data.Spatial.DbGeometry value);
        partial void OnStateProvinceFeatureForAnalysisChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_County_StateProvince_StateProvinceID", "County")]
        public EntityCollection<County> County
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<County>("ProjectFirma.Web.Models.FK_County_StateProvince_StateProvinceID", "County");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<County>("ProjectFirma.Web.Models.FK_County_StateProvince_StateProvinceID", "County", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_StateProvince_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_StateProvince_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_StateProvince_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_StateProvince_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_StateProvince_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="SupportRequestLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupportRequestLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SupportRequestLog object.
        /// </summary>
        /// <param name="supportRequestLogID">Initial value of the SupportRequestLogID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="requestDate">Initial value of the RequestDate property.</param>
        /// <param name="requestPersonName">Initial value of the RequestPersonName property.</param>
        /// <param name="requestPersonEmail">Initial value of the RequestPersonEmail property.</param>
        /// <param name="supportRequestTypeID">Initial value of the SupportRequestTypeID property.</param>
        /// <param name="requestDescription">Initial value of the RequestDescription property.</param>
        public static SupportRequestLog CreateSupportRequestLog(global::System.Int32 supportRequestLogID, global::System.Int32 tenantID, global::System.DateTime requestDate, global::System.String requestPersonName, global::System.String requestPersonEmail, global::System.Int32 supportRequestTypeID, global::System.String requestDescription)
        {
            SupportRequestLog supportRequestLog = new SupportRequestLog();
            supportRequestLog.SupportRequestLogID = supportRequestLogID;
            supportRequestLog.TenantID = tenantID;
            supportRequestLog.RequestDate = requestDate;
            supportRequestLog.RequestPersonName = requestPersonName;
            supportRequestLog.RequestPersonEmail = requestPersonEmail;
            supportRequestLog.SupportRequestTypeID = supportRequestTypeID;
            supportRequestLog.RequestDescription = requestDescription;
            return supportRequestLog;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupportRequestLogID
        {
            get
            {
                return _SupportRequestLogID;
            }
            set
            {
                if (_SupportRequestLogID != value)
                {
                    OnSupportRequestLogIDChanging(value);
                    ReportPropertyChanging("SupportRequestLogID");
                    _SupportRequestLogID = StructuralObject.SetValidValue(value, "SupportRequestLogID");
                    ReportPropertyChanged("SupportRequestLogID");
                    OnSupportRequestLogIDChanged();
                }
            }
        }
        private global::System.Int32 _SupportRequestLogID;
        partial void OnSupportRequestLogIDChanging(global::System.Int32 value);
        partial void OnSupportRequestLogIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime RequestDate
        {
            get
            {
                return _RequestDate;
            }
            set
            {
                OnRequestDateChanging(value);
                ReportPropertyChanging("RequestDate");
                _RequestDate = StructuralObject.SetValidValue(value, "RequestDate");
                ReportPropertyChanged("RequestDate");
                OnRequestDateChanged();
            }
        }
        private global::System.DateTime _RequestDate;
        partial void OnRequestDateChanging(global::System.DateTime value);
        partial void OnRequestDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequestPersonName
        {
            get
            {
                return _RequestPersonName;
            }
            set
            {
                OnRequestPersonNameChanging(value);
                ReportPropertyChanging("RequestPersonName");
                _RequestPersonName = StructuralObject.SetValidValue(value, false, "RequestPersonName");
                ReportPropertyChanged("RequestPersonName");
                OnRequestPersonNameChanged();
            }
        }
        private global::System.String _RequestPersonName;
        partial void OnRequestPersonNameChanging(global::System.String value);
        partial void OnRequestPersonNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequestPersonEmail
        {
            get
            {
                return _RequestPersonEmail;
            }
            set
            {
                OnRequestPersonEmailChanging(value);
                ReportPropertyChanging("RequestPersonEmail");
                _RequestPersonEmail = StructuralObject.SetValidValue(value, false, "RequestPersonEmail");
                ReportPropertyChanged("RequestPersonEmail");
                OnRequestPersonEmailChanged();
            }
        }
        private global::System.String _RequestPersonEmail;
        partial void OnRequestPersonEmailChanging(global::System.String value);
        partial void OnRequestPersonEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RequestPersonID
        {
            get
            {
                return _RequestPersonID;
            }
            set
            {
                OnRequestPersonIDChanging(value);
                ReportPropertyChanging("RequestPersonID");
                _RequestPersonID = StructuralObject.SetValidValue(value, "RequestPersonID");
                ReportPropertyChanged("RequestPersonID");
                OnRequestPersonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RequestPersonID;
        partial void OnRequestPersonIDChanging(Nullable<global::System.Int32> value);
        partial void OnRequestPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupportRequestTypeID
        {
            get
            {
                return _SupportRequestTypeID;
            }
            set
            {
                OnSupportRequestTypeIDChanging(value);
                ReportPropertyChanging("SupportRequestTypeID");
                _SupportRequestTypeID = StructuralObject.SetValidValue(value, "SupportRequestTypeID");
                ReportPropertyChanged("SupportRequestTypeID");
                OnSupportRequestTypeIDChanged();
            }
        }
        private global::System.Int32 _SupportRequestTypeID;
        partial void OnSupportRequestTypeIDChanging(global::System.Int32 value);
        partial void OnSupportRequestTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequestDescription
        {
            get
            {
                return _RequestDescription;
            }
            set
            {
                OnRequestDescriptionChanging(value);
                ReportPropertyChanging("RequestDescription");
                _RequestDescription = StructuralObject.SetValidValue(value, false, "RequestDescription");
                ReportPropertyChanged("RequestDescription");
                OnRequestDescriptionChanged();
            }
        }
        private global::System.String _RequestDescription;
        partial void OnRequestDescriptionChanging(global::System.String value);
        partial void OnRequestDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RequestPersonOrganization
        {
            get
            {
                return _RequestPersonOrganization;
            }
            set
            {
                OnRequestPersonOrganizationChanging(value);
                ReportPropertyChanging("RequestPersonOrganization");
                _RequestPersonOrganization = StructuralObject.SetValidValue(value, true, "RequestPersonOrganization");
                ReportPropertyChanged("RequestPersonOrganization");
                OnRequestPersonOrganizationChanged();
            }
        }
        private global::System.String _RequestPersonOrganization;
        partial void OnRequestPersonOrganizationChanging(global::System.String value);
        partial void OnRequestPersonOrganizationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RequestPersonPhone
        {
            get
            {
                return _RequestPersonPhone;
            }
            set
            {
                OnRequestPersonPhoneChanging(value);
                ReportPropertyChanging("RequestPersonPhone");
                _RequestPersonPhone = StructuralObject.SetValidValue(value, true, "RequestPersonPhone");
                ReportPropertyChanged("RequestPersonPhone");
                OnRequestPersonPhoneChanged();
            }
        }
        private global::System.String _RequestPersonPhone;
        partial void OnRequestPersonPhoneChanging(global::System.String value);
        partial void OnRequestPersonPhoneChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SupportRequestLog_Person_RequestPersonID_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_SupportRequestLog_Person_RequestPersonID_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_SupportRequestLog_Person_RequestPersonID_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_SupportRequestLog_Person_RequestPersonID_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_SupportRequestLog_Person_RequestPersonID_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SupportRequestLog_SupportRequestType_SupportRequestTypeID", "SupportRequestType")]
        public SupportRequestType SupportRequestType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SupportRequestType>("ProjectFirma.Web.Models.FK_SupportRequestLog_SupportRequestType_SupportRequestTypeID", "SupportRequestType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SupportRequestType>("ProjectFirma.Web.Models.FK_SupportRequestLog_SupportRequestType_SupportRequestTypeID", "SupportRequestType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<SupportRequestType> SupportRequestTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<SupportRequestType>("ProjectFirma.Web.Models.FK_SupportRequestLog_SupportRequestType_SupportRequestTypeID", "SupportRequestType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<SupportRequestType>("ProjectFirma.Web.Models.FK_SupportRequestLog_SupportRequestType_SupportRequestTypeID", "SupportRequestType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SupportRequestLog_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_SupportRequestLog_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_SupportRequestLog_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_SupportRequestLog_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_SupportRequestLog_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="SupportRequestType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SupportRequestType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SupportRequestType object.
        /// </summary>
        /// <param name="supportRequestTypeID">Initial value of the SupportRequestTypeID property.</param>
        /// <param name="supportRequestTypeName">Initial value of the SupportRequestTypeName property.</param>
        /// <param name="supportRequestTypeDisplayName">Initial value of the SupportRequestTypeDisplayName property.</param>
        /// <param name="supportRequestTypeSortOrder">Initial value of the SupportRequestTypeSortOrder property.</param>
        public static SupportRequestType CreateSupportRequestType(global::System.Int32 supportRequestTypeID, global::System.String supportRequestTypeName, global::System.String supportRequestTypeDisplayName, global::System.Int32 supportRequestTypeSortOrder)
        {
            SupportRequestType supportRequestType = new SupportRequestType();
            supportRequestType.SupportRequestTypeID = supportRequestTypeID;
            supportRequestType.SupportRequestTypeName = supportRequestTypeName;
            supportRequestType.SupportRequestTypeDisplayName = supportRequestTypeDisplayName;
            supportRequestType.SupportRequestTypeSortOrder = supportRequestTypeSortOrder;
            return supportRequestType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupportRequestTypeID
        {
            get
            {
                return _SupportRequestTypeID;
            }
            set
            {
                if (_SupportRequestTypeID != value)
                {
                    OnSupportRequestTypeIDChanging(value);
                    ReportPropertyChanging("SupportRequestTypeID");
                    _SupportRequestTypeID = StructuralObject.SetValidValue(value, "SupportRequestTypeID");
                    ReportPropertyChanged("SupportRequestTypeID");
                    OnSupportRequestTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _SupportRequestTypeID;
        partial void OnSupportRequestTypeIDChanging(global::System.Int32 value);
        partial void OnSupportRequestTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SupportRequestTypeName
        {
            get
            {
                return _SupportRequestTypeName;
            }
            set
            {
                OnSupportRequestTypeNameChanging(value);
                ReportPropertyChanging("SupportRequestTypeName");
                _SupportRequestTypeName = StructuralObject.SetValidValue(value, false, "SupportRequestTypeName");
                ReportPropertyChanged("SupportRequestTypeName");
                OnSupportRequestTypeNameChanged();
            }
        }
        private global::System.String _SupportRequestTypeName;
        partial void OnSupportRequestTypeNameChanging(global::System.String value);
        partial void OnSupportRequestTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SupportRequestTypeDisplayName
        {
            get
            {
                return _SupportRequestTypeDisplayName;
            }
            set
            {
                OnSupportRequestTypeDisplayNameChanging(value);
                ReportPropertyChanging("SupportRequestTypeDisplayName");
                _SupportRequestTypeDisplayName = StructuralObject.SetValidValue(value, false, "SupportRequestTypeDisplayName");
                ReportPropertyChanged("SupportRequestTypeDisplayName");
                OnSupportRequestTypeDisplayNameChanged();
            }
        }
        private global::System.String _SupportRequestTypeDisplayName;
        partial void OnSupportRequestTypeDisplayNameChanging(global::System.String value);
        partial void OnSupportRequestTypeDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SupportRequestTypeSortOrder
        {
            get
            {
                return _SupportRequestTypeSortOrder;
            }
            set
            {
                OnSupportRequestTypeSortOrderChanging(value);
                ReportPropertyChanging("SupportRequestTypeSortOrder");
                _SupportRequestTypeSortOrder = StructuralObject.SetValidValue(value, "SupportRequestTypeSortOrder");
                ReportPropertyChanged("SupportRequestTypeSortOrder");
                OnSupportRequestTypeSortOrderChanged();
            }
        }
        private global::System.Int32 _SupportRequestTypeSortOrder;
        partial void OnSupportRequestTypeSortOrderChanging(global::System.Int32 value);
        partial void OnSupportRequestTypeSortOrderChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SupportRequestLog_SupportRequestType_SupportRequestTypeID", "SupportRequestLog")]
        public EntityCollection<SupportRequestLog> SupportRequestLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SupportRequestLog>("ProjectFirma.Web.Models.FK_SupportRequestLog_SupportRequestType_SupportRequestTypeID", "SupportRequestLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SupportRequestLog>("ProjectFirma.Web.Models.FK_SupportRequestLog_SupportRequestType_SupportRequestTypeID", "SupportRequestLog", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="tagID">Initial value of the TagID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="tagName">Initial value of the TagName property.</param>
        public static Tag CreateTag(global::System.Int32 tagID, global::System.Int32 tenantID, global::System.String tagName)
        {
            Tag tag = new Tag();
            tag.TagID = tagID;
            tag.TenantID = tenantID;
            tag.TagName = tagName;
            return tag;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TagID
        {
            get
            {
                return _TagID;
            }
            set
            {
                if (_TagID != value)
                {
                    OnTagIDChanging(value);
                    ReportPropertyChanging("TagID");
                    _TagID = StructuralObject.SetValidValue(value, "TagID");
                    ReportPropertyChanged("TagID");
                    OnTagIDChanged();
                }
            }
        }
        private global::System.Int32 _TagID;
        partial void OnTagIDChanging(global::System.Int32 value);
        partial void OnTagIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagName
        {
            get
            {
                return _TagName;
            }
            set
            {
                OnTagNameChanging(value);
                ReportPropertyChanging("TagName");
                _TagName = StructuralObject.SetValidValue(value, false, "TagName");
                ReportPropertyChanged("TagName");
                OnTagNameChanged();
            }
        }
        private global::System.String _TagName;
        partial void OnTagNameChanging(global::System.String value);
        partial void OnTagNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TagDescription
        {
            get
            {
                return _TagDescription;
            }
            set
            {
                OnTagDescriptionChanging(value);
                ReportPropertyChanging("TagDescription");
                _TagDescription = StructuralObject.SetValidValue(value, true, "TagDescription");
                ReportPropertyChanged("TagDescription");
                OnTagDescriptionChanged();
            }
        }
        private global::System.String _TagDescription;
        partial void OnTagDescriptionChanging(global::System.String value);
        partial void OnTagDescriptionChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectTag_Tag_TagID", "ProjectTag")]
        public EntityCollection<ProjectTag> ProjectTag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectTag>("ProjectFirma.Web.Models.FK_ProjectTag_Tag_TagID", "ProjectTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectTag>("ProjectFirma.Web.Models.FK_ProjectTag_Tag_TagID", "ProjectTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Tag_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Tag_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Tag_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Tag_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_Tag_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="TaxonomyBranch")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaxonomyBranch : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaxonomyBranch object.
        /// </summary>
        /// <param name="taxonomyBranchID">Initial value of the TaxonomyBranchID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="taxonomyTrunkID">Initial value of the TaxonomyTrunkID property.</param>
        /// <param name="taxonomyBranchName">Initial value of the TaxonomyBranchName property.</param>
        public static TaxonomyBranch CreateTaxonomyBranch(global::System.Int32 taxonomyBranchID, global::System.Int32 tenantID, global::System.Int32 taxonomyTrunkID, global::System.String taxonomyBranchName)
        {
            TaxonomyBranch taxonomyBranch = new TaxonomyBranch();
            taxonomyBranch.TaxonomyBranchID = taxonomyBranchID;
            taxonomyBranch.TenantID = tenantID;
            taxonomyBranch.TaxonomyTrunkID = taxonomyTrunkID;
            taxonomyBranch.TaxonomyBranchName = taxonomyBranchName;
            return taxonomyBranch;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaxonomyBranchID
        {
            get
            {
                return _TaxonomyBranchID;
            }
            set
            {
                if (_TaxonomyBranchID != value)
                {
                    OnTaxonomyBranchIDChanging(value);
                    ReportPropertyChanging("TaxonomyBranchID");
                    _TaxonomyBranchID = StructuralObject.SetValidValue(value, "TaxonomyBranchID");
                    ReportPropertyChanged("TaxonomyBranchID");
                    OnTaxonomyBranchIDChanged();
                }
            }
        }
        private global::System.Int32 _TaxonomyBranchID;
        partial void OnTaxonomyBranchIDChanging(global::System.Int32 value);
        partial void OnTaxonomyBranchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaxonomyTrunkID
        {
            get
            {
                return _TaxonomyTrunkID;
            }
            set
            {
                OnTaxonomyTrunkIDChanging(value);
                ReportPropertyChanging("TaxonomyTrunkID");
                _TaxonomyTrunkID = StructuralObject.SetValidValue(value, "TaxonomyTrunkID");
                ReportPropertyChanged("TaxonomyTrunkID");
                OnTaxonomyTrunkIDChanged();
            }
        }
        private global::System.Int32 _TaxonomyTrunkID;
        partial void OnTaxonomyTrunkIDChanging(global::System.Int32 value);
        partial void OnTaxonomyTrunkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaxonomyBranchName
        {
            get
            {
                return _TaxonomyBranchName;
            }
            set
            {
                OnTaxonomyBranchNameChanging(value);
                ReportPropertyChanging("TaxonomyBranchName");
                _TaxonomyBranchName = StructuralObject.SetValidValue(value, false, "TaxonomyBranchName");
                ReportPropertyChanged("TaxonomyBranchName");
                OnTaxonomyBranchNameChanged();
            }
        }
        private global::System.String _TaxonomyBranchName;
        partial void OnTaxonomyBranchNameChanging(global::System.String value);
        partial void OnTaxonomyBranchNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxonomyBranchDescription
        {
            get
            {
                return _TaxonomyBranchDescription;
            }
            set
            {
                OnTaxonomyBranchDescriptionChanging(value);
                ReportPropertyChanging("TaxonomyBranchDescription");
                _TaxonomyBranchDescription = StructuralObject.SetValidValue(value, true, "TaxonomyBranchDescription");
                ReportPropertyChanged("TaxonomyBranchDescription");
                OnTaxonomyBranchDescriptionChanged();
            }
        }
        private global::System.String _TaxonomyBranchDescription;
        partial void OnTaxonomyBranchDescriptionChanging(global::System.String value);
        partial void OnTaxonomyBranchDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ThemeColor
        {
            get
            {
                return _ThemeColor;
            }
            set
            {
                OnThemeColorChanging(value);
                ReportPropertyChanging("ThemeColor");
                _ThemeColor = StructuralObject.SetValidValue(value, true, "ThemeColor");
                ReportPropertyChanged("ThemeColor");
                OnThemeColorChanged();
            }
        }
        private global::System.String _ThemeColor;
        partial void OnThemeColorChanging(global::System.String value);
        partial void OnThemeColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxonomyBranchCode
        {
            get
            {
                return _TaxonomyBranchCode;
            }
            set
            {
                OnTaxonomyBranchCodeChanging(value);
                ReportPropertyChanging("TaxonomyBranchCode");
                _TaxonomyBranchCode = StructuralObject.SetValidValue(value, true, "TaxonomyBranchCode");
                ReportPropertyChanged("TaxonomyBranchCode");
                OnTaxonomyBranchCodeChanged();
            }
        }
        private global::System.String _TaxonomyBranchCode;
        partial void OnTaxonomyBranchCodeChanging(global::System.String value);
        partial void OnTaxonomyBranchCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaxonomyBranchSortOrder
        {
            get
            {
                return _TaxonomyBranchSortOrder;
            }
            set
            {
                OnTaxonomyBranchSortOrderChanging(value);
                ReportPropertyChanging("TaxonomyBranchSortOrder");
                _TaxonomyBranchSortOrder = StructuralObject.SetValidValue(value, "TaxonomyBranchSortOrder");
                ReportPropertyChanged("TaxonomyBranchSortOrder");
                OnTaxonomyBranchSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _TaxonomyBranchSortOrder;
        partial void OnTaxonomyBranchSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnTaxonomyBranchSortOrderChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PersonStewardTaxonomyBranch_TaxonomyBranch_TaxonomyBranchID", "PersonStewardTaxonomyBranch")]
        public EntityCollection<PersonStewardTaxonomyBranch> PersonStewardTaxonomyBranch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonStewardTaxonomyBranch>("ProjectFirma.Web.Models.FK_PersonStewardTaxonomyBranch_TaxonomyBranch_TaxonomyBranchID", "PersonStewardTaxonomyBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonStewardTaxonomyBranch>("ProjectFirma.Web.Models.FK_PersonStewardTaxonomyBranch_TaxonomyBranch_TaxonomyBranchID", "PersonStewardTaxonomyBranch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TaxonomyBranch_TaxonomyTrunk_TaxonomyTrunkID", "TaxonomyTrunk")]
        public TaxonomyTrunk TaxonomyTrunk
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxonomyTrunk>("ProjectFirma.Web.Models.FK_TaxonomyBranch_TaxonomyTrunk_TaxonomyTrunkID", "TaxonomyTrunk").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxonomyTrunk>("ProjectFirma.Web.Models.FK_TaxonomyBranch_TaxonomyTrunk_TaxonomyTrunkID", "TaxonomyTrunk").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaxonomyTrunk> TaxonomyTrunkReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxonomyTrunk>("ProjectFirma.Web.Models.FK_TaxonomyBranch_TaxonomyTrunk_TaxonomyTrunkID", "TaxonomyTrunk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaxonomyTrunk>("ProjectFirma.Web.Models.FK_TaxonomyBranch_TaxonomyTrunk_TaxonomyTrunkID", "TaxonomyTrunk", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TaxonomyBranch_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TaxonomyBranch_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TaxonomyBranch_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TaxonomyBranch_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TaxonomyBranch_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TaxonomyLeaf_TaxonomyBranch_TaxonomyBranchID", "TaxonomyLeaf")]
        public EntityCollection<TaxonomyLeaf> TaxonomyLeaf
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaxonomyLeaf>("ProjectFirma.Web.Models.FK_TaxonomyLeaf_TaxonomyBranch_TaxonomyBranchID", "TaxonomyLeaf");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaxonomyLeaf>("ProjectFirma.Web.Models.FK_TaxonomyLeaf_TaxonomyBranch_TaxonomyBranchID", "TaxonomyLeaf", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="TaxonomyLeaf")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaxonomyLeaf : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaxonomyLeaf object.
        /// </summary>
        /// <param name="taxonomyLeafID">Initial value of the TaxonomyLeafID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="taxonomyBranchID">Initial value of the TaxonomyBranchID property.</param>
        /// <param name="taxonomyLeafName">Initial value of the TaxonomyLeafName property.</param>
        public static TaxonomyLeaf CreateTaxonomyLeaf(global::System.Int32 taxonomyLeafID, global::System.Int32 tenantID, global::System.Int32 taxonomyBranchID, global::System.String taxonomyLeafName)
        {
            TaxonomyLeaf taxonomyLeaf = new TaxonomyLeaf();
            taxonomyLeaf.TaxonomyLeafID = taxonomyLeafID;
            taxonomyLeaf.TenantID = tenantID;
            taxonomyLeaf.TaxonomyBranchID = taxonomyBranchID;
            taxonomyLeaf.TaxonomyLeafName = taxonomyLeafName;
            return taxonomyLeaf;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaxonomyLeafID
        {
            get
            {
                return _TaxonomyLeafID;
            }
            set
            {
                if (_TaxonomyLeafID != value)
                {
                    OnTaxonomyLeafIDChanging(value);
                    ReportPropertyChanging("TaxonomyLeafID");
                    _TaxonomyLeafID = StructuralObject.SetValidValue(value, "TaxonomyLeafID");
                    ReportPropertyChanged("TaxonomyLeafID");
                    OnTaxonomyLeafIDChanged();
                }
            }
        }
        private global::System.Int32 _TaxonomyLeafID;
        partial void OnTaxonomyLeafIDChanging(global::System.Int32 value);
        partial void OnTaxonomyLeafIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaxonomyBranchID
        {
            get
            {
                return _TaxonomyBranchID;
            }
            set
            {
                OnTaxonomyBranchIDChanging(value);
                ReportPropertyChanging("TaxonomyBranchID");
                _TaxonomyBranchID = StructuralObject.SetValidValue(value, "TaxonomyBranchID");
                ReportPropertyChanged("TaxonomyBranchID");
                OnTaxonomyBranchIDChanged();
            }
        }
        private global::System.Int32 _TaxonomyBranchID;
        partial void OnTaxonomyBranchIDChanging(global::System.Int32 value);
        partial void OnTaxonomyBranchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaxonomyLeafName
        {
            get
            {
                return _TaxonomyLeafName;
            }
            set
            {
                OnTaxonomyLeafNameChanging(value);
                ReportPropertyChanging("TaxonomyLeafName");
                _TaxonomyLeafName = StructuralObject.SetValidValue(value, false, "TaxonomyLeafName");
                ReportPropertyChanged("TaxonomyLeafName");
                OnTaxonomyLeafNameChanged();
            }
        }
        private global::System.String _TaxonomyLeafName;
        partial void OnTaxonomyLeafNameChanging(global::System.String value);
        partial void OnTaxonomyLeafNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxonomyLeafDescription
        {
            get
            {
                return _TaxonomyLeafDescription;
            }
            set
            {
                OnTaxonomyLeafDescriptionChanging(value);
                ReportPropertyChanging("TaxonomyLeafDescription");
                _TaxonomyLeafDescription = StructuralObject.SetValidValue(value, true, "TaxonomyLeafDescription");
                ReportPropertyChanged("TaxonomyLeafDescription");
                OnTaxonomyLeafDescriptionChanged();
            }
        }
        private global::System.String _TaxonomyLeafDescription;
        partial void OnTaxonomyLeafDescriptionChanging(global::System.String value);
        partial void OnTaxonomyLeafDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxonomyLeafCode
        {
            get
            {
                return _TaxonomyLeafCode;
            }
            set
            {
                OnTaxonomyLeafCodeChanging(value);
                ReportPropertyChanging("TaxonomyLeafCode");
                _TaxonomyLeafCode = StructuralObject.SetValidValue(value, true, "TaxonomyLeafCode");
                ReportPropertyChanged("TaxonomyLeafCode");
                OnTaxonomyLeafCodeChanged();
            }
        }
        private global::System.String _TaxonomyLeafCode;
        partial void OnTaxonomyLeafCodeChanging(global::System.String value);
        partial void OnTaxonomyLeafCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ThemeColor
        {
            get
            {
                return _ThemeColor;
            }
            set
            {
                OnThemeColorChanging(value);
                ReportPropertyChanging("ThemeColor");
                _ThemeColor = StructuralObject.SetValidValue(value, true, "ThemeColor");
                ReportPropertyChanged("ThemeColor");
                OnThemeColorChanged();
            }
        }
        private global::System.String _ThemeColor;
        partial void OnThemeColorChanging(global::System.String value);
        partial void OnThemeColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaxonomyLeafSortOrder
        {
            get
            {
                return _TaxonomyLeafSortOrder;
            }
            set
            {
                OnTaxonomyLeafSortOrderChanging(value);
                ReportPropertyChanging("TaxonomyLeafSortOrder");
                _TaxonomyLeafSortOrder = StructuralObject.SetValidValue(value, "TaxonomyLeafSortOrder");
                ReportPropertyChanged("TaxonomyLeafSortOrder");
                OnTaxonomyLeafSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _TaxonomyLeafSortOrder;
        partial void OnTaxonomyLeafSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnTaxonomyLeafSortOrderChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Project_TaxonomyLeaf_TaxonomyLeafID", "Project")]
        public EntityCollection<Project> Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("ProjectFirma.Web.Models.FK_Project_TaxonomyLeaf_TaxonomyLeafID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("ProjectFirma.Web.Models.FK_Project_TaxonomyLeaf_TaxonomyLeafID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TaxonomyLeaf_TaxonomyBranch_TaxonomyBranchID", "TaxonomyBranch")]
        public TaxonomyBranch TaxonomyBranch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxonomyBranch>("ProjectFirma.Web.Models.FK_TaxonomyLeaf_TaxonomyBranch_TaxonomyBranchID", "TaxonomyBranch").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxonomyBranch>("ProjectFirma.Web.Models.FK_TaxonomyLeaf_TaxonomyBranch_TaxonomyBranchID", "TaxonomyBranch").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaxonomyBranch> TaxonomyBranchReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxonomyBranch>("ProjectFirma.Web.Models.FK_TaxonomyLeaf_TaxonomyBranch_TaxonomyBranchID", "TaxonomyBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaxonomyBranch>("ProjectFirma.Web.Models.FK_TaxonomyLeaf_TaxonomyBranch_TaxonomyBranchID", "TaxonomyBranch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TaxonomyLeaf_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TaxonomyLeaf_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TaxonomyLeaf_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TaxonomyLeaf_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TaxonomyLeaf_Tenant_TenantID", "Tenant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TaxonomyLeafPerformanceMeasure_TaxonomyLeaf_TaxonomyLeafID", "TaxonomyLeafPerformanceMeasure")]
        public EntityCollection<TaxonomyLeafPerformanceMeasure> TaxonomyLeafPerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaxonomyLeafPerformanceMeasure>("ProjectFirma.Web.Models.FK_TaxonomyLeafPerformanceMeasure_TaxonomyLeaf_TaxonomyLeafID", "TaxonomyLeafPerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaxonomyLeafPerformanceMeasure>("ProjectFirma.Web.Models.FK_TaxonomyLeafPerformanceMeasure_TaxonomyLeaf_TaxonomyLeafID", "TaxonomyLeafPerformanceMeasure", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="TaxonomyLeafPerformanceMeasure")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaxonomyLeafPerformanceMeasure : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaxonomyLeafPerformanceMeasure object.
        /// </summary>
        /// <param name="taxonomyLeafPerformanceMeasureID">Initial value of the TaxonomyLeafPerformanceMeasureID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="taxonomyLeafID">Initial value of the TaxonomyLeafID property.</param>
        /// <param name="performanceMeasureID">Initial value of the PerformanceMeasureID property.</param>
        /// <param name="isPrimaryTaxonomyLeaf">Initial value of the IsPrimaryTaxonomyLeaf property.</param>
        public static TaxonomyLeafPerformanceMeasure CreateTaxonomyLeafPerformanceMeasure(global::System.Int32 taxonomyLeafPerformanceMeasureID, global::System.Int32 tenantID, global::System.Int32 taxonomyLeafID, global::System.Int32 performanceMeasureID, global::System.Boolean isPrimaryTaxonomyLeaf)
        {
            TaxonomyLeafPerformanceMeasure taxonomyLeafPerformanceMeasure = new TaxonomyLeafPerformanceMeasure();
            taxonomyLeafPerformanceMeasure.TaxonomyLeafPerformanceMeasureID = taxonomyLeafPerformanceMeasureID;
            taxonomyLeafPerformanceMeasure.TenantID = tenantID;
            taxonomyLeafPerformanceMeasure.TaxonomyLeafID = taxonomyLeafID;
            taxonomyLeafPerformanceMeasure.PerformanceMeasureID = performanceMeasureID;
            taxonomyLeafPerformanceMeasure.IsPrimaryTaxonomyLeaf = isPrimaryTaxonomyLeaf;
            return taxonomyLeafPerformanceMeasure;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaxonomyLeafPerformanceMeasureID
        {
            get
            {
                return _TaxonomyLeafPerformanceMeasureID;
            }
            set
            {
                if (_TaxonomyLeafPerformanceMeasureID != value)
                {
                    OnTaxonomyLeafPerformanceMeasureIDChanging(value);
                    ReportPropertyChanging("TaxonomyLeafPerformanceMeasureID");
                    _TaxonomyLeafPerformanceMeasureID = StructuralObject.SetValidValue(value, "TaxonomyLeafPerformanceMeasureID");
                    ReportPropertyChanged("TaxonomyLeafPerformanceMeasureID");
                    OnTaxonomyLeafPerformanceMeasureIDChanged();
                }
            }
        }
        private global::System.Int32 _TaxonomyLeafPerformanceMeasureID;
        partial void OnTaxonomyLeafPerformanceMeasureIDChanging(global::System.Int32 value);
        partial void OnTaxonomyLeafPerformanceMeasureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaxonomyLeafID
        {
            get
            {
                return _TaxonomyLeafID;
            }
            set
            {
                OnTaxonomyLeafIDChanging(value);
                ReportPropertyChanging("TaxonomyLeafID");
                _TaxonomyLeafID = StructuralObject.SetValidValue(value, "TaxonomyLeafID");
                ReportPropertyChanged("TaxonomyLeafID");
                OnTaxonomyLeafIDChanged();
            }
        }
        private global::System.Int32 _TaxonomyLeafID;
        partial void OnTaxonomyLeafIDChanging(global::System.Int32 value);
        partial void OnTaxonomyLeafIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PerformanceMeasureID
        {
            get
            {
                return _PerformanceMeasureID;
            }
            set
            {
                OnPerformanceMeasureIDChanging(value);
                ReportPropertyChanging("PerformanceMeasureID");
                _PerformanceMeasureID = StructuralObject.SetValidValue(value, "PerformanceMeasureID");
                ReportPropertyChanged("PerformanceMeasureID");
                OnPerformanceMeasureIDChanged();
            }
        }
        private global::System.Int32 _PerformanceMeasureID;
        partial void OnPerformanceMeasureIDChanging(global::System.Int32 value);
        partial void OnPerformanceMeasureIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsPrimaryTaxonomyLeaf
        {
            get
            {
                return _IsPrimaryTaxonomyLeaf;
            }
            set
            {
                OnIsPrimaryTaxonomyLeafChanging(value);
                ReportPropertyChanging("IsPrimaryTaxonomyLeaf");
                _IsPrimaryTaxonomyLeaf = StructuralObject.SetValidValue(value, "IsPrimaryTaxonomyLeaf");
                ReportPropertyChanged("IsPrimaryTaxonomyLeaf");
                OnIsPrimaryTaxonomyLeafChanged();
            }
        }
        private global::System.Boolean _IsPrimaryTaxonomyLeaf;
        partial void OnIsPrimaryTaxonomyLeafChanging(global::System.Boolean value);
        partial void OnIsPrimaryTaxonomyLeafChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TaxonomyLeafPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure")]
        public PerformanceMeasure PerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_TaxonomyLeafPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_TaxonomyLeafPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<PerformanceMeasure> PerformanceMeasureReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_TaxonomyLeafPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<PerformanceMeasure>("ProjectFirma.Web.Models.FK_TaxonomyLeafPerformanceMeasure_PerformanceMeasure_PerformanceMeasureID", "PerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TaxonomyLeafPerformanceMeasure_TaxonomyLeaf_TaxonomyLeafID", "TaxonomyLeaf")]
        public TaxonomyLeaf TaxonomyLeaf
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxonomyLeaf>("ProjectFirma.Web.Models.FK_TaxonomyLeafPerformanceMeasure_TaxonomyLeaf_TaxonomyLeafID", "TaxonomyLeaf").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxonomyLeaf>("ProjectFirma.Web.Models.FK_TaxonomyLeafPerformanceMeasure_TaxonomyLeaf_TaxonomyLeafID", "TaxonomyLeaf").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaxonomyLeaf> TaxonomyLeafReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxonomyLeaf>("ProjectFirma.Web.Models.FK_TaxonomyLeafPerformanceMeasure_TaxonomyLeaf_TaxonomyLeafID", "TaxonomyLeaf");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaxonomyLeaf>("ProjectFirma.Web.Models.FK_TaxonomyLeafPerformanceMeasure_TaxonomyLeaf_TaxonomyLeafID", "TaxonomyLeaf", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TaxonomyLeafPerformanceMeasure_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TaxonomyLeafPerformanceMeasure_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TaxonomyLeafPerformanceMeasure_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TaxonomyLeafPerformanceMeasure_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TaxonomyLeafPerformanceMeasure_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="TaxonomyLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaxonomyLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaxonomyLevel object.
        /// </summary>
        /// <param name="taxonomyLevelID">Initial value of the TaxonomyLevelID property.</param>
        /// <param name="taxonomyLevelName">Initial value of the TaxonomyLevelName property.</param>
        /// <param name="taxonomyLevelDisplayName">Initial value of the TaxonomyLevelDisplayName property.</param>
        public static TaxonomyLevel CreateTaxonomyLevel(global::System.Int32 taxonomyLevelID, global::System.String taxonomyLevelName, global::System.String taxonomyLevelDisplayName)
        {
            TaxonomyLevel taxonomyLevel = new TaxonomyLevel();
            taxonomyLevel.TaxonomyLevelID = taxonomyLevelID;
            taxonomyLevel.TaxonomyLevelName = taxonomyLevelName;
            taxonomyLevel.TaxonomyLevelDisplayName = taxonomyLevelDisplayName;
            return taxonomyLevel;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaxonomyLevelID
        {
            get
            {
                return _TaxonomyLevelID;
            }
            set
            {
                if (_TaxonomyLevelID != value)
                {
                    OnTaxonomyLevelIDChanging(value);
                    ReportPropertyChanging("TaxonomyLevelID");
                    _TaxonomyLevelID = StructuralObject.SetValidValue(value, "TaxonomyLevelID");
                    ReportPropertyChanged("TaxonomyLevelID");
                    OnTaxonomyLevelIDChanged();
                }
            }
        }
        private global::System.Int32 _TaxonomyLevelID;
        partial void OnTaxonomyLevelIDChanging(global::System.Int32 value);
        partial void OnTaxonomyLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaxonomyLevelName
        {
            get
            {
                return _TaxonomyLevelName;
            }
            set
            {
                OnTaxonomyLevelNameChanging(value);
                ReportPropertyChanging("TaxonomyLevelName");
                _TaxonomyLevelName = StructuralObject.SetValidValue(value, false, "TaxonomyLevelName");
                ReportPropertyChanged("TaxonomyLevelName");
                OnTaxonomyLevelNameChanged();
            }
        }
        private global::System.String _TaxonomyLevelName;
        partial void OnTaxonomyLevelNameChanging(global::System.String value);
        partial void OnTaxonomyLevelNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaxonomyLevelDisplayName
        {
            get
            {
                return _TaxonomyLevelDisplayName;
            }
            set
            {
                OnTaxonomyLevelDisplayNameChanging(value);
                ReportPropertyChanging("TaxonomyLevelDisplayName");
                _TaxonomyLevelDisplayName = StructuralObject.SetValidValue(value, false, "TaxonomyLevelDisplayName");
                ReportPropertyChanged("TaxonomyLevelDisplayName");
                OnTaxonomyLevelDisplayNameChanged();
            }
        }
        private global::System.String _TaxonomyLevelDisplayName;
        partial void OnTaxonomyLevelDisplayNameChanging(global::System.String value);
        partial void OnTaxonomyLevelDisplayNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_TaxonomyLevel_AssociatePerfomanceMeasureTaxonomyLevelID_TaxonomyLevelID", "TenantAttribute")]
        public EntityCollection<TenantAttribute> TenantAttribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TenantAttribute>("ProjectFirma.Web.Models.FK_TenantAttribute_TaxonomyLevel_AssociatePerfomanceMeasureTaxonomyLevelID_TaxonomyLevelID", "TenantAttribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TenantAttribute>("ProjectFirma.Web.Models.FK_TenantAttribute_TaxonomyLevel_AssociatePerfomanceMeasureTaxonomyLevelID_TaxonomyLevelID", "TenantAttribute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_TaxonomyLevel_TaxonomyLevelID", "TenantAttribute")]
        public EntityCollection<TenantAttribute> TenantAttribute1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TenantAttribute>("ProjectFirma.Web.Models.FK_TenantAttribute_TaxonomyLevel_TaxonomyLevelID", "TenantAttribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TenantAttribute>("ProjectFirma.Web.Models.FK_TenantAttribute_TaxonomyLevel_TaxonomyLevelID", "TenantAttribute", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="TaxonomyTrunk")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TaxonomyTrunk : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TaxonomyTrunk object.
        /// </summary>
        /// <param name="taxonomyTrunkID">Initial value of the TaxonomyTrunkID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="taxonomyTrunkName">Initial value of the TaxonomyTrunkName property.</param>
        public static TaxonomyTrunk CreateTaxonomyTrunk(global::System.Int32 taxonomyTrunkID, global::System.Int32 tenantID, global::System.String taxonomyTrunkName)
        {
            TaxonomyTrunk taxonomyTrunk = new TaxonomyTrunk();
            taxonomyTrunk.TaxonomyTrunkID = taxonomyTrunkID;
            taxonomyTrunk.TenantID = tenantID;
            taxonomyTrunk.TaxonomyTrunkName = taxonomyTrunkName;
            return taxonomyTrunk;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaxonomyTrunkID
        {
            get
            {
                return _TaxonomyTrunkID;
            }
            set
            {
                if (_TaxonomyTrunkID != value)
                {
                    OnTaxonomyTrunkIDChanging(value);
                    ReportPropertyChanging("TaxonomyTrunkID");
                    _TaxonomyTrunkID = StructuralObject.SetValidValue(value, "TaxonomyTrunkID");
                    ReportPropertyChanged("TaxonomyTrunkID");
                    OnTaxonomyTrunkIDChanged();
                }
            }
        }
        private global::System.Int32 _TaxonomyTrunkID;
        partial void OnTaxonomyTrunkIDChanging(global::System.Int32 value);
        partial void OnTaxonomyTrunkIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaxonomyTrunkName
        {
            get
            {
                return _TaxonomyTrunkName;
            }
            set
            {
                OnTaxonomyTrunkNameChanging(value);
                ReportPropertyChanging("TaxonomyTrunkName");
                _TaxonomyTrunkName = StructuralObject.SetValidValue(value, false, "TaxonomyTrunkName");
                ReportPropertyChanged("TaxonomyTrunkName");
                OnTaxonomyTrunkNameChanged();
            }
        }
        private global::System.String _TaxonomyTrunkName;
        partial void OnTaxonomyTrunkNameChanging(global::System.String value);
        partial void OnTaxonomyTrunkNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxonomyTrunkDescription
        {
            get
            {
                return _TaxonomyTrunkDescription;
            }
            set
            {
                OnTaxonomyTrunkDescriptionChanging(value);
                ReportPropertyChanging("TaxonomyTrunkDescription");
                _TaxonomyTrunkDescription = StructuralObject.SetValidValue(value, true, "TaxonomyTrunkDescription");
                ReportPropertyChanged("TaxonomyTrunkDescription");
                OnTaxonomyTrunkDescriptionChanged();
            }
        }
        private global::System.String _TaxonomyTrunkDescription;
        partial void OnTaxonomyTrunkDescriptionChanging(global::System.String value);
        partial void OnTaxonomyTrunkDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ThemeColor
        {
            get
            {
                return _ThemeColor;
            }
            set
            {
                OnThemeColorChanging(value);
                ReportPropertyChanging("ThemeColor");
                _ThemeColor = StructuralObject.SetValidValue(value, true, "ThemeColor");
                ReportPropertyChanged("ThemeColor");
                OnThemeColorChanged();
            }
        }
        private global::System.String _ThemeColor;
        partial void OnThemeColorChanging(global::System.String value);
        partial void OnThemeColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TaxonomyTrunkCode
        {
            get
            {
                return _TaxonomyTrunkCode;
            }
            set
            {
                OnTaxonomyTrunkCodeChanging(value);
                ReportPropertyChanging("TaxonomyTrunkCode");
                _TaxonomyTrunkCode = StructuralObject.SetValidValue(value, true, "TaxonomyTrunkCode");
                ReportPropertyChanged("TaxonomyTrunkCode");
                OnTaxonomyTrunkCodeChanged();
            }
        }
        private global::System.String _TaxonomyTrunkCode;
        partial void OnTaxonomyTrunkCodeChanging(global::System.String value);
        partial void OnTaxonomyTrunkCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TaxonomyTrunkSortOrder
        {
            get
            {
                return _TaxonomyTrunkSortOrder;
            }
            set
            {
                OnTaxonomyTrunkSortOrderChanging(value);
                ReportPropertyChanging("TaxonomyTrunkSortOrder");
                _TaxonomyTrunkSortOrder = StructuralObject.SetValidValue(value, "TaxonomyTrunkSortOrder");
                ReportPropertyChanged("TaxonomyTrunkSortOrder");
                OnTaxonomyTrunkSortOrderChanged();
            }
        }
        private Nullable<global::System.Int32> _TaxonomyTrunkSortOrder;
        partial void OnTaxonomyTrunkSortOrderChanging(Nullable<global::System.Int32> value);
        partial void OnTaxonomyTrunkSortOrderChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TaxonomyBranch_TaxonomyTrunk_TaxonomyTrunkID", "TaxonomyBranch")]
        public EntityCollection<TaxonomyBranch> TaxonomyBranch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaxonomyBranch>("ProjectFirma.Web.Models.FK_TaxonomyBranch_TaxonomyTrunk_TaxonomyTrunkID", "TaxonomyBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaxonomyBranch>("ProjectFirma.Web.Models.FK_TaxonomyBranch_TaxonomyTrunk_TaxonomyTrunkID", "TaxonomyBranch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TaxonomyTrunk_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TaxonomyTrunk_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TaxonomyTrunk_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TaxonomyTrunk_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TaxonomyTrunk_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="TechnicalAssistanceParameter")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TechnicalAssistanceParameter : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TechnicalAssistanceParameter object.
        /// </summary>
        /// <param name="technicalAssistanceParameterID">Initial value of the TechnicalAssistanceParameterID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="year">Initial value of the Year property.</param>
        public static TechnicalAssistanceParameter CreateTechnicalAssistanceParameter(global::System.Int32 technicalAssistanceParameterID, global::System.Int32 tenantID, global::System.Int32 year)
        {
            TechnicalAssistanceParameter technicalAssistanceParameter = new TechnicalAssistanceParameter();
            technicalAssistanceParameter.TechnicalAssistanceParameterID = technicalAssistanceParameterID;
            technicalAssistanceParameter.TenantID = tenantID;
            technicalAssistanceParameter.Year = year;
            return technicalAssistanceParameter;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TechnicalAssistanceParameterID
        {
            get
            {
                return _TechnicalAssistanceParameterID;
            }
            set
            {
                if (_TechnicalAssistanceParameterID != value)
                {
                    OnTechnicalAssistanceParameterIDChanging(value);
                    ReportPropertyChanging("TechnicalAssistanceParameterID");
                    _TechnicalAssistanceParameterID = StructuralObject.SetValidValue(value, "TechnicalAssistanceParameterID");
                    ReportPropertyChanged("TechnicalAssistanceParameterID");
                    OnTechnicalAssistanceParameterIDChanged();
                }
            }
        }
        private global::System.Int32 _TechnicalAssistanceParameterID;
        partial void OnTechnicalAssistanceParameterIDChanging(global::System.Int32 value);
        partial void OnTechnicalAssistanceParameterIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Year
        {
            get
            {
                return _Year;
            }
            set
            {
                OnYearChanging(value);
                ReportPropertyChanging("Year");
                _Year = StructuralObject.SetValidValue(value, "Year");
                ReportPropertyChanged("Year");
                OnYearChanged();
            }
        }
        private global::System.Int32 _Year;
        partial void OnYearChanging(global::System.Int32 value);
        partial void OnYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> EngineeringHourlyCost
        {
            get
            {
                return _EngineeringHourlyCost;
            }
            set
            {
                OnEngineeringHourlyCostChanging(value);
                ReportPropertyChanging("EngineeringHourlyCost");
                _EngineeringHourlyCost = StructuralObject.SetValidValue(value, "EngineeringHourlyCost");
                ReportPropertyChanged("EngineeringHourlyCost");
                OnEngineeringHourlyCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _EngineeringHourlyCost;
        partial void OnEngineeringHourlyCostChanging(Nullable<global::System.Decimal> value);
        partial void OnEngineeringHourlyCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> OtherAssistanceHourlyCost
        {
            get
            {
                return _OtherAssistanceHourlyCost;
            }
            set
            {
                OnOtherAssistanceHourlyCostChanging(value);
                ReportPropertyChanging("OtherAssistanceHourlyCost");
                _OtherAssistanceHourlyCost = StructuralObject.SetValidValue(value, "OtherAssistanceHourlyCost");
                ReportPropertyChanged("OtherAssistanceHourlyCost");
                OnOtherAssistanceHourlyCostChanged();
            }
        }
        private Nullable<global::System.Decimal> _OtherAssistanceHourlyCost;
        partial void OnOtherAssistanceHourlyCostChanging(Nullable<global::System.Decimal> value);
        partial void OnOtherAssistanceHourlyCostChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TechnicalAssistanceParameter_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TechnicalAssistanceParameter_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TechnicalAssistanceParameter_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TechnicalAssistanceParameter_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TechnicalAssistanceParameter_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="Tenant")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tenant : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tenant object.
        /// </summary>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="tenantName">Initial value of the TenantName property.</param>
        /// <param name="canonicalHostNameLocal">Initial value of the CanonicalHostNameLocal property.</param>
        /// <param name="canonicalHostNameQa">Initial value of the CanonicalHostNameQa property.</param>
        /// <param name="canonicalHostNameProd">Initial value of the CanonicalHostNameProd property.</param>
        /// <param name="reportingYearStartDate">Initial value of the ReportingYearStartDate property.</param>
        /// <param name="useFiscalYears">Initial value of the UseFiscalYears property.</param>
        /// <param name="usesTechnicalAssistanceParameters">Initial value of the UsesTechnicalAssistanceParameters property.</param>
        public static Tenant CreateTenant(global::System.Int32 tenantID, global::System.String tenantName, global::System.String canonicalHostNameLocal, global::System.String canonicalHostNameQa, global::System.String canonicalHostNameProd, global::System.DateTime reportingYearStartDate, global::System.Boolean useFiscalYears, global::System.Boolean usesTechnicalAssistanceParameters)
        {
            Tenant tenant = new Tenant();
            tenant.TenantID = tenantID;
            tenant.TenantName = tenantName;
            tenant.CanonicalHostNameLocal = canonicalHostNameLocal;
            tenant.CanonicalHostNameQa = canonicalHostNameQa;
            tenant.CanonicalHostNameProd = canonicalHostNameProd;
            tenant.ReportingYearStartDate = reportingYearStartDate;
            tenant.UseFiscalYears = useFiscalYears;
            tenant.UsesTechnicalAssistanceParameters = usesTechnicalAssistanceParameters;
            return tenant;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                if (_TenantID != value)
                {
                    OnTenantIDChanging(value);
                    ReportPropertyChanging("TenantID");
                    _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                    ReportPropertyChanged("TenantID");
                    OnTenantIDChanged();
                }
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TenantName
        {
            get
            {
                return _TenantName;
            }
            set
            {
                OnTenantNameChanging(value);
                ReportPropertyChanging("TenantName");
                _TenantName = StructuralObject.SetValidValue(value, false, "TenantName");
                ReportPropertyChanged("TenantName");
                OnTenantNameChanged();
            }
        }
        private global::System.String _TenantName;
        partial void OnTenantNameChanging(global::System.String value);
        partial void OnTenantNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CanonicalHostNameLocal
        {
            get
            {
                return _CanonicalHostNameLocal;
            }
            set
            {
                OnCanonicalHostNameLocalChanging(value);
                ReportPropertyChanging("CanonicalHostNameLocal");
                _CanonicalHostNameLocal = StructuralObject.SetValidValue(value, false, "CanonicalHostNameLocal");
                ReportPropertyChanged("CanonicalHostNameLocal");
                OnCanonicalHostNameLocalChanged();
            }
        }
        private global::System.String _CanonicalHostNameLocal;
        partial void OnCanonicalHostNameLocalChanging(global::System.String value);
        partial void OnCanonicalHostNameLocalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CanonicalHostNameQa
        {
            get
            {
                return _CanonicalHostNameQa;
            }
            set
            {
                OnCanonicalHostNameQaChanging(value);
                ReportPropertyChanging("CanonicalHostNameQa");
                _CanonicalHostNameQa = StructuralObject.SetValidValue(value, false, "CanonicalHostNameQa");
                ReportPropertyChanged("CanonicalHostNameQa");
                OnCanonicalHostNameQaChanged();
            }
        }
        private global::System.String _CanonicalHostNameQa;
        partial void OnCanonicalHostNameQaChanging(global::System.String value);
        partial void OnCanonicalHostNameQaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CanonicalHostNameProd
        {
            get
            {
                return _CanonicalHostNameProd;
            }
            set
            {
                OnCanonicalHostNameProdChanging(value);
                ReportPropertyChanging("CanonicalHostNameProd");
                _CanonicalHostNameProd = StructuralObject.SetValidValue(value, false, "CanonicalHostNameProd");
                ReportPropertyChanged("CanonicalHostNameProd");
                OnCanonicalHostNameProdChanged();
            }
        }
        private global::System.String _CanonicalHostNameProd;
        partial void OnCanonicalHostNameProdChanging(global::System.String value);
        partial void OnCanonicalHostNameProdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ReportingYearStartDate
        {
            get
            {
                return _ReportingYearStartDate;
            }
            set
            {
                OnReportingYearStartDateChanging(value);
                ReportPropertyChanging("ReportingYearStartDate");
                _ReportingYearStartDate = StructuralObject.SetValidValue(value, "ReportingYearStartDate");
                ReportPropertyChanged("ReportingYearStartDate");
                OnReportingYearStartDateChanged();
            }
        }
        private global::System.DateTime _ReportingYearStartDate;
        partial void OnReportingYearStartDateChanging(global::System.DateTime value);
        partial void OnReportingYearStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean UseFiscalYears
        {
            get
            {
                return _UseFiscalYears;
            }
            set
            {
                OnUseFiscalYearsChanging(value);
                ReportPropertyChanging("UseFiscalYears");
                _UseFiscalYears = StructuralObject.SetValidValue(value, "UseFiscalYears");
                ReportPropertyChanged("UseFiscalYears");
                OnUseFiscalYearsChanged();
            }
        }
        private global::System.Boolean _UseFiscalYears;
        partial void OnUseFiscalYearsChanging(global::System.Boolean value);
        partial void OnUseFiscalYearsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean UsesTechnicalAssistanceParameters
        {
            get
            {
                return _UsesTechnicalAssistanceParameters;
            }
            set
            {
                OnUsesTechnicalAssistanceParametersChanging(value);
                ReportPropertyChanging("UsesTechnicalAssistanceParameters");
                _UsesTechnicalAssistanceParameters = StructuralObject.SetValidValue(value, "UsesTechnicalAssistanceParameters");
                ReportPropertyChanged("UsesTechnicalAssistanceParameters");
                OnUsesTechnicalAssistanceParametersChanged();
            }
        }
        private global::System.Boolean _UsesTechnicalAssistanceParameters;
        partial void OnUsesTechnicalAssistanceParametersChanging(global::System.Boolean value);
        partial void OnUsesTechnicalAssistanceParametersChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_AssessmentGoal_Tenant_TenantID", "AssessmentGoal")]
        public EntityCollection<AssessmentGoal> AssessmentGoal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssessmentGoal>("ProjectFirma.Web.Models.FK_AssessmentGoal_Tenant_TenantID", "AssessmentGoal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssessmentGoal>("ProjectFirma.Web.Models.FK_AssessmentGoal_Tenant_TenantID", "AssessmentGoal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_AssessmentQuestion_Tenant_TenantID", "AssessmentQuestion")]
        public EntityCollection<AssessmentQuestion> AssessmentQuestion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssessmentQuestion>("ProjectFirma.Web.Models.FK_AssessmentQuestion_Tenant_TenantID", "AssessmentQuestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssessmentQuestion>("ProjectFirma.Web.Models.FK_AssessmentQuestion_Tenant_TenantID", "AssessmentQuestion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_AssessmentSubGoal_Tenant_TenantID", "AssessmentSubGoal")]
        public EntityCollection<AssessmentSubGoal> AssessmentSubGoal
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AssessmentSubGoal>("ProjectFirma.Web.Models.FK_AssessmentSubGoal_Tenant_TenantID", "AssessmentSubGoal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AssessmentSubGoal>("ProjectFirma.Web.Models.FK_AssessmentSubGoal_Tenant_TenantID", "AssessmentSubGoal", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_AuditLog_Tenant_TenantID", "AuditLog")]
        public EntityCollection<AuditLog> AuditLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AuditLog>("ProjectFirma.Web.Models.FK_AuditLog_Tenant_TenantID", "AuditLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AuditLog>("ProjectFirma.Web.Models.FK_AuditLog_Tenant_TenantID", "AuditLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Classification_Tenant_TenantID", "Classification")]
        public EntityCollection<Classification> Classification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Classification>("ProjectFirma.Web.Models.FK_Classification_Tenant_TenantID", "Classification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Classification>("ProjectFirma.Web.Models.FK_Classification_Tenant_TenantID", "Classification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ClassificationPerformanceMeasure_Tenant_TenantID", "ClassificationPerformanceMeasure")]
        public EntityCollection<ClassificationPerformanceMeasure> ClassificationPerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClassificationPerformanceMeasure>("ProjectFirma.Web.Models.FK_ClassificationPerformanceMeasure_Tenant_TenantID", "ClassificationPerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClassificationPerformanceMeasure>("ProjectFirma.Web.Models.FK_ClassificationPerformanceMeasure_Tenant_TenantID", "ClassificationPerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ClassificationSystem_Tenant_TenantID", "ClassificationSystem")]
        public EntityCollection<ClassificationSystem> ClassificationSystem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClassificationSystem>("ProjectFirma.Web.Models.FK_ClassificationSystem_Tenant_TenantID", "ClassificationSystem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClassificationSystem>("ProjectFirma.Web.Models.FK_ClassificationSystem_Tenant_TenantID", "ClassificationSystem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ContractorTimeActivity_Tenant_TenantID", "ContractorTimeActivity")]
        public EntityCollection<ContractorTimeActivity> ContractorTimeActivity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ContractorTimeActivity>("ProjectFirma.Web.Models.FK_ContractorTimeActivity_Tenant_TenantID", "ContractorTimeActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ContractorTimeActivity>("ProjectFirma.Web.Models.FK_ContractorTimeActivity_Tenant_TenantID", "ContractorTimeActivity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_CostParameterSet_Tenant_TenantID", "CostParameterSet")]
        public EntityCollection<CostParameterSet> CostParameterSet
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CostParameterSet>("ProjectFirma.Web.Models.FK_CostParameterSet_Tenant_TenantID", "CostParameterSet");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CostParameterSet>("ProjectFirma.Web.Models.FK_CostParameterSet_Tenant_TenantID", "CostParameterSet", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_County_Tenant_TenantID", "County")]
        public EntityCollection<County> County
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<County>("ProjectFirma.Web.Models.FK_County_Tenant_TenantID", "County");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<County>("ProjectFirma.Web.Models.FK_County_Tenant_TenantID", "County", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_CustomPage_Tenant_TenantID", "CustomPage")]
        public EntityCollection<CustomPage> CustomPage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomPage>("ProjectFirma.Web.Models.FK_CustomPage_Tenant_TenantID", "CustomPage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomPage>("ProjectFirma.Web.Models.FK_CustomPage_Tenant_TenantID", "CustomPage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_CustomPageImage_Tenant_TenantID", "CustomPageImage")]
        public EntityCollection<CustomPageImage> CustomPageImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CustomPageImage>("ProjectFirma.Web.Models.FK_CustomPageImage_Tenant_TenantID", "CustomPageImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CustomPageImage>("ProjectFirma.Web.Models.FK_CustomPageImage_Tenant_TenantID", "CustomPageImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FieldDefinitionData_Tenant_TenantID", "FieldDefinitionData")]
        public EntityCollection<FieldDefinitionData> FieldDefinitionData
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FieldDefinitionData>("ProjectFirma.Web.Models.FK_FieldDefinitionData_Tenant_TenantID", "FieldDefinitionData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FieldDefinitionData>("ProjectFirma.Web.Models.FK_FieldDefinitionData_Tenant_TenantID", "FieldDefinitionData", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FieldDefinitionDataImage_Tenant_TenantID", "FieldDefinitionDataImage")]
        public EntityCollection<FieldDefinitionDataImage> FieldDefinitionDataImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FieldDefinitionDataImage>("ProjectFirma.Web.Models.FK_FieldDefinitionDataImage_Tenant_TenantID", "FieldDefinitionDataImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FieldDefinitionDataImage>("ProjectFirma.Web.Models.FK_FieldDefinitionDataImage_Tenant_TenantID", "FieldDefinitionDataImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FileResource_Tenant_TenantID", "FileResource")]
        public EntityCollection<FileResource> FileResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FileResource>("ProjectFirma.Web.Models.FK_FileResource_Tenant_TenantID", "FileResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FileResource>("ProjectFirma.Web.Models.FK_FileResource_Tenant_TenantID", "FileResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FirmaHomePageImage_Tenant_TenantID", "FirmaHomePageImage")]
        public EntityCollection<FirmaHomePageImage> FirmaHomePageImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FirmaHomePageImage>("ProjectFirma.Web.Models.FK_FirmaHomePageImage_Tenant_TenantID", "FirmaHomePageImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FirmaHomePageImage>("ProjectFirma.Web.Models.FK_FirmaHomePageImage_Tenant_TenantID", "FirmaHomePageImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FirmaPage_Tenant_TenantID", "FirmaPage")]
        public EntityCollection<FirmaPage> FirmaPage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FirmaPage>("ProjectFirma.Web.Models.FK_FirmaPage_Tenant_TenantID", "FirmaPage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FirmaPage>("ProjectFirma.Web.Models.FK_FirmaPage_Tenant_TenantID", "FirmaPage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FirmaPageImage_Tenant_TenantID", "FirmaPageImage")]
        public EntityCollection<FirmaPageImage> FirmaPageImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FirmaPageImage>("ProjectFirma.Web.Models.FK_FirmaPageImage_Tenant_TenantID", "FirmaPageImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FirmaPageImage>("ProjectFirma.Web.Models.FK_FirmaPageImage_Tenant_TenantID", "FirmaPageImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_FundingSource_Tenant_TenantID", "FundingSource")]
        public EntityCollection<FundingSource> FundingSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FundingSource>("ProjectFirma.Web.Models.FK_FundingSource_Tenant_TenantID", "FundingSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FundingSource>("ProjectFirma.Web.Models.FK_FundingSource_Tenant_TenantID", "FundingSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_GeospatialArea_Tenant_TenantID", "GeospatialArea")]
        public EntityCollection<GeospatialArea> GeospatialArea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GeospatialArea>("ProjectFirma.Web.Models.FK_GeospatialArea_Tenant_TenantID", "GeospatialArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GeospatialArea>("ProjectFirma.Web.Models.FK_GeospatialArea_Tenant_TenantID", "GeospatialArea", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_GeospatialAreaType_Tenant_TenantID", "GeospatialAreaType")]
        public EntityCollection<GeospatialAreaType> GeospatialAreaType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GeospatialAreaType>("ProjectFirma.Web.Models.FK_GeospatialAreaType_Tenant_TenantID", "GeospatialAreaType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GeospatialAreaType>("ProjectFirma.Web.Models.FK_GeospatialAreaType_Tenant_TenantID", "GeospatialAreaType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Grant_Tenant_TenantID", "Grant")]
        public EntityCollection<Grant> Grant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Grant>("ProjectFirma.Web.Models.FK_Grant_Tenant_TenantID", "Grant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Grant>("ProjectFirma.Web.Models.FK_Grant_Tenant_TenantID", "Grant", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_GrantAllocation_Tenant_TenantID", "GrantAllocation")]
        public EntityCollection<GrantAllocation> GrantAllocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GrantAllocation>("ProjectFirma.Web.Models.FK_GrantAllocation_Tenant_TenantID", "GrantAllocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GrantAllocation>("ProjectFirma.Web.Models.FK_GrantAllocation_Tenant_TenantID", "GrantAllocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ImportExternalProjectStaging_Tenant_TenantID", "ImportExternalProjectStaging")]
        public EntityCollection<ImportExternalProjectStaging> ImportExternalProjectStaging
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ImportExternalProjectStaging>("ProjectFirma.Web.Models.FK_ImportExternalProjectStaging_Tenant_TenantID", "ImportExternalProjectStaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ImportExternalProjectStaging>("ProjectFirma.Web.Models.FK_ImportExternalProjectStaging_Tenant_TenantID", "ImportExternalProjectStaging", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_MappedRegion_Tenant_TenantID", "MappedRegion")]
        public EntityCollection<MappedRegion> MappedRegion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MappedRegion>("ProjectFirma.Web.Models.FK_MappedRegion_Tenant_TenantID", "MappedRegion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MappedRegion>("ProjectFirma.Web.Models.FK_MappedRegion_Tenant_TenantID", "MappedRegion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_MonitoringProgram_Tenant_TenantID", "MonitoringProgram")]
        public EntityCollection<MonitoringProgram> MonitoringProgram
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MonitoringProgram>("ProjectFirma.Web.Models.FK_MonitoringProgram_Tenant_TenantID", "MonitoringProgram");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MonitoringProgram>("ProjectFirma.Web.Models.FK_MonitoringProgram_Tenant_TenantID", "MonitoringProgram", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_MonitoringProgramDocument_Tenant_TenantID", "MonitoringProgramDocument")]
        public EntityCollection<MonitoringProgramDocument> MonitoringProgramDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MonitoringProgramDocument>("ProjectFirma.Web.Models.FK_MonitoringProgramDocument_Tenant_TenantID", "MonitoringProgramDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MonitoringProgramDocument>("ProjectFirma.Web.Models.FK_MonitoringProgramDocument_Tenant_TenantID", "MonitoringProgramDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_MonitoringProgramPartner_Tenant_TenantID", "MonitoringProgramPartner")]
        public EntityCollection<MonitoringProgramPartner> MonitoringProgramPartner
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<MonitoringProgramPartner>("ProjectFirma.Web.Models.FK_MonitoringProgramPartner_Tenant_TenantID", "MonitoringProgramPartner");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<MonitoringProgramPartner>("ProjectFirma.Web.Models.FK_MonitoringProgramPartner_Tenant_TenantID", "MonitoringProgramPartner", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Notification_Tenant_TenantID", "Notification")]
        public EntityCollection<Notification> Notification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Notification>("ProjectFirma.Web.Models.FK_Notification_Tenant_TenantID", "Notification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Notification>("ProjectFirma.Web.Models.FK_Notification_Tenant_TenantID", "Notification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_NotificationProject_Tenant_TenantID", "NotificationProject")]
        public EntityCollection<NotificationProject> NotificationProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<NotificationProject>("ProjectFirma.Web.Models.FK_NotificationProject_Tenant_TenantID", "NotificationProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<NotificationProject>("ProjectFirma.Web.Models.FK_NotificationProject_Tenant_TenantID", "NotificationProject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Organization_Tenant_TenantID", "Organization")]
        public EntityCollection<Organization> Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Organization>("ProjectFirma.Web.Models.FK_Organization_Tenant_TenantID", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Organization>("ProjectFirma.Web.Models.FK_Organization_Tenant_TenantID", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_OrganizationBoundaryStaging_Tenant_TenantID", "OrganizationBoundaryStaging")]
        public EntityCollection<OrganizationBoundaryStaging> OrganizationBoundaryStaging
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrganizationBoundaryStaging>("ProjectFirma.Web.Models.FK_OrganizationBoundaryStaging_Tenant_TenantID", "OrganizationBoundaryStaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrganizationBoundaryStaging>("ProjectFirma.Web.Models.FK_OrganizationBoundaryStaging_Tenant_TenantID", "OrganizationBoundaryStaging", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_OrganizationType_Tenant_TenantID", "OrganizationType")]
        public EntityCollection<OrganizationType> OrganizationType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrganizationType>("ProjectFirma.Web.Models.FK_OrganizationType_Tenant_TenantID", "OrganizationType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrganizationType>("ProjectFirma.Web.Models.FK_OrganizationType_Tenant_TenantID", "OrganizationType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_OrganizationTypeRelationshipType_Tenant_TenantID", "OrganizationTypeRelationshipType")]
        public EntityCollection<OrganizationTypeRelationshipType> OrganizationTypeRelationshipType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrganizationTypeRelationshipType>("ProjectFirma.Web.Models.FK_OrganizationTypeRelationshipType_Tenant_TenantID", "OrganizationTypeRelationshipType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrganizationTypeRelationshipType>("ProjectFirma.Web.Models.FK_OrganizationTypeRelationshipType_Tenant_TenantID", "OrganizationTypeRelationshipType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasure_Tenant_TenantID", "PerformanceMeasure")]
        public EntityCollection<PerformanceMeasure> PerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasure_Tenant_TenantID", "PerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasure>("ProjectFirma.Web.Models.FK_PerformanceMeasure_Tenant_TenantID", "PerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActual_Tenant_TenantID", "PerformanceMeasureActual")]
        public EntityCollection<PerformanceMeasureActual> PerformanceMeasureActual
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureActual>("ProjectFirma.Web.Models.FK_PerformanceMeasureActual_Tenant_TenantID", "PerformanceMeasureActual");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureActual>("ProjectFirma.Web.Models.FK_PerformanceMeasureActual_Tenant_TenantID", "PerformanceMeasureActual", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOption_Tenant_TenantID", "PerformanceMeasureActualSubcategoryOption")]
        public EntityCollection<PerformanceMeasureActualSubcategoryOption> PerformanceMeasureActualSubcategoryOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureActualSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_Tenant_TenantID", "PerformanceMeasureActualSubcategoryOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureActualSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOption_Tenant_TenantID", "PerformanceMeasureActualSubcategoryOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualSubcategoryOptionUpdate_Tenant_TenantID", "PerformanceMeasureActualSubcategoryOptionUpdate")]
        public EntityCollection<PerformanceMeasureActualSubcategoryOptionUpdate> PerformanceMeasureActualSubcategoryOptionUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureActualSubcategoryOptionUpdate>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_Tenant_TenantID", "PerformanceMeasureActualSubcategoryOptionUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureActualSubcategoryOptionUpdate>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualSubcategoryOptionUpdate_Tenant_TenantID", "PerformanceMeasureActualSubcategoryOptionUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureActualUpdate_Tenant_TenantID", "PerformanceMeasureActualUpdate")]
        public EntityCollection<PerformanceMeasureActualUpdate> PerformanceMeasureActualUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureActualUpdate>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualUpdate_Tenant_TenantID", "PerformanceMeasureActualUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureActualUpdate>("ProjectFirma.Web.Models.FK_PerformanceMeasureActualUpdate_Tenant_TenantID", "PerformanceMeasureActualUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpected_Tenant_TenantID", "PerformanceMeasureExpected")]
        public EntityCollection<PerformanceMeasureExpected> PerformanceMeasureExpected
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureExpected>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpected_Tenant_TenantID", "PerformanceMeasureExpected");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureExpected>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpected_Tenant_TenantID", "PerformanceMeasureExpected", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureExpectedSubcategoryOption_Tenant_TenantID", "PerformanceMeasureExpectedSubcategoryOption")]
        public EntityCollection<PerformanceMeasureExpectedSubcategoryOption> PerformanceMeasureExpectedSubcategoryOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureExpectedSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_Tenant_TenantID", "PerformanceMeasureExpectedSubcategoryOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureExpectedSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureExpectedSubcategoryOption_Tenant_TenantID", "PerformanceMeasureExpectedSubcategoryOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureMonitoringProgram_Tenant_TenantID", "PerformanceMeasureMonitoringProgram")]
        public EntityCollection<PerformanceMeasureMonitoringProgram> PerformanceMeasureMonitoringProgram
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureMonitoringProgram>("ProjectFirma.Web.Models.FK_PerformanceMeasureMonitoringProgram_Tenant_TenantID", "PerformanceMeasureMonitoringProgram");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureMonitoringProgram>("ProjectFirma.Web.Models.FK_PerformanceMeasureMonitoringProgram_Tenant_TenantID", "PerformanceMeasureMonitoringProgram", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureNote_Tenant_TenantID", "PerformanceMeasureNote")]
        public EntityCollection<PerformanceMeasureNote> PerformanceMeasureNote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureNote>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_Tenant_TenantID", "PerformanceMeasureNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureNote>("ProjectFirma.Web.Models.FK_PerformanceMeasureNote_Tenant_TenantID", "PerformanceMeasureNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureSubcategory_Tenant_TenantID", "PerformanceMeasureSubcategory")]
        public EntityCollection<PerformanceMeasureSubcategory> PerformanceMeasureSubcategory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategory_Tenant_TenantID", "PerformanceMeasureSubcategory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureSubcategory>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategory_Tenant_TenantID", "PerformanceMeasureSubcategory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PerformanceMeasureSubcategoryOption_Tenant_TenantID", "PerformanceMeasureSubcategoryOption")]
        public EntityCollection<PerformanceMeasureSubcategoryOption> PerformanceMeasureSubcategoryOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategoryOption_Tenant_TenantID", "PerformanceMeasureSubcategoryOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_PerformanceMeasureSubcategoryOption_Tenant_TenantID", "PerformanceMeasureSubcategoryOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Person_Tenant_TenantID", "Person")]
        public EntityCollection<Person> Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Person>("ProjectFirma.Web.Models.FK_Person_Tenant_TenantID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Person>("ProjectFirma.Web.Models.FK_Person_Tenant_TenantID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PersonStewardGeospatialArea_Tenant_TenantID", "PersonStewardGeospatialArea")]
        public EntityCollection<PersonStewardGeospatialArea> PersonStewardGeospatialArea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonStewardGeospatialArea>("ProjectFirma.Web.Models.FK_PersonStewardGeospatialArea_Tenant_TenantID", "PersonStewardGeospatialArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonStewardGeospatialArea>("ProjectFirma.Web.Models.FK_PersonStewardGeospatialArea_Tenant_TenantID", "PersonStewardGeospatialArea", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PersonStewardOrganization_Tenant_TenantID", "PersonStewardOrganization")]
        public EntityCollection<PersonStewardOrganization> PersonStewardOrganization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonStewardOrganization>("ProjectFirma.Web.Models.FK_PersonStewardOrganization_Tenant_TenantID", "PersonStewardOrganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonStewardOrganization>("ProjectFirma.Web.Models.FK_PersonStewardOrganization_Tenant_TenantID", "PersonStewardOrganization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_PersonStewardTaxonomyBranch_Tenant_TenantID", "PersonStewardTaxonomyBranch")]
        public EntityCollection<PersonStewardTaxonomyBranch> PersonStewardTaxonomyBranch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PersonStewardTaxonomyBranch>("ProjectFirma.Web.Models.FK_PersonStewardTaxonomyBranch_Tenant_TenantID", "PersonStewardTaxonomyBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PersonStewardTaxonomyBranch>("ProjectFirma.Web.Models.FK_PersonStewardTaxonomyBranch_Tenant_TenantID", "PersonStewardTaxonomyBranch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Project_Tenant_TenantID", "Project")]
        public EntityCollection<Project> Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Project>("ProjectFirma.Web.Models.FK_Project_Tenant_TenantID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Project>("ProjectFirma.Web.Models.FK_Project_Tenant_TenantID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectAssessmentQuestion_Tenant_TenantID", "ProjectAssessmentQuestion")]
        public EntityCollection<ProjectAssessmentQuestion> ProjectAssessmentQuestion
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectAssessmentQuestion>("ProjectFirma.Web.Models.FK_ProjectAssessmentQuestion_Tenant_TenantID", "ProjectAssessmentQuestion");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectAssessmentQuestion>("ProjectFirma.Web.Models.FK_ProjectAssessmentQuestion_Tenant_TenantID", "ProjectAssessmentQuestion", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectBudget_Tenant_TenantID", "ProjectBudget")]
        public EntityCollection<ProjectBudget> ProjectBudget
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectBudget>("ProjectFirma.Web.Models.FK_ProjectBudget_Tenant_TenantID", "ProjectBudget");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectBudget>("ProjectFirma.Web.Models.FK_ProjectBudget_Tenant_TenantID", "ProjectBudget", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectBudgetUpdate_Tenant_TenantID", "ProjectBudgetUpdate")]
        public EntityCollection<ProjectBudgetUpdate> ProjectBudgetUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectBudgetUpdate>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_Tenant_TenantID", "ProjectBudgetUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectBudgetUpdate>("ProjectFirma.Web.Models.FK_ProjectBudgetUpdate_Tenant_TenantID", "ProjectBudgetUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectClassification_Tenant_TenantID", "ProjectClassification")]
        public EntityCollection<ProjectClassification> ProjectClassification
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectClassification>("ProjectFirma.Web.Models.FK_ProjectClassification_Tenant_TenantID", "ProjectClassification");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectClassification>("ProjectFirma.Web.Models.FK_ProjectClassification_Tenant_TenantID", "ProjectClassification", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttribute_Tenant_TenantID", "ProjectCustomAttribute")]
        public EntityCollection<ProjectCustomAttribute> ProjectCustomAttribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectCustomAttribute>("ProjectFirma.Web.Models.FK_ProjectCustomAttribute_Tenant_TenantID", "ProjectCustomAttribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectCustomAttribute>("ProjectFirma.Web.Models.FK_ProjectCustomAttribute_Tenant_TenantID", "ProjectCustomAttribute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeType_Tenant_TenantID", "ProjectCustomAttributeType")]
        public EntityCollection<ProjectCustomAttributeType> ProjectCustomAttributeType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectCustomAttributeType>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeType_Tenant_TenantID", "ProjectCustomAttributeType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectCustomAttributeType>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeType_Tenant_TenantID", "ProjectCustomAttributeType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeUpdate_Tenant_TenantID", "ProjectCustomAttributeUpdate")]
        public EntityCollection<ProjectCustomAttributeUpdate> ProjectCustomAttributeUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectCustomAttributeUpdate>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdate_Tenant_TenantID", "ProjectCustomAttributeUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectCustomAttributeUpdate>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdate_Tenant_TenantID", "ProjectCustomAttributeUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeUpdateValue_Tenant_TenantID", "ProjectCustomAttributeUpdateValue")]
        public EntityCollection<ProjectCustomAttributeUpdateValue> ProjectCustomAttributeUpdateValue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectCustomAttributeUpdateValue>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdateValue_Tenant_TenantID", "ProjectCustomAttributeUpdateValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectCustomAttributeUpdateValue>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeUpdateValue_Tenant_TenantID", "ProjectCustomAttributeUpdateValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectCustomAttributeValue_Tenant_TenantID", "ProjectCustomAttributeValue")]
        public EntityCollection<ProjectCustomAttributeValue> ProjectCustomAttributeValue
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectCustomAttributeValue>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeValue_Tenant_TenantID", "ProjectCustomAttributeValue");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectCustomAttributeValue>("ProjectFirma.Web.Models.FK_ProjectCustomAttributeValue_Tenant_TenantID", "ProjectCustomAttributeValue", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectDocument_Tenant_TenantID", "ProjectDocument")]
        public EntityCollection<ProjectDocument> ProjectDocument
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectDocument>("ProjectFirma.Web.Models.FK_ProjectDocument_Tenant_TenantID", "ProjectDocument");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectDocument>("ProjectFirma.Web.Models.FK_ProjectDocument_Tenant_TenantID", "ProjectDocument", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectDocumentUpdate_Tenant_TenantID", "ProjectDocumentUpdate")]
        public EntityCollection<ProjectDocumentUpdate> ProjectDocumentUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectDocumentUpdate>("ProjectFirma.Web.Models.FK_ProjectDocumentUpdate_Tenant_TenantID", "ProjectDocumentUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectDocumentUpdate>("ProjectFirma.Web.Models.FK_ProjectDocumentUpdate_Tenant_TenantID", "ProjectDocumentUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectExemptReportingYear_Tenant_TenantID", "ProjectExemptReportingYear")]
        public EntityCollection<ProjectExemptReportingYear> ProjectExemptReportingYear
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectExemptReportingYear>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYear_Tenant_TenantID", "ProjectExemptReportingYear");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectExemptReportingYear>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYear_Tenant_TenantID", "ProjectExemptReportingYear", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectExemptReportingYearUpdate_Tenant_TenantID", "ProjectExemptReportingYearUpdate")]
        public EntityCollection<ProjectExemptReportingYearUpdate> ProjectExemptReportingYearUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectExemptReportingYearUpdate>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYearUpdate_Tenant_TenantID", "ProjectExemptReportingYearUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectExemptReportingYearUpdate>("ProjectFirma.Web.Models.FK_ProjectExemptReportingYearUpdate_Tenant_TenantID", "ProjectExemptReportingYearUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectExternalLink_Tenant_TenantID", "ProjectExternalLink")]
        public EntityCollection<ProjectExternalLink> ProjectExternalLink
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectExternalLink>("ProjectFirma.Web.Models.FK_ProjectExternalLink_Tenant_TenantID", "ProjectExternalLink");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectExternalLink>("ProjectFirma.Web.Models.FK_ProjectExternalLink_Tenant_TenantID", "ProjectExternalLink", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectExternalLinkUpdate_Tenant_TenantID", "ProjectExternalLinkUpdate")]
        public EntityCollection<ProjectExternalLinkUpdate> ProjectExternalLinkUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectExternalLinkUpdate>("ProjectFirma.Web.Models.FK_ProjectExternalLinkUpdate_Tenant_TenantID", "ProjectExternalLinkUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectExternalLinkUpdate>("ProjectFirma.Web.Models.FK_ProjectExternalLinkUpdate_Tenant_TenantID", "ProjectExternalLinkUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceExpenditure_Tenant_TenantID", "ProjectFundingSourceExpenditure")]
        public EntityCollection<ProjectFundingSourceExpenditure> ProjectFundingSourceExpenditure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFundingSourceExpenditure>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditure_Tenant_TenantID", "ProjectFundingSourceExpenditure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFundingSourceExpenditure>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditure_Tenant_TenantID", "ProjectFundingSourceExpenditure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceExpenditureUpdate_Tenant_TenantID", "ProjectFundingSourceExpenditureUpdate")]
        public EntityCollection<ProjectFundingSourceExpenditureUpdate> ProjectFundingSourceExpenditureUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFundingSourceExpenditureUpdate>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditureUpdate_Tenant_TenantID", "ProjectFundingSourceExpenditureUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFundingSourceExpenditureUpdate>("ProjectFirma.Web.Models.FK_ProjectFundingSourceExpenditureUpdate_Tenant_TenantID", "ProjectFundingSourceExpenditureUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceRequest_Tenant_TenantID", "ProjectFundingSourceRequest")]
        public EntityCollection<ProjectFundingSourceRequest> ProjectFundingSourceRequest
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFundingSourceRequest>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequest_Tenant_TenantID", "ProjectFundingSourceRequest");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFundingSourceRequest>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequest_Tenant_TenantID", "ProjectFundingSourceRequest", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectFundingSourceRequestUpdate_Tenant_TenantID", "ProjectFundingSourceRequestUpdate")]
        public EntityCollection<ProjectFundingSourceRequestUpdate> ProjectFundingSourceRequestUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectFundingSourceRequestUpdate>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequestUpdate_Tenant_TenantID", "ProjectFundingSourceRequestUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectFundingSourceRequestUpdate>("ProjectFirma.Web.Models.FK_ProjectFundingSourceRequestUpdate_Tenant_TenantID", "ProjectFundingSourceRequestUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialArea_Tenant_TenantID", "ProjectGeospatialArea")]
        public EntityCollection<ProjectGeospatialArea> ProjectGeospatialArea
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectGeospatialArea>("ProjectFirma.Web.Models.FK_ProjectGeospatialArea_Tenant_TenantID", "ProjectGeospatialArea");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectGeospatialArea>("ProjectFirma.Web.Models.FK_ProjectGeospatialArea_Tenant_TenantID", "ProjectGeospatialArea", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaTypeNote_Tenant_TenantID", "ProjectGeospatialAreaTypeNote")]
        public EntityCollection<ProjectGeospatialAreaTypeNote> ProjectGeospatialAreaTypeNote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectGeospatialAreaTypeNote>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNote_Tenant_TenantID", "ProjectGeospatialAreaTypeNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectGeospatialAreaTypeNote>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNote_Tenant_TenantID", "ProjectGeospatialAreaTypeNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaTypeNoteUpdate_Tenant_TenantID", "ProjectGeospatialAreaTypeNoteUpdate")]
        public EntityCollection<ProjectGeospatialAreaTypeNoteUpdate> ProjectGeospatialAreaTypeNoteUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectGeospatialAreaTypeNoteUpdate>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNoteUpdate_Tenant_TenantID", "ProjectGeospatialAreaTypeNoteUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectGeospatialAreaTypeNoteUpdate>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaTypeNoteUpdate_Tenant_TenantID", "ProjectGeospatialAreaTypeNoteUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectGeospatialAreaUpdate_Tenant_TenantID", "ProjectGeospatialAreaUpdate")]
        public EntityCollection<ProjectGeospatialAreaUpdate> ProjectGeospatialAreaUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectGeospatialAreaUpdate>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaUpdate_Tenant_TenantID", "ProjectGeospatialAreaUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectGeospatialAreaUpdate>("ProjectFirma.Web.Models.FK_ProjectGeospatialAreaUpdate_Tenant_TenantID", "ProjectGeospatialAreaUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectImage_Tenant_TenantID", "ProjectImage")]
        public EntityCollection<ProjectImage> ProjectImage
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectImage>("ProjectFirma.Web.Models.FK_ProjectImage_Tenant_TenantID", "ProjectImage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectImage>("ProjectFirma.Web.Models.FK_ProjectImage_Tenant_TenantID", "ProjectImage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectImageUpdate_Tenant_TenantID", "ProjectImageUpdate")]
        public EntityCollection<ProjectImageUpdate> ProjectImageUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectImageUpdate>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_Tenant_TenantID", "ProjectImageUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectImageUpdate>("ProjectFirma.Web.Models.FK_ProjectImageUpdate_Tenant_TenantID", "ProjectImageUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectInternalNote_Tenant_TenantID", "ProjectInternalNote")]
        public EntityCollection<ProjectInternalNote> ProjectInternalNote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectInternalNote>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Tenant_TenantID", "ProjectInternalNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectInternalNote>("ProjectFirma.Web.Models.FK_ProjectInternalNote_Tenant_TenantID", "ProjectInternalNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectLocation_Tenant_TenantID", "ProjectLocation")]
        public EntityCollection<ProjectLocation> ProjectLocation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectLocation>("ProjectFirma.Web.Models.FK_ProjectLocation_Tenant_TenantID", "ProjectLocation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectLocation>("ProjectFirma.Web.Models.FK_ProjectLocation_Tenant_TenantID", "ProjectLocation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationStaging_Tenant_TenantID", "ProjectLocationStaging")]
        public EntityCollection<ProjectLocationStaging> ProjectLocationStaging
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectLocationStaging>("ProjectFirma.Web.Models.FK_ProjectLocationStaging_Tenant_TenantID", "ProjectLocationStaging");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectLocationStaging>("ProjectFirma.Web.Models.FK_ProjectLocationStaging_Tenant_TenantID", "ProjectLocationStaging", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationStagingUpdate_Tenant_TenantID", "ProjectLocationStagingUpdate")]
        public EntityCollection<ProjectLocationStagingUpdate> ProjectLocationStagingUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectLocationStagingUpdate>("ProjectFirma.Web.Models.FK_ProjectLocationStagingUpdate_Tenant_TenantID", "ProjectLocationStagingUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectLocationStagingUpdate>("ProjectFirma.Web.Models.FK_ProjectLocationStagingUpdate_Tenant_TenantID", "ProjectLocationStagingUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectLocationUpdate_Tenant_TenantID", "ProjectLocationUpdate")]
        public EntityCollection<ProjectLocationUpdate> ProjectLocationUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectLocationUpdate>("ProjectFirma.Web.Models.FK_ProjectLocationUpdate_Tenant_TenantID", "ProjectLocationUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectLocationUpdate>("ProjectFirma.Web.Models.FK_ProjectLocationUpdate_Tenant_TenantID", "ProjectLocationUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectNote_Tenant_TenantID", "ProjectNote")]
        public EntityCollection<ProjectNote> ProjectNote
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectNote>("ProjectFirma.Web.Models.FK_ProjectNote_Tenant_TenantID", "ProjectNote");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectNote>("ProjectFirma.Web.Models.FK_ProjectNote_Tenant_TenantID", "ProjectNote", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectNoteUpdate_Tenant_TenantID", "ProjectNoteUpdate")]
        public EntityCollection<ProjectNoteUpdate> ProjectNoteUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectNoteUpdate>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_Tenant_TenantID", "ProjectNoteUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectNoteUpdate>("ProjectFirma.Web.Models.FK_ProjectNoteUpdate_Tenant_TenantID", "ProjectNoteUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganization_Tenant_TenantID", "ProjectOrganization")]
        public EntityCollection<ProjectOrganization> ProjectOrganization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectOrganization>("ProjectFirma.Web.Models.FK_ProjectOrganization_Tenant_TenantID", "ProjectOrganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectOrganization>("ProjectFirma.Web.Models.FK_ProjectOrganization_Tenant_TenantID", "ProjectOrganization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectOrganizationUpdate_Tenant_TenantID", "ProjectOrganizationUpdate")]
        public EntityCollection<ProjectOrganizationUpdate> ProjectOrganizationUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectOrganizationUpdate>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_Tenant_TenantID", "ProjectOrganizationUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectOrganizationUpdate>("ProjectFirma.Web.Models.FK_ProjectOrganizationUpdate_Tenant_TenantID", "ProjectOrganizationUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectPerson_Tenant_TenantID", "ProjectPerson")]
        public EntityCollection<ProjectPerson> ProjectPerson
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectPerson>("ProjectFirma.Web.Models.FK_ProjectPerson_Tenant_TenantID", "ProjectPerson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectPerson>("ProjectFirma.Web.Models.FK_ProjectPerson_Tenant_TenantID", "ProjectPerson", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectPersonUpdate_Tenant_TenantID", "ProjectPersonUpdate")]
        public EntityCollection<ProjectPersonUpdate> ProjectPersonUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectPersonUpdate>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_Tenant_TenantID", "ProjectPersonUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectPersonUpdate>("ProjectFirma.Web.Models.FK_ProjectPersonUpdate_Tenant_TenantID", "ProjectPersonUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectTag_Tenant_TenantID", "ProjectTag")]
        public EntityCollection<ProjectTag> ProjectTag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectTag>("ProjectFirma.Web.Models.FK_ProjectTag_Tenant_TenantID", "ProjectTag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectTag>("ProjectFirma.Web.Models.FK_ProjectTag_Tenant_TenantID", "ProjectTag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdate_Tenant_TenantID", "ProjectUpdate")]
        public EntityCollection<ProjectUpdate> ProjectUpdate
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUpdate>("ProjectFirma.Web.Models.FK_ProjectUpdate_Tenant_TenantID", "ProjectUpdate");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUpdate>("ProjectFirma.Web.Models.FK_ProjectUpdate_Tenant_TenantID", "ProjectUpdate", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateBatch_Tenant_TenantID", "ProjectUpdateBatch")]
        public EntityCollection<ProjectUpdateBatch> ProjectUpdateBatch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_Tenant_TenantID", "ProjectUpdateBatch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUpdateBatch>("ProjectFirma.Web.Models.FK_ProjectUpdateBatch_Tenant_TenantID", "ProjectUpdateBatch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateConfiguration_Tenant_TenantID", "ProjectUpdateConfiguration")]
        public EntityCollection<ProjectUpdateConfiguration> ProjectUpdateConfiguration
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUpdateConfiguration>("ProjectFirma.Web.Models.FK_ProjectUpdateConfiguration_Tenant_TenantID", "ProjectUpdateConfiguration");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUpdateConfiguration>("ProjectFirma.Web.Models.FK_ProjectUpdateConfiguration_Tenant_TenantID", "ProjectUpdateConfiguration", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_ProjectUpdateHistory_Tenant_TenantID", "ProjectUpdateHistory")]
        public EntityCollection<ProjectUpdateHistory> ProjectUpdateHistory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectUpdateHistory>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_Tenant_TenantID", "ProjectUpdateHistory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectUpdateHistory>("ProjectFirma.Web.Models.FK_ProjectUpdateHistory_Tenant_TenantID", "ProjectUpdateHistory", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_RelationshipType_Tenant_TenantID", "RelationshipType")]
        public EntityCollection<RelationshipType> RelationshipType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RelationshipType>("ProjectFirma.Web.Models.FK_RelationshipType_Tenant_TenantID", "RelationshipType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RelationshipType>("ProjectFirma.Web.Models.FK_RelationshipType_Tenant_TenantID", "RelationshipType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Snapshot_Tenant_TenantID", "Snapshot")]
        public EntityCollection<Snapshot> Snapshot
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Snapshot>("ProjectFirma.Web.Models.FK_Snapshot_Tenant_TenantID", "Snapshot");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Snapshot>("ProjectFirma.Web.Models.FK_Snapshot_Tenant_TenantID", "Snapshot", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotOrganizationTypeExpenditure_Tenant_TenantID", "SnapshotOrganizationTypeExpenditure")]
        public EntityCollection<SnapshotOrganizationTypeExpenditure> SnapshotOrganizationTypeExpenditure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SnapshotOrganizationTypeExpenditure>("ProjectFirma.Web.Models.FK_SnapshotOrganizationTypeExpenditure_Tenant_TenantID", "SnapshotOrganizationTypeExpenditure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SnapshotOrganizationTypeExpenditure>("ProjectFirma.Web.Models.FK_SnapshotOrganizationTypeExpenditure_Tenant_TenantID", "SnapshotOrganizationTypeExpenditure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasure_Tenant_TenantID", "SnapshotPerformanceMeasure")]
        public EntityCollection<SnapshotPerformanceMeasure> SnapshotPerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SnapshotPerformanceMeasure>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasure_Tenant_TenantID", "SnapshotPerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SnapshotPerformanceMeasure>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasure_Tenant_TenantID", "SnapshotPerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotPerformanceMeasureSubcategoryOption_Tenant_TenantID", "SnapshotPerformanceMeasureSubcategoryOption")]
        public EntityCollection<SnapshotPerformanceMeasureSubcategoryOption> SnapshotPerformanceMeasureSubcategoryOption
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SnapshotPerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_Tenant_TenantID", "SnapshotPerformanceMeasureSubcategoryOption");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SnapshotPerformanceMeasureSubcategoryOption>("ProjectFirma.Web.Models.FK_SnapshotPerformanceMeasureSubcategoryOption_Tenant_TenantID", "SnapshotPerformanceMeasureSubcategoryOption", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SnapshotProject_Tenant_TenantID", "SnapshotProject")]
        public EntityCollection<SnapshotProject> SnapshotProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SnapshotProject>("ProjectFirma.Web.Models.FK_SnapshotProject_Tenant_TenantID", "SnapshotProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SnapshotProject>("ProjectFirma.Web.Models.FK_SnapshotProject_Tenant_TenantID", "SnapshotProject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_StateProvince_Tenant_TenantID", "StateProvince")]
        public EntityCollection<StateProvince> StateProvince
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StateProvince>("ProjectFirma.Web.Models.FK_StateProvince_Tenant_TenantID", "StateProvince");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StateProvince>("ProjectFirma.Web.Models.FK_StateProvince_Tenant_TenantID", "StateProvince", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_SupportRequestLog_Tenant_TenantID", "SupportRequestLog")]
        public EntityCollection<SupportRequestLog> SupportRequestLog
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SupportRequestLog>("ProjectFirma.Web.Models.FK_SupportRequestLog_Tenant_TenantID", "SupportRequestLog");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SupportRequestLog>("ProjectFirma.Web.Models.FK_SupportRequestLog_Tenant_TenantID", "SupportRequestLog", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_Tag_Tenant_TenantID", "Tag")]
        public EntityCollection<Tag> Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag>("ProjectFirma.Web.Models.FK_Tag_Tenant_TenantID", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag>("ProjectFirma.Web.Models.FK_Tag_Tenant_TenantID", "Tag", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TaxonomyBranch_Tenant_TenantID", "TaxonomyBranch")]
        public EntityCollection<TaxonomyBranch> TaxonomyBranch
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaxonomyBranch>("ProjectFirma.Web.Models.FK_TaxonomyBranch_Tenant_TenantID", "TaxonomyBranch");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaxonomyBranch>("ProjectFirma.Web.Models.FK_TaxonomyBranch_Tenant_TenantID", "TaxonomyBranch", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TaxonomyLeaf_Tenant_TenantID", "TaxonomyLeaf")]
        public EntityCollection<TaxonomyLeaf> TaxonomyLeaf
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaxonomyLeaf>("ProjectFirma.Web.Models.FK_TaxonomyLeaf_Tenant_TenantID", "TaxonomyLeaf");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaxonomyLeaf>("ProjectFirma.Web.Models.FK_TaxonomyLeaf_Tenant_TenantID", "TaxonomyLeaf", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TaxonomyLeafPerformanceMeasure_Tenant_TenantID", "TaxonomyLeafPerformanceMeasure")]
        public EntityCollection<TaxonomyLeafPerformanceMeasure> TaxonomyLeafPerformanceMeasure
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaxonomyLeafPerformanceMeasure>("ProjectFirma.Web.Models.FK_TaxonomyLeafPerformanceMeasure_Tenant_TenantID", "TaxonomyLeafPerformanceMeasure");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaxonomyLeafPerformanceMeasure>("ProjectFirma.Web.Models.FK_TaxonomyLeafPerformanceMeasure_Tenant_TenantID", "TaxonomyLeafPerformanceMeasure", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TaxonomyTrunk_Tenant_TenantID", "TaxonomyTrunk")]
        public EntityCollection<TaxonomyTrunk> TaxonomyTrunk
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TaxonomyTrunk>("ProjectFirma.Web.Models.FK_TaxonomyTrunk_Tenant_TenantID", "TaxonomyTrunk");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TaxonomyTrunk>("ProjectFirma.Web.Models.FK_TaxonomyTrunk_Tenant_TenantID", "TaxonomyTrunk", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TechnicalAssistanceParameter_Tenant_TenantID", "TechnicalAssistanceParameter")]
        public EntityCollection<TechnicalAssistanceParameter> TechnicalAssistanceParameter
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TechnicalAssistanceParameter>("ProjectFirma.Web.Models.FK_TechnicalAssistanceParameter_Tenant_TenantID", "TechnicalAssistanceParameter");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TechnicalAssistanceParameter>("ProjectFirma.Web.Models.FK_TechnicalAssistanceParameter_Tenant_TenantID", "TechnicalAssistanceParameter", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_Tenant_TenantID", "TenantAttribute")]
        public EntityCollection<TenantAttribute> TenantAttribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TenantAttribute>("ProjectFirma.Web.Models.FK_TenantAttribute_Tenant_TenantID", "TenantAttribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TenantAttribute>("ProjectFirma.Web.Models.FK_TenantAttribute_Tenant_TenantID", "TenantAttribute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TrainingVideo_Tenant_TenantID", "TrainingVideo")]
        public EntityCollection<TrainingVideo> TrainingVideo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TrainingVideo>("ProjectFirma.Web.Models.FK_TrainingVideo_Tenant_TenantID", "TrainingVideo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TrainingVideo>("ProjectFirma.Web.Models.FK_TrainingVideo_Tenant_TenantID", "TrainingVideo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TreatmentActivity_Tenant_TenantID", "TreatmentActivity")]
        public EntityCollection<TreatmentActivity> TreatmentActivity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TreatmentActivity>("ProjectFirma.Web.Models.FK_TreatmentActivity_Tenant_TenantID", "TreatmentActivity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TreatmentActivity>("ProjectFirma.Web.Models.FK_TreatmentActivity_Tenant_TenantID", "TreatmentActivity", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="TenantAttribute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TenantAttribute : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TenantAttribute object.
        /// </summary>
        /// <param name="tenantAttributeID">Initial value of the TenantAttributeID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="defaultBoundingBox">Initial value of the DefaultBoundingBox property.</param>
        /// <param name="minimumYear">Initial value of the MinimumYear property.</param>
        /// <param name="tenantDisplayName">Initial value of the TenantDisplayName property.</param>
        /// <param name="toolDisplayName">Initial value of the ToolDisplayName property.</param>
        /// <param name="showApplicationsToThePublic">Initial value of the ShowApplicationsToThePublic property.</param>
        /// <param name="taxonomyLevelID">Initial value of the TaxonomyLevelID property.</param>
        /// <param name="associatePerfomanceMeasureTaxonomyLevelID">Initial value of the AssociatePerfomanceMeasureTaxonomyLevelID property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="projectExternalDataSourceEnabled">Initial value of the ProjectExternalDataSourceEnabled property.</param>
        /// <param name="accomplishmentsDashboardFundingDisplayTypeID">Initial value of the AccomplishmentsDashboardFundingDisplayTypeID property.</param>
        /// <param name="accomplishmentsDashboardIncludeReportingOrganizationType">Initial value of the AccomplishmentsDashboardIncludeReportingOrganizationType property.</param>
        /// <param name="showLeadImplementerLogoOnFactSheet">Initial value of the ShowLeadImplementerLogoOnFactSheet property.</param>
        /// <param name="enableAccomplishmentsDashboard">Initial value of the EnableAccomplishmentsDashboard property.</param>
        public static TenantAttribute CreateTenantAttribute(global::System.Int32 tenantAttributeID, global::System.Int32 tenantID, global::System.Data.Spatial.DbGeometry defaultBoundingBox, global::System.Int32 minimumYear, global::System.String tenantDisplayName, global::System.String toolDisplayName, global::System.Boolean showApplicationsToThePublic, global::System.Int32 taxonomyLevelID, global::System.Int32 associatePerfomanceMeasureTaxonomyLevelID, global::System.Boolean isActive, global::System.Boolean projectExternalDataSourceEnabled, global::System.Int32 accomplishmentsDashboardFundingDisplayTypeID, global::System.Boolean accomplishmentsDashboardIncludeReportingOrganizationType, global::System.Boolean showLeadImplementerLogoOnFactSheet, global::System.Boolean enableAccomplishmentsDashboard)
        {
            TenantAttribute tenantAttribute = new TenantAttribute();
            tenantAttribute.TenantAttributeID = tenantAttributeID;
            tenantAttribute.TenantID = tenantID;
            tenantAttribute.DefaultBoundingBox = defaultBoundingBox;
            tenantAttribute.MinimumYear = minimumYear;
            tenantAttribute.TenantDisplayName = tenantDisplayName;
            tenantAttribute.ToolDisplayName = toolDisplayName;
            tenantAttribute.ShowApplicationsToThePublic = showApplicationsToThePublic;
            tenantAttribute.TaxonomyLevelID = taxonomyLevelID;
            tenantAttribute.AssociatePerfomanceMeasureTaxonomyLevelID = associatePerfomanceMeasureTaxonomyLevelID;
            tenantAttribute.IsActive = isActive;
            tenantAttribute.ProjectExternalDataSourceEnabled = projectExternalDataSourceEnabled;
            tenantAttribute.AccomplishmentsDashboardFundingDisplayTypeID = accomplishmentsDashboardFundingDisplayTypeID;
            tenantAttribute.AccomplishmentsDashboardIncludeReportingOrganizationType = accomplishmentsDashboardIncludeReportingOrganizationType;
            tenantAttribute.ShowLeadImplementerLogoOnFactSheet = showLeadImplementerLogoOnFactSheet;
            tenantAttribute.EnableAccomplishmentsDashboard = enableAccomplishmentsDashboard;
            return tenantAttribute;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantAttributeID
        {
            get
            {
                return _TenantAttributeID;
            }
            set
            {
                if (_TenantAttributeID != value)
                {
                    OnTenantAttributeIDChanging(value);
                    ReportPropertyChanging("TenantAttributeID");
                    _TenantAttributeID = StructuralObject.SetValidValue(value, "TenantAttributeID");
                    ReportPropertyChanged("TenantAttributeID");
                    OnTenantAttributeIDChanged();
                }
            }
        }
        private global::System.Int32 _TenantAttributeID;
        partial void OnTenantAttributeIDChanging(global::System.Int32 value);
        partial void OnTenantAttributeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeometry DefaultBoundingBox
        {
            get
            {
                return _DefaultBoundingBox;
            }
            set
            {
                OnDefaultBoundingBoxChanging(value);
                ReportPropertyChanging("DefaultBoundingBox");
                _DefaultBoundingBox = StructuralObject.SetValidValue(value, false, "DefaultBoundingBox");
                ReportPropertyChanged("DefaultBoundingBox");
                OnDefaultBoundingBoxChanged();
            }
        }
        private global::System.Data.Spatial.DbGeometry _DefaultBoundingBox;
        partial void OnDefaultBoundingBoxChanging(global::System.Data.Spatial.DbGeometry value);
        partial void OnDefaultBoundingBoxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 MinimumYear
        {
            get
            {
                return _MinimumYear;
            }
            set
            {
                OnMinimumYearChanging(value);
                ReportPropertyChanging("MinimumYear");
                _MinimumYear = StructuralObject.SetValidValue(value, "MinimumYear");
                ReportPropertyChanged("MinimumYear");
                OnMinimumYearChanged();
            }
        }
        private global::System.Int32 _MinimumYear;
        partial void OnMinimumYearChanging(global::System.Int32 value);
        partial void OnMinimumYearChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PrimaryContactPersonID
        {
            get
            {
                return _PrimaryContactPersonID;
            }
            set
            {
                OnPrimaryContactPersonIDChanging(value);
                ReportPropertyChanging("PrimaryContactPersonID");
                _PrimaryContactPersonID = StructuralObject.SetValidValue(value, "PrimaryContactPersonID");
                ReportPropertyChanged("PrimaryContactPersonID");
                OnPrimaryContactPersonIDChanged();
            }
        }
        private Nullable<global::System.Int32> _PrimaryContactPersonID;
        partial void OnPrimaryContactPersonIDChanging(Nullable<global::System.Int32> value);
        partial void OnPrimaryContactPersonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TenantSquareLogoFileResourceID
        {
            get
            {
                return _TenantSquareLogoFileResourceID;
            }
            set
            {
                OnTenantSquareLogoFileResourceIDChanging(value);
                ReportPropertyChanging("TenantSquareLogoFileResourceID");
                _TenantSquareLogoFileResourceID = StructuralObject.SetValidValue(value, "TenantSquareLogoFileResourceID");
                ReportPropertyChanged("TenantSquareLogoFileResourceID");
                OnTenantSquareLogoFileResourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TenantSquareLogoFileResourceID;
        partial void OnTenantSquareLogoFileResourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnTenantSquareLogoFileResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TenantBannerLogoFileResourceID
        {
            get
            {
                return _TenantBannerLogoFileResourceID;
            }
            set
            {
                OnTenantBannerLogoFileResourceIDChanging(value);
                ReportPropertyChanging("TenantBannerLogoFileResourceID");
                _TenantBannerLogoFileResourceID = StructuralObject.SetValidValue(value, "TenantBannerLogoFileResourceID");
                ReportPropertyChanged("TenantBannerLogoFileResourceID");
                OnTenantBannerLogoFileResourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TenantBannerLogoFileResourceID;
        partial void OnTenantBannerLogoFileResourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnTenantBannerLogoFileResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> TenantStyleSheetFileResourceID
        {
            get
            {
                return _TenantStyleSheetFileResourceID;
            }
            set
            {
                OnTenantStyleSheetFileResourceIDChanging(value);
                ReportPropertyChanging("TenantStyleSheetFileResourceID");
                _TenantStyleSheetFileResourceID = StructuralObject.SetValidValue(value, "TenantStyleSheetFileResourceID");
                ReportPropertyChanged("TenantStyleSheetFileResourceID");
                OnTenantStyleSheetFileResourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _TenantStyleSheetFileResourceID;
        partial void OnTenantStyleSheetFileResourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnTenantStyleSheetFileResourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TenantDisplayName
        {
            get
            {
                return _TenantDisplayName;
            }
            set
            {
                OnTenantDisplayNameChanging(value);
                ReportPropertyChanging("TenantDisplayName");
                _TenantDisplayName = StructuralObject.SetValidValue(value, false, "TenantDisplayName");
                ReportPropertyChanged("TenantDisplayName");
                OnTenantDisplayNameChanged();
            }
        }
        private global::System.String _TenantDisplayName;
        partial void OnTenantDisplayNameChanging(global::System.String value);
        partial void OnTenantDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ToolDisplayName
        {
            get
            {
                return _ToolDisplayName;
            }
            set
            {
                OnToolDisplayNameChanging(value);
                ReportPropertyChanging("ToolDisplayName");
                _ToolDisplayName = StructuralObject.SetValidValue(value, false, "ToolDisplayName");
                ReportPropertyChanged("ToolDisplayName");
                OnToolDisplayNameChanged();
            }
        }
        private global::System.String _ToolDisplayName;
        partial void OnToolDisplayNameChanging(global::System.String value);
        partial void OnToolDisplayNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecaptchaPublicKey
        {
            get
            {
                return _RecaptchaPublicKey;
            }
            set
            {
                OnRecaptchaPublicKeyChanging(value);
                ReportPropertyChanging("RecaptchaPublicKey");
                _RecaptchaPublicKey = StructuralObject.SetValidValue(value, true, "RecaptchaPublicKey");
                ReportPropertyChanged("RecaptchaPublicKey");
                OnRecaptchaPublicKeyChanged();
            }
        }
        private global::System.String _RecaptchaPublicKey;
        partial void OnRecaptchaPublicKeyChanging(global::System.String value);
        partial void OnRecaptchaPublicKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RecaptchaPrivateKey
        {
            get
            {
                return _RecaptchaPrivateKey;
            }
            set
            {
                OnRecaptchaPrivateKeyChanging(value);
                ReportPropertyChanging("RecaptchaPrivateKey");
                _RecaptchaPrivateKey = StructuralObject.SetValidValue(value, true, "RecaptchaPrivateKey");
                ReportPropertyChanged("RecaptchaPrivateKey");
                OnRecaptchaPrivateKeyChanged();
            }
        }
        private global::System.String _RecaptchaPrivateKey;
        partial void OnRecaptchaPrivateKeyChanging(global::System.String value);
        partial void OnRecaptchaPrivateKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowApplicationsToThePublic
        {
            get
            {
                return _ShowApplicationsToThePublic;
            }
            set
            {
                OnShowApplicationsToThePublicChanging(value);
                ReportPropertyChanging("ShowApplicationsToThePublic");
                _ShowApplicationsToThePublic = StructuralObject.SetValidValue(value, "ShowApplicationsToThePublic");
                ReportPropertyChanged("ShowApplicationsToThePublic");
                OnShowApplicationsToThePublicChanged();
            }
        }
        private global::System.Boolean _ShowApplicationsToThePublic;
        partial void OnShowApplicationsToThePublicChanging(global::System.Boolean value);
        partial void OnShowApplicationsToThePublicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TaxonomyLevelID
        {
            get
            {
                return _TaxonomyLevelID;
            }
            set
            {
                OnTaxonomyLevelIDChanging(value);
                ReportPropertyChanging("TaxonomyLevelID");
                _TaxonomyLevelID = StructuralObject.SetValidValue(value, "TaxonomyLevelID");
                ReportPropertyChanged("TaxonomyLevelID");
                OnTaxonomyLevelIDChanged();
            }
        }
        private global::System.Int32 _TaxonomyLevelID;
        partial void OnTaxonomyLevelIDChanging(global::System.Int32 value);
        partial void OnTaxonomyLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AssociatePerfomanceMeasureTaxonomyLevelID
        {
            get
            {
                return _AssociatePerfomanceMeasureTaxonomyLevelID;
            }
            set
            {
                OnAssociatePerfomanceMeasureTaxonomyLevelIDChanging(value);
                ReportPropertyChanging("AssociatePerfomanceMeasureTaxonomyLevelID");
                _AssociatePerfomanceMeasureTaxonomyLevelID = StructuralObject.SetValidValue(value, "AssociatePerfomanceMeasureTaxonomyLevelID");
                ReportPropertyChanged("AssociatePerfomanceMeasureTaxonomyLevelID");
                OnAssociatePerfomanceMeasureTaxonomyLevelIDChanged();
            }
        }
        private global::System.Int32 _AssociatePerfomanceMeasureTaxonomyLevelID;
        partial void OnAssociatePerfomanceMeasureTaxonomyLevelIDChanging(global::System.Int32 value);
        partial void OnAssociatePerfomanceMeasureTaxonomyLevelIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value, "IsActive");
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ProjectExternalDataSourceEnabled
        {
            get
            {
                return _ProjectExternalDataSourceEnabled;
            }
            set
            {
                OnProjectExternalDataSourceEnabledChanging(value);
                ReportPropertyChanging("ProjectExternalDataSourceEnabled");
                _ProjectExternalDataSourceEnabled = StructuralObject.SetValidValue(value, "ProjectExternalDataSourceEnabled");
                ReportPropertyChanged("ProjectExternalDataSourceEnabled");
                OnProjectExternalDataSourceEnabledChanged();
            }
        }
        private global::System.Boolean _ProjectExternalDataSourceEnabled;
        partial void OnProjectExternalDataSourceEnabledChanging(global::System.Boolean value);
        partial void OnProjectExternalDataSourceEnabledChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AccomplishmentsDashboardFundingDisplayTypeID
        {
            get
            {
                return _AccomplishmentsDashboardFundingDisplayTypeID;
            }
            set
            {
                OnAccomplishmentsDashboardFundingDisplayTypeIDChanging(value);
                ReportPropertyChanging("AccomplishmentsDashboardFundingDisplayTypeID");
                _AccomplishmentsDashboardFundingDisplayTypeID = StructuralObject.SetValidValue(value, "AccomplishmentsDashboardFundingDisplayTypeID");
                ReportPropertyChanged("AccomplishmentsDashboardFundingDisplayTypeID");
                OnAccomplishmentsDashboardFundingDisplayTypeIDChanged();
            }
        }
        private global::System.Int32 _AccomplishmentsDashboardFundingDisplayTypeID;
        partial void OnAccomplishmentsDashboardFundingDisplayTypeIDChanging(global::System.Int32 value);
        partial void OnAccomplishmentsDashboardFundingDisplayTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccomplishmentsDashboardAccomplishmentsButtonText
        {
            get
            {
                return _AccomplishmentsDashboardAccomplishmentsButtonText;
            }
            set
            {
                OnAccomplishmentsDashboardAccomplishmentsButtonTextChanging(value);
                ReportPropertyChanging("AccomplishmentsDashboardAccomplishmentsButtonText");
                _AccomplishmentsDashboardAccomplishmentsButtonText = StructuralObject.SetValidValue(value, true, "AccomplishmentsDashboardAccomplishmentsButtonText");
                ReportPropertyChanged("AccomplishmentsDashboardAccomplishmentsButtonText");
                OnAccomplishmentsDashboardAccomplishmentsButtonTextChanged();
            }
        }
        private global::System.String _AccomplishmentsDashboardAccomplishmentsButtonText;
        partial void OnAccomplishmentsDashboardAccomplishmentsButtonTextChanging(global::System.String value);
        partial void OnAccomplishmentsDashboardAccomplishmentsButtonTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccomplishmentsDashboardExpendituresButtonText
        {
            get
            {
                return _AccomplishmentsDashboardExpendituresButtonText;
            }
            set
            {
                OnAccomplishmentsDashboardExpendituresButtonTextChanging(value);
                ReportPropertyChanging("AccomplishmentsDashboardExpendituresButtonText");
                _AccomplishmentsDashboardExpendituresButtonText = StructuralObject.SetValidValue(value, true, "AccomplishmentsDashboardExpendituresButtonText");
                ReportPropertyChanged("AccomplishmentsDashboardExpendituresButtonText");
                OnAccomplishmentsDashboardExpendituresButtonTextChanged();
            }
        }
        private global::System.String _AccomplishmentsDashboardExpendituresButtonText;
        partial void OnAccomplishmentsDashboardExpendituresButtonTextChanging(global::System.String value);
        partial void OnAccomplishmentsDashboardExpendituresButtonTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccomplishmentsDashboardOrganizationsButtonText
        {
            get
            {
                return _AccomplishmentsDashboardOrganizationsButtonText;
            }
            set
            {
                OnAccomplishmentsDashboardOrganizationsButtonTextChanging(value);
                ReportPropertyChanging("AccomplishmentsDashboardOrganizationsButtonText");
                _AccomplishmentsDashboardOrganizationsButtonText = StructuralObject.SetValidValue(value, true, "AccomplishmentsDashboardOrganizationsButtonText");
                ReportPropertyChanged("AccomplishmentsDashboardOrganizationsButtonText");
                OnAccomplishmentsDashboardOrganizationsButtonTextChanged();
            }
        }
        private global::System.String _AccomplishmentsDashboardOrganizationsButtonText;
        partial void OnAccomplishmentsDashboardOrganizationsButtonTextChanging(global::System.String value);
        partial void OnAccomplishmentsDashboardOrganizationsButtonTextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean AccomplishmentsDashboardIncludeReportingOrganizationType
        {
            get
            {
                return _AccomplishmentsDashboardIncludeReportingOrganizationType;
            }
            set
            {
                OnAccomplishmentsDashboardIncludeReportingOrganizationTypeChanging(value);
                ReportPropertyChanging("AccomplishmentsDashboardIncludeReportingOrganizationType");
                _AccomplishmentsDashboardIncludeReportingOrganizationType = StructuralObject.SetValidValue(value, "AccomplishmentsDashboardIncludeReportingOrganizationType");
                ReportPropertyChanged("AccomplishmentsDashboardIncludeReportingOrganizationType");
                OnAccomplishmentsDashboardIncludeReportingOrganizationTypeChanged();
            }
        }
        private global::System.Boolean _AccomplishmentsDashboardIncludeReportingOrganizationType;
        partial void OnAccomplishmentsDashboardIncludeReportingOrganizationTypeChanging(global::System.Boolean value);
        partial void OnAccomplishmentsDashboardIncludeReportingOrganizationTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean ShowLeadImplementerLogoOnFactSheet
        {
            get
            {
                return _ShowLeadImplementerLogoOnFactSheet;
            }
            set
            {
                OnShowLeadImplementerLogoOnFactSheetChanging(value);
                ReportPropertyChanging("ShowLeadImplementerLogoOnFactSheet");
                _ShowLeadImplementerLogoOnFactSheet = StructuralObject.SetValidValue(value, "ShowLeadImplementerLogoOnFactSheet");
                ReportPropertyChanged("ShowLeadImplementerLogoOnFactSheet");
                OnShowLeadImplementerLogoOnFactSheetChanged();
            }
        }
        private global::System.Boolean _ShowLeadImplementerLogoOnFactSheet;
        partial void OnShowLeadImplementerLogoOnFactSheetChanging(global::System.Boolean value);
        partial void OnShowLeadImplementerLogoOnFactSheetChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean EnableAccomplishmentsDashboard
        {
            get
            {
                return _EnableAccomplishmentsDashboard;
            }
            set
            {
                OnEnableAccomplishmentsDashboardChanging(value);
                ReportPropertyChanging("EnableAccomplishmentsDashboard");
                _EnableAccomplishmentsDashboard = StructuralObject.SetValidValue(value, "EnableAccomplishmentsDashboard");
                ReportPropertyChanged("EnableAccomplishmentsDashboard");
                OnEnableAccomplishmentsDashboardChanged();
            }
        }
        private global::System.Boolean _EnableAccomplishmentsDashboard;
        partial void OnEnableAccomplishmentsDashboardChanging(global::System.Boolean value);
        partial void OnEnableAccomplishmentsDashboardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectStewardshipAreaTypeID
        {
            get
            {
                return _ProjectStewardshipAreaTypeID;
            }
            set
            {
                OnProjectStewardshipAreaTypeIDChanging(value);
                ReportPropertyChanging("ProjectStewardshipAreaTypeID");
                _ProjectStewardshipAreaTypeID = StructuralObject.SetValidValue(value, "ProjectStewardshipAreaTypeID");
                ReportPropertyChanged("ProjectStewardshipAreaTypeID");
                OnProjectStewardshipAreaTypeIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectStewardshipAreaTypeID;
        partial void OnProjectStewardshipAreaTypeIDChanging(Nullable<global::System.Int32> value);
        partial void OnProjectStewardshipAreaTypeIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_AccomplishmentsDashboardFundingDisplayType_AccomplishmentsDashboardFundingDisplayTypeID", "AccomplishmentsDashboardFundingDisplayType")]
        public AccomplishmentsDashboardFundingDisplayType AccomplishmentsDashboardFundingDisplayType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccomplishmentsDashboardFundingDisplayType>("ProjectFirma.Web.Models.FK_TenantAttribute_AccomplishmentsDashboardFundingDisplayType_AccomplishmentsDashboardFundingDisplayTypeID", "AccomplishmentsDashboardFundingDisplayType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccomplishmentsDashboardFundingDisplayType>("ProjectFirma.Web.Models.FK_TenantAttribute_AccomplishmentsDashboardFundingDisplayType_AccomplishmentsDashboardFundingDisplayTypeID", "AccomplishmentsDashboardFundingDisplayType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccomplishmentsDashboardFundingDisplayType> AccomplishmentsDashboardFundingDisplayTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccomplishmentsDashboardFundingDisplayType>("ProjectFirma.Web.Models.FK_TenantAttribute_AccomplishmentsDashboardFundingDisplayType_AccomplishmentsDashboardFundingDisplayTypeID", "AccomplishmentsDashboardFundingDisplayType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccomplishmentsDashboardFundingDisplayType>("ProjectFirma.Web.Models.FK_TenantAttribute_AccomplishmentsDashboardFundingDisplayType_AccomplishmentsDashboardFundingDisplayTypeID", "AccomplishmentsDashboardFundingDisplayType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_FileResource_TenantBannerLogoFileResourceID_FileResourceID", "FileResource")]
        public FileResource FileResource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_TenantAttribute_FileResource_TenantBannerLogoFileResourceID_FileResourceID", "FileResource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_TenantAttribute_FileResource_TenantBannerLogoFileResourceID_FileResourceID", "FileResource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileResource> FileResourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_TenantAttribute_FileResource_TenantBannerLogoFileResourceID_FileResourceID", "FileResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_TenantAttribute_FileResource_TenantBannerLogoFileResourceID_FileResourceID", "FileResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_FileResource_TenantSquareLogoFileResourceID_FileResourceID", "FileResource")]
        public FileResource FileResource1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_TenantAttribute_FileResource_TenantSquareLogoFileResourceID_FileResourceID", "FileResource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_TenantAttribute_FileResource_TenantSquareLogoFileResourceID_FileResourceID", "FileResource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileResource> FileResource1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_TenantAttribute_FileResource_TenantSquareLogoFileResourceID_FileResourceID", "FileResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_TenantAttribute_FileResource_TenantSquareLogoFileResourceID_FileResourceID", "FileResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_FileResource_TenantStyleSheetFileResourceID_FileResourceID", "FileResource")]
        public FileResource FileResource2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_TenantAttribute_FileResource_TenantStyleSheetFileResourceID_FileResourceID", "FileResource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_TenantAttribute_FileResource_TenantStyleSheetFileResourceID_FileResourceID", "FileResource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FileResource> FileResource2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_TenantAttribute_FileResource_TenantStyleSheetFileResourceID_FileResourceID", "FileResource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FileResource>("ProjectFirma.Web.Models.FK_TenantAttribute_FileResource_TenantStyleSheetFileResourceID_FileResourceID", "FileResource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_Person_PrimaryContactPersonID_PersonID", "Person")]
        public Person Person
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_TenantAttribute_Person_PrimaryContactPersonID_PersonID", "Person").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_TenantAttribute_Person_PrimaryContactPersonID_PersonID", "Person").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Person> PersonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Person>("ProjectFirma.Web.Models.FK_TenantAttribute_Person_PrimaryContactPersonID_PersonID", "Person");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Person>("ProjectFirma.Web.Models.FK_TenantAttribute_Person_PrimaryContactPersonID_PersonID", "Person", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_ProjectStewardshipAreaType_ProjectStewardshipAreaTypeID", "ProjectStewardshipAreaType")]
        public ProjectStewardshipAreaType ProjectStewardshipAreaType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectStewardshipAreaType>("ProjectFirma.Web.Models.FK_TenantAttribute_ProjectStewardshipAreaType_ProjectStewardshipAreaTypeID", "ProjectStewardshipAreaType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectStewardshipAreaType>("ProjectFirma.Web.Models.FK_TenantAttribute_ProjectStewardshipAreaType_ProjectStewardshipAreaTypeID", "ProjectStewardshipAreaType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProjectStewardshipAreaType> ProjectStewardshipAreaTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProjectStewardshipAreaType>("ProjectFirma.Web.Models.FK_TenantAttribute_ProjectStewardshipAreaType_ProjectStewardshipAreaTypeID", "ProjectStewardshipAreaType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProjectStewardshipAreaType>("ProjectFirma.Web.Models.FK_TenantAttribute_ProjectStewardshipAreaType_ProjectStewardshipAreaTypeID", "ProjectStewardshipAreaType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_TaxonomyLevel_AssociatePerfomanceMeasureTaxonomyLevelID_TaxonomyLevelID", "TaxonomyLevel")]
        public TaxonomyLevel TaxonomyLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxonomyLevel>("ProjectFirma.Web.Models.FK_TenantAttribute_TaxonomyLevel_AssociatePerfomanceMeasureTaxonomyLevelID_TaxonomyLevelID", "TaxonomyLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxonomyLevel>("ProjectFirma.Web.Models.FK_TenantAttribute_TaxonomyLevel_AssociatePerfomanceMeasureTaxonomyLevelID_TaxonomyLevelID", "TaxonomyLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaxonomyLevel> TaxonomyLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxonomyLevel>("ProjectFirma.Web.Models.FK_TenantAttribute_TaxonomyLevel_AssociatePerfomanceMeasureTaxonomyLevelID_TaxonomyLevelID", "TaxonomyLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaxonomyLevel>("ProjectFirma.Web.Models.FK_TenantAttribute_TaxonomyLevel_AssociatePerfomanceMeasureTaxonomyLevelID_TaxonomyLevelID", "TaxonomyLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_TaxonomyLevel_TaxonomyLevelID", "TaxonomyLevel")]
        public TaxonomyLevel TaxonomyLevel1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxonomyLevel>("ProjectFirma.Web.Models.FK_TenantAttribute_TaxonomyLevel_TaxonomyLevelID", "TaxonomyLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxonomyLevel>("ProjectFirma.Web.Models.FK_TenantAttribute_TaxonomyLevel_TaxonomyLevelID", "TaxonomyLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TaxonomyLevel> TaxonomyLevel1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TaxonomyLevel>("ProjectFirma.Web.Models.FK_TenantAttribute_TaxonomyLevel_TaxonomyLevelID", "TaxonomyLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TaxonomyLevel>("ProjectFirma.Web.Models.FK_TenantAttribute_TaxonomyLevel_TaxonomyLevelID", "TaxonomyLevel", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TenantAttribute_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TenantAttribute_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TenantAttribute_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TenantAttribute_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TenantAttribute_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="tmpGrantsFlatFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class tmpGrantsFlatFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new tmpGrantsFlatFile object.
        /// </summary>
        /// <param name="grant_Number">Initial value of the Grant_Number property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static tmpGrantsFlatFile CreatetmpGrantsFlatFile(global::System.String grant_Number, global::System.String title)
        {
            tmpGrantsFlatFile tmpGrantsFlatFile = new tmpGrantsFlatFile();
            tmpGrantsFlatFile.Grant_Number = grant_Number;
            tmpGrantsFlatFile.Title = title;
            return tmpGrantsFlatFile;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Grant_Number
        {
            get
            {
                return _Grant_Number;
            }
            set
            {
                if (_Grant_Number != value)
                {
                    OnGrant_NumberChanging(value);
                    ReportPropertyChanging("Grant_Number");
                    _Grant_Number = StructuralObject.SetValidValue(value, false, "Grant_Number");
                    ReportPropertyChanged("Grant_Number");
                    OnGrant_NumberChanged();
                }
            }
        }
        private global::System.String _Grant_Number;
        partial void OnGrant_NumberChanging(global::System.String value);
        partial void OnGrant_NumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> CFDA
        {
            get
            {
                return _CFDA;
            }
            set
            {
                OnCFDAChanging(value);
                ReportPropertyChanging("CFDA");
                _CFDA = StructuralObject.SetValidValue(value, "CFDA");
                ReportPropertyChanged("CFDA");
                OnCFDAChanged();
            }
        }
        private Nullable<global::System.Double> _CFDA;
        partial void OnCFDAChanging(Nullable<global::System.Double> value);
        partial void OnCFDAChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                if (_Title != value)
                {
                    OnTitleChanging(value);
                    ReportPropertyChanging("Title");
                    _Title = StructuralObject.SetValidValue(value, false, "Title");
                    ReportPropertyChanged("Title");
                    OnTitleChanged();
                }
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Program_Manager
        {
            get
            {
                return _Program_Manager;
            }
            set
            {
                OnProgram_ManagerChanging(value);
                ReportPropertyChanging("Program_Manager");
                _Program_Manager = StructuralObject.SetValidValue(value, true, "Program_Manager");
                ReportPropertyChanged("Program_Manager");
                OnProgram_ManagerChanged();
            }
        }
        private global::System.String _Program_Manager;
        partial void OnProgram_ManagerChanging(global::System.String value);
        partial void OnProgram_ManagerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Prog_Index
        {
            get
            {
                return _Prog_Index;
            }
            set
            {
                OnProg_IndexChanging(value);
                ReportPropertyChanging("Prog_Index");
                _Prog_Index = StructuralObject.SetValidValue(value, true, "Prog_Index");
                ReportPropertyChanged("Prog_Index");
                OnProg_IndexChanged();
            }
        }
        private global::System.String _Prog_Index;
        partial void OnProg_IndexChanging(global::System.String value);
        partial void OnProg_IndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Project_Codes
        {
            get
            {
                return _Project_Codes;
            }
            set
            {
                OnProject_CodesChanging(value);
                ReportPropertyChanging("Project_Codes");
                _Project_Codes = StructuralObject.SetValidValue(value, true, "Project_Codes");
                ReportPropertyChanged("Project_Codes");
                OnProject_CodesChanged();
            }
        }
        private global::System.String _Project_Codes;
        partial void OnProject_CodesChanging(global::System.String value);
        partial void OnProject_CodesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Funding_Increase
        {
            get
            {
                return _Funding_Increase;
            }
            set
            {
                OnFunding_IncreaseChanging(value);
                ReportPropertyChanging("Funding_Increase");
                _Funding_Increase = StructuralObject.SetValidValue(value, true, "Funding_Increase");
                ReportPropertyChanged("Funding_Increase");
                OnFunding_IncreaseChanged();
            }
        }
        private global::System.String _Funding_Increase;
        partial void OnFunding_IncreaseChanging(global::System.String value);
        partial void OnFunding_IncreaseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Federal_Fund_Code
        {
            get
            {
                return _Federal_Fund_Code;
            }
            set
            {
                OnFederal_Fund_CodeChanging(value);
                ReportPropertyChanging("Federal_Fund_Code");
                _Federal_Fund_Code = StructuralObject.SetValidValue(value, true, "Federal_Fund_Code");
                ReportPropertyChanged("Federal_Fund_Code");
                OnFederal_Fund_CodeChanged();
            }
        }
        private global::System.String _Federal_Fund_Code;
        partial void OnFederal_Fund_CodeChanging(global::System.String value);
        partial void OnFederal_Fund_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Funds_Awarded
        {
            get
            {
                return _Funds_Awarded;
            }
            set
            {
                OnFunds_AwardedChanging(value);
                ReportPropertyChanging("Funds_Awarded");
                _Funds_Awarded = StructuralObject.SetValidValue(value, "Funds_Awarded");
                ReportPropertyChanged("Funds_Awarded");
                OnFunds_AwardedChanged();
            }
        }
        private Nullable<global::System.Double> _Funds_Awarded;
        partial void OnFunds_AwardedChanging(Nullable<global::System.Double> value);
        partial void OnFunds_AwardedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Matching_Funds
        {
            get
            {
                return _Matching_Funds;
            }
            set
            {
                OnMatching_FundsChanging(value);
                ReportPropertyChanging("Matching_Funds");
                _Matching_Funds = StructuralObject.SetValidValue(value, "Matching_Funds");
                ReportPropertyChanged("Matching_Funds");
                OnMatching_FundsChanged();
            }
        }
        private Nullable<global::System.Int32> _Matching_Funds;
        partial void OnMatching_FundsChanging(Nullable<global::System.Int32> value);
        partial void OnMatching_FundsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Grant_Total
        {
            get
            {
                return _Grant_Total;
            }
            set
            {
                OnGrant_TotalChanging(value);
                ReportPropertyChanging("Grant_Total");
                _Grant_Total = StructuralObject.SetValidValue(value, "Grant_Total");
                ReportPropertyChanged("Grant_Total");
                OnGrant_TotalChanged();
            }
        }
        private Nullable<global::System.Int32> _Grant_Total;
        partial void OnGrant_TotalChanging(Nullable<global::System.Int32> value);
        partial void OnGrant_TotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DNR_Match_Amount
        {
            get
            {
                return _DNR_Match_Amount;
            }
            set
            {
                OnDNR_Match_AmountChanging(value);
                ReportPropertyChanging("DNR_Match_Amount");
                _DNR_Match_Amount = StructuralObject.SetValidValue(value, true, "DNR_Match_Amount");
                ReportPropertyChanged("DNR_Match_Amount");
                OnDNR_Match_AmountChanged();
            }
        }
        private global::System.String _DNR_Match_Amount;
        partial void OnDNR_Match_AmountChanging(global::System.String value);
        partial void OnDNR_Match_AmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Non_DNR_Other_Match
        {
            get
            {
                return _Non_DNR_Other_Match;
            }
            set
            {
                OnNon_DNR_Other_MatchChanging(value);
                ReportPropertyChanging("Non_DNR_Other_Match");
                _Non_DNR_Other_Match = StructuralObject.SetValidValue(value, true, "Non_DNR_Other_Match");
                ReportPropertyChanged("Non_DNR_Other_Match");
                OnNon_DNR_Other_MatchChanged();
            }
        }
        private global::System.String _Non_DNR_Other_Match;
        partial void OnNon_DNR_Other_MatchChanging(global::System.String value);
        partial void OnNon_DNR_Other_MatchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Landowner_Match
        {
            get
            {
                return _Landowner_Match;
            }
            set
            {
                OnLandowner_MatchChanging(value);
                ReportPropertyChanging("Landowner_Match");
                _Landowner_Match = StructuralObject.SetValidValue(value, true, "Landowner_Match");
                ReportPropertyChanged("Landowner_Match");
                OnLandowner_MatchChanged();
            }
        }
        private global::System.String _Landowner_Match;
        partial void OnLandowner_MatchChanging(global::System.String value);
        partial void OnLandowner_MatchChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Match_PI_Alpha_Code
        {
            get
            {
                return _Match_PI_Alpha_Code;
            }
            set
            {
                OnMatch_PI_Alpha_CodeChanging(value);
                ReportPropertyChanging("Match_PI_Alpha_Code");
                _Match_PI_Alpha_Code = StructuralObject.SetValidValue(value, true, "Match_PI_Alpha_Code");
                ReportPropertyChanged("Match_PI_Alpha_Code");
                OnMatch_PI_Alpha_CodeChanged();
            }
        }
        private global::System.String _Match_PI_Alpha_Code;
        partial void OnMatch_PI_Alpha_CodeChanging(global::System.String value);
        partial void OnMatch_PI_Alpha_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Expend_Method
        {
            get
            {
                return _Expend_Method;
            }
            set
            {
                OnExpend_MethodChanging(value);
                ReportPropertyChanging("Expend_Method");
                _Expend_Method = StructuralObject.SetValidValue(value, true, "Expend_Method");
                ReportPropertyChanged("Expend_Method");
                OnExpend_MethodChanged();
            }
        }
        private global::System.String _Expend_Method;
        partial void OnExpend_MethodChanging(global::System.String value);
        partial void OnExpend_MethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Start_Date
        {
            get
            {
                return _Start_Date;
            }
            set
            {
                OnStart_DateChanging(value);
                ReportPropertyChanging("Start_Date");
                _Start_Date = StructuralObject.SetValidValue(value, "Start_Date");
                ReportPropertyChanged("Start_Date");
                OnStart_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Start_Date;
        partial void OnStart_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnStart_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> End_Date
        {
            get
            {
                return _End_Date;
            }
            set
            {
                OnEnd_DateChanging(value);
                ReportPropertyChanging("End_Date");
                _End_Date = StructuralObject.SetValidValue(value, "End_Date");
                ReportPropertyChanged("End_Date");
                OnEnd_DateChanged();
            }
        }
        private Nullable<global::System.DateTime> _End_Date;
        partial void OnEnd_DateChanging(Nullable<global::System.DateTime> value);
        partial void OnEnd_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true, "Notes");
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="TrainingVideo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TrainingVideo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TrainingVideo object.
        /// </summary>
        /// <param name="trainingVideoID">Initial value of the TrainingVideoID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="videoName">Initial value of the VideoName property.</param>
        /// <param name="videoUploadDate">Initial value of the VideoUploadDate property.</param>
        /// <param name="videoURL">Initial value of the VideoURL property.</param>
        public static TrainingVideo CreateTrainingVideo(global::System.Int32 trainingVideoID, global::System.Int32 tenantID, global::System.String videoName, global::System.DateTime videoUploadDate, global::System.String videoURL)
        {
            TrainingVideo trainingVideo = new TrainingVideo();
            trainingVideo.TrainingVideoID = trainingVideoID;
            trainingVideo.TenantID = tenantID;
            trainingVideo.VideoName = videoName;
            trainingVideo.VideoUploadDate = videoUploadDate;
            trainingVideo.VideoURL = videoURL;
            return trainingVideo;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrainingVideoID
        {
            get
            {
                return _TrainingVideoID;
            }
            set
            {
                if (_TrainingVideoID != value)
                {
                    OnTrainingVideoIDChanging(value);
                    ReportPropertyChanging("TrainingVideoID");
                    _TrainingVideoID = StructuralObject.SetValidValue(value, "TrainingVideoID");
                    ReportPropertyChanged("TrainingVideoID");
                    OnTrainingVideoIDChanged();
                }
            }
        }
        private global::System.Int32 _TrainingVideoID;
        partial void OnTrainingVideoIDChanging(global::System.Int32 value);
        partial void OnTrainingVideoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VideoName
        {
            get
            {
                return _VideoName;
            }
            set
            {
                OnVideoNameChanging(value);
                ReportPropertyChanging("VideoName");
                _VideoName = StructuralObject.SetValidValue(value, false, "VideoName");
                ReportPropertyChanged("VideoName");
                OnVideoNameChanged();
            }
        }
        private global::System.String _VideoName;
        partial void OnVideoNameChanging(global::System.String value);
        partial void OnVideoNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VideoDescription
        {
            get
            {
                return _VideoDescription;
            }
            set
            {
                OnVideoDescriptionChanging(value);
                ReportPropertyChanging("VideoDescription");
                _VideoDescription = StructuralObject.SetValidValue(value, true, "VideoDescription");
                ReportPropertyChanged("VideoDescription");
                OnVideoDescriptionChanged();
            }
        }
        private global::System.String _VideoDescription;
        partial void OnVideoDescriptionChanging(global::System.String value);
        partial void OnVideoDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime VideoUploadDate
        {
            get
            {
                return _VideoUploadDate;
            }
            set
            {
                OnVideoUploadDateChanging(value);
                ReportPropertyChanging("VideoUploadDate");
                _VideoUploadDate = StructuralObject.SetValidValue(value, "VideoUploadDate");
                ReportPropertyChanged("VideoUploadDate");
                OnVideoUploadDateChanged();
            }
        }
        private global::System.DateTime _VideoUploadDate;
        partial void OnVideoUploadDateChanging(global::System.DateTime value);
        partial void OnVideoUploadDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String VideoURL
        {
            get
            {
                return _VideoURL;
            }
            set
            {
                OnVideoURLChanging(value);
                ReportPropertyChanging("VideoURL");
                _VideoURL = StructuralObject.SetValidValue(value, false, "VideoURL");
                ReportPropertyChanged("VideoURL");
                OnVideoURLChanged();
            }
        }
        private global::System.String _VideoURL;
        partial void OnVideoURLChanging(global::System.String value);
        partial void OnVideoURLChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TrainingVideo_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TrainingVideo_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TrainingVideo_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TrainingVideo_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TrainingVideo_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="TreatmentActivity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TreatmentActivity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TreatmentActivity object.
        /// </summary>
        /// <param name="treatmentActivityID">Initial value of the TreatmentActivityID property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="projectID">Initial value of the ProjectID property.</param>
        /// <param name="fundingSourceID">Initial value of the FundingSourceID property.</param>
        /// <param name="treatmentActivityFootprintAcres">Initial value of the TreatmentActivityFootprintAcres property.</param>
        /// <param name="treatmentActivityBrushControlAcres">Initial value of the TreatmentActivityBrushControlAcres property.</param>
        /// <param name="treatmentActivityThinningAcres">Initial value of the TreatmentActivityThinningAcres property.</param>
        /// <param name="treatmentActivityPruningAcres">Initial value of the TreatmentActivityPruningAcres property.</param>
        /// <param name="treatmentActivitySlashAcres">Initial value of the TreatmentActivitySlashAcres property.</param>
        /// <param name="treatmentActivityPrescribedBurnAcres">Initial value of the TreatmentActivityPrescribedBurnAcres property.</param>
        /// <param name="treatmentActivityAllocatedAmount">Initial value of the TreatmentActivityAllocatedAmount property.</param>
        /// <param name="treatmentActivityTotalCost">Initial value of the TreatmentActivityTotalCost property.</param>
        /// <param name="treatmentActivityGrantCost">Initial value of the TreatmentActivityGrantCost property.</param>
        /// <param name="treatmentActivityStartDate">Initial value of the TreatmentActivityStartDate property.</param>
        public static TreatmentActivity CreateTreatmentActivity(global::System.Int32 treatmentActivityID, global::System.Int32 tenantID, global::System.Int32 projectID, global::System.Int32 fundingSourceID, global::System.Decimal treatmentActivityFootprintAcres, global::System.Decimal treatmentActivityBrushControlAcres, global::System.Decimal treatmentActivityThinningAcres, global::System.Decimal treatmentActivityPruningAcres, global::System.Decimal treatmentActivitySlashAcres, global::System.Decimal treatmentActivityPrescribedBurnAcres, global::System.Decimal treatmentActivityAllocatedAmount, global::System.Decimal treatmentActivityTotalCost, global::System.Decimal treatmentActivityGrantCost, global::System.DateTime treatmentActivityStartDate)
        {
            TreatmentActivity treatmentActivity = new TreatmentActivity();
            treatmentActivity.TreatmentActivityID = treatmentActivityID;
            treatmentActivity.TenantID = tenantID;
            treatmentActivity.ProjectID = projectID;
            treatmentActivity.FundingSourceID = fundingSourceID;
            treatmentActivity.TreatmentActivityFootprintAcres = treatmentActivityFootprintAcres;
            treatmentActivity.TreatmentActivityBrushControlAcres = treatmentActivityBrushControlAcres;
            treatmentActivity.TreatmentActivityThinningAcres = treatmentActivityThinningAcres;
            treatmentActivity.TreatmentActivityPruningAcres = treatmentActivityPruningAcres;
            treatmentActivity.TreatmentActivitySlashAcres = treatmentActivitySlashAcres;
            treatmentActivity.TreatmentActivityPrescribedBurnAcres = treatmentActivityPrescribedBurnAcres;
            treatmentActivity.TreatmentActivityAllocatedAmount = treatmentActivityAllocatedAmount;
            treatmentActivity.TreatmentActivityTotalCost = treatmentActivityTotalCost;
            treatmentActivity.TreatmentActivityGrantCost = treatmentActivityGrantCost;
            treatmentActivity.TreatmentActivityStartDate = treatmentActivityStartDate;
            return treatmentActivity;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TreatmentActivityID
        {
            get
            {
                return _TreatmentActivityID;
            }
            set
            {
                if (_TreatmentActivityID != value)
                {
                    OnTreatmentActivityIDChanging(value);
                    ReportPropertyChanging("TreatmentActivityID");
                    _TreatmentActivityID = StructuralObject.SetValidValue(value, "TreatmentActivityID");
                    ReportPropertyChanged("TreatmentActivityID");
                    OnTreatmentActivityIDChanged();
                }
            }
        }
        private global::System.Int32 _TreatmentActivityID;
        partial void OnTreatmentActivityIDChanging(global::System.Int32 value);
        partial void OnTreatmentActivityIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                OnTenantIDChanging(value);
                ReportPropertyChanging("TenantID");
                _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                ReportPropertyChanged("TenantID");
                OnTenantIDChanged();
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                OnProjectIDChanging(value);
                ReportPropertyChanging("ProjectID");
                _ProjectID = StructuralObject.SetValidValue(value, "ProjectID");
                ReportPropertyChanged("ProjectID");
                OnProjectIDChanged();
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FundingSourceID
        {
            get
            {
                return _FundingSourceID;
            }
            set
            {
                OnFundingSourceIDChanging(value);
                ReportPropertyChanging("FundingSourceID");
                _FundingSourceID = StructuralObject.SetValidValue(value, "FundingSourceID");
                ReportPropertyChanged("FundingSourceID");
                OnFundingSourceIDChanged();
            }
        }
        private global::System.Int32 _FundingSourceID;
        partial void OnFundingSourceIDChanging(global::System.Int32 value);
        partial void OnFundingSourceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TreatmentActivityFootprintAcres
        {
            get
            {
                return _TreatmentActivityFootprintAcres;
            }
            set
            {
                OnTreatmentActivityFootprintAcresChanging(value);
                ReportPropertyChanging("TreatmentActivityFootprintAcres");
                _TreatmentActivityFootprintAcres = StructuralObject.SetValidValue(value, "TreatmentActivityFootprintAcres");
                ReportPropertyChanged("TreatmentActivityFootprintAcres");
                OnTreatmentActivityFootprintAcresChanged();
            }
        }
        private global::System.Decimal _TreatmentActivityFootprintAcres;
        partial void OnTreatmentActivityFootprintAcresChanging(global::System.Decimal value);
        partial void OnTreatmentActivityFootprintAcresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TreatmentActivityBrushControlAcres
        {
            get
            {
                return _TreatmentActivityBrushControlAcres;
            }
            set
            {
                OnTreatmentActivityBrushControlAcresChanging(value);
                ReportPropertyChanging("TreatmentActivityBrushControlAcres");
                _TreatmentActivityBrushControlAcres = StructuralObject.SetValidValue(value, "TreatmentActivityBrushControlAcres");
                ReportPropertyChanged("TreatmentActivityBrushControlAcres");
                OnTreatmentActivityBrushControlAcresChanged();
            }
        }
        private global::System.Decimal _TreatmentActivityBrushControlAcres;
        partial void OnTreatmentActivityBrushControlAcresChanging(global::System.Decimal value);
        partial void OnTreatmentActivityBrushControlAcresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TreatmentActivityThinningAcres
        {
            get
            {
                return _TreatmentActivityThinningAcres;
            }
            set
            {
                OnTreatmentActivityThinningAcresChanging(value);
                ReportPropertyChanging("TreatmentActivityThinningAcres");
                _TreatmentActivityThinningAcres = StructuralObject.SetValidValue(value, "TreatmentActivityThinningAcres");
                ReportPropertyChanged("TreatmentActivityThinningAcres");
                OnTreatmentActivityThinningAcresChanged();
            }
        }
        private global::System.Decimal _TreatmentActivityThinningAcres;
        partial void OnTreatmentActivityThinningAcresChanging(global::System.Decimal value);
        partial void OnTreatmentActivityThinningAcresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TreatmentActivityPruningAcres
        {
            get
            {
                return _TreatmentActivityPruningAcres;
            }
            set
            {
                OnTreatmentActivityPruningAcresChanging(value);
                ReportPropertyChanging("TreatmentActivityPruningAcres");
                _TreatmentActivityPruningAcres = StructuralObject.SetValidValue(value, "TreatmentActivityPruningAcres");
                ReportPropertyChanged("TreatmentActivityPruningAcres");
                OnTreatmentActivityPruningAcresChanged();
            }
        }
        private global::System.Decimal _TreatmentActivityPruningAcres;
        partial void OnTreatmentActivityPruningAcresChanging(global::System.Decimal value);
        partial void OnTreatmentActivityPruningAcresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TreatmentActivitySlashAcres
        {
            get
            {
                return _TreatmentActivitySlashAcres;
            }
            set
            {
                OnTreatmentActivitySlashAcresChanging(value);
                ReportPropertyChanging("TreatmentActivitySlashAcres");
                _TreatmentActivitySlashAcres = StructuralObject.SetValidValue(value, "TreatmentActivitySlashAcres");
                ReportPropertyChanged("TreatmentActivitySlashAcres");
                OnTreatmentActivitySlashAcresChanged();
            }
        }
        private global::System.Decimal _TreatmentActivitySlashAcres;
        partial void OnTreatmentActivitySlashAcresChanging(global::System.Decimal value);
        partial void OnTreatmentActivitySlashAcresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TreatmentActivityPrescribedBurnAcres
        {
            get
            {
                return _TreatmentActivityPrescribedBurnAcres;
            }
            set
            {
                OnTreatmentActivityPrescribedBurnAcresChanging(value);
                ReportPropertyChanging("TreatmentActivityPrescribedBurnAcres");
                _TreatmentActivityPrescribedBurnAcres = StructuralObject.SetValidValue(value, "TreatmentActivityPrescribedBurnAcres");
                ReportPropertyChanged("TreatmentActivityPrescribedBurnAcres");
                OnTreatmentActivityPrescribedBurnAcresChanged();
            }
        }
        private global::System.Decimal _TreatmentActivityPrescribedBurnAcres;
        partial void OnTreatmentActivityPrescribedBurnAcresChanging(global::System.Decimal value);
        partial void OnTreatmentActivityPrescribedBurnAcresChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TreatmentActivityAllocatedAmount
        {
            get
            {
                return _TreatmentActivityAllocatedAmount;
            }
            set
            {
                OnTreatmentActivityAllocatedAmountChanging(value);
                ReportPropertyChanging("TreatmentActivityAllocatedAmount");
                _TreatmentActivityAllocatedAmount = StructuralObject.SetValidValue(value, "TreatmentActivityAllocatedAmount");
                ReportPropertyChanged("TreatmentActivityAllocatedAmount");
                OnTreatmentActivityAllocatedAmountChanged();
            }
        }
        private global::System.Decimal _TreatmentActivityAllocatedAmount;
        partial void OnTreatmentActivityAllocatedAmountChanging(global::System.Decimal value);
        partial void OnTreatmentActivityAllocatedAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TreatmentActivityTotalCost
        {
            get
            {
                return _TreatmentActivityTotalCost;
            }
            set
            {
                OnTreatmentActivityTotalCostChanging(value);
                ReportPropertyChanging("TreatmentActivityTotalCost");
                _TreatmentActivityTotalCost = StructuralObject.SetValidValue(value, "TreatmentActivityTotalCost");
                ReportPropertyChanged("TreatmentActivityTotalCost");
                OnTreatmentActivityTotalCostChanged();
            }
        }
        private global::System.Decimal _TreatmentActivityTotalCost;
        partial void OnTreatmentActivityTotalCostChanging(global::System.Decimal value);
        partial void OnTreatmentActivityTotalCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TreatmentActivityGrantCost
        {
            get
            {
                return _TreatmentActivityGrantCost;
            }
            set
            {
                OnTreatmentActivityGrantCostChanging(value);
                ReportPropertyChanging("TreatmentActivityGrantCost");
                _TreatmentActivityGrantCost = StructuralObject.SetValidValue(value, "TreatmentActivityGrantCost");
                ReportPropertyChanged("TreatmentActivityGrantCost");
                OnTreatmentActivityGrantCostChanged();
            }
        }
        private global::System.Decimal _TreatmentActivityGrantCost;
        partial void OnTreatmentActivityGrantCostChanging(global::System.Decimal value);
        partial void OnTreatmentActivityGrantCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime TreatmentActivityStartDate
        {
            get
            {
                return _TreatmentActivityStartDate;
            }
            set
            {
                OnTreatmentActivityStartDateChanging(value);
                ReportPropertyChanging("TreatmentActivityStartDate");
                _TreatmentActivityStartDate = StructuralObject.SetValidValue(value, "TreatmentActivityStartDate");
                ReportPropertyChanged("TreatmentActivityStartDate");
                OnTreatmentActivityStartDateChanged();
            }
        }
        private global::System.DateTime _TreatmentActivityStartDate;
        partial void OnTreatmentActivityStartDateChanging(global::System.DateTime value);
        partial void OnTreatmentActivityStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> TreatmentActivityEndDate
        {
            get
            {
                return _TreatmentActivityEndDate;
            }
            set
            {
                OnTreatmentActivityEndDateChanging(value);
                ReportPropertyChanging("TreatmentActivityEndDate");
                _TreatmentActivityEndDate = StructuralObject.SetValidValue(value, "TreatmentActivityEndDate");
                ReportPropertyChanged("TreatmentActivityEndDate");
                OnTreatmentActivityEndDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _TreatmentActivityEndDate;
        partial void OnTreatmentActivityEndDateChanging(Nullable<global::System.DateTime> value);
        partial void OnTreatmentActivityEndDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TreatmentActivityNotes
        {
            get
            {
                return _TreatmentActivityNotes;
            }
            set
            {
                OnTreatmentActivityNotesChanging(value);
                ReportPropertyChanging("TreatmentActivityNotes");
                _TreatmentActivityNotes = StructuralObject.SetValidValue(value, true, "TreatmentActivityNotes");
                ReportPropertyChanged("TreatmentActivityNotes");
                OnTreatmentActivityNotesChanged();
            }
        }
        private global::System.String _TreatmentActivityNotes;
        partial void OnTreatmentActivityNotesChanging(global::System.String value);
        partial void OnTreatmentActivityNotesChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TreatmentActivity_FundingSource_FundingSourceID", "FundingSource")]
        public FundingSource FundingSource
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_TreatmentActivity_FundingSource_FundingSourceID", "FundingSource").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_TreatmentActivity_FundingSource_FundingSourceID", "FundingSource").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<FundingSource> FundingSourceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_TreatmentActivity_FundingSource_FundingSourceID", "FundingSource");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<FundingSource>("ProjectFirma.Web.Models.FK_TreatmentActivity_FundingSource_FundingSourceID", "FundingSource", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TreatmentActivity_Project_ProjectID", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_TreatmentActivity_Project_ProjectID", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_TreatmentActivity_Project_ProjectID", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("ProjectFirma.Web.Models.FK_TreatmentActivity_Project_ProjectID", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("ProjectFirma.Web.Models.FK_TreatmentActivity_Project_ProjectID", "Project", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ProjectFirma.Web.Models", "FK_TreatmentActivity_Tenant_TenantID", "Tenant")]
        public Tenant Tenant
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TreatmentActivity_Tenant_TenantID", "Tenant").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TreatmentActivity_Tenant_TenantID", "Tenant").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tenant> TenantReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TreatmentActivity_Tenant_TenantID", "Tenant");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tenant>("ProjectFirma.Web.Models.FK_TreatmentActivity_Tenant_TenantID", "Tenant", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="TreatmentType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TreatmentType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TreatmentType object.
        /// </summary>
        /// <param name="treatmentTypeID">Initial value of the TreatmentTypeID property.</param>
        /// <param name="treatmentTypeName">Initial value of the TreatmentTypeName property.</param>
        /// <param name="treatmentTypeDisplayName">Initial value of the TreatmentTypeDisplayName property.</param>
        public static TreatmentType CreateTreatmentType(global::System.Int32 treatmentTypeID, global::System.String treatmentTypeName, global::System.String treatmentTypeDisplayName)
        {
            TreatmentType treatmentType = new TreatmentType();
            treatmentType.TreatmentTypeID = treatmentTypeID;
            treatmentType.TreatmentTypeName = treatmentTypeName;
            treatmentType.TreatmentTypeDisplayName = treatmentTypeDisplayName;
            return treatmentType;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TreatmentTypeID
        {
            get
            {
                return _TreatmentTypeID;
            }
            set
            {
                if (_TreatmentTypeID != value)
                {
                    OnTreatmentTypeIDChanging(value);
                    ReportPropertyChanging("TreatmentTypeID");
                    _TreatmentTypeID = StructuralObject.SetValidValue(value, "TreatmentTypeID");
                    ReportPropertyChanged("TreatmentTypeID");
                    OnTreatmentTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _TreatmentTypeID;
        partial void OnTreatmentTypeIDChanging(global::System.Int32 value);
        partial void OnTreatmentTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TreatmentTypeName
        {
            get
            {
                return _TreatmentTypeName;
            }
            set
            {
                OnTreatmentTypeNameChanging(value);
                ReportPropertyChanging("TreatmentTypeName");
                _TreatmentTypeName = StructuralObject.SetValidValue(value, false, "TreatmentTypeName");
                ReportPropertyChanged("TreatmentTypeName");
                OnTreatmentTypeNameChanged();
            }
        }
        private global::System.String _TreatmentTypeName;
        partial void OnTreatmentTypeNameChanging(global::System.String value);
        partial void OnTreatmentTypeNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TreatmentTypeDisplayName
        {
            get
            {
                return _TreatmentTypeDisplayName;
            }
            set
            {
                OnTreatmentTypeDisplayNameChanging(value);
                ReportPropertyChanging("TreatmentTypeDisplayName");
                _TreatmentTypeDisplayName = StructuralObject.SetValidValue(value, false, "TreatmentTypeDisplayName");
                ReportPropertyChanged("TreatmentTypeDisplayName");
                OnTreatmentTypeDisplayNameChanged();
            }
        }
        private global::System.String _TreatmentTypeDisplayName;
        partial void OnTreatmentTypeDisplayNameChanging(global::System.String value);
        partial void OnTreatmentTypeDisplayNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ProjectFirma.Web.Models", Name="vGeoServerGeospatialArea")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class vGeoServerGeospatialArea : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new vGeoServerGeospatialArea object.
        /// </summary>
        /// <param name="geospatialAreaID">Initial value of the GeospatialAreaID property.</param>
        /// <param name="primaryKey">Initial value of the PrimaryKey property.</param>
        /// <param name="geospatialAreaName">Initial value of the GeospatialAreaName property.</param>
        /// <param name="tenantID">Initial value of the TenantID property.</param>
        /// <param name="tenantName">Initial value of the TenantName property.</param>
        /// <param name="geospatialAreaTypeName">Initial value of the GeospatialAreaTypeName property.</param>
        public static vGeoServerGeospatialArea CreatevGeoServerGeospatialArea(global::System.Int32 geospatialAreaID, global::System.Int32 primaryKey, global::System.String geospatialAreaName, global::System.Int32 tenantID, global::System.String tenantName, global::System.String geospatialAreaTypeName)
        {
            vGeoServerGeospatialArea vGeoServerGeospatialArea = new vGeoServerGeospatialArea();
            vGeoServerGeospatialArea.GeospatialAreaID = geospatialAreaID;
            vGeoServerGeospatialArea.PrimaryKey = primaryKey;
            vGeoServerGeospatialArea.GeospatialAreaName = geospatialAreaName;
            vGeoServerGeospatialArea.TenantID = tenantID;
            vGeoServerGeospatialArea.TenantName = tenantName;
            vGeoServerGeospatialArea.GeospatialAreaTypeName = geospatialAreaTypeName;
            return vGeoServerGeospatialArea;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GeospatialAreaID
        {
            get
            {
                return _GeospatialAreaID;
            }
            set
            {
                if (_GeospatialAreaID != value)
                {
                    OnGeospatialAreaIDChanging(value);
                    ReportPropertyChanging("GeospatialAreaID");
                    _GeospatialAreaID = StructuralObject.SetValidValue(value, "GeospatialAreaID");
                    ReportPropertyChanged("GeospatialAreaID");
                    OnGeospatialAreaIDChanged();
                }
            }
        }
        private global::System.Int32 _GeospatialAreaID;
        partial void OnGeospatialAreaIDChanging(global::System.Int32 value);
        partial void OnGeospatialAreaIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PrimaryKey
        {
            get
            {
                return _PrimaryKey;
            }
            set
            {
                if (_PrimaryKey != value)
                {
                    OnPrimaryKeyChanging(value);
                    ReportPropertyChanging("PrimaryKey");
                    _PrimaryKey = StructuralObject.SetValidValue(value, "PrimaryKey");
                    ReportPropertyChanged("PrimaryKey");
                    OnPrimaryKeyChanged();
                }
            }
        }
        private global::System.Int32 _PrimaryKey;
        partial void OnPrimaryKeyChanging(global::System.Int32 value);
        partial void OnPrimaryKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GeospatialAreaName
        {
            get
            {
                return _GeospatialAreaName;
            }
            set
            {
                if (_GeospatialAreaName != value)
                {
                    OnGeospatialAreaNameChanging(value);
                    ReportPropertyChanging("GeospatialAreaName");
                    _GeospatialAreaName = StructuralObject.SetValidValue(value, false, "GeospatialAreaName");
                    ReportPropertyChanged("GeospatialAreaName");
                    OnGeospatialAreaNameChanged();
                }
            }
        }
        private global::System.String _GeospatialAreaName;
        partial void OnGeospatialAreaNameChanging(global::System.String value);
        partial void OnGeospatialAreaNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeometry GeospatialAreaFeature
        {
            get
            {
                return _GeospatialAreaFeature;
            }
            set
            {
                OnGeospatialAreaFeatureChanging(value);
                ReportPropertyChanging("GeospatialAreaFeature");
                _GeospatialAreaFeature = StructuralObject.SetValidValue(value, true, "GeospatialAreaFeature");
                ReportPropertyChanged("GeospatialAreaFeature");
                OnGeospatialAreaFeatureChanged();
            }
        }
        private global::System.Data.Spatial.DbGeometry _GeospatialAreaFeature;
        partial void OnGeospatialAreaFeatureChanging(global::System.Data.Spatial.DbGeometry value);
        partial void OnGeospatialAreaFeatureChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Data.Spatial.DbGeometry Ogr_Geometry
        {
            get
            {
                return _Ogr_Geometry;
            }
            set
            {
                OnOgr_GeometryChanging(value);
                ReportPropertyChanging("Ogr_Geometry");
                _Ogr_Geometry = StructuralObject.SetValidValue(value, true, "Ogr_Geometry");
                ReportPropertyChanged("Ogr_Geometry");
                OnOgr_GeometryChanged();
            }
        }
        private global::System.Data.Spatial.DbGeometry _Ogr_Geometry;
        partial void OnOgr_GeometryChanging(global::System.Data.Spatial.DbGeometry value);
        partial void OnOgr_GeometryChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TenantID
        {
            get
            {
                return _TenantID;
            }
            set
            {
                if (_TenantID != value)
                {
                    OnTenantIDChanging(value);
                    ReportPropertyChanging("TenantID");
                    _TenantID = StructuralObject.SetValidValue(value, "TenantID");
                    ReportPropertyChanged("TenantID");
                    OnTenantIDChanged();
                }
            }
        }
        private global::System.Int32 _TenantID;
        partial void OnTenantIDChanging(global::System.Int32 value);
        partial void OnTenantIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TenantName
        {
            get
            {
                return _TenantName;
            }
            set
            {
                if (_TenantName != value)
                {
                    OnTenantNameChanging(value);
                    ReportPropertyChanging("TenantName");
                    _TenantName = StructuralObject.SetValidValue(value, false, "TenantName");
                    ReportPropertyChanged("TenantName");
                    OnTenantNameChanged();
                }
            }
        }
        private global::System.String _TenantName;
        partial void OnTenantNameChanging(global::System.String value);
        partial void OnTenantNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String GeospatialAreaTypeName
        {
            get
            {
                return _GeospatialAreaTypeName;
            }
            set
            {
                if (_GeospatialAreaTypeName != value)
                {
                    OnGeospatialAreaTypeNameChanging(value);
                    ReportPropertyChanging("GeospatialAreaTypeName");
                    _GeospatialAreaTypeName = StructuralObject.SetValidValue(value, false, "GeospatialAreaTypeName");
                    ReportPropertyChanged("GeospatialAreaTypeName");
                    OnGeospatialAreaTypeNameChanged();
                }
            }
        }
        private global::System.String _GeospatialAreaTypeName;
        partial void OnGeospatialAreaTypeNameChanging(global::System.String value);
        partial void OnGeospatialAreaTypeNameChanged();

        #endregion

    }

    #endregion

}
